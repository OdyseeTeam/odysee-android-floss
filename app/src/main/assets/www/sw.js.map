{"version":3,"file":"sw.js","mappings":"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","sources":["webpack://odysee.com/../config.js","webpack://odysee.com/../node_modules/dotenv-defaults/node_modules/dotenv/lib/main.js","webpack://odysee.com/../node_modules/dotenv-defaults/src/index.js","webpack://odysee.com/../node_modules/os-browserify/browser.js","webpack://odysee.com/../node_modules/path-browserify/index.js","webpack://odysee.com/../node_modules/process/browser.js","webpack://odysee.com/./stubs/fs.js","webpack://odysee.com/webpack/bootstrap","webpack://odysee.com/webpack/runtime/define property getters","webpack://odysee.com/webpack/runtime/global","webpack://odysee.com/webpack/runtime/hasOwnProperty shorthand","webpack://odysee.com/webpack/runtime/make namespace object","webpack://odysee.com/./node_modules/@firebase/util/dist/index.esm2017.js","webpack://odysee.com/./node_modules/@firebase/component/dist/esm/index.esm2017.js","webpack://odysee.com/./node_modules/@firebase/logger/dist/esm/index.esm2017.js","webpack://odysee.com/./node_modules/idb/build/wrap-idb-value.js","webpack://odysee.com/./node_modules/idb/build/index.js","webpack://odysee.com/./node_modules/@firebase/app/dist/esm/index.esm2017.js","webpack://odysee.com/./node_modules/firebase/app/dist/esm/index.esm.js","webpack://odysee.com/./node_modules/@firebase/installations/dist/esm/index.esm2017.js","webpack://odysee.com/./node_modules/@firebase/messaging/dist/esm/index.sw.esm2017.js","webpack://odysee.com/./src/service-worker.js","webpack://odysee.com/./src/firebase-config.js"],"sourcesContent":["// On Web, this will find .env.defaults and optional .env in web/\n// On Desktop App, this will find .env.defaults and optional .env in root dir\nrequire('dotenv-defaults').config({ silent: false });\n\nconst config = {\n  MINIMUM_VERSION: process.env.MINIMUM_VERSION,\n  IGNORE_MINIMUM_VERSION: process.env.IGNORE_MINIMUM_VERSION,\n  WEBPACK_WEB_PORT: process.env.WEBPACK_WEB_PORT,\n  WEBPACK_ELECTRON_PORT: process.env.WEBPACK_ELECTRON_PORT,\n  WEB_SERVER_PORT: process.env.WEB_SERVER_PORT,\n  LBRY_WEB_API: process.env.LBRY_WEB_API, // api.na-backend.odysee.com',\n  LBRY_WEB_PUBLISH_API: process.env.LBRY_WEB_PUBLISH_API,\n  LBRY_WEB_PUBLISH_API_V2: process.env.LBRY_WEB_PUBLISH_API_V2,\n  LBRY_WEB_PUBLISH_API_V3: process.env.LBRY_WEB_PUBLISH_API_V3,\n  LBRY_WEB_PUBLISH_API_V4: process.env.LBRY_WEB_PUBLISH_API_V4,\n  LBRY_API_URL: process.env.LBRY_API_URL, // api.odysee.com',\n  LBRY_WEB_BUFFER_API: process.env.LBRY_WEB_BUFFER_API,\n  SEARCH_SERVER_API: process.env.SEARCH_SERVER_API,\n  SEARCH_SERVER_API_ALT: process.env.SEARCH_SERVER_API_ALT,\n  COMMENT_SERVER_API: process.env.COMMENT_SERVER_API,\n  LIVESTREAM_SERVER_API: process.env.LIVESTREAM_SERVER_API,\n  SHORT_URL_API: process.env.SHORT_URL_API,\n  SOCKETY_SERVER_API: process.env.SOCKETY_SERVER_API,\n  LOCALE_API: process.env.LOCALE_API,\n  WELCOME_VERSION: process.env.WELCOME_VERSION,\n  DOMAIN: process.env.DOMAIN,\n  SHARE_DOMAIN_URL: process.env.SHARE_DOMAIN_URL,\n  URL: process.env.URL,\n  RECSYS_ENDPOINT: process.env.RECSYS_ENDPOINT,\n  RECSYS_FYP_ENDPOINT: process.env.RECSYS_FYP_ENDPOINT,\n  IMAGE_PROXY_URL: process.env.IMAGE_PROXY_URL,\n  THUMBNAIL_CDN_URL: process.env.THUMBNAIL_CDN_URL,\n  THUMBNAIL_CARDS_CDN_URL: process.env.THUMBNAIL_CARDS_CDN_URL,\n  THUMBNAIL_HEIGHT: process.env.THUMBNAIL_HEIGHT,\n  THUMBNAIL_HEIGHT_POSTER: process.env.THUMBNAIL_HEIGHT_POSTER,\n  THUMBNAIL_WIDTH: process.env.THUMBNAIL_WIDTH,\n  THUMBNAIL_WIDTH_POSTER: process.env.THUMBNAIL_WIDTH_POSTER,\n  THUMBNAIL_QUALITY: process.env.THUMBNAIL_QUALITY,\n  THUMBNAIL_CDN_SIZE_LIMIT_BYTES: process.env.THUMBNAIL_CDN_SIZE_LIMIT_BYTES,\n  PLAYER_SERVER: process.env.PLAYER_SERVER,\n  SITE_TITLE: process.env.SITE_TITLE,\n  SITE_NAME: process.env.SITE_NAME,\n  SITE_DESCRIPTION: process.env.SITE_DESCRIPTION,\n  SITE_HELP_EMAIL: process.env.SITE_HELP_EMAIL,\n  // SOCIAL MEDIA\n  TWITTER_ACCOUNT: process.env.TWITTER_ACCOUNT,\n  // LOGO\n  LOGO_TITLE: process.env.LOGO_TITLE,\n  LOGO: process.env.LOGO,\n  LOGO_WHITE_TEXT: process.env.LOGO_WHITE_TEXT,\n  LOGO_DARK_TEXT: process.env.LOGO_DARK_TEXT,\n  AVATAR_DEFAULT: process.env.AVATAR_DEFAULT,\n  MISSING_THUMB_DEFAULT: process.env.MISSING_THUMB_DEFAULT,\n  // OG\n  OG_TITLE_SUFFIX: process.env.OG_TITLE_SUFFIX,\n  OG_HOMEPAGE_TITLE: process.env.OG_HOMEPAGE_TITLE,\n  OG_IMAGE_URL: process.env.OG_IMAGE_URL,\n  // MASCOT\n  YRBL_HAPPY_IMG_URL: process.env.YRBL_HAPPY_IMG_URL,\n  YRBL_SAD_IMG_URL: process.env.YRBL_SAD_IMG_URL,\n  LOGIN_IMG_URL: process.env.LOGIN_IMG_URL,\n  SITE_CANONICAL_URL: process.env.SITE_CANONICAL_URL,\n  DEFAULT_LANGUAGE: process.env.DEFAULT_LANGUAGE,\n  AUTO_FOLLOW_CHANNELS: process.env.AUTO_FOLLOW_CHANNELS,\n  UNSYNCED_SETTINGS: process.env.UNSYNCED_SETTINGS,\n\n  // ENABLE FEATURES\n  ENABLE_COMMENT_REACTIONS: process.env.ENABLE_COMMENT_REACTIONS === 'true',\n  ENABLE_FILE_REACTIONS: process.env.ENABLE_FILE_REACTIONS === 'true',\n  ENABLE_CREATOR_REACTIONS: process.env.ENABLE_CREATOR_REACTIONS === 'true',\n  ENABLE_NO_SOURCE_CLAIMS: process.env.ENABLE_NO_SOURCE_CLAIMS === 'true',\n  ENABLE_PREROLL_ADS: process.env.ENABLE_PREROLL_ADS === 'false',\n  CHANNEL_STAKED_LEVEL_VIDEO_COMMENTS: process.env.CHANNEL_STAKED_LEVEL_VIDEO_COMMENTS,\n  CHANNEL_CREATION_LIMIT: process.env.CHANNEL_CREATION_LIMIT,\n  WEB_PUBLISH_SIZE_LIMIT_GB: process.env.WEB_PUBLISH_SIZE_LIMIT_GB,\n  LOADING_BAR_COLOR: process.env.LOADING_BAR_COLOR,\n  SIMPLE_SITE: process.env.SIMPLE_SITE === 'true',\n  SHOW_ADS: process.env.SHOW_ADS === 'true',\n  KNOWN_APP_DOMAINS: process.env.KNOWN_APP_DOMAINS ? process.env.KNOWN_APP_DOMAINS.split(',') : [],\n  STRIPE_PUBLIC_KEY: process.env.STRIPE_PUBLIC_KEY,\n  ENABLE_UI_NOTIFICATIONS: process.env.ENABLE_UI_NOTIFICATIONS === 'true',\n  ENABLE_MATURE: process.env.ENABLE_MATURE === 'true',\n  CUSTOM_HOMEPAGE: process.env.CUSTOM_HOMEPAGE === 'true',\n  SHOW_TAGS_INTRO: process.env.SHOW_TAGS_INTRO === 'true',\n  LIGHTHOUSE_DEFAULT_TYPES: process.env.LIGHTHOUSE_DEFAULT_TYPES,\n  BRANDED_SITE: process.env.BRANDED_SITE,\n\n  // FIREBASE SDK\n  FIREBASE_API_KEY: process.env.FIREBASE_API_KEY,\n  FIREBASE_AUTH_DOMAIN: process.env.FIREBASE_AUTH_DOMAIN,\n  FIREBASE_PROJECT_ID: process.env.FIREBASE_PROJECT_ID,\n  FIREBASE_STORAGE_BUCKET: process.env.FIREBASE_STORAGE_BUCKET,\n  FIREBASE_MESSAGING_SENDER_ID: process.env.FIREBASE_MESSAGING_SENDER_ID,\n  FIREBASE_APP_ID: process.env.FIREBASE_APP_ID,\n  FIREBASE_MEASUREMENT_ID: process.env.FIREBASE_MEASUREMENT_ID,\n  FIREBASE_VAPID_KEY: process.env.FIREBASE_VAPID_KEY,\n\n  AD_KEYWORD_BLOCKLIST: process.env.AD_KEYWORD_BLOCKLIST,\n  AD_KEYWORD_BLOCKLIST_CHECK_DESCRIPTION: process.env.AD_KEYWORD_BLOCKLIST_CHECK_DESCRIPTION,\n\n  // FROM COMMAND LINE\n  COMMIT_ID: process.env.COMMIT_ID,\n  NODE_ENV: process.env.NODE_ENV,\n};\n\nconfig.SDK_API_PATH = `${config.LBRY_WEB_API}/api/v1`;\nconfig.PROXY_URL = `${config.SDK_API_PATH}/proxy`;\n\nconfig.URL_DEV = `http://localhost:${config.WEBPACK_WEB_PORT}`;\nconfig.URL_LOCAL = `http://localhost:${config.WEB_SERVER_PORT}`;\nconfig.FAVICON = `/public/favicon_128.png`;\nconfig.FAVICON_NOTIFICATION = `/public/favicon_notification_128.png`;\n\nmodule.exports = config;\n","const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\n\nfunction log (message) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\nconst NEWLINE = '\\n'\nconst RE_INI_KEY_VAL = /^\\s*([\\w.-]+)\\s*=\\s*(\"[^\"]*\"|'[^']*'|.*?)(\\s+#.*)?$/\nconst RE_NEWLINES = /\\\\n/g\nconst NEWLINES_MATCH = /\\r\\n|\\n|\\r/\n\n// Parses src into an Object\nfunction parse (src, options) {\n  const debug = Boolean(options && options.debug)\n  const multiline = Boolean(options && options.multiline)\n  const obj = {}\n\n  // convert Buffers before splitting into lines and processing\n  const lines = src.toString().split(NEWLINES_MATCH)\n\n  for (let idx = 0; idx < lines.length; idx++) {\n    let line = lines[idx]\n\n    // matching \"KEY' and 'VAL' in 'KEY=VAL'\n    const keyValueArr = line.match(RE_INI_KEY_VAL)\n    // matched?\n    if (keyValueArr != null) {\n      const key = keyValueArr[1]\n      // default undefined or missing values to empty string\n      let val = (keyValueArr[2] || '')\n      let end = val.length - 1\n      const isDoubleQuoted = val[0] === '\"' && val[end] === '\"'\n      const isSingleQuoted = val[0] === \"'\" && val[end] === \"'\"\n\n      const isMultilineDoubleQuoted = val[0] === '\"' && val[end] !== '\"'\n      const isMultilineSingleQuoted = val[0] === \"'\" && val[end] !== \"'\"\n\n      // if parsing line breaks and the value starts with a quote\n      if (multiline && (isMultilineDoubleQuoted || isMultilineSingleQuoted)) {\n        const quoteChar = isMultilineDoubleQuoted ? '\"' : \"'\"\n\n        val = val.substring(1)\n\n        while (idx++ < lines.length - 1) {\n          line = lines[idx]\n          end = line.length - 1\n          if (line[end] === quoteChar) {\n            val += NEWLINE + line.substring(0, end)\n            break\n          }\n          val += NEWLINE + line\n        }\n      // if single or double quoted, remove quotes\n      } else if (isSingleQuoted || isDoubleQuoted) {\n        val = val.substring(1, end)\n\n        // if double quoted, expand newlines\n        if (isDoubleQuoted) {\n          val = val.replace(RE_NEWLINES, NEWLINE)\n        }\n      } else {\n        // remove surrounding whitespace\n        val = val.trim()\n      }\n\n      obj[key] = val\n    } else if (debug) {\n      const trimmedLine = line.trim()\n\n      // ignore empty and commented lines\n      if (trimmedLine.length && trimmedLine[0] !== '#') {\n        log(`Failed to match key and value when parsing line ${idx + 1}: ${line}`)\n      }\n    }\n  }\n\n  return obj\n}\n\nfunction resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n  const multiline = Boolean(options && options.multiline)\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n  }\n\n  try {\n    // specifying an encoding returns a string instead of a buffer\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }), { debug, multiline })\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else {\n        if (override === true) {\n          process.env[key] = parsed[key]\n        }\n\n        if (debug) {\n          if (override === true) {\n            log(`\"${key}\" is already defined in \\`process.env\\` and WAS overwritten`)\n          } else {\n            log(`\"${key}\" is already defined in \\`process.env\\` and was NOT overwritten`)\n          }\n        }\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    if (debug) {\n      log(`Failed to load ${dotenvPath} ${e.message}`)\n    }\n\n    return { error: e }\n  }\n}\n\nconst DotenvModule = {\n  config,\n  parse\n}\n\nmodule.exports.config = DotenvModule.config\nmodule.exports.parse = DotenvModule.parse\nmodule.exports = DotenvModule\n","const dotenv = require('dotenv')\n\n/**\n * Merges two objects.\n * @param {Object} apply - The overwriter\n * @param {Object} defaults - The defaults to be overwritten\n * @returns {Object} The merged results.\n */\nconst merge = (apply = {}, defaults = {}) => Object.assign({}, defaults, apply)\n\n/**\n * Parses objects like before, but with defaults!\n * @param {String} src - The original src.\n * @param {String} [defaultSrc=''] - The new-and-improved default source.\n * @returns {Object} The parsed results.\n */\nconst parse = (src, defaultSrc = '') => {\n  const parsedSrc = dotenv.parse(src)\n  const parsedDefault = dotenv.parse(defaultSrc)\n\n  return merge(parsedSrc, parsedDefault)\n}\n\n/**\n * Runs the configurations and applies it to process.env.\n * @param {Object} [options={}] - The options to determnie how this goes\n * @returns {Object} The parsed results.\n */\nconst config = (options = {}) => {\n  const src = dotenv.config(options)\n  // we run this second so it doesn't override things set from src\n  const defaults = dotenv.config(Object.assign({}, options, {\n    path: options.defaults || '.env.defaults'\n  }))\n\n  return {\n    parsed: merge(src.parsed, defaults.parsed)\n  }\n}\n\nmodule.exports = {\n  parse,\n  config\n}\n","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","function logWarning(method) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.error(`Called fs.${method} on lbry.tv. This should be removed.`); // eslint-disable-line no-console\n  }\n}\n\nexport default {\n  readFileSync: () => {\n    logWarning('readFileSync');\n    return undefined;\n  },\n  accessFileSync: () => {\n    logWarning('accessFileSync');\n    return undefined;\n  },\n  constants: {},\n};\n\n// [TODO_NEED_VERIFICATION]\n// The TODO_NEED_VERIFICATION marker indicates that the existing dependency\n// array was retained just to get lint passing.\n//  - If it was intentionally done that way, replace this tag with the reason.\n//  - If array is indeed missing some items, fix and remove the suppressor.\n//  - When making changes to the effect, ensure array is updated as needed.\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nconst CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n */\r\nconst assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n */\r\nconst assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst stringToByteArray$1 = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nconst byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        const c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            const c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            const c4 = bytes[pos++];\r\n            const u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nconst base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray(input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        const byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length; i += 3) {\r\n            const byte1 = input[i];\r\n            const haveByte2 = i + 1 < input.length;\r\n            const byte2 = haveByte2 ? input[i + 1] : 0;\r\n            const haveByte3 = i + 2 < input.length;\r\n            const byte3 = haveByte3 ? input[i + 2] : 0;\r\n            const outByte1 = byte1 >> 2;\r\n            const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            let outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray$1(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray(input, webSafe) {\r\n        this.init_();\r\n        const charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length;) {\r\n            const byte1 = charToByteMap[input.charAt(i++)];\r\n            const haveByte2 = i < input.length;\r\n            const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            const haveByte3 = i < input.length;\r\n            const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            const haveByte4 = i < input.length;\r\n            const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            const outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_() {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (let i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n */\r\nconst base64Encode = function (str) {\r\n    const utf8Bytes = stringToByteArray$1(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 encoding (without \".\" padding in the end).\r\n * e.g. Used in JSON Web Token (JWT) parts.\r\n */\r\nconst base64urlEncodeWithoutPadding = function (str) {\r\n    // Use base64url encoding and remove padding in the end (dot characters).\r\n    return base64Encode(str).replace(/\\./g, '');\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nconst base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n *\r\n * Note: we don't merge __proto__ to prevent prototype pollution\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            const dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (const prop in source) {\r\n        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\r\n        if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\nfunction isValidKey(key) {\r\n    return key !== '__proto__';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Polyfill for `globalThis` object.\r\n * @returns the `globalThis` object for the given environment.\r\n * @public\r\n */\r\nfunction getGlobal() {\r\n    if (typeof self !== 'undefined') {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined') {\r\n        return window;\r\n    }\r\n    if (typeof global !== 'undefined') {\r\n        return global;\r\n    }\r\n    throw new Error('Unable to locate global object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst getDefaultsFromGlobal = () => getGlobal().__FIREBASE_DEFAULTS__;\r\n/**\r\n * Attempt to read defaults from a JSON string provided to\r\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\r\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\r\n * The dots are in parens because certain compilers (Vite?) cannot\r\n * handle seeing that variable in comments.\r\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\r\n */\r\nconst getDefaultsFromEnvVariable = () => {\r\n    if (typeof process === 'undefined' || typeof process.env === 'undefined') {\r\n        return;\r\n    }\r\n    const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\r\n    if (defaultsJsonString) {\r\n        return JSON.parse(defaultsJsonString);\r\n    }\r\n};\r\nconst getDefaultsFromCookie = () => {\r\n    if (typeof document === 'undefined') {\r\n        return;\r\n    }\r\n    let match;\r\n    try {\r\n        match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\r\n    }\r\n    catch (e) {\r\n        // Some environments such as Angular Universal SSR have a\r\n        // `document` object but error on accessing `document.cookie`.\r\n        return;\r\n    }\r\n    const decoded = match && base64Decode(match[1]);\r\n    return decoded && JSON.parse(decoded);\r\n};\r\n/**\r\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\r\n * (1) if such an object exists as a property of `globalThis`\r\n * (2) if such an object was provided on a shell environment variable\r\n * (3) if such an object exists in a cookie\r\n * @public\r\n */\r\nconst getDefaults = () => {\r\n    try {\r\n        return (getDefaultsFromGlobal() ||\r\n            getDefaultsFromEnvVariable() ||\r\n            getDefaultsFromCookie());\r\n    }\r\n    catch (e) {\r\n        /**\r\n         * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\r\n         * to any environment case we have not accounted for. Log to\r\n         * info instead of swallowing so we can find these unknown cases\r\n         * and add paths for them if needed.\r\n         */\r\n        console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\r\n        return;\r\n    }\r\n};\r\n/**\r\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\r\n * @public\r\n */\r\nconst getDefaultEmulatorHost = (productName) => { var _a, _b; return (_b = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.emulatorHosts) === null || _b === void 0 ? void 0 : _b[productName]; };\r\n/**\r\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\r\n * @public\r\n */\r\nconst getDefaultEmulatorHostnameAndPort = (productName) => {\r\n    const host = getDefaultEmulatorHost(productName);\r\n    if (!host) {\r\n        return undefined;\r\n    }\r\n    const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\r\n    if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\r\n        throw new Error(`Invalid host ${host} with no separate hostname and port!`);\r\n    }\r\n    // eslint-disable-next-line no-restricted-globals\r\n    const port = parseInt(host.substring(separatorIndex + 1), 10);\r\n    if (host[0] === '[') {\r\n        // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\r\n        return [host.substring(1, separatorIndex - 1), port];\r\n    }\r\n    else {\r\n        return [host.substring(0, separatorIndex), port];\r\n    }\r\n};\r\n/**\r\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\r\n * @public\r\n */\r\nconst getDefaultAppConfig = () => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.config; };\r\n/**\r\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\r\n * prefixed by \"_\")\r\n * @public\r\n */\r\nconst getExperimentalSetting = (name) => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a[`_${name}`]; };\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Deferred {\r\n    constructor() {\r\n        this.reject = () => { };\r\n        this.resolve = () => { };\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    wrapCallback(callback) {\r\n        return (error, value) => {\r\n            if (error) {\r\n                this.reject(error);\r\n            }\r\n            else {\r\n                this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                this.promise.catch(() => { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createMockUserToken(token, projectId) {\r\n    if (token.uid) {\r\n        throw new Error('The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.');\r\n    }\r\n    // Unsecured JWTs use \"none\" as the algorithm.\r\n    const header = {\r\n        alg: 'none',\r\n        type: 'JWT'\r\n    };\r\n    const project = projectId || 'demo-project';\r\n    const iat = token.iat || 0;\r\n    const sub = token.sub || token.user_id;\r\n    if (!sub) {\r\n        throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\r\n    }\r\n    const payload = Object.assign({ \r\n        // Set all required fields to decent defaults\r\n        iss: `https://securetoken.google.com/${project}`, aud: project, iat, exp: iat + 3600, auth_time: iat, sub, user_id: sub, firebase: {\r\n            sign_in_provider: 'custom',\r\n            identities: {}\r\n        } }, token);\r\n    // Unsecured JWTs use the empty string as a signature.\r\n    const signature = '';\r\n    return [\r\n        base64urlEncodeWithoutPadding(JSON.stringify(header)),\r\n        base64urlEncodeWithoutPadding(JSON.stringify(payload)),\r\n        signature\r\n    ].join('.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\r\nfunction getUA() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\r\nfunction isMobileCordova() {\r\n    return (typeof window !== 'undefined' &&\r\n        // @ts-ignore Setting up an broadly applicable index signature for Window\r\n        // just to deal with this case would probably be a bad idea.\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n}\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected or specified.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nfunction isNode() {\r\n    var _a;\r\n    const forceEnvironment = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.forceEnvironment;\r\n    if (forceEnvironment === 'node') {\r\n        return true;\r\n    }\r\n    else if (forceEnvironment === 'browser') {\r\n        return false;\r\n    }\r\n    try {\r\n        return (Object.prototype.toString.call(global.process) === '[object process]');\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Detect Browser Environment\r\n */\r\nfunction isBrowser() {\r\n    return typeof self === 'object' && self.self === self;\r\n}\r\nfunction isBrowserExtension() {\r\n    const runtime = typeof chrome === 'object'\r\n        ? chrome.runtime\r\n        : typeof browser === 'object'\r\n            ? browser.runtime\r\n            : undefined;\r\n    return typeof runtime === 'object' && runtime.id !== undefined;\r\n}\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\r\nfunction isReactNative() {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n}\r\n/** Detects Electron apps. */\r\nfunction isElectron() {\r\n    return getUA().indexOf('Electron/') >= 0;\r\n}\r\n/** Detects Internet Explorer. */\r\nfunction isIE() {\r\n    const ua = getUA();\r\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n}\r\n/** Detects Universal Windows Platform apps. */\r\nfunction isUWP() {\r\n    return getUA().indexOf('MSAppHost/') >= 0;\r\n}\r\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */\r\nfunction isNodeSdk() {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n}\r\n/** Returns true if we are running in Safari. */\r\nfunction isSafari() {\r\n    return (!isNode() &&\r\n        navigator.userAgent.includes('Safari') &&\r\n        !navigator.userAgent.includes('Chrome'));\r\n}\r\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */\r\nfunction isIndexedDBAvailable() {\r\n    try {\r\n        return typeof indexedDB === 'object';\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */\r\nfunction validateIndexedDBOpenable() {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            let preExist = true;\r\n            const DB_CHECK_NAME = 'validate-browser-context-for-indexeddb-analytics-module';\r\n            const request = self.indexedDB.open(DB_CHECK_NAME);\r\n            request.onsuccess = () => {\r\n                request.result.close();\r\n                // delete database only when it doesn't pre-exist\r\n                if (!preExist) {\r\n                    self.indexedDB.deleteDatabase(DB_CHECK_NAME);\r\n                }\r\n                resolve(true);\r\n            };\r\n            request.onupgradeneeded = () => {\r\n                preExist = false;\r\n            };\r\n            request.onerror = () => {\r\n                var _a;\r\n                reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || '');\r\n            };\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */\r\nfunction areCookiesEnabled() {\r\n    if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Standardized Firebase Error.\r\n *\r\n * Usage:\r\n *\r\n *   // Typescript string literals for type-safe codes\r\n *   type Err =\r\n *     'unknown' |\r\n *     'object-not-found'\r\n *     ;\r\n *\r\n *   // Closure enum for type-safe error codes\r\n *   // at-enum {string}\r\n *   var Err = {\r\n *     UNKNOWN: 'unknown',\r\n *     OBJECT_NOT_FOUND: 'object-not-found',\r\n *   }\r\n *\r\n *   let errors: Map<Err, string> = {\r\n *     'generic-error': \"Unknown error\",\r\n *     'file-not-found': \"Could not find file: {$file}\",\r\n *   };\r\n *\r\n *   // Type-safe function - must pass a valid error code as param.\r\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\r\n *\r\n *   ...\r\n *   throw error.create(Err.GENERIC);\r\n *   ...\r\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\r\n *   ...\r\n *   // Service: Could not file file: foo.txt (service/file-not-found).\r\n *\r\n *   catch (e) {\r\n *     assert(e.message === \"Could not find file: foo.txt.\");\r\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\r\n *       console.log(\"Could not read file: \" + e['file']);\r\n *     }\r\n *   }\r\n */\r\nconst ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nclass FirebaseError extends Error {\r\n    constructor(\r\n    /** The error code for this error. */\r\n    code, message, \r\n    /** Custom data for this error. */\r\n    customData) {\r\n        super(message);\r\n        this.code = code;\r\n        this.customData = customData;\r\n        /** The custom name for all FirebaseErrors. */\r\n        this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n    }\r\n}\r\nclass ErrorFactory {\r\n    constructor(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    create(code, ...data) {\r\n        const customData = data[0] || {};\r\n        const fullCode = `${this.service}/${code}`;\r\n        const template = this.errors[code];\r\n        const message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\r\n        const error = new FirebaseError(fullCode, fullMessage, customData);\r\n        return error;\r\n    }\r\n}\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, (_, key) => {\r\n        const value = data[key];\r\n        return value != null ? String(value) : `<${key}?>`;\r\n    });\r\n}\r\nconst PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst decode = function (token) {\r\n    let header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        const parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header,\r\n        claims,\r\n        data,\r\n        signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidTimestamp = function (token) {\r\n    const claims = decode(token).claims;\r\n    const now = Math.floor(new Date().getTime() / 1000);\r\n    let validSince = 0, validUntil = 0;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (!!now &&\r\n        !!validSince &&\r\n        !!validUntil &&\r\n        now >= validSince &&\r\n        now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst issuedAtTime = function (token) {\r\n    const claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidFormat = function (token) {\r\n    const decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isAdmin = function (token) {\r\n    const claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction contains(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\nfunction safeGet(obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction map(obj, fn, contextObj) {\r\n    const res = {};\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            res[key] = fn.call(contextObj, obj[key], key, obj);\r\n        }\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n    for (const k of aKeys) {\r\n        if (!bKeys.includes(k)) {\r\n            return false;\r\n        }\r\n        const aProp = a[k];\r\n        const bProp = b[k];\r\n        if (isObject(aProp) && isObject(bProp)) {\r\n            if (!deepEqual(aProp, bProp)) {\r\n                return false;\r\n            }\r\n        }\r\n        else if (aProp !== bProp) {\r\n            return false;\r\n        }\r\n    }\r\n    for (const k of bKeys) {\r\n        if (!aKeys.includes(k)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isObject(thing) {\r\n    return thing !== null && typeof thing === 'object';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\r\n * @internal\r\n */\r\nfunction promiseWithTimeout(promise, timeInMS = 2000) {\r\n    const deferredPromise = new Deferred();\r\n    setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\r\n    promise.then(deferredPromise.resolve, deferredPromise.reject);\r\n    return deferredPromise.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\r\nfunction querystring(querystringParams) {\r\n    const params = [];\r\n    for (const [key, value] of Object.entries(querystringParams)) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(arrayVal => {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    }\r\n    return params.length ? '&' + params.join('&') : '';\r\n}\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\r\nfunction querystringDecode(querystring) {\r\n    const obj = {};\r\n    const tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(token => {\r\n        if (token) {\r\n            const [key, value] = token.split('=');\r\n            obj[decodeURIComponent(key)] = decodeURIComponent(value);\r\n        }\r\n    });\r\n    return obj;\r\n}\r\n/**\r\n * Extract the query string part of a URL, including the leading question mark (if present).\r\n */\r\nfunction extractQuerystring(url) {\r\n    const queryStart = url.indexOf('?');\r\n    if (!queryStart) {\r\n        return '';\r\n    }\r\n    const fragmentStart = url.indexOf('#', queryStart);\r\n    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\r\nclass Sha1 {\r\n    constructor() {\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */\r\n        this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */\r\n        this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */\r\n        this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */\r\n        this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.total_ = 0;\r\n        this.blockSize = 512 / 8;\r\n        this.pad_[0] = 128;\r\n        for (let i = 1; i < this.blockSize; ++i) {\r\n            this.pad_[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    }\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    compress_(buf, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        const W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (let i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(offset) << 24) |\r\n                        (buf.charCodeAt(offset + 1) << 16) |\r\n                        (buf.charCodeAt(offset + 2) << 8) |\r\n                        buf.charCodeAt(offset + 3);\r\n                offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[offset] << 24) |\r\n                        (buf[offset + 1] << 16) |\r\n                        (buf[offset + 2] << 8) |\r\n                        buf[offset + 3];\r\n                offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (let i = 16; i < 80; i++) {\r\n            const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        let a = this.chain_[0];\r\n        let b = this.chain_[1];\r\n        let c = this.chain_[2];\r\n        let d = this.chain_[3];\r\n        let e = this.chain_[4];\r\n        let f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (let i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    }\r\n    update(bytes, length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (length === undefined) {\r\n            length = bytes.length;\r\n        }\r\n        const lengthMinusBlock = length - this.blockSize;\r\n        let n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        const buf = this.buf_;\r\n        let inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf === 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += length;\r\n    }\r\n    /** @override */\r\n    digest() {\r\n        const digest = [];\r\n        let totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (let i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        let n = 0;\r\n        for (let i = 0; i < 5; i++) {\r\n            for (let j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    }\r\n}\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    const proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nclass ObserverProxy {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    constructor(executor, onNoObservers) {\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(() => {\r\n            executor(this);\r\n        })\r\n            .catch(e => {\r\n            this.error(e);\r\n        });\r\n    }\r\n    next(value) {\r\n        this.forEachObserver((observer) => {\r\n            observer.next(value);\r\n        });\r\n    }\r\n    error(error) {\r\n        this.forEachObserver((observer) => {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    }\r\n    complete() {\r\n        this.forEachObserver((observer) => {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    }\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    subscribe(nextOrObserver, error, complete) {\r\n        let observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, [\r\n            'next',\r\n            'error',\r\n            'complete'\r\n        ])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error,\r\n                complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        const unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this.task.then(() => {\r\n                try {\r\n                    if (this.finalError) {\r\n                        observer.error(this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    }\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    unsubscribeOne(i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    }\r\n    forEachObserver(fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (let i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    }\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    sendOne(i, fn) {\r\n        // Execute the callback asynchronously\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            if (this.observers !== undefined && this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    close(err) {\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            this.observers = undefined;\r\n            this.onNoObservers = undefined;\r\n        });\r\n    }\r\n}\r\n/** Turn synchronous function into one called asynchronously. */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(fn, onError) {\r\n    return (...args) => {\r\n        Promise.resolve(true)\r\n            .then(() => {\r\n            fn(...args);\r\n        })\r\n            .catch((error) => {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (const method of methods) {\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */\r\nconst validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    let argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        const error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argName The name of the argument\r\n * @return The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argName) {\r\n    return `${fnName} failed: ${argName} argument `;\r\n}\r\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */\r\nfunction validateNamespace(fnName, namespace, optional) {\r\n    if (optional && !namespace) {\r\n        return;\r\n    }\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentName, \r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ncallback, optional) {\r\n    if (optional && !callback) {\r\n        return;\r\n    }\r\n    if (typeof callback !== 'function') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid function.');\r\n    }\r\n}\r\nfunction validateContextObject(fnName, argumentName, context, optional) {\r\n    if (optional && !context) {\r\n        return;\r\n    }\r\n    if (typeof context !== 'object' || context === null) {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid context object.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nconst stringToByteArray = function (str) {\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            const high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nconst stringLength = function (str) {\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        const c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Copied from https://stackoverflow.com/a/2117523\r\n * Generates a new uuid.\r\n * @public\r\n */\r\nconst uuidv4 = function () {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n        const r = (Math.random() * 16) | 0, v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The amount of milliseconds to exponentially increase.\r\n */\r\nconst DEFAULT_INTERVAL_MILLIS = 1000;\r\n/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */\r\nconst DEFAULT_BACKOFF_FACTOR = 2;\r\n/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\r\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst RANDOM_FACTOR = 0.5;\r\n/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */\r\nfunction calculateBackoffMillis(backoffCount, intervalMillis = DEFAULT_INTERVAL_MILLIS, backoffFactor = DEFAULT_BACKOFF_FACTOR) {\r\n    // Calculates an exponentially increasing value.\r\n    // Deviation: calculates value from count and a constant interval, so we only need to save value\r\n    // and count to restore state.\r\n    const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\r\n    // A random \"fuzz\" to avoid waves of retries.\r\n    // Deviation: randomFactor is required.\r\n    const randomWait = Math.round(\r\n    // A fraction of the backoff value to add/subtract.\r\n    // Deviation: changes multiplication order to improve readability.\r\n    RANDOM_FACTOR *\r\n        currBaseValue *\r\n        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\r\n        // if we add or subtract.\r\n        (Math.random() - 0.5) *\r\n        2);\r\n    // Limits backoff to max to avoid effectively permanent backoff.\r\n    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provide English ordinal letters after a number\r\n */\r\nfunction ordinal(i) {\r\n    if (!Number.isFinite(i)) {\r\n        return `${i}`;\r\n    }\r\n    return i + indicator(i);\r\n}\r\nfunction indicator(i) {\r\n    i = Math.abs(i);\r\n    const cent = i % 100;\r\n    if (cent >= 10 && cent <= 20) {\r\n        return 'th';\r\n    }\r\n    const dec = i % 10;\r\n    if (dec === 1) {\r\n        return 'st';\r\n    }\r\n    if (dec === 2) {\r\n        return 'nd';\r\n    }\r\n    if (dec === 3) {\r\n        return 'rd';\r\n    }\r\n    return 'th';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getModularInstance(service) {\r\n    if (service && service._delegate) {\r\n        return service._delegate;\r\n    }\r\n    else {\r\n        return service;\r\n    }\r\n}\n\nexport { CONSTANTS, Deferred, ErrorFactory, FirebaseError, MAX_VALUE_MILLIS, RANDOM_FACTOR, Sha1, areCookiesEnabled, assert, assertionError, async, base64, base64Decode, base64Encode, base64urlEncodeWithoutPadding, calculateBackoffMillis, contains, createMockUserToken, createSubscribe, decode, deepCopy, deepEqual, deepExtend, errorPrefix, extractQuerystring, getDefaultAppConfig, getDefaultEmulatorHost, getDefaultEmulatorHostnameAndPort, getDefaults, getExperimentalSetting, getGlobal, getModularInstance, getUA, isAdmin, isBrowser, isBrowserExtension, isElectron, isEmpty, isIE, isIndexedDBAvailable, isMobileCordova, isNode, isNodeSdk, isReactNative, isSafari, isUWP, isValidFormat, isValidTimestamp, issuedAtTime, jsonEval, map, ordinal, promiseWithTimeout, querystring, querystringDecode, safeGet, stringLength, stringToByteArray, stringify, uuidv4, validateArgCount, validateCallback, validateContextObject, validateIndexedDBOpenable, validateNamespace };\n//# sourceMappingURL=index.esm2017.js.map\n","import { Deferred } from '@firebase/util';\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass Component {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    constructor(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* InstantiationMode.LAZY */;\r\n        this.onInstanceCreated = null;\r\n    }\r\n    setInstantiationMode(mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    }\r\n    setMultipleInstances(multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    }\r\n    setServiceProps(props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    }\r\n    setInstanceCreatedCallback(callback) {\r\n        this.onInstanceCreated = callback;\r\n        return this;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nclass Provider {\r\n    constructor(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n        this.instancesOptions = new Map();\r\n        this.onInitCallbacks = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    get(identifier) {\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            const deferred = new Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            if (this.isInitialized(normalizedIdentifier) ||\r\n                this.shouldAutoInitialize()) {\r\n                // initialize the service if it can be auto-initialized\r\n                try {\r\n                    const instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    if (instance) {\r\n                        deferred.resolve(instance);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception during get(), it should not cause\r\n                    // a fatal error. We just return the unresolved promise in this case.\r\n                }\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    }\r\n    getImmediate(options) {\r\n        var _a;\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\r\n        const optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\r\n        if (this.isInitialized(normalizedIdentifier) ||\r\n            this.shouldAutoInitialize()) {\r\n            try {\r\n                return this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n            }\r\n            catch (e) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw Error(`Service ${this.name} is not available`);\r\n            }\r\n        }\r\n    }\r\n    getComponent() {\r\n        return this.component;\r\n    }\r\n    setComponent(component) {\r\n        if (component.name !== this.name) {\r\n            throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\r\n        }\r\n        if (this.component) {\r\n            throw Error(`Component for ${this.name} has already been provided`);\r\n        }\r\n        this.component = component;\r\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\r\n        if (!this.shouldAutoInitialize()) {\r\n            return;\r\n        }\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        // Create service instances for the pending promises and resolve them\r\n        // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n        // and all promises with resolve with it regardless of the identifier.\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            try {\r\n                // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                const instance = this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n            catch (e) {\r\n                // when the instance factory throws an exception, it should not cause\r\n                // a fatal error. We just leave the promise unresolved.\r\n            }\r\n        }\r\n    }\r\n    clearInstance(identifier = DEFAULT_ENTRY_NAME) {\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instancesOptions.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    }\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    async delete() {\r\n        const services = Array.from(this.instances.values());\r\n        await Promise.all([\r\n            ...services\r\n                .filter(service => 'INTERNAL' in service) // legacy services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service.INTERNAL.delete()),\r\n            ...services\r\n                .filter(service => '_delete' in service) // modularized services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service._delete())\r\n        ]);\r\n    }\r\n    isComponentSet() {\r\n        return this.component != null;\r\n    }\r\n    isInitialized(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instances.has(identifier);\r\n    }\r\n    getOptions(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instancesOptions.get(identifier) || {};\r\n    }\r\n    initialize(opts = {}) {\r\n        const { options = {} } = opts;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\r\n        if (this.isInitialized(normalizedIdentifier)) {\r\n            throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\r\n        }\r\n        if (!this.isComponentSet()) {\r\n            throw Error(`Component ${this.name} has not been registered yet`);\r\n        }\r\n        const instance = this.getOrInitializeService({\r\n            instanceIdentifier: normalizedIdentifier,\r\n            options\r\n        });\r\n        // resolve any pending promise waiting for the service instance\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            if (normalizedIdentifier === normalizedDeferredIdentifier) {\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n    /**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @param identifier An optional instance identifier\r\n     * @returns a function to unregister the callback\r\n     */\r\n    onInit(callback, identifier) {\r\n        var _a;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        const existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\r\n        existingCallbacks.add(callback);\r\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\r\n        const existingInstance = this.instances.get(normalizedIdentifier);\r\n        if (existingInstance) {\r\n            callback(existingInstance, normalizedIdentifier);\r\n        }\r\n        return () => {\r\n            existingCallbacks.delete(callback);\r\n        };\r\n    }\r\n    /**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */\r\n    invokeOnInitCallbacks(instance, identifier) {\r\n        const callbacks = this.onInitCallbacks.get(identifier);\r\n        if (!callbacks) {\r\n            return;\r\n        }\r\n        for (const callback of callbacks) {\r\n            try {\r\n                callback(instance, identifier);\r\n            }\r\n            catch (_a) {\r\n                // ignore errors in the onInit callback\r\n            }\r\n        }\r\n    }\r\n    getOrInitializeService({ instanceIdentifier, options = {} }) {\r\n        let instance = this.instances.get(instanceIdentifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, {\r\n                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\r\n                options\r\n            });\r\n            this.instances.set(instanceIdentifier, instance);\r\n            this.instancesOptions.set(instanceIdentifier, options);\r\n            /**\r\n             * Invoke onInit listeners.\r\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n             * while onInit listeners are registered by consumers of the provider.\r\n             */\r\n            this.invokeOnInitCallbacks(instance, instanceIdentifier);\r\n            /**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */\r\n            if (this.component.onInstanceCreated) {\r\n                try {\r\n                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\r\n                }\r\n                catch (_a) {\r\n                    // ignore errors in the onInstanceCreatedCallback\r\n                }\r\n            }\r\n        }\r\n        return instance || null;\r\n    }\r\n    normalizeInstanceIdentifier(identifier = DEFAULT_ENTRY_NAME) {\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    }\r\n    shouldAutoInitialize() {\r\n        return (!!this.component &&\r\n            this.component.instantiationMode !== \"EXPLICIT\" /* InstantiationMode.EXPLICIT */);\r\n    }\r\n}\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* InstantiationMode.EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass ComponentContainer {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    addComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\r\n        }\r\n        provider.setComponent(component);\r\n    }\r\n    addOrOverwriteComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    }\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    getProvider(name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        const provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    }\r\n    getProviders() {\r\n        return Array.from(this.providers.values());\r\n    }\r\n}\n\nexport { Component, ComponentContainer, Provider };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nconst instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nconst levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nconst defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nconst ConsoleMethod = {\r\n    [LogLevel.DEBUG]: 'log',\r\n    [LogLevel.VERBOSE]: 'log',\r\n    [LogLevel.INFO]: 'info',\r\n    [LogLevel.WARN]: 'warn',\r\n    [LogLevel.ERROR]: 'error'\r\n};\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nconst defaultLogHandler = (instance, logType, ...args) => {\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    const now = new Date().toISOString();\r\n    const method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method](`[${now}]  ${instance.name}:`, ...args);\r\n    }\r\n    else {\r\n        throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\r\n    }\r\n};\r\nclass Logger {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    constructor(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    get logLevel() {\r\n        return this._logLevel;\r\n    }\r\n    set logLevel(val) {\r\n        if (!(val in LogLevel)) {\r\n            throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\r\n        }\r\n        this._logLevel = val;\r\n    }\r\n    // Workaround for setter/getter having to be the same type.\r\n    setLogLevel(val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    }\r\n    get logHandler() {\r\n        return this._logHandler;\r\n    }\r\n    set logHandler(val) {\r\n        if (typeof val !== 'function') {\r\n            throw new TypeError('Value assigned to `logHandler` must be a function');\r\n        }\r\n        this._logHandler = val;\r\n    }\r\n    get userLogHandler() {\r\n        return this._userLogHandler;\r\n    }\r\n    set userLogHandler(val) {\r\n        this._userLogHandler = val;\r\n    }\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    debug(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\r\n        this._logHandler(this, LogLevel.DEBUG, ...args);\r\n    }\r\n    log(...args) {\r\n        this._userLogHandler &&\r\n            this._userLogHandler(this, LogLevel.VERBOSE, ...args);\r\n        this._logHandler(this, LogLevel.VERBOSE, ...args);\r\n    }\r\n    info(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\r\n        this._logHandler(this, LogLevel.INFO, ...args);\r\n    }\r\n    warn(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\r\n        this._logHandler(this, LogLevel.WARN, ...args);\r\n    }\r\n    error(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\r\n        this._logHandler(this, LogLevel.ERROR, ...args);\r\n    }\r\n}\r\nfunction setLogLevel(level) {\r\n    instances.forEach(inst => {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    for (const instance of instances) {\r\n        let customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = (instance, level, ...args) => {\r\n                const message = args\r\n                    .map(arg => {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(arg => arg)\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message,\r\n                        args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n//# sourceMappingURL=index.esm2017.js.map\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, getDefaultAppConfig, deepEqual, FirebaseError, base64urlEncodeWithoutPadding, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* ComponentType.VERSION */;\r\n}\n\nconst name$o = \"@firebase/app\";\nconst version$1 = \"0.9.3\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app');\n\nconst name$n = \"@firebase/app-compat\";\n\nconst name$m = \"@firebase/analytics-compat\";\n\nconst name$l = \"@firebase/analytics\";\n\nconst name$k = \"@firebase/app-check-compat\";\n\nconst name$j = \"@firebase/app-check\";\n\nconst name$i = \"@firebase/auth\";\n\nconst name$h = \"@firebase/auth-compat\";\n\nconst name$g = \"@firebase/database\";\n\nconst name$f = \"@firebase/database-compat\";\n\nconst name$e = \"@firebase/functions\";\n\nconst name$d = \"@firebase/functions-compat\";\n\nconst name$c = \"@firebase/installations\";\n\nconst name$b = \"@firebase/installations-compat\";\n\nconst name$a = \"@firebase/messaging\";\n\nconst name$9 = \"@firebase/messaging-compat\";\n\nconst name$8 = \"@firebase/performance\";\n\nconst name$7 = \"@firebase/performance-compat\";\n\nconst name$6 = \"@firebase/remote-config\";\n\nconst name$5 = \"@firebase/remote-config-compat\";\n\nconst name$4 = \"@firebase/storage\";\n\nconst name$3 = \"@firebase/storage-compat\";\n\nconst name$2 = \"@firebase/firestore\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name = \"firebase\";\nconst version = \"9.17.1\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name$o]: 'fire-core',\r\n    [name$n]: 'fire-core-compat',\r\n    [name$l]: 'fire-analytics',\r\n    [name$m]: 'fire-analytics-compat',\r\n    [name$j]: 'fire-app-check',\r\n    [name$k]: 'fire-app-check-compat',\r\n    [name$i]: 'fire-auth',\r\n    [name$h]: 'fire-auth-compat',\r\n    [name$g]: 'fire-rtdb',\r\n    [name$f]: 'fire-rtdb-compat',\r\n    [name$e]: 'fire-fn',\r\n    [name$d]: 'fire-fn-compat',\r\n    [name$c]: 'fire-iid',\r\n    [name$b]: 'fire-iid-compat',\r\n    [name$a]: 'fire-fcm',\r\n    [name$9]: 'fire-fcm-compat',\r\n    [name$8]: 'fire-perf',\r\n    [name$7]: 'fire-perf-compat',\r\n    [name$6]: 'fire-rc',\r\n    [name$5]: 'fire-rc-compat',\r\n    [name$4]: 'fire-gcs',\r\n    [name$3]: 'fire-gcs-compat',\r\n    [name$2]: 'fire-fst',\r\n    [name$1]: 'fire-fst-compat',\r\n    'fire-js': 'fire-js',\r\n    [name]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @internal\r\n */\r\nfunction _addOrOverwriteComponent(app, component) {\r\n    app.container.addOrOverwriteComponent(component);\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    const heartbeatController = app.container\r\n        .getProvider('heartbeat')\r\n        .getImmediate({ optional: true });\r\n    if (heartbeatController) {\r\n        void heartbeatController.triggerHeartbeat();\r\n    }\r\n    return app.container.getProvider(name);\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\r\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\r\n    _getProvider(app, name).clearInstance(instanceIdentifier);\r\n}\r\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\r\nfunction _clearComponents() {\r\n    _components.clear();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}\",\r\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\r\n    [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\r\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\r\n    [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._config = Object.assign({}, config);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get config() {\r\n        this.checkDestroyed();\r\n        return this._config;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version;\r\nfunction initializeApp(_options, rawConfig = {}) {\r\n    let options = _options;\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    options || (options = getDefaultAppConfig());\r\n    if (!options) {\r\n        throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\r\n    }\r\n    const existingApp = _apps.get(name);\r\n    if (existingApp) {\r\n        // return the existing app if options and config deep equal the ones in the existing app.\r\n        if (deepEqual(options, existingApp.options) &&\r\n            deepEqual(config, existingApp.config)) {\r\n            return existingApp;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, { appName: name });\r\n        }\r\n    }\r\n    const container = new ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\r\n    const app = _apps.get(name);\r\n    if (!app && name === DEFAULT_ENTRY_NAME) {\r\n        return initializeApp();\r\n    }\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\r\nfunction getApps() {\r\n    return Array.from(_apps.values());\r\n}\r\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\r\nasync function deleteApp(app) {\r\n    const name = app.name;\r\n    if (_apps.has(name)) {\r\n        _apps.delete(name);\r\n        await Promise.all(app.container\r\n            .getProviders()\r\n            .map(provider => provider.delete()));\r\n        app.isDeleted = true;\r\n    }\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* ComponentType.VERSION */));\r\n}\r\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\r\nfunction onLog(logCallback, options) {\r\n    if (logCallback !== null && typeof logCallback !== 'function') {\r\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\r\n    }\r\n    setUserLogHandler(logCallback, options);\r\n}\r\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(logLevel) {\r\n    setLogLevel$1(logLevel);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DB_NAME = 'firebase-heartbeat-database';\r\nconst DB_VERSION = 1;\r\nconst STORE_NAME = 'firebase-heartbeat-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDB(DB_NAME, DB_VERSION, {\r\n            upgrade: (db, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through\r\n                // behavior is what we want, because if there are multiple versions between\r\n                // the old version and the current version, we want ALL the migrations\r\n                // that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        db.createObjectStore(STORE_NAME);\r\n                }\r\n            }\r\n        }).catch(e => {\r\n            throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\r\n                originalErrorMessage: e.message\r\n            });\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\nasync function readHeartbeatsFromIndexedDB(app) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        return db\r\n            .transaction(STORE_NAME)\r\n            .objectStore(STORE_NAME)\r\n            .get(computeKey(app));\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nasync function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const tx = db.transaction(STORE_NAME, 'readwrite');\r\n        const objectStore = tx.objectStore(STORE_NAME);\r\n        await objectStore.put(heartbeatObject, computeKey(app));\r\n        return tx.done;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nfunction computeKey(app) {\r\n    return `${app.name}!${app.options.appId}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst MAX_HEADER_BYTES = 1024;\r\n// 30 days\r\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\r\nclass HeartbeatServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n        /**\r\n         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n         * the header string.\r\n         * Stores one record per date. This will be consolidated into the standard\r\n         * format of one record per user agent string before being sent as a header.\r\n         * Populated from indexedDB when the controller is instantiated and should\r\n         * be kept in sync with indexedDB.\r\n         * Leave public for easier testing.\r\n         */\r\n        this._heartbeatsCache = null;\r\n        const app = this.container.getProvider('app').getImmediate();\r\n        this._storage = new HeartbeatStorageImpl(app);\r\n        this._heartbeatsCachePromise = this._storage.read().then(result => {\r\n            this._heartbeatsCache = result;\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * Called to report a heartbeat. The function will generate\r\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n     * to IndexedDB.\r\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n     * already logged, subsequent calls to this function in the same day will be ignored.\r\n     */\r\n    async triggerHeartbeat() {\r\n        const platformLogger = this.container\r\n            .getProvider('platform-logger')\r\n            .getImmediate();\r\n        // This is the \"Firebase user agent\" string from the platform logger\r\n        // service, not the browser user agent.\r\n        const agent = platformLogger.getPlatformInfoString();\r\n        const date = getUTCDateString();\r\n        if (this._heartbeatsCache === null) {\r\n            this._heartbeatsCache = await this._heartbeatsCachePromise;\r\n        }\r\n        // Do not store a heartbeat if one is already stored for this day\r\n        // or if a header has already been sent today.\r\n        if (this._heartbeatsCache.lastSentHeartbeatDate === date ||\r\n            this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\r\n            return;\r\n        }\r\n        else {\r\n            // There is no entry for this date. Create one.\r\n            this._heartbeatsCache.heartbeats.push({ date, agent });\r\n        }\r\n        // Remove entries older than 30 days.\r\n        this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\r\n            const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\r\n            const now = Date.now();\r\n            return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\r\n        });\r\n        return this._storage.overwrite(this._heartbeatsCache);\r\n    }\r\n    /**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: Consuming product SDKs should not send the header if this method\r\n     * returns an empty string.\r\n     */\r\n    async getHeartbeatsHeader() {\r\n        if (this._heartbeatsCache === null) {\r\n            await this._heartbeatsCachePromise;\r\n        }\r\n        // If it's still null or the array is empty, there is no data to send.\r\n        if (this._heartbeatsCache === null ||\r\n            this._heartbeatsCache.heartbeats.length === 0) {\r\n            return '';\r\n        }\r\n        const date = getUTCDateString();\r\n        // Extract as many heartbeats from the cache as will fit under the size limit.\r\n        const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\r\n        const headerString = base64urlEncodeWithoutPadding(JSON.stringify({ version: 2, heartbeats: heartbeatsToSend }));\r\n        // Store last sent date to prevent another being logged/sent for the same day.\r\n        this._heartbeatsCache.lastSentHeartbeatDate = date;\r\n        if (unsentEntries.length > 0) {\r\n            // Store any unsent entries if they exist.\r\n            this._heartbeatsCache.heartbeats = unsentEntries;\r\n            // This seems more likely than emptying the array (below) to lead to some odd state\r\n            // since the cache isn't empty and this will be called again on the next request,\r\n            // and is probably safest if we await it.\r\n            await this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        else {\r\n            this._heartbeatsCache.heartbeats = [];\r\n            // Do not wait for this, to reduce latency.\r\n            void this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        return headerString;\r\n    }\r\n}\r\nfunction getUTCDateString() {\r\n    const today = new Date();\r\n    // Returns date format 'YYYY-MM-DD'\r\n    return today.toISOString().substring(0, 10);\r\n}\r\nfunction extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\r\n    // Heartbeats grouped by user agent in the standard format to be sent in\r\n    // the header.\r\n    const heartbeatsToSend = [];\r\n    // Single date format heartbeats that are not sent.\r\n    let unsentEntries = heartbeatsCache.slice();\r\n    for (const singleDateHeartbeat of heartbeatsCache) {\r\n        // Look for an existing entry with the same user agent.\r\n        const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\r\n        if (!heartbeatEntry) {\r\n            // If no entry for this user agent exists, create one.\r\n            heartbeatsToSend.push({\r\n                agent: singleDateHeartbeat.agent,\r\n                dates: [singleDateHeartbeat.date]\r\n            });\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                // If the header would exceed max size, remove the added heartbeat\r\n                // entry and stop adding to the header.\r\n                heartbeatsToSend.pop();\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            heartbeatEntry.dates.push(singleDateHeartbeat.date);\r\n            // If the header would exceed max size, remove the added date\r\n            // and stop adding to the header.\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                heartbeatEntry.dates.pop();\r\n                break;\r\n            }\r\n        }\r\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\r\n        // quota and the loop breaks early.)\r\n        unsentEntries = unsentEntries.slice(1);\r\n    }\r\n    return {\r\n        heartbeatsToSend,\r\n        unsentEntries\r\n    };\r\n}\r\nclass HeartbeatStorageImpl {\r\n    constructor(app) {\r\n        this.app = app;\r\n        this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\r\n    }\r\n    async runIndexedDBEnvironmentCheck() {\r\n        if (!isIndexedDBAvailable()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return validateIndexedDBOpenable()\r\n                .then(() => true)\r\n                .catch(() => false);\r\n        }\r\n    }\r\n    /**\r\n     * Read all heartbeats.\r\n     */\r\n    async read() {\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return { heartbeats: [] };\r\n        }\r\n        else {\r\n            const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\r\n            return idbHeartbeatObject || { heartbeats: [] };\r\n        }\r\n    }\r\n    // overwrite the storage with the provided heartbeats\r\n    async overwrite(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: heartbeatsObject.heartbeats\r\n            });\r\n        }\r\n    }\r\n    // add heartbeats\r\n    async add(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: [\r\n                    ...existingHeartbeatsObject.heartbeats,\r\n                    ...heartbeatsObject.heartbeats\r\n                ]\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */\r\nfunction countBytes(heartbeatsCache) {\r\n    // base64 has a restricted set of characters, all of which should be 1 byte.\r\n    return base64urlEncodeWithoutPadding(\r\n    // heartbeatsCache wrapper properties\r\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })).length;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    _registerComponent(new Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name$o, version$1, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name$o, version$1, 'esm2017');\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents('');\n\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _registerComponent, _removeServiceInstance, deleteApp, getApp, getApps, initializeApp, onLog, registerVersion, setLogLevel };\n//# sourceMappingURL=index.esm2017.js.map\n","import { registerVersion } from '@firebase/app';\nexport * from '@firebase/app';\n\nvar name = \"firebase\";\nvar version = \"9.17.1\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterVersion(name, version, 'app');\n//# sourceMappingURL=index.esm.js.map\n","import { _getProvider, getApp, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\nconst name = \"@firebase/installations\";\nconst version = \"0.6.3\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PENDING_TIMEOUT_MS = 10000;\r\nconst PACKAGE_VERSION = `w:${version}`;\r\nconst INTERNAL_AUTH_VERSION = 'FIS_v2';\r\nconst INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\r\nconst TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\r\nconst SERVICE = 'installations';\r\nconst SERVICE_NAME = 'Installations';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERROR_DESCRIPTION_MAP = {\r\n    [\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */]: 'Missing App configuration value: \"{$valueName}\"',\r\n    [\"not-registered\" /* ErrorCode.NOT_REGISTERED */]: 'Firebase Installation is not registered.',\r\n    [\"installation-not-found\" /* ErrorCode.INSTALLATION_NOT_FOUND */]: 'Firebase Installation not found.',\r\n    [\"request-failed\" /* ErrorCode.REQUEST_FAILED */]: '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\r\n    [\"app-offline\" /* ErrorCode.APP_OFFLINE */]: 'Could not process request. Application offline.',\r\n    [\"delete-pending-registration\" /* ErrorCode.DELETE_PENDING_REGISTRATION */]: \"Can't delete installation while there is a pending registration request.\"\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\r\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\r\nfunction isServerError(error) {\r\n    return (error instanceof FirebaseError &&\r\n        error.code.includes(\"request-failed\" /* ErrorCode.REQUEST_FAILED */));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getInstallationsEndpoint({ projectId }) {\r\n    return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\r\n}\r\nfunction extractAuthTokenInfoFromResponse(response) {\r\n    return {\r\n        token: response.token,\r\n        requestStatus: 2 /* RequestStatus.COMPLETED */,\r\n        expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\r\n        creationTime: Date.now()\r\n    };\r\n}\r\nasync function getErrorFromResponse(requestName, response) {\r\n    const responseJson = await response.json();\r\n    const errorData = responseJson.error;\r\n    return ERROR_FACTORY.create(\"request-failed\" /* ErrorCode.REQUEST_FAILED */, {\r\n        requestName,\r\n        serverCode: errorData.code,\r\n        serverMessage: errorData.message,\r\n        serverStatus: errorData.status\r\n    });\r\n}\r\nfunction getHeaders({ apiKey }) {\r\n    return new Headers({\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': apiKey\r\n    });\r\n}\r\nfunction getHeadersWithAuth(appConfig, { refreshToken }) {\r\n    const headers = getHeaders(appConfig);\r\n    headers.append('Authorization', getAuthorizationHeader(refreshToken));\r\n    return headers;\r\n}\r\n/**\r\n * Calls the passed in fetch wrapper and returns the response.\r\n * If the returned response has a status of 5xx, re-runs the function once and\r\n * returns the response.\r\n */\r\nasync function retryIfServerError(fn) {\r\n    const result = await fn();\r\n    if (result.status >= 500 && result.status < 600) {\r\n        // Internal Server Error. Retry request.\r\n        return fn();\r\n    }\r\n    return result;\r\n}\r\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\r\n    // This works because the server will never respond with fractions of a second.\r\n    return Number(responseExpiresIn.replace('s', '000'));\r\n}\r\nfunction getAuthorizationHeader(refreshToken) {\r\n    return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function createInstallationRequest({ appConfig, heartbeatServiceProvider }, { fid }) {\r\n    const endpoint = getInstallationsEndpoint(appConfig);\r\n    const headers = getHeaders(appConfig);\r\n    // If heartbeat service exists, add the heartbeat string to the header.\r\n    const heartbeatService = heartbeatServiceProvider.getImmediate({\r\n        optional: true\r\n    });\r\n    if (heartbeatService) {\r\n        const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\r\n        if (heartbeatsHeader) {\r\n            headers.append('x-firebase-client', heartbeatsHeader);\r\n        }\r\n    }\r\n    const body = {\r\n        fid,\r\n        authVersion: INTERNAL_AUTH_VERSION,\r\n        appId: appConfig.appId,\r\n        sdkVersion: PACKAGE_VERSION\r\n    };\r\n    const request = {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(body)\r\n    };\r\n    const response = await retryIfServerError(() => fetch(endpoint, request));\r\n    if (response.ok) {\r\n        const responseValue = await response.json();\r\n        const registeredInstallationEntry = {\r\n            fid: responseValue.fid || fid,\r\n            registrationStatus: 2 /* RequestStatus.COMPLETED */,\r\n            refreshToken: responseValue.refreshToken,\r\n            authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\r\n        };\r\n        return registeredInstallationEntry;\r\n    }\r\n    else {\r\n        throw await getErrorFromResponse('Create Installation', response);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a promise that resolves after given time passes. */\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction bufferToBase64UrlSafe(array) {\r\n    const b64 = btoa(String.fromCharCode(...array));\r\n    return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\r\nconst INVALID_FID = '';\r\n/**\r\n * Generates a new FID using random values from Web Crypto API.\r\n * Returns an empty string if FID generation fails for any reason.\r\n */\r\nfunction generateFid() {\r\n    try {\r\n        // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\r\n        // bytes. our implementation generates a 17 byte array instead.\r\n        const fidByteArray = new Uint8Array(17);\r\n        const crypto = self.crypto || self.msCrypto;\r\n        crypto.getRandomValues(fidByteArray);\r\n        // Replace the first 4 random bits with the constant FID header of 0b0111.\r\n        fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\r\n        const fid = encode(fidByteArray);\r\n        return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\r\n    }\r\n    catch (_a) {\r\n        // FID generation errored\r\n        return INVALID_FID;\r\n    }\r\n}\r\n/** Converts a FID Uint8Array to a base64 string representation. */\r\nfunction encode(fidByteArray) {\r\n    const b64String = bufferToBase64UrlSafe(fidByteArray);\r\n    // Remove the 23rd character that was added because of the extra 4 bits at the\r\n    // end of our 17 byte array, and the '=' padding.\r\n    return b64String.substr(0, 22);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a string key that can be used to identify the app. */\r\nfunction getKey(appConfig) {\r\n    return `${appConfig.appName}!${appConfig.appId}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst fidChangeCallbacks = new Map();\r\n/**\r\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\r\n * change to other tabs.\r\n */\r\nfunction fidChanged(appConfig, fid) {\r\n    const key = getKey(appConfig);\r\n    callFidChangeCallbacks(key, fid);\r\n    broadcastFidChange(key, fid);\r\n}\r\nfunction addCallback(appConfig, callback) {\r\n    // Open the broadcast channel if it's not already open,\r\n    // to be able to listen to change events from other tabs.\r\n    getBroadcastChannel();\r\n    const key = getKey(appConfig);\r\n    let callbackSet = fidChangeCallbacks.get(key);\r\n    if (!callbackSet) {\r\n        callbackSet = new Set();\r\n        fidChangeCallbacks.set(key, callbackSet);\r\n    }\r\n    callbackSet.add(callback);\r\n}\r\nfunction removeCallback(appConfig, callback) {\r\n    const key = getKey(appConfig);\r\n    const callbackSet = fidChangeCallbacks.get(key);\r\n    if (!callbackSet) {\r\n        return;\r\n    }\r\n    callbackSet.delete(callback);\r\n    if (callbackSet.size === 0) {\r\n        fidChangeCallbacks.delete(key);\r\n    }\r\n    // Close broadcast channel if there are no more callbacks.\r\n    closeBroadcastChannel();\r\n}\r\nfunction callFidChangeCallbacks(key, fid) {\r\n    const callbacks = fidChangeCallbacks.get(key);\r\n    if (!callbacks) {\r\n        return;\r\n    }\r\n    for (const callback of callbacks) {\r\n        callback(fid);\r\n    }\r\n}\r\nfunction broadcastFidChange(key, fid) {\r\n    const channel = getBroadcastChannel();\r\n    if (channel) {\r\n        channel.postMessage({ key, fid });\r\n    }\r\n    closeBroadcastChannel();\r\n}\r\nlet broadcastChannel = null;\r\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\r\nfunction getBroadcastChannel() {\r\n    if (!broadcastChannel && 'BroadcastChannel' in self) {\r\n        broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\r\n        broadcastChannel.onmessage = e => {\r\n            callFidChangeCallbacks(e.data.key, e.data.fid);\r\n        };\r\n    }\r\n    return broadcastChannel;\r\n}\r\nfunction closeBroadcastChannel() {\r\n    if (fidChangeCallbacks.size === 0 && broadcastChannel) {\r\n        broadcastChannel.close();\r\n        broadcastChannel = null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DATABASE_NAME = 'firebase-installations-database';\r\nconst DATABASE_VERSION = 1;\r\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n            upgrade: (db, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through\r\n                // behavior is what we want, because if there are multiple versions between\r\n                // the old version and the current version, we want ALL the migrations\r\n                // that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        db.createObjectStore(OBJECT_STORE_NAME);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\n/** Assigns or overwrites the record for the given key with the given value. */\r\nasync function set(appConfig, value) {\r\n    const key = getKey(appConfig);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    const objectStore = tx.objectStore(OBJECT_STORE_NAME);\r\n    const oldValue = (await objectStore.get(key));\r\n    await objectStore.put(value, key);\r\n    await tx.done;\r\n    if (!oldValue || oldValue.fid !== value.fid) {\r\n        fidChanged(appConfig, value.fid);\r\n    }\r\n    return value;\r\n}\r\n/** Removes record(s) from the objectStore that match the given key. */\r\nasync function remove(appConfig) {\r\n    const key = getKey(appConfig);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    await tx.objectStore(OBJECT_STORE_NAME).delete(key);\r\n    await tx.done;\r\n}\r\n/**\r\n * Atomically updates a record with the result of updateFn, which gets\r\n * called with the current value. If newValue is undefined, the record is\r\n * deleted instead.\r\n * @return Updated value\r\n */\r\nasync function update(appConfig, updateFn) {\r\n    const key = getKey(appConfig);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    const store = tx.objectStore(OBJECT_STORE_NAME);\r\n    const oldValue = (await store.get(key));\r\n    const newValue = updateFn(oldValue);\r\n    if (newValue === undefined) {\r\n        await store.delete(key);\r\n    }\r\n    else {\r\n        await store.put(newValue, key);\r\n    }\r\n    await tx.done;\r\n    if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\r\n        fidChanged(appConfig, newValue.fid);\r\n    }\r\n    return newValue;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Updates and returns the InstallationEntry from the database.\r\n * Also triggers a registration request if it is necessary and possible.\r\n */\r\nasync function getInstallationEntry(installations) {\r\n    let registrationPromise;\r\n    const installationEntry = await update(installations.appConfig, oldEntry => {\r\n        const installationEntry = updateOrCreateInstallationEntry(oldEntry);\r\n        const entryWithPromise = triggerRegistrationIfNecessary(installations, installationEntry);\r\n        registrationPromise = entryWithPromise.registrationPromise;\r\n        return entryWithPromise.installationEntry;\r\n    });\r\n    if (installationEntry.fid === INVALID_FID) {\r\n        // FID generation failed. Waiting for the FID from the server.\r\n        return { installationEntry: await registrationPromise };\r\n    }\r\n    return {\r\n        installationEntry,\r\n        registrationPromise\r\n    };\r\n}\r\n/**\r\n * Creates a new Installation Entry if one does not exist.\r\n * Also clears timed out pending requests.\r\n */\r\nfunction updateOrCreateInstallationEntry(oldEntry) {\r\n    const entry = oldEntry || {\r\n        fid: generateFid(),\r\n        registrationStatus: 0 /* RequestStatus.NOT_STARTED */\r\n    };\r\n    return clearTimedOutRequest(entry);\r\n}\r\n/**\r\n * If the Firebase Installation is not registered yet, this will trigger the\r\n * registration and return an InProgressInstallationEntry.\r\n *\r\n * If registrationPromise does not exist, the installationEntry is guaranteed\r\n * to be registered.\r\n */\r\nfunction triggerRegistrationIfNecessary(installations, installationEntry) {\r\n    if (installationEntry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\r\n        if (!navigator.onLine) {\r\n            // Registration required but app is offline.\r\n            const registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */));\r\n            return {\r\n                installationEntry,\r\n                registrationPromise: registrationPromiseWithError\r\n            };\r\n        }\r\n        // Try registering. Change status to IN_PROGRESS.\r\n        const inProgressEntry = {\r\n            fid: installationEntry.fid,\r\n            registrationStatus: 1 /* RequestStatus.IN_PROGRESS */,\r\n            registrationTime: Date.now()\r\n        };\r\n        const registrationPromise = registerInstallation(installations, inProgressEntry);\r\n        return { installationEntry: inProgressEntry, registrationPromise };\r\n    }\r\n    else if (installationEntry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\r\n        return {\r\n            installationEntry,\r\n            registrationPromise: waitUntilFidRegistration(installations)\r\n        };\r\n    }\r\n    else {\r\n        return { installationEntry };\r\n    }\r\n}\r\n/** This will be executed only once for each new Firebase Installation. */\r\nasync function registerInstallation(installations, installationEntry) {\r\n    try {\r\n        const registeredInstallationEntry = await createInstallationRequest(installations, installationEntry);\r\n        return set(installations.appConfig, registeredInstallationEntry);\r\n    }\r\n    catch (e) {\r\n        if (isServerError(e) && e.customData.serverCode === 409) {\r\n            // Server returned a \"FID can not be used\" error.\r\n            // Generate a new ID next time.\r\n            await remove(installations.appConfig);\r\n        }\r\n        else {\r\n            // Registration failed. Set FID as not registered.\r\n            await set(installations.appConfig, {\r\n                fid: installationEntry.fid,\r\n                registrationStatus: 0 /* RequestStatus.NOT_STARTED */\r\n            });\r\n        }\r\n        throw e;\r\n    }\r\n}\r\n/** Call if FID registration is pending in another request. */\r\nasync function waitUntilFidRegistration(installations) {\r\n    // Unfortunately, there is no way of reliably observing when a value in\r\n    // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\r\n    // so we need to poll.\r\n    let entry = await updateInstallationRequest(installations.appConfig);\r\n    while (entry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\r\n        // createInstallation request still in progress.\r\n        await sleep(100);\r\n        entry = await updateInstallationRequest(installations.appConfig);\r\n    }\r\n    if (entry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\r\n        // The request timed out or failed in a different call. Try again.\r\n        const { installationEntry, registrationPromise } = await getInstallationEntry(installations);\r\n        if (registrationPromise) {\r\n            return registrationPromise;\r\n        }\r\n        else {\r\n            // if there is no registrationPromise, entry is registered.\r\n            return installationEntry;\r\n        }\r\n    }\r\n    return entry;\r\n}\r\n/**\r\n * Called only if there is a CreateInstallation request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * CreateInstallation request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateInstallationRequest(appConfig) {\r\n    return update(appConfig, oldEntry => {\r\n        if (!oldEntry) {\r\n            throw ERROR_FACTORY.create(\"installation-not-found\" /* ErrorCode.INSTALLATION_NOT_FOUND */);\r\n        }\r\n        return clearTimedOutRequest(oldEntry);\r\n    });\r\n}\r\nfunction clearTimedOutRequest(entry) {\r\n    if (hasInstallationRequestTimedOut(entry)) {\r\n        return {\r\n            fid: entry.fid,\r\n            registrationStatus: 0 /* RequestStatus.NOT_STARTED */\r\n        };\r\n    }\r\n    return entry;\r\n}\r\nfunction hasInstallationRequestTimedOut(installationEntry) {\r\n    return (installationEntry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */ &&\r\n        installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function generateAuthTokenRequest({ appConfig, heartbeatServiceProvider }, installationEntry) {\r\n    const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\r\n    const headers = getHeadersWithAuth(appConfig, installationEntry);\r\n    // If heartbeat service exists, add the heartbeat string to the header.\r\n    const heartbeatService = heartbeatServiceProvider.getImmediate({\r\n        optional: true\r\n    });\r\n    if (heartbeatService) {\r\n        const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\r\n        if (heartbeatsHeader) {\r\n            headers.append('x-firebase-client', heartbeatsHeader);\r\n        }\r\n    }\r\n    const body = {\r\n        installation: {\r\n            sdkVersion: PACKAGE_VERSION,\r\n            appId: appConfig.appId\r\n        }\r\n    };\r\n    const request = {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(body)\r\n    };\r\n    const response = await retryIfServerError(() => fetch(endpoint, request));\r\n    if (response.ok) {\r\n        const responseValue = await response.json();\r\n        const completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\r\n        return completedAuthToken;\r\n    }\r\n    else {\r\n        throw await getErrorFromResponse('Generate Auth Token', response);\r\n    }\r\n}\r\nfunction getGenerateAuthTokenEndpoint(appConfig, { fid }) {\r\n    return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a valid authentication token for the installation. Generates a new\r\n * token if one doesn't exist, is expired or about to expire.\r\n *\r\n * Should only be called if the Firebase Installation is registered.\r\n */\r\nasync function refreshAuthToken(installations, forceRefresh = false) {\r\n    let tokenPromise;\r\n    const entry = await update(installations.appConfig, oldEntry => {\r\n        if (!isEntryRegistered(oldEntry)) {\r\n            throw ERROR_FACTORY.create(\"not-registered\" /* ErrorCode.NOT_REGISTERED */);\r\n        }\r\n        const oldAuthToken = oldEntry.authToken;\r\n        if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\r\n            // There is a valid token in the DB.\r\n            return oldEntry;\r\n        }\r\n        else if (oldAuthToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */) {\r\n            // There already is a token request in progress.\r\n            tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\r\n            return oldEntry;\r\n        }\r\n        else {\r\n            // No token or token expired.\r\n            if (!navigator.onLine) {\r\n                throw ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */);\r\n            }\r\n            const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\r\n            tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\r\n            return inProgressEntry;\r\n        }\r\n    });\r\n    const authToken = tokenPromise\r\n        ? await tokenPromise\r\n        : entry.authToken;\r\n    return authToken;\r\n}\r\n/**\r\n * Call only if FID is registered and Auth Token request is in progress.\r\n *\r\n * Waits until the current pending request finishes. If the request times out,\r\n * tries once in this thread as well.\r\n */\r\nasync function waitUntilAuthTokenRequest(installations, forceRefresh) {\r\n    // Unfortunately, there is no way of reliably observing when a value in\r\n    // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\r\n    // so we need to poll.\r\n    let entry = await updateAuthTokenRequest(installations.appConfig);\r\n    while (entry.authToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */) {\r\n        // generateAuthToken still in progress.\r\n        await sleep(100);\r\n        entry = await updateAuthTokenRequest(installations.appConfig);\r\n    }\r\n    const authToken = entry.authToken;\r\n    if (authToken.requestStatus === 0 /* RequestStatus.NOT_STARTED */) {\r\n        // The request timed out or failed in a different call. Try again.\r\n        return refreshAuthToken(installations, forceRefresh);\r\n    }\r\n    else {\r\n        return authToken;\r\n    }\r\n}\r\n/**\r\n * Called only if there is a GenerateAuthToken request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * GenerateAuthToken request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateAuthTokenRequest(appConfig) {\r\n    return update(appConfig, oldEntry => {\r\n        if (!isEntryRegistered(oldEntry)) {\r\n            throw ERROR_FACTORY.create(\"not-registered\" /* ErrorCode.NOT_REGISTERED */);\r\n        }\r\n        const oldAuthToken = oldEntry.authToken;\r\n        if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\r\n            return Object.assign(Object.assign({}, oldEntry), { authToken: { requestStatus: 0 /* RequestStatus.NOT_STARTED */ } });\r\n        }\r\n        return oldEntry;\r\n    });\r\n}\r\nasync function fetchAuthTokenFromServer(installations, installationEntry) {\r\n    try {\r\n        const authToken = await generateAuthTokenRequest(installations, installationEntry);\r\n        const updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), { authToken });\r\n        await set(installations.appConfig, updatedInstallationEntry);\r\n        return authToken;\r\n    }\r\n    catch (e) {\r\n        if (isServerError(e) &&\r\n            (e.customData.serverCode === 401 || e.customData.serverCode === 404)) {\r\n            // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n            // Generate a new ID next time.\r\n            await remove(installations.appConfig);\r\n        }\r\n        else {\r\n            const updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), { authToken: { requestStatus: 0 /* RequestStatus.NOT_STARTED */ } });\r\n            await set(installations.appConfig, updatedInstallationEntry);\r\n        }\r\n        throw e;\r\n    }\r\n}\r\nfunction isEntryRegistered(installationEntry) {\r\n    return (installationEntry !== undefined &&\r\n        installationEntry.registrationStatus === 2 /* RequestStatus.COMPLETED */);\r\n}\r\nfunction isAuthTokenValid(authToken) {\r\n    return (authToken.requestStatus === 2 /* RequestStatus.COMPLETED */ &&\r\n        !isAuthTokenExpired(authToken));\r\n}\r\nfunction isAuthTokenExpired(authToken) {\r\n    const now = Date.now();\r\n    return (now < authToken.creationTime ||\r\n        authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER);\r\n}\r\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\r\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\r\n    const inProgressAuthToken = {\r\n        requestStatus: 1 /* RequestStatus.IN_PROGRESS */,\r\n        requestTime: Date.now()\r\n    };\r\n    return Object.assign(Object.assign({}, oldEntry), { authToken: inProgressAuthToken });\r\n}\r\nfunction hasAuthTokenRequestTimedOut(authToken) {\r\n    return (authToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */ &&\r\n        authToken.requestTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Creates a Firebase Installation if there isn't one for the app and\r\n * returns the Installation ID.\r\n * @param installations - The `Installations` instance.\r\n *\r\n * @public\r\n */\r\nasync function getId(installations) {\r\n    const installationsImpl = installations;\r\n    const { installationEntry, registrationPromise } = await getInstallationEntry(installationsImpl);\r\n    if (registrationPromise) {\r\n        registrationPromise.catch(console.error);\r\n    }\r\n    else {\r\n        // If the installation is already registered, update the authentication\r\n        // token if needed.\r\n        refreshAuthToken(installationsImpl).catch(console.error);\r\n    }\r\n    return installationEntry.fid;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a Firebase Installations auth token, identifying the current\r\n * Firebase Installation.\r\n * @param installations - The `Installations` instance.\r\n * @param forceRefresh - Force refresh regardless of token expiration.\r\n *\r\n * @public\r\n */\r\nasync function getToken(installations, forceRefresh = false) {\r\n    const installationsImpl = installations;\r\n    await completeInstallationRegistration(installationsImpl);\r\n    // At this point we either have a Registered Installation in the DB, or we've\r\n    // already thrown an error.\r\n    const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\r\n    return authToken.token;\r\n}\r\nasync function completeInstallationRegistration(installations) {\r\n    const { registrationPromise } = await getInstallationEntry(installations);\r\n    if (registrationPromise) {\r\n        // A createInstallation request is in progress. Wait until it finishes.\r\n        await registrationPromise;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function deleteInstallationRequest(appConfig, installationEntry) {\r\n    const endpoint = getDeleteEndpoint(appConfig, installationEntry);\r\n    const headers = getHeadersWithAuth(appConfig, installationEntry);\r\n    const request = {\r\n        method: 'DELETE',\r\n        headers\r\n    };\r\n    const response = await retryIfServerError(() => fetch(endpoint, request));\r\n    if (!response.ok) {\r\n        throw await getErrorFromResponse('Delete Installation', response);\r\n    }\r\n}\r\nfunction getDeleteEndpoint(appConfig, { fid }) {\r\n    return `${getInstallationsEndpoint(appConfig)}/${fid}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Deletes the Firebase Installation and all associated data.\r\n * @param installations - The `Installations` instance.\r\n *\r\n * @public\r\n */\r\nasync function deleteInstallations(installations) {\r\n    const { appConfig } = installations;\r\n    const entry = await update(appConfig, oldEntry => {\r\n        if (oldEntry && oldEntry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\r\n            // Delete the unregistered entry without sending a deleteInstallation request.\r\n            return undefined;\r\n        }\r\n        return oldEntry;\r\n    });\r\n    if (entry) {\r\n        if (entry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\r\n            // Can't delete while trying to register.\r\n            throw ERROR_FACTORY.create(\"delete-pending-registration\" /* ErrorCode.DELETE_PENDING_REGISTRATION */);\r\n        }\r\n        else if (entry.registrationStatus === 2 /* RequestStatus.COMPLETED */) {\r\n            if (!navigator.onLine) {\r\n                throw ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */);\r\n            }\r\n            else {\r\n                await deleteInstallationRequest(appConfig, entry);\r\n                await remove(appConfig);\r\n            }\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Sets a new callback that will get called when Installation ID changes.\r\n * Returns an unsubscribe function that will remove the callback when called.\r\n * @param installations - The `Installations` instance.\r\n * @param callback - The callback function that is invoked when FID changes.\r\n * @returns A function that can be called to unsubscribe.\r\n *\r\n * @public\r\n */\r\nfunction onIdChange(installations, callback) {\r\n    const { appConfig } = installations;\r\n    addCallback(appConfig, callback);\r\n    return () => {\r\n        removeCallback(appConfig, callback);\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns an instance of {@link Installations} associated with the given\r\n * {@link @firebase/app#FirebaseApp} instance.\r\n * @param app - The {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * @public\r\n */\r\nfunction getInstallations(app = getApp()) {\r\n    const installationsImpl = _getProvider(app, 'installations').getImmediate();\r\n    return installationsImpl;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction extractAppConfig(app) {\r\n    if (!app || !app.options) {\r\n        throw getMissingValueError('App Configuration');\r\n    }\r\n    if (!app.name) {\r\n        throw getMissingValueError('App Name');\r\n    }\r\n    // Required app config keys\r\n    const configKeys = [\r\n        'projectId',\r\n        'apiKey',\r\n        'appId'\r\n    ];\r\n    for (const keyName of configKeys) {\r\n        if (!app.options[keyName]) {\r\n            throw getMissingValueError(keyName);\r\n        }\r\n    }\r\n    return {\r\n        appName: app.name,\r\n        projectId: app.options.projectId,\r\n        apiKey: app.options.apiKey,\r\n        appId: app.options.appId\r\n    };\r\n}\r\nfunction getMissingValueError(valueName) {\r\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */, {\r\n        valueName\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst INSTALLATIONS_NAME = 'installations';\r\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\r\nconst publicFactory = (container) => {\r\n    const app = container.getProvider('app').getImmediate();\r\n    // Throws if app isn't configured properly.\r\n    const appConfig = extractAppConfig(app);\r\n    const heartbeatServiceProvider = _getProvider(app, 'heartbeat');\r\n    const installationsImpl = {\r\n        app,\r\n        appConfig,\r\n        heartbeatServiceProvider,\r\n        _delete: () => Promise.resolve()\r\n    };\r\n    return installationsImpl;\r\n};\r\nconst internalFactory = (container) => {\r\n    const app = container.getProvider('app').getImmediate();\r\n    // Internal FIS instance relies on public FIS instance.\r\n    const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\r\n    const installationsInternal = {\r\n        getId: () => getId(installations),\r\n        getToken: (forceRefresh) => getToken(installations, forceRefresh)\r\n    };\r\n    return installationsInternal;\r\n};\r\nfunction registerInstallations() {\r\n    _registerComponent(new Component(INSTALLATIONS_NAME, publicFactory, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n    _registerComponent(new Component(INSTALLATIONS_NAME_INTERNAL, internalFactory, \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n}\n\n/**\r\n * Firebase Installations\r\n *\r\n * @packageDocumentation\r\n */\r\nregisterInstallations();\r\nregisterVersion(name, version);\r\n// BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\nregisterVersion(name, version, 'esm2017');\n\nexport { deleteInstallations, getId, getInstallations, getToken, onIdChange };\n//# sourceMappingURL=index.esm2017.js.map\n","import '@firebase/installations';\nimport { Component } from '@firebase/component';\nimport { openDB, deleteDB } from 'idb';\nimport { ErrorFactory, isIndexedDBAvailable, validateIndexedDBOpenable, getModularInstance } from '@firebase/util';\nimport { _registerComponent, _getProvider, getApp } from '@firebase/app';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_VAPID_KEY = 'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\r\nconst ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\r\n/** Key of FCM Payload in Notification's data field. */\r\nconst FCM_MSG = 'FCM_MSG';\r\nconst CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\r\n// Defined as in proto/messaging_event.proto. Neglecting fields that are supported.\r\nconst SDK_PLATFORM_WEB = 3;\r\nconst EVENT_MESSAGE_DELIVERED = 1;\r\nvar MessageType$1;\r\n(function (MessageType) {\r\n    MessageType[MessageType[\"DATA_MESSAGE\"] = 1] = \"DATA_MESSAGE\";\r\n    MessageType[MessageType[\"DISPLAY_NOTIFICATION\"] = 3] = \"DISPLAY_NOTIFICATION\";\r\n})(MessageType$1 || (MessageType$1 = {}));\n\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\r\n * in compliance with the License. You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n * or implied. See the License for the specific language governing permissions and limitations under\r\n * the License.\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    MessageType[\"PUSH_RECEIVED\"] = \"push-received\";\r\n    MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\r\n})(MessageType || (MessageType = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction arrayToBase64(array) {\r\n    const uint8Array = new Uint8Array(array);\r\n    const base64String = btoa(String.fromCharCode(...uint8Array));\r\n    return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\r\n}\r\nfunction base64ToArray(base64String) {\r\n    const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\r\n    const base64 = (base64String + padding)\r\n        .replace(/\\-/g, '+')\r\n        .replace(/_/g, '/');\r\n    const rawData = atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n    for (let i = 0; i < rawData.length; ++i) {\r\n        outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst OLD_DB_NAME = 'fcm_token_details_db';\r\n/**\r\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\r\n * callback is called for all versions of the old DB.\r\n */\r\nconst OLD_DB_VERSION = 5;\r\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\r\nasync function migrateOldDatabase(senderId) {\r\n    if ('databases' in indexedDB) {\r\n        // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\r\n        // typecast when it lands in TS types.\r\n        const databases = await indexedDB.databases();\r\n        const dbNames = databases.map(db => db.name);\r\n        if (!dbNames.includes(OLD_DB_NAME)) {\r\n            // old DB didn't exist, no need to open.\r\n            return null;\r\n        }\r\n    }\r\n    let tokenDetails = null;\r\n    const db = await openDB(OLD_DB_NAME, OLD_DB_VERSION, {\r\n        upgrade: async (db, oldVersion, newVersion, upgradeTransaction) => {\r\n            var _a;\r\n            if (oldVersion < 2) {\r\n                // Database too old, skip migration.\r\n                return;\r\n            }\r\n            if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\r\n                // Database did not exist. Nothing to do.\r\n                return;\r\n            }\r\n            const objectStore = upgradeTransaction.objectStore(OLD_OBJECT_STORE_NAME);\r\n            const value = await objectStore.index('fcmSenderId').get(senderId);\r\n            await objectStore.clear();\r\n            if (!value) {\r\n                // No entry in the database, nothing to migrate.\r\n                return;\r\n            }\r\n            if (oldVersion === 2) {\r\n                const oldDetails = value;\r\n                if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\r\n                    return;\r\n                }\r\n                tokenDetails = {\r\n                    token: oldDetails.fcmToken,\r\n                    createTime: (_a = oldDetails.createTime) !== null && _a !== void 0 ? _a : Date.now(),\r\n                    subscriptionOptions: {\r\n                        auth: oldDetails.auth,\r\n                        p256dh: oldDetails.p256dh,\r\n                        endpoint: oldDetails.endpoint,\r\n                        swScope: oldDetails.swScope,\r\n                        vapidKey: typeof oldDetails.vapidKey === 'string'\r\n                            ? oldDetails.vapidKey\r\n                            : arrayToBase64(oldDetails.vapidKey)\r\n                    }\r\n                };\r\n            }\r\n            else if (oldVersion === 3) {\r\n                const oldDetails = value;\r\n                tokenDetails = {\r\n                    token: oldDetails.fcmToken,\r\n                    createTime: oldDetails.createTime,\r\n                    subscriptionOptions: {\r\n                        auth: arrayToBase64(oldDetails.auth),\r\n                        p256dh: arrayToBase64(oldDetails.p256dh),\r\n                        endpoint: oldDetails.endpoint,\r\n                        swScope: oldDetails.swScope,\r\n                        vapidKey: arrayToBase64(oldDetails.vapidKey)\r\n                    }\r\n                };\r\n            }\r\n            else if (oldVersion === 4) {\r\n                const oldDetails = value;\r\n                tokenDetails = {\r\n                    token: oldDetails.fcmToken,\r\n                    createTime: oldDetails.createTime,\r\n                    subscriptionOptions: {\r\n                        auth: arrayToBase64(oldDetails.auth),\r\n                        p256dh: arrayToBase64(oldDetails.p256dh),\r\n                        endpoint: oldDetails.endpoint,\r\n                        swScope: oldDetails.swScope,\r\n                        vapidKey: arrayToBase64(oldDetails.vapidKey)\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    });\r\n    db.close();\r\n    // Delete all old databases.\r\n    await deleteDB(OLD_DB_NAME);\r\n    await deleteDB('fcm_vapid_details_db');\r\n    await deleteDB('undefined');\r\n    return checkTokenDetails(tokenDetails) ? tokenDetails : null;\r\n}\r\nfunction checkTokenDetails(tokenDetails) {\r\n    if (!tokenDetails || !tokenDetails.subscriptionOptions) {\r\n        return false;\r\n    }\r\n    const { subscriptionOptions } = tokenDetails;\r\n    return (typeof tokenDetails.createTime === 'number' &&\r\n        tokenDetails.createTime > 0 &&\r\n        typeof tokenDetails.token === 'string' &&\r\n        tokenDetails.token.length > 0 &&\r\n        typeof subscriptionOptions.auth === 'string' &&\r\n        subscriptionOptions.auth.length > 0 &&\r\n        typeof subscriptionOptions.p256dh === 'string' &&\r\n        subscriptionOptions.p256dh.length > 0 &&\r\n        typeof subscriptionOptions.endpoint === 'string' &&\r\n        subscriptionOptions.endpoint.length > 0 &&\r\n        typeof subscriptionOptions.swScope === 'string' &&\r\n        subscriptionOptions.swScope.length > 0 &&\r\n        typeof subscriptionOptions.vapidKey === 'string' &&\r\n        subscriptionOptions.vapidKey.length > 0);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Exported for tests.\r\nconst DATABASE_NAME = 'firebase-messaging-database';\r\nconst DATABASE_VERSION = 1;\r\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n            upgrade: (upgradeDb, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\r\n                // because if there are multiple versions between the old version and the current version, we\r\n                // want ALL the migrations that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        upgradeDb.createObjectStore(OBJECT_STORE_NAME);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\n/** Gets record(s) from the objectStore that match the given key. */\r\nasync function dbGet(firebaseDependencies) {\r\n    const key = getKey(firebaseDependencies);\r\n    const db = await getDbPromise();\r\n    const tokenDetails = (await db\r\n        .transaction(OBJECT_STORE_NAME)\r\n        .objectStore(OBJECT_STORE_NAME)\r\n        .get(key));\r\n    if (tokenDetails) {\r\n        return tokenDetails;\r\n    }\r\n    else {\r\n        // Check if there is a tokenDetails object in the old DB.\r\n        const oldTokenDetails = await migrateOldDatabase(firebaseDependencies.appConfig.senderId);\r\n        if (oldTokenDetails) {\r\n            await dbSet(firebaseDependencies, oldTokenDetails);\r\n            return oldTokenDetails;\r\n        }\r\n    }\r\n}\r\n/** Assigns or overwrites the record for the given key with the given value. */\r\nasync function dbSet(firebaseDependencies, tokenDetails) {\r\n    const key = getKey(firebaseDependencies);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\r\n    await tx.done;\r\n    return tokenDetails;\r\n}\r\n/** Removes record(s) from the objectStore that match the given key. */\r\nasync function dbRemove(firebaseDependencies) {\r\n    const key = getKey(firebaseDependencies);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    await tx.objectStore(OBJECT_STORE_NAME).delete(key);\r\n    await tx.done;\r\n}\r\nfunction getKey({ appConfig }) {\r\n    return appConfig.appId;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERROR_MAP = {\r\n    [\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */]: 'Missing App configuration value: \"{$valueName}\"',\r\n    [\"only-available-in-window\" /* ErrorCode.AVAILABLE_IN_WINDOW */]: 'This method is available in a Window context.',\r\n    [\"only-available-in-sw\" /* ErrorCode.AVAILABLE_IN_SW */]: 'This method is available in a service worker context.',\r\n    [\"permission-default\" /* ErrorCode.PERMISSION_DEFAULT */]: 'The notification permission was not granted and dismissed instead.',\r\n    [\"permission-blocked\" /* ErrorCode.PERMISSION_BLOCKED */]: 'The notification permission was not granted and blocked instead.',\r\n    [\"unsupported-browser\" /* ErrorCode.UNSUPPORTED_BROWSER */]: \"This browser doesn't support the API's required to use the Firebase SDK.\",\r\n    [\"indexed-db-unsupported\" /* ErrorCode.INDEXED_DB_UNSUPPORTED */]: \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\r\n    [\"failed-service-worker-registration\" /* ErrorCode.FAILED_DEFAULT_REGISTRATION */]: 'We are unable to register the default service worker. {$browserErrorMessage}',\r\n    [\"token-subscribe-failed\" /* ErrorCode.TOKEN_SUBSCRIBE_FAILED */]: 'A problem occurred while subscribing the user to FCM: {$errorInfo}',\r\n    [\"token-subscribe-no-token\" /* ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN */]: 'FCM returned no token when subscribing the user to push.',\r\n    [\"token-unsubscribe-failed\" /* ErrorCode.TOKEN_UNSUBSCRIBE_FAILED */]: 'A problem occurred while unsubscribing the ' +\r\n        'user from FCM: {$errorInfo}',\r\n    [\"token-update-failed\" /* ErrorCode.TOKEN_UPDATE_FAILED */]: 'A problem occurred while updating the user from FCM: {$errorInfo}',\r\n    [\"token-update-no-token\" /* ErrorCode.TOKEN_UPDATE_NO_TOKEN */]: 'FCM returned no token when updating the user to push.',\r\n    [\"use-sw-after-get-token\" /* ErrorCode.USE_SW_AFTER_GET_TOKEN */]: 'The useServiceWorker() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your service worker is used.',\r\n    [\"invalid-sw-registration\" /* ErrorCode.INVALID_SW_REGISTRATION */]: 'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\r\n    [\"invalid-bg-handler\" /* ErrorCode.INVALID_BG_HANDLER */]: 'The input to setBackgroundMessageHandler() must be a function.',\r\n    [\"invalid-vapid-key\" /* ErrorCode.INVALID_VAPID_KEY */]: 'The public VAPID key must be a string.',\r\n    [\"use-vapid-key-after-get-token\" /* ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN */]: 'The usePublicVapidKey() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your VAPID key is used.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function requestGetToken(firebaseDependencies, subscriptionOptions) {\r\n    const headers = await getHeaders(firebaseDependencies);\r\n    const body = getBody(subscriptionOptions);\r\n    const subscribeOptions = {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(body)\r\n    };\r\n    let responseData;\r\n    try {\r\n        const response = await fetch(getEndpoint(firebaseDependencies.appConfig), subscribeOptions);\r\n        responseData = await response.json();\r\n    }\r\n    catch (err) {\r\n        throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* ErrorCode.TOKEN_SUBSCRIBE_FAILED */, {\r\n            errorInfo: err === null || err === void 0 ? void 0 : err.toString()\r\n        });\r\n    }\r\n    if (responseData.error) {\r\n        const message = responseData.error.message;\r\n        throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* ErrorCode.TOKEN_SUBSCRIBE_FAILED */, {\r\n            errorInfo: message\r\n        });\r\n    }\r\n    if (!responseData.token) {\r\n        throw ERROR_FACTORY.create(\"token-subscribe-no-token\" /* ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN */);\r\n    }\r\n    return responseData.token;\r\n}\r\nasync function requestUpdateToken(firebaseDependencies, tokenDetails) {\r\n    const headers = await getHeaders(firebaseDependencies);\r\n    const body = getBody(tokenDetails.subscriptionOptions);\r\n    const updateOptions = {\r\n        method: 'PATCH',\r\n        headers,\r\n        body: JSON.stringify(body)\r\n    };\r\n    let responseData;\r\n    try {\r\n        const response = await fetch(`${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`, updateOptions);\r\n        responseData = await response.json();\r\n    }\r\n    catch (err) {\r\n        throw ERROR_FACTORY.create(\"token-update-failed\" /* ErrorCode.TOKEN_UPDATE_FAILED */, {\r\n            errorInfo: err === null || err === void 0 ? void 0 : err.toString()\r\n        });\r\n    }\r\n    if (responseData.error) {\r\n        const message = responseData.error.message;\r\n        throw ERROR_FACTORY.create(\"token-update-failed\" /* ErrorCode.TOKEN_UPDATE_FAILED */, {\r\n            errorInfo: message\r\n        });\r\n    }\r\n    if (!responseData.token) {\r\n        throw ERROR_FACTORY.create(\"token-update-no-token\" /* ErrorCode.TOKEN_UPDATE_NO_TOKEN */);\r\n    }\r\n    return responseData.token;\r\n}\r\nasync function requestDeleteToken(firebaseDependencies, token) {\r\n    const headers = await getHeaders(firebaseDependencies);\r\n    const unsubscribeOptions = {\r\n        method: 'DELETE',\r\n        headers\r\n    };\r\n    try {\r\n        const response = await fetch(`${getEndpoint(firebaseDependencies.appConfig)}/${token}`, unsubscribeOptions);\r\n        const responseData = await response.json();\r\n        if (responseData.error) {\r\n            const message = responseData.error.message;\r\n            throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* ErrorCode.TOKEN_UNSUBSCRIBE_FAILED */, {\r\n                errorInfo: message\r\n            });\r\n        }\r\n    }\r\n    catch (err) {\r\n        throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* ErrorCode.TOKEN_UNSUBSCRIBE_FAILED */, {\r\n            errorInfo: err === null || err === void 0 ? void 0 : err.toString()\r\n        });\r\n    }\r\n}\r\nfunction getEndpoint({ projectId }) {\r\n    return `${ENDPOINT}/projects/${projectId}/registrations`;\r\n}\r\nasync function getHeaders({ appConfig, installations }) {\r\n    const authToken = await installations.getToken();\r\n    return new Headers({\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': appConfig.apiKey,\r\n        'x-goog-firebase-installations-auth': `FIS ${authToken}`\r\n    });\r\n}\r\nfunction getBody({ p256dh, auth, endpoint, vapidKey }) {\r\n    const body = {\r\n        web: {\r\n            endpoint,\r\n            auth,\r\n            p256dh\r\n        }\r\n    };\r\n    if (vapidKey !== DEFAULT_VAPID_KEY) {\r\n        body.web.applicationPubKey = vapidKey;\r\n    }\r\n    return body;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// UpdateRegistration will be called once every week.\r\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\r\nasync function getTokenInternal(messaging) {\r\n    const pushSubscription = await getPushSubscription(messaging.swRegistration, messaging.vapidKey);\r\n    const subscriptionOptions = {\r\n        vapidKey: messaging.vapidKey,\r\n        swScope: messaging.swRegistration.scope,\r\n        endpoint: pushSubscription.endpoint,\r\n        auth: arrayToBase64(pushSubscription.getKey('auth')),\r\n        p256dh: arrayToBase64(pushSubscription.getKey('p256dh'))\r\n    };\r\n    const tokenDetails = await dbGet(messaging.firebaseDependencies);\r\n    if (!tokenDetails) {\r\n        // No token, get a new one.\r\n        return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\r\n    }\r\n    else if (!isTokenValid(tokenDetails.subscriptionOptions, subscriptionOptions)) {\r\n        // Invalid token, get a new one.\r\n        try {\r\n            await requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\r\n        }\r\n        catch (e) {\r\n            // Suppress errors because of #2364\r\n            console.warn(e);\r\n        }\r\n        return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\r\n    }\r\n    else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\r\n        // Weekly token refresh\r\n        return updateToken(messaging, {\r\n            token: tokenDetails.token,\r\n            createTime: Date.now(),\r\n            subscriptionOptions\r\n        });\r\n    }\r\n    else {\r\n        // Valid token, nothing to do.\r\n        return tokenDetails.token;\r\n    }\r\n}\r\n/**\r\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\r\n * the push subscription if it exists.\r\n */\r\nasync function deleteTokenInternal(messaging) {\r\n    const tokenDetails = await dbGet(messaging.firebaseDependencies);\r\n    if (tokenDetails) {\r\n        await requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\r\n        await dbRemove(messaging.firebaseDependencies);\r\n    }\r\n    // Unsubscribe from the push subscription.\r\n    const pushSubscription = await messaging.swRegistration.pushManager.getSubscription();\r\n    if (pushSubscription) {\r\n        return pushSubscription.unsubscribe();\r\n    }\r\n    // If there's no SW, consider it a success.\r\n    return true;\r\n}\r\nasync function updateToken(messaging, tokenDetails) {\r\n    try {\r\n        const updatedToken = await requestUpdateToken(messaging.firebaseDependencies, tokenDetails);\r\n        const updatedTokenDetails = Object.assign(Object.assign({}, tokenDetails), { token: updatedToken, createTime: Date.now() });\r\n        await dbSet(messaging.firebaseDependencies, updatedTokenDetails);\r\n        return updatedToken;\r\n    }\r\n    catch (e) {\r\n        await deleteTokenInternal(messaging);\r\n        throw e;\r\n    }\r\n}\r\nasync function getNewToken(firebaseDependencies, subscriptionOptions) {\r\n    const token = await requestGetToken(firebaseDependencies, subscriptionOptions);\r\n    const tokenDetails = {\r\n        token,\r\n        createTime: Date.now(),\r\n        subscriptionOptions\r\n    };\r\n    await dbSet(firebaseDependencies, tokenDetails);\r\n    return tokenDetails.token;\r\n}\r\n/**\r\n * Gets a PushSubscription for the current user.\r\n */\r\nasync function getPushSubscription(swRegistration, vapidKey) {\r\n    const subscription = await swRegistration.pushManager.getSubscription();\r\n    if (subscription) {\r\n        return subscription;\r\n    }\r\n    return swRegistration.pushManager.subscribe({\r\n        userVisibleOnly: true,\r\n        // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\r\n        // submitted to pushManager#subscribe must be of type Uint8Array.\r\n        applicationServerKey: base64ToArray(vapidKey)\r\n    });\r\n}\r\n/**\r\n * Checks if the saved tokenDetails object matches the configuration provided.\r\n */\r\nfunction isTokenValid(dbOptions, currentOptions) {\r\n    const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\r\n    const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\r\n    const isAuthEqual = currentOptions.auth === dbOptions.auth;\r\n    const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\r\n    return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction externalizePayload(internalPayload) {\r\n    const payload = {\r\n        from: internalPayload.from,\r\n        // eslint-disable-next-line camelcase\r\n        collapseKey: internalPayload.collapse_key,\r\n        // eslint-disable-next-line camelcase\r\n        messageId: internalPayload.fcmMessageId\r\n    };\r\n    propagateNotificationPayload(payload, internalPayload);\r\n    propagateDataPayload(payload, internalPayload);\r\n    propagateFcmOptions(payload, internalPayload);\r\n    return payload;\r\n}\r\nfunction propagateNotificationPayload(payload, messagePayloadInternal) {\r\n    if (!messagePayloadInternal.notification) {\r\n        return;\r\n    }\r\n    payload.notification = {};\r\n    const title = messagePayloadInternal.notification.title;\r\n    if (!!title) {\r\n        payload.notification.title = title;\r\n    }\r\n    const body = messagePayloadInternal.notification.body;\r\n    if (!!body) {\r\n        payload.notification.body = body;\r\n    }\r\n    const image = messagePayloadInternal.notification.image;\r\n    if (!!image) {\r\n        payload.notification.image = image;\r\n    }\r\n    const icon = messagePayloadInternal.notification.icon;\r\n    if (!!icon) {\r\n        payload.notification.icon = icon;\r\n    }\r\n}\r\nfunction propagateDataPayload(payload, messagePayloadInternal) {\r\n    if (!messagePayloadInternal.data) {\r\n        return;\r\n    }\r\n    payload.data = messagePayloadInternal.data;\r\n}\r\nfunction propagateFcmOptions(payload, messagePayloadInternal) {\r\n    var _a, _b, _c, _d, _e;\r\n    // fcmOptions.link value is written into notification.click_action. see more in b/232072111\r\n    if (!messagePayloadInternal.fcmOptions &&\r\n        !((_a = messagePayloadInternal.notification) === null || _a === void 0 ? void 0 : _a.click_action)) {\r\n        return;\r\n    }\r\n    payload.fcmOptions = {};\r\n    const link = (_c = (_b = messagePayloadInternal.fcmOptions) === null || _b === void 0 ? void 0 : _b.link) !== null && _c !== void 0 ? _c : (_d = messagePayloadInternal.notification) === null || _d === void 0 ? void 0 : _d.click_action;\r\n    if (!!link) {\r\n        payload.fcmOptions.link = link;\r\n    }\r\n    // eslint-disable-next-line camelcase\r\n    const analyticsLabel = (_e = messagePayloadInternal.fcmOptions) === null || _e === void 0 ? void 0 : _e.analytics_label;\r\n    if (!!analyticsLabel) {\r\n        payload.fcmOptions.analyticsLabel = analyticsLabel;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isConsoleMessage(data) {\r\n    // This message has a campaign ID, meaning it was sent using the Firebase Console.\r\n    return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a promise that resolves after given time passes. */\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n_mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\r\n_mergeStrings('AzSCbw63g1R0nCw85jG8', 'Iaya3yLKwmgvh7cF0q4');\r\nasync function stageLog(messaging, internalPayload) {\r\n    const fcmEvent = createFcmEvent(internalPayload, await messaging.firebaseDependencies.installations.getId());\r\n    createAndEnqueueLogEvent(messaging, fcmEvent);\r\n}\r\nfunction createFcmEvent(internalPayload, fid) {\r\n    var _a, _b;\r\n    const fcmEvent = {};\r\n    /* eslint-disable camelcase */\r\n    // some fields should always be non-null. Still check to ensure.\r\n    if (!!internalPayload.from) {\r\n        fcmEvent.project_number = internalPayload.from;\r\n    }\r\n    if (!!internalPayload.fcmMessageId) {\r\n        fcmEvent.message_id = internalPayload.fcmMessageId;\r\n    }\r\n    fcmEvent.instance_id = fid;\r\n    if (!!internalPayload.notification) {\r\n        fcmEvent.message_type = MessageType$1.DISPLAY_NOTIFICATION.toString();\r\n    }\r\n    else {\r\n        fcmEvent.message_type = MessageType$1.DATA_MESSAGE.toString();\r\n    }\r\n    fcmEvent.sdk_platform = SDK_PLATFORM_WEB.toString();\r\n    fcmEvent.package_name = self.origin.replace(/(^\\w+:|^)\\/\\//, '');\r\n    if (!!internalPayload.collapse_key) {\r\n        fcmEvent.collapse_key = internalPayload.collapse_key;\r\n    }\r\n    fcmEvent.event = EVENT_MESSAGE_DELIVERED.toString();\r\n    if (!!((_a = internalPayload.fcmOptions) === null || _a === void 0 ? void 0 : _a.analytics_label)) {\r\n        fcmEvent.analytics_label = (_b = internalPayload.fcmOptions) === null || _b === void 0 ? void 0 : _b.analytics_label;\r\n    }\r\n    /* eslint-enable camelcase */\r\n    return fcmEvent;\r\n}\r\nfunction createAndEnqueueLogEvent(messaging, fcmEvent) {\r\n    const logEvent = {};\r\n    /* eslint-disable camelcase */\r\n    logEvent.event_time_ms = Math.floor(Date.now()).toString();\r\n    logEvent.source_extension_json_proto3 = JSON.stringify(fcmEvent);\r\n    // eslint-disable-next-line camelcase\r\n    messaging.logEvents.push(logEvent);\r\n}\r\nfunction _mergeStrings(s1, s2) {\r\n    const resultArray = [];\r\n    for (let i = 0; i < s1.length; i++) {\r\n        resultArray.push(s1.charAt(i));\r\n        if (i < s2.length) {\r\n            resultArray.push(s2.charAt(i));\r\n        }\r\n    }\r\n    return resultArray.join('');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function onSubChange(event, messaging) {\r\n    var _a, _b;\r\n    const { newSubscription } = event;\r\n    if (!newSubscription) {\r\n        // Subscription revoked, delete token\r\n        await deleteTokenInternal(messaging);\r\n        return;\r\n    }\r\n    const tokenDetails = await dbGet(messaging.firebaseDependencies);\r\n    await deleteTokenInternal(messaging);\r\n    messaging.vapidKey =\r\n        (_b = (_a = tokenDetails === null || tokenDetails === void 0 ? void 0 : tokenDetails.subscriptionOptions) === null || _a === void 0 ? void 0 : _a.vapidKey) !== null && _b !== void 0 ? _b : DEFAULT_VAPID_KEY;\r\n    await getTokenInternal(messaging);\r\n}\r\nasync function onPush(event, messaging) {\r\n    const internalPayload = getMessagePayloadInternal(event);\r\n    if (!internalPayload) {\r\n        // Failed to get parsed MessagePayload from the PushEvent. Skip handling the push.\r\n        return;\r\n    }\r\n    // log to Firelog with user consent\r\n    if (messaging.deliveryMetricsExportedToBigQueryEnabled) {\r\n        await stageLog(messaging, internalPayload);\r\n    }\r\n    // foreground handling: eventually passed to onMessage hook\r\n    const clientList = await getClientList();\r\n    if (hasVisibleClients(clientList)) {\r\n        return sendMessagePayloadInternalToWindows(clientList, internalPayload);\r\n    }\r\n    // background handling: display if possible and pass to onBackgroundMessage hook\r\n    if (!!internalPayload.notification) {\r\n        await showNotification(wrapInternalPayload(internalPayload));\r\n    }\r\n    if (!messaging) {\r\n        return;\r\n    }\r\n    if (!!messaging.onBackgroundMessageHandler) {\r\n        const payload = externalizePayload(internalPayload);\r\n        if (typeof messaging.onBackgroundMessageHandler === 'function') {\r\n            await messaging.onBackgroundMessageHandler(payload);\r\n        }\r\n        else {\r\n            messaging.onBackgroundMessageHandler.next(payload);\r\n        }\r\n    }\r\n}\r\nasync function onNotificationClick(event) {\r\n    var _a, _b;\r\n    const internalPayload = (_b = (_a = event.notification) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[FCM_MSG];\r\n    if (!internalPayload) {\r\n        return;\r\n    }\r\n    else if (event.action) {\r\n        // User clicked on an action button. This will allow developers to act on action button clicks\r\n        // by using a custom onNotificationClick listener that they define.\r\n        return;\r\n    }\r\n    // Prevent other listeners from receiving the event\r\n    event.stopImmediatePropagation();\r\n    event.notification.close();\r\n    // Note clicking on a notification with no link set will focus the Chrome's current tab.\r\n    const link = getLink(internalPayload);\r\n    if (!link) {\r\n        return;\r\n    }\r\n    // FM should only open/focus links from app's origin.\r\n    const url = new URL(link, self.location.href);\r\n    const originUrl = new URL(self.location.origin);\r\n    if (url.host !== originUrl.host) {\r\n        return;\r\n    }\r\n    let client = await getWindowClient(url);\r\n    if (!client) {\r\n        client = await self.clients.openWindow(link);\r\n        // Wait three seconds for the client to initialize and set up the message handler so that it\r\n        // can receive the message.\r\n        await sleep(3000);\r\n    }\r\n    else {\r\n        client = await client.focus();\r\n    }\r\n    if (!client) {\r\n        // Window Client will not be returned if it's for a third party origin.\r\n        return;\r\n    }\r\n    internalPayload.messageType = MessageType.NOTIFICATION_CLICKED;\r\n    internalPayload.isFirebaseMessaging = true;\r\n    return client.postMessage(internalPayload);\r\n}\r\nfunction wrapInternalPayload(internalPayload) {\r\n    const wrappedInternalPayload = Object.assign({}, internalPayload.notification);\r\n    // Put the message payload under FCM_MSG name so we can identify the notification as being an FCM\r\n    // notification vs a notification from somewhere else (i.e. normal web push or developer generated\r\n    // notification).\r\n    wrappedInternalPayload.data = {\r\n        [FCM_MSG]: internalPayload\r\n    };\r\n    return wrappedInternalPayload;\r\n}\r\nfunction getMessagePayloadInternal({ data }) {\r\n    if (!data) {\r\n        return null;\r\n    }\r\n    try {\r\n        return data.json();\r\n    }\r\n    catch (err) {\r\n        // Not JSON so not an FCM message.\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * @param url The URL to look for when focusing a client.\r\n * @return Returns an existing window client or a newly opened WindowClient.\r\n */\r\nasync function getWindowClient(url) {\r\n    const clientList = await getClientList();\r\n    for (const client of clientList) {\r\n        const clientUrl = new URL(client.url, self.location.href);\r\n        if (url.host === clientUrl.host) {\r\n            return client;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @returns If there is currently a visible WindowClient, this method will resolve to true,\r\n * otherwise false.\r\n */\r\nfunction hasVisibleClients(clientList) {\r\n    return clientList.some(client => client.visibilityState === 'visible' &&\r\n        // Ignore chrome-extension clients as that matches the background pages of extensions, which\r\n        // are always considered visible for some reason.\r\n        !client.url.startsWith('chrome-extension://'));\r\n}\r\nfunction sendMessagePayloadInternalToWindows(clientList, internalPayload) {\r\n    internalPayload.isFirebaseMessaging = true;\r\n    internalPayload.messageType = MessageType.PUSH_RECEIVED;\r\n    for (const client of clientList) {\r\n        client.postMessage(internalPayload);\r\n    }\r\n}\r\nfunction getClientList() {\r\n    return self.clients.matchAll({\r\n        type: 'window',\r\n        includeUncontrolled: true\r\n        // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\r\n    });\r\n}\r\nfunction showNotification(notificationPayloadInternal) {\r\n    var _a;\r\n    // Note: Firefox does not support the maxActions property.\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/notification/maxActions\r\n    const { actions } = notificationPayloadInternal;\r\n    const { maxActions } = Notification;\r\n    if (actions && maxActions && actions.length > maxActions) {\r\n        console.warn(`This browser only supports ${maxActions} actions. The remaining actions will not be displayed.`);\r\n    }\r\n    return self.registration.showNotification(\r\n    /* title= */ (_a = notificationPayloadInternal.title) !== null && _a !== void 0 ? _a : '', notificationPayloadInternal);\r\n}\r\nfunction getLink(payload) {\r\n    var _a, _b, _c;\r\n    // eslint-disable-next-line camelcase\r\n    const link = (_b = (_a = payload.fcmOptions) === null || _a === void 0 ? void 0 : _a.link) !== null && _b !== void 0 ? _b : (_c = payload.notification) === null || _c === void 0 ? void 0 : _c.click_action;\r\n    if (link) {\r\n        return link;\r\n    }\r\n    if (isConsoleMessage(payload.data)) {\r\n        // Notification created in the Firebase Console. Redirect to origin.\r\n        return self.location.origin;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction extractAppConfig(app) {\r\n    if (!app || !app.options) {\r\n        throw getMissingValueError('App Configuration Object');\r\n    }\r\n    if (!app.name) {\r\n        throw getMissingValueError('App Name');\r\n    }\r\n    // Required app config keys\r\n    const configKeys = [\r\n        'projectId',\r\n        'apiKey',\r\n        'appId',\r\n        'messagingSenderId'\r\n    ];\r\n    const { options } = app;\r\n    for (const keyName of configKeys) {\r\n        if (!options[keyName]) {\r\n            throw getMissingValueError(keyName);\r\n        }\r\n    }\r\n    return {\r\n        appName: app.name,\r\n        projectId: options.projectId,\r\n        apiKey: options.apiKey,\r\n        appId: options.appId,\r\n        senderId: options.messagingSenderId\r\n    };\r\n}\r\nfunction getMissingValueError(valueName) {\r\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */, {\r\n        valueName\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass MessagingService {\r\n    constructor(app, installations, analyticsProvider) {\r\n        // logging is only done with end user consent. Default to false.\r\n        this.deliveryMetricsExportedToBigQueryEnabled = false;\r\n        this.onBackgroundMessageHandler = null;\r\n        this.onMessageHandler = null;\r\n        this.logEvents = [];\r\n        this.isLogServiceStarted = false;\r\n        const appConfig = extractAppConfig(app);\r\n        this.firebaseDependencies = {\r\n            app,\r\n            appConfig,\r\n            installations,\r\n            analyticsProvider\r\n        };\r\n    }\r\n    _delete() {\r\n        return Promise.resolve();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SwMessagingFactory = (container) => {\r\n    const messaging = new MessagingService(container.getProvider('app').getImmediate(), container.getProvider('installations-internal').getImmediate(), container.getProvider('analytics-internal'));\r\n    self.addEventListener('push', e => {\r\n        e.waitUntil(onPush(e, messaging));\r\n    });\r\n    self.addEventListener('pushsubscriptionchange', e => {\r\n        e.waitUntil(onSubChange(e, messaging));\r\n    });\r\n    self.addEventListener('notificationclick', e => {\r\n        e.waitUntil(onNotificationClick(e));\r\n    });\r\n    return messaging;\r\n};\r\n/**\r\n * The messaging instance registered in sw is named differently than that of in client. This is\r\n * because both `registerMessagingInWindow` and `registerMessagingInSw` would be called in\r\n * `messaging-compat` and component with the same name can only be registered once.\r\n */\r\nfunction registerMessagingInSw() {\r\n    _registerComponent(new Component('messaging-sw', SwMessagingFactory, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Checks whether all required APIs exist within SW Context\r\n * @returns a Promise that resolves to a boolean.\r\n *\r\n * @public\r\n */\r\nasync function isSwSupported() {\r\n    // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\r\n    // might be prohibited to run. In these contexts, an error would be thrown during the messaging\r\n    // instantiating phase, informing the developers to import/call isSupported for special handling.\r\n    return (isIndexedDBAvailable() &&\r\n        (await validateIndexedDBOpenable()) &&\r\n        'PushManager' in self &&\r\n        'Notification' in self &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction onBackgroundMessage$1(messaging, nextOrObserver) {\r\n    if (self.document !== undefined) {\r\n        throw ERROR_FACTORY.create(\"only-available-in-sw\" /* ErrorCode.AVAILABLE_IN_SW */);\r\n    }\r\n    messaging.onBackgroundMessageHandler = nextOrObserver;\r\n    return () => {\r\n        messaging.onBackgroundMessageHandler = null;\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable) {\r\n    messaging.deliveryMetricsExportedToBigQueryEnabled =\r\n        enable;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Retrieves a Firebase Cloud Messaging instance.\r\n *\r\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\r\n *\r\n * @public\r\n */\r\nfunction getMessagingInSw(app = getApp()) {\r\n    // Conscious decision to make this async check non-blocking during the messaging instance\r\n    // initialization phase for performance consideration. An error would be thrown latter for\r\n    // developer's information. Developers can then choose to import and call `isSupported` for\r\n    // special handling.\r\n    isSwSupported().then(isSupported => {\r\n        // If `isSwSupported()` resolved, but returned false.\r\n        if (!isSupported) {\r\n            throw ERROR_FACTORY.create(\"unsupported-browser\" /* ErrorCode.UNSUPPORTED_BROWSER */);\r\n        }\r\n    }, _ => {\r\n        // If `isSwSupported()` rejected.\r\n        throw ERROR_FACTORY.create(\"indexed-db-unsupported\" /* ErrorCode.INDEXED_DB_UNSUPPORTED */);\r\n    });\r\n    return _getProvider(getModularInstance(app), 'messaging-sw').getImmediate();\r\n}\r\n/**\r\n * Called when a message is received while the app is in the background. An app is considered to be\r\n * in the background if no active window is displayed.\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n * @param nextOrObserver - This function, or observer object with `next` defined, is called when a\r\n * message is received and the app is currently in the background.\r\n *\r\n * @returns To stop listening for messages execute this returned function\r\n *\r\n * @public\r\n */\r\nfunction onBackgroundMessage(messaging, nextOrObserver) {\r\n    messaging = getModularInstance(messaging);\r\n    return onBackgroundMessage$1(messaging, nextOrObserver);\r\n}\r\n/**\r\n * Enables or disables Firebase Cloud Messaging message delivery metrics export to BigQuery. By\r\n * default, message delivery metrics are not exported to BigQuery. Use this method to enable or\r\n * disable the export at runtime.\r\n *\r\n * @param messaging - The `FirebaseMessaging` instance.\r\n * @param enable - Whether Firebase Cloud Messaging should export message delivery metrics to\r\n * BigQuery.\r\n *\r\n * @public\r\n */\r\nfunction experimentalSetDeliveryMetricsExportedToBigQueryEnabled(messaging, enable) {\r\n    messaging = getModularInstance(messaging);\r\n    return _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterMessagingInSw();\n\nexport { experimentalSetDeliveryMetricsExportedToBigQueryEnabled, getMessagingInSw as getMessaging, isSwSupported as isSupported, onBackgroundMessage };\n//# sourceMappingURL=index.sw.esm2017.js.map\n","import { initializeApp } from 'firebase/app';\nimport { getMessaging } from 'firebase/messaging/sw';\nimport { firebaseConfig } from '$web/src/firebase-config';\n\nconst app = initializeApp(firebaseConfig);\ngetMessaging(app);\n\nconst NOTIFICATION_ICON = '/public/pwa/icon-512.png';\nconst NOTIFICATION_BADGE = '/public/pwa/icon-96-alpha.png';\n\n// used to fetch the manifest file.\nself.addEventListener('fetch', () => {});\n\nself.addEventListener('install', (event) => {\n  // Activate worker immediately.\n  event.waitUntil(self.skipWaiting());\n});\n\nself.addEventListener('activate', (event) => {\n  // Become available to all pages.\n  event.waitUntil(self.clients.claim());\n});\n\nself.addEventListener('push', (event) => {\n  event.waitUntil(\n    (async () => {\n      const { data } = event.data.json();\n\n      if (!data.title || !data.body || !data.link) return;\n\n      return self.registration.showNotification(data.title, {\n        body: data.body,\n        data: { url: data.link },\n        badge: NOTIFICATION_BADGE,\n        icon: NOTIFICATION_ICON,\n      });\n    })()\n  );\n});\n\nself.addEventListener('notificationclick', async (event) => {\n  event.notification.close();\n  event.waitUntil(\n    (async () => {\n      if (!event.notification.data || !event.notification.data.url) return;\n      await self.clients.claim();\n      let client = await getWindowClient();\n\n      if (!client) {\n        return await self.clients.openWindow(event.notification.data.url);\n      } else {\n        client = await client.focus();\n        return client.navigate(event.notification.data.url);\n      }\n    })()\n  );\n});\n\nconst getWindowClient = async () => {\n  const clientList = await self.clients.matchAll({ includeUncontrolled: true, type: 'window' });\n  return Array.isArray(clientList) && clientList.length > 0 ? clientList[0] : null;\n};\n","import {\n  FIREBASE_API_KEY,\n  FIREBASE_AUTH_DOMAIN,\n  FIREBASE_PROJECT_ID,\n  FIREBASE_STORAGE_BUCKET,\n  FIREBASE_MESSAGING_SENDER_ID,\n  FIREBASE_APP_ID,\n  FIREBASE_MEASUREMENT_ID,\n  FIREBASE_VAPID_KEY,\n} from 'config';\n\nexport const firebaseConfig = {\n  apiKey: FIREBASE_API_KEY,\n  authDomain: FIREBASE_AUTH_DOMAIN,\n  projectId: FIREBASE_PROJECT_ID,\n  storageBucket: FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: FIREBASE_MESSAGING_SENDER_ID,\n  appId: FIREBASE_APP_ID,\n  measurementId: FIREBASE_MEASUREMENT_ID,\n};\n\nexport const vapidKey = FIREBASE_VAPID_KEY;\n"],"names":["silent","config","MINIMUM_VERSION","IGNORE_MINIMUM_VERSION","WEBPACK_WEB_PORT","WEBPACK_ELECTRON_PORT","WEB_SERVER_PORT","LBRY_WEB_API","LBRY_WEB_PUBLISH_API","LBRY_WEB_PUBLISH_API_V2","LBRY_WEB_PUBLISH_API_V3","LBRY_WEB_PUBLISH_API_V4","LBRY_API_URL","LBRY_WEB_BUFFER_API","SEARCH_SERVER_API","SEARCH_SERVER_API_ALT","COMMENT_SERVER_API","LIVESTREAM_SERVER_API","SHORT_URL_API","SOCKETY_SERVER_API","LOCALE_API","WELCOME_VERSION","DOMAIN","SHARE_DOMAIN_URL","URL","RECSYS_ENDPOINT","RECSYS_FYP_ENDPOINT","IMAGE_PROXY_URL","THUMBNAIL_CDN_URL","THUMBNAIL_CARDS_CDN_URL","THUMBNAIL_HEIGHT","THUMBNAIL_HEIGHT_POSTER","THUMBNAIL_WIDTH","THUMBNAIL_WIDTH_POSTER","THUMBNAIL_QUALITY","THUMBNAIL_CDN_SIZE_LIMIT_BYTES","PLAYER_SERVER","SITE_TITLE","SITE_NAME","SITE_DESCRIPTION","SITE_HELP_EMAIL","TWITTER_ACCOUNT","LOGO_TITLE","LOGO","LOGO_WHITE_TEXT","LOGO_DARK_TEXT","AVATAR_DEFAULT","MISSING_THUMB_DEFAULT","OG_TITLE_SUFFIX","OG_HOMEPAGE_TITLE","OG_IMAGE_URL","YRBL_HAPPY_IMG_URL","YRBL_SAD_IMG_URL","LOGIN_IMG_URL","SITE_CANONICAL_URL","DEFAULT_LANGUAGE","AUTO_FOLLOW_CHANNELS","UNSYNCED_SETTINGS","ENABLE_COMMENT_REACTIONS","ENABLE_FILE_REACTIONS","ENABLE_CREATOR_REACTIONS","ENABLE_NO_SOURCE_CLAIMS","ENABLE_PREROLL_ADS","CHANNEL_STAKED_LEVEL_VIDEO_COMMENTS","CHANNEL_CREATION_LIMIT","WEB_PUBLISH_SIZE_LIMIT_GB","LOADING_BAR_COLOR","SIMPLE_SITE","SHOW_ADS","KNOWN_APP_DOMAINS","split","STRIPE_PUBLIC_KEY","ENABLE_UI_NOTIFICATIONS","ENABLE_MATURE","CUSTOM_HOMEPAGE","SHOW_TAGS_INTRO","LIGHTHOUSE_DEFAULT_TYPES","BRANDED_SITE","FIREBASE_API_KEY","FIREBASE_AUTH_DOMAIN","FIREBASE_PROJECT_ID","FIREBASE_STORAGE_BUCKET","FIREBASE_MESSAGING_SENDER_ID","FIREBASE_APP_ID","FIREBASE_MEASUREMENT_ID","FIREBASE_VAPID_KEY","AD_KEYWORD_BLOCKLIST","AD_KEYWORD_BLOCKLIST_CHECK_DESCRIPTION","COMMIT_ID","NODE_ENV","SDK_API_PATH","PROXY_URL","URL_DEV","URL_LOCAL","FAVICON","FAVICON_NOTIFICATION","module","exports","fs","path","os","log","message","console","RE_INI_KEY_VAL","RE_NEWLINES","NEWLINES_MATCH","DotenvModule","options","dotenvPath","resolve","process","cwd","encoding","debug","Boolean","override","multiline","envPath","join","homedir","slice","parsed","parse","readFileSync","Object","keys","forEach","key","prototype","hasOwnProperty","call","e","error","src","obj","lines","toString","idx","length","line","keyValueArr","match","val","end","isDoubleQuoted","isSingleQuoted","isMultilineDoubleQuoted","isMultilineSingleQuoted","quoteChar","substring","replace","trim","trimmedLine","dotenv","merge","apply","defaults","assign","defaultSrc","parsedSrc","parsedDefault","endianness","hostname","location","loadavg","uptime","freemem","Number","MAX_VALUE","totalmem","cpus","type","release","navigator","appVersion","networkInterfaces","getNetworkInterfaces","arch","platform","tmpdir","tmpDir","EOL","normalizeArray","parts","allowAboveRoot","up","i","last","splice","unshift","filter","xs","f","res","push","resolvedPath","resolvedAbsolute","arguments","TypeError","charAt","p","normalize","isAbsolute","trailingSlash","substr","paths","Array","index","relative","from","to","arr","start","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","code","charCodeAt","hasRoot","matchedSlash","basename","ext","extname","startDot","startPart","preDotState","str","len","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","array","noop","nextTick","args","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","chdir","dir","umask","accessFileSync","constants","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","window","prop","r","Symbol","toStringTag","value","stringToByteArray$1","out","c","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","isArray","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","byte4","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","getDefaults","self","getGlobal","__FIREBASE_DEFAULTS__","defaultsJsonString","JSON","getDefaultsFromEnvVariable","document","cookie","decoded","base64Decode","getDefaultsFromCookie","info","getDefaultAppConfig","_a","Deferred","constructor","reject","promise","Promise","wrapCallback","callback","catch","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","preExist","DB_CHECK_NAME","request","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","FirebaseError","customData","super","setPrototypeOf","captureStackTrace","ErrorFactory","create","service","serviceName","errors","data","fullCode","template","PATTERN","_","replaceTemplate","fullMessage","deepEqual","a","b","aKeys","bKeys","k","includes","aProp","bProp","isObject","thing","Component","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","mode","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","DEFAULT_ENTRY_NAME","Provider","container","component","instances","Map","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","has","deferred","set","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","instanceIdentifier","getImmediate","optional","getComponent","setComponent","isComponentEager","instanceDeferred","entries","clearInstance","delete","async","services","values","all","map","INTERNAL","_delete","isComponentSet","getOptions","initialize","opts","onInit","existingCallbacks","Set","add","existingInstance","invokeOnInitCallbacks","callbacks","ComponentContainer","providers","addComponent","provider","getProvider","addOrOverwriteComponent","getProviders","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","logLevel","now","Date","toISOString","method","instanceOfAny","object","constructors","some","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","target","receiver","IDBTransaction","objectStoreNames","objectStore","wrap","transformCachableValue","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","unwrap","storeNames","tx","sort","done","unlisten","removeEventListener","complete","DOMException","addEventListener","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","Proxy","IDBRequest","success","then","promisifyRequest","newValue","openDB","blocked","upgrade","blocking","terminated","openPromise","event","oldVersion","newVersion","db","deleteDB","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","store","shift","oldTraps","PlatformLoggerServiceImpl","getPlatformInfoString","isVersionServiceProvider","library","logString","name$o","version$1","logger","_logLevel","_logHandler","_userLogHandler","setLogLevel","logHandler","userLogHandler","warn","PLATFORM_LOG_STRING","_apps","_components","_addComponent","app","_registerComponent","componentName","heartbeatController","triggerHeartbeat","ERROR_FACTORY","FirebaseAppImpl","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","appName","initializeApp","rawConfig","existingApp","newApp","registerVersion","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","createObjectStore","originalErrorMessage","writeHeartbeatsToIndexedDB","heartbeatObject","put","computeKey","idbGetError","appId","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","agent","date","getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","valueOf","overwrite","heartbeatsToSend","unsentEntries","heartbeatsCache","maxSize","heartbeatEntry","find","hb","dates","countBytes","pop","extractHeartbeatsForHeader","headerString","stringify","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","readHeartbeatsFromIndexedDB","heartbeatsObject","existingHeartbeatsObject","PENDING_TIMEOUT_MS","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","INSTALLATIONS_API_URL","TOKEN_EXPIRATION_BUFFER","isServerError","getInstallationsEndpoint","projectId","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","responseExpiresIn","creationTime","getErrorFromResponse","requestName","errorData","json","serverCode","serverMessage","serverStatus","status","getHeaders","apiKey","Headers","Accept","retryIfServerError","fn","sleep","ms","VALID_FID_PATTERN","INVALID_FID","generateFid","fidByteArray","Uint8Array","crypto","msCrypto","getRandomValues","fid","encode","test","getKey","appConfig","fidChangeCallbacks","fidChanged","callFidChangeCallbacks","channel","broadcastChannel","BroadcastChannel","onmessage","postMessage","size","broadcastFidChange","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","oldValue","remove","update","updateFn","getInstallationEntry","installations","registrationPromise","installationEntry","oldEntry","clearTimedOutRequest","registrationStatus","updateOrCreateInstallationEntry","entryWithPromise","onLine","inProgressEntry","registrationTime","registeredInstallationEntry","heartbeatServiceProvider","endpoint","headers","heartbeatService","heartbeatsHeader","getHeartbeatsHeader","append","body","authVersion","sdkVersion","fetch","ok","responseValue","refreshToken","authToken","createInstallationRequest","registerInstallation","waitUntilFidRegistration","triggerRegistrationIfNecessary","entry","updateInstallationRequest","generateAuthTokenRequest","getGenerateAuthTokenEndpoint","getAuthorizationHeader","getHeadersWithAuth","installation","refreshAuthToken","forceRefresh","tokenPromise","isEntryRegistered","oldAuthToken","isAuthTokenExpired","updateAuthTokenRequest","waitUntilAuthTokenRequest","inProgressAuthToken","requestTime","makeAuthTokenRequestInProgressEntry","updatedInstallationEntry","fetchAuthTokenFromServer","getMissingValueError","valueName","INSTALLATIONS_NAME","configKeys","keyName","extractAppConfig","getId","installationsImpl","getToken","completeInstallationRegistration","DEFAULT_VAPID_KEY","ENDPOINT","FCM_MSG","CONSOLE_CAMPAIGN_ID","SDK_PLATFORM_WEB","EVENT_MESSAGE_DELIVERED","MessageType$1","MessageType","arrayToBase64","uint8Array","base64ToArray","base64String","repeat","rawData","outputArray","OLD_DB_NAME","OLD_DB_VERSION","OLD_OBJECT_STORE_NAME","upgradeDb","dbGet","firebaseDependencies","tokenDetails","oldTokenDetails","senderId","dbNames","databases","upgradeTransaction","contains","clear","oldDetails","auth","p256dh","fcmToken","createTime","subscriptionOptions","swScope","vapidKey","checkTokenDetails","migrateOldDatabase","dbSet","requestDeleteToken","unsubscribeOptions","getEndpoint","responseData","errorInfo","err","getBody","web","applicationPubKey","TOKEN_EXPIRATION_MS","deleteTokenInternal","messaging","dbRemove","pushSubscription","swRegistration","pushManager","getSubscription","unsubscribe","getNewToken","subscribeOptions","requestGetToken","_mergeStrings","s1","s2","resultArray","onPush","internalPayload","getMessagePayloadInternal","deliveryMetricsExportedToBigQueryEnabled","fcmEvent","_b","project_number","fcmMessageId","message_id","instance_id","notification","message_type","DISPLAY_NOTIFICATION","DATA_MESSAGE","sdk_platform","package_name","origin","collapse_key","fcmOptions","analytics_label","createFcmEvent","logEvent","event_time_ms","floor","source_extension_json_proto3","logEvents","createAndEnqueueLogEvent","stageLog","clientList","getClientList","client","visibilityState","url","startsWith","hasVisibleClients","isFirebaseMessaging","messageType","PUSH_RECEIVED","sendMessagePayloadInternalToWindows","notificationPayloadInternal","actions","maxActions","Notification","registration","showNotification","wrappedInternalPayload","wrapInternalPayload","onBackgroundMessageHandler","payload","collapseKey","messageId","messagePayloadInternal","image","icon","propagateNotificationPayload","propagateDataPayload","_c","_d","_e","click_action","link","analyticsLabel","propagateFcmOptions","externalizePayload","next","clients","matchAll","includeUncontrolled","MessagingService","analyticsProvider","onMessageHandler","isLogServiceStarted","messagingSenderId","waitUntil","newSubscription","subscribe","userVisibleOnly","applicationServerKey","getPushSubscription","scope","dbOptions","currentOptions","isVapidKeyEqual","isEndpointEqual","isAuthEqual","isP256dhEqual","isTokenValid","updatedToken","updateOptions","requestUpdateToken","updatedTokenDetails","updateToken","getTokenInternal","onSubChange","action","stopImmediatePropagation","getLink","href","originUrl","host","clientUrl","getWindowClient","focus","openWindow","NOTIFICATION_CLICKED","onNotificationClick","ServiceWorkerRegistration","PushSubscription","isSwSupported","isSupported","_delegate","authDomain","storageBucket","measurementId","skipWaiting","claim","badge","navigate"],"sourceRoot":""}