(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendors~buy~modalPhoneCollection~reportContent"],{

/***/ "../node_modules/country-data/data/continents.js":
/*!*******************************************************!*\
  !*** ../node_modules/country-data/data/continents.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _ = __webpack_require__(/*! underscore */ \"../node_modules/country-data/node_modules/underscore/underscore.js\");\n\nvar regions = __webpack_require__(/*! ./regions.js */ \"../node_modules/country-data/data/regions.js\");\n\nvar continents = {};\ncontinents.asia = {\n  name: 'Asia',\n  regions: ['centralAsia', 'southernAsia', 'southeastAsia', 'eastAsia', 'westernAsia'],\n  countries: _.flatten([regions.centralAsia.countries, regions.southernAsia.countries, regions.southeastAsia.countries, regions.eastAsia.countries, regions.westernAsia.countries]).sort()\n};\ncontinents.africa = {\n  name: 'Africa',\n  regions: ['centralAfrica', 'northAfrica', 'southernAfrica', 'eastAfrica', 'westAfrica'],\n  countries: _.flatten([regions.centralAfrica.countries, regions.northAfrica.countries, regions.southernAfrica.countries, regions.eastAfrica.countries, regions.westAfrica.countries]).sort()\n};\ncontinents.northAmerica = {\n  name: 'North America',\n  regions: ['centralAmerica', 'northernAmerica', 'caribbean'],\n  countries: _.flatten([regions.centralAmerica.countries, regions.northernAmerica.countries, regions.caribbean.countries]).sort()\n};\ncontinents.southAmerica = {\n  name: 'South America',\n  regions: ['southAmerica'],\n  countries: _.flatten([regions.southAmerica.countries]).sort()\n};\ncontinents.antartica = {\n  name: 'Antartica',\n  regions: ['antartica'],\n  countries: _.flatten([regions.antartica.countries]).sort()\n};\ncontinents.europe = {\n  name: 'Europe',\n  regions: ['northernEurope', 'southernEurope', 'easternEurope', 'westernEurope'],\n  countries: _.flatten([regions.northernEurope.countries, regions.southernEurope.countries, regions.easternEurope.countries, regions.westernEurope.countries]).sort()\n};\ncontinents.oceania = {\n  name: 'Oceania',\n  regions: ['australia', 'melanesia', 'micronesia', 'polynesia'],\n  countries: _.flatten([regions.australia.countries, regions.melanesia.countries, regions.micronesia.countries, regions.polynesia.countries]).sort()\n};\nmodule.exports = continents;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2NvdW50cnktZGF0YS9kYXRhL2NvbnRpbmVudHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvdW50cnktZGF0YS9kYXRhL2NvbnRpbmVudHMuanM/MGE0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBfID0gcmVxdWlyZSgndW5kZXJzY29yZScpO1xudmFyIHJlZ2lvbnMgPSByZXF1aXJlKCcuL3JlZ2lvbnMuanMnKTtcbnZhciBjb250aW5lbnRzID0ge307XG5cbmNvbnRpbmVudHMuYXNpYSA9IHtcbiAgbmFtZTogJ0FzaWEnLFxuICByZWdpb25zOiBbJ2NlbnRyYWxBc2lhJywgJ3NvdXRoZXJuQXNpYScsICdzb3V0aGVhc3RBc2lhJywgJ2Vhc3RBc2lhJywgJ3dlc3Rlcm5Bc2lhJ10sXG4gIGNvdW50cmllczogXy5mbGF0dGVuKFtcbiAgICByZWdpb25zLmNlbnRyYWxBc2lhLmNvdW50cmllcyxcbiAgICByZWdpb25zLnNvdXRoZXJuQXNpYS5jb3VudHJpZXMsXG4gICAgcmVnaW9ucy5zb3V0aGVhc3RBc2lhLmNvdW50cmllcyxcbiAgICByZWdpb25zLmVhc3RBc2lhLmNvdW50cmllcyxcbiAgICByZWdpb25zLndlc3Rlcm5Bc2lhLmNvdW50cmllc1xuICBdKVxuICAuc29ydCgpXG59O1xuXG5jb250aW5lbnRzLmFmcmljYSA9IHtcbiAgbmFtZTogJ0FmcmljYScsXG4gIHJlZ2lvbnM6IFsnY2VudHJhbEFmcmljYScsICdub3J0aEFmcmljYScsICdzb3V0aGVybkFmcmljYScsICdlYXN0QWZyaWNhJywgJ3dlc3RBZnJpY2EnXSxcbiAgY291bnRyaWVzOiBfLmZsYXR0ZW4oW1xuICAgICAgcmVnaW9ucy5jZW50cmFsQWZyaWNhLmNvdW50cmllcyxcbiAgICAgIHJlZ2lvbnMubm9ydGhBZnJpY2EuY291bnRyaWVzLFxuICAgICAgcmVnaW9ucy5zb3V0aGVybkFmcmljYS5jb3VudHJpZXMsXG4gICAgICByZWdpb25zLmVhc3RBZnJpY2EuY291bnRyaWVzLFxuICAgICAgcmVnaW9ucy53ZXN0QWZyaWNhLmNvdW50cmllc1xuICBdKVxuICAuc29ydCgpXG59O1xuXG5jb250aW5lbnRzLm5vcnRoQW1lcmljYSA9IHtcbiAgbmFtZTogJ05vcnRoIEFtZXJpY2EnLFxuICByZWdpb25zOiBbJ2NlbnRyYWxBbWVyaWNhJywgJ25vcnRoZXJuQW1lcmljYScsICdjYXJpYmJlYW4nXSxcbiAgY291bnRyaWVzOiBfLmZsYXR0ZW4oW1xuICAgIHJlZ2lvbnMuY2VudHJhbEFtZXJpY2EuY291bnRyaWVzLFxuICAgIHJlZ2lvbnMubm9ydGhlcm5BbWVyaWNhLmNvdW50cmllcyxcbiAgICByZWdpb25zLmNhcmliYmVhbi5jb3VudHJpZXNcbiAgXSlcbiAgLnNvcnQoKVxufTtcblxuY29udGluZW50cy5zb3V0aEFtZXJpY2EgPSB7XG4gIG5hbWU6ICdTb3V0aCBBbWVyaWNhJyxcbiAgcmVnaW9uczogWydzb3V0aEFtZXJpY2EnXSxcbiAgY291bnRyaWVzOiBfLmZsYXR0ZW4oW1xuICAgIHJlZ2lvbnMuc291dGhBbWVyaWNhLmNvdW50cmllc1xuICBdKVxuICAuc29ydCgpXG59XG5cbmNvbnRpbmVudHMuYW50YXJ0aWNhID0ge1xuICBuYW1lOiAnQW50YXJ0aWNhJyxcbiAgcmVnaW9uczogWydhbnRhcnRpY2EnXSxcbiAgY291bnRyaWVzOiBfLmZsYXR0ZW4oW1xuICAgIHJlZ2lvbnMuYW50YXJ0aWNhLmNvdW50cmllc1xuICBdKVxuICAuc29ydCgpXG59XG5cbmNvbnRpbmVudHMuZXVyb3BlID0ge1xuICBuYW1lOiAnRXVyb3BlJyxcbiAgcmVnaW9uczogWydub3J0aGVybkV1cm9wZScsICdzb3V0aGVybkV1cm9wZScsICdlYXN0ZXJuRXVyb3BlJywgJ3dlc3Rlcm5FdXJvcGUnXSxcbiAgY291bnRyaWVzOiBfLmZsYXR0ZW4oW1xuICAgIHJlZ2lvbnMubm9ydGhlcm5FdXJvcGUuY291bnRyaWVzLFxuICAgIHJlZ2lvbnMuc291dGhlcm5FdXJvcGUuY291bnRyaWVzLFxuICAgIHJlZ2lvbnMuZWFzdGVybkV1cm9wZS5jb3VudHJpZXMsXG4gICAgcmVnaW9ucy53ZXN0ZXJuRXVyb3BlLmNvdW50cmllc1xuICBdKVxuICAuc29ydCgpXG59XG5cbmNvbnRpbmVudHMub2NlYW5pYSA9IHtcbiAgbmFtZTogJ09jZWFuaWEnLFxuICByZWdpb25zOiBbJ2F1c3RyYWxpYScsICdtZWxhbmVzaWEnLCAnbWljcm9uZXNpYScsICdwb2x5bmVzaWEnXSxcbiAgY291bnRyaWVzOiBfLmZsYXR0ZW4oW1xuICAgIHJlZ2lvbnMuYXVzdHJhbGlhLmNvdW50cmllcyxcbiAgICByZWdpb25zLm1lbGFuZXNpYS5jb3VudHJpZXMsXG4gICAgcmVnaW9ucy5taWNyb25lc2lhLmNvdW50cmllcyxcbiAgICByZWdpb25zLnBvbHluZXNpYS5jb3VudHJpZXNcbiAgXSlcbiAgLnNvcnQoKVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBjb250aW5lbnRzO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFhQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBYUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQVdBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFTQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBU0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQVlBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFZQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/country-data/data/continents.js\n");

/***/ }),

/***/ "../node_modules/country-data/data/countries.json":
/*!********************************************************!*\
  !*** ../node_modules/country-data/data/countries.json ***!
  \********************************************************/
/*! exports provided: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"[{\\\"alpha2\\\":\\\"AC\\\",\\\"alpha3\\\":\\\"\\\",\\\"countryCallingCodes\\\":[\\\"+247\\\"],\\\"currencies\\\":[\\\"USD\\\"],\\\"emoji\\\":\\\"\\\",\\\"ioc\\\":\\\"SHP\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Ascension Island\\\",\\\"status\\\":\\\"reserved\\\"},{\\\"alpha2\\\":\\\"AD\\\",\\\"alpha3\\\":\\\"AND\\\",\\\"countryCallingCodes\\\":[\\\"+376\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇦🇩\\\",\\\"ioc\\\":\\\"AND\\\",\\\"languages\\\":[\\\"cat\\\"],\\\"name\\\":\\\"Andorra\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"AE\\\",\\\"alpha3\\\":\\\"ARE\\\",\\\"countryCallingCodes\\\":[\\\"+971\\\"],\\\"currencies\\\":[\\\"AED\\\"],\\\"emoji\\\":\\\"🇦🇪\\\",\\\"ioc\\\":\\\"UAE\\\",\\\"languages\\\":[\\\"ara\\\"],\\\"name\\\":\\\"United Arab Emirates\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"AF\\\",\\\"alpha3\\\":\\\"AFG\\\",\\\"countryCallingCodes\\\":[\\\"+93\\\"],\\\"currencies\\\":[\\\"AFN\\\"],\\\"emoji\\\":\\\"🇦🇫\\\",\\\"ioc\\\":\\\"AFG\\\",\\\"languages\\\":[\\\"pus\\\"],\\\"name\\\":\\\"Afghanistan\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"AG\\\",\\\"alpha3\\\":\\\"ATG\\\",\\\"countryCallingCodes\\\":[\\\"+1 268\\\"],\\\"currencies\\\":[\\\"XCD\\\"],\\\"emoji\\\":\\\"🇦🇬\\\",\\\"ioc\\\":\\\"ANT\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Antigua And Barbuda\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"AI\\\",\\\"alpha3\\\":\\\"AIA\\\",\\\"countryCallingCodes\\\":[\\\"+1 264\\\"],\\\"currencies\\\":[\\\"XCD\\\"],\\\"emoji\\\":\\\"🇦🇮\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Anguilla\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"AI\\\",\\\"alpha3\\\":\\\"AFI\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"French Afar and Issas\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"AL\\\",\\\"alpha3\\\":\\\"ALB\\\",\\\"countryCallingCodes\\\":[\\\"+355\\\"],\\\"currencies\\\":[\\\"ALL\\\"],\\\"emoji\\\":\\\"🇦🇱\\\",\\\"ioc\\\":\\\"ALB\\\",\\\"languages\\\":[\\\"sqi\\\"],\\\"name\\\":\\\"Albania\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"AM\\\",\\\"alpha3\\\":\\\"ARM\\\",\\\"countryCallingCodes\\\":[\\\"+374\\\"],\\\"currencies\\\":[\\\"AMD\\\"],\\\"emoji\\\":\\\"🇦🇲\\\",\\\"ioc\\\":\\\"ARM\\\",\\\"languages\\\":[\\\"hye\\\",\\\"rus\\\"],\\\"name\\\":\\\"Armenia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"AN\\\",\\\"alpha3\\\":\\\"ANT\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Netherlands Antilles\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"AO\\\",\\\"alpha3\\\":\\\"AGO\\\",\\\"countryCallingCodes\\\":[\\\"+244\\\"],\\\"currencies\\\":[\\\"AOA\\\"],\\\"emoji\\\":\\\"🇦🇴\\\",\\\"ioc\\\":\\\"ANG\\\",\\\"languages\\\":[\\\"por\\\"],\\\"name\\\":\\\"Angola\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"AQ\\\",\\\"alpha3\\\":\\\"ATA\\\",\\\"countryCallingCodes\\\":[\\\"+672\\\"],\\\"currencies\\\":[],\\\"emoji\\\":\\\"🇦🇶\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Antarctica\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"AR\\\",\\\"alpha3\\\":\\\"ARG\\\",\\\"countryCallingCodes\\\":[\\\"+54\\\"],\\\"currencies\\\":[\\\"ARS\\\"],\\\"emoji\\\":\\\"🇦🇷\\\",\\\"ioc\\\":\\\"ARG\\\",\\\"languages\\\":[\\\"spa\\\"],\\\"name\\\":\\\"Argentina\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"AS\\\",\\\"alpha3\\\":\\\"ASM\\\",\\\"countryCallingCodes\\\":[\\\"+1 684\\\"],\\\"currencies\\\":[\\\"USD\\\"],\\\"emoji\\\":\\\"🇦🇸\\\",\\\"ioc\\\":\\\"ASA\\\",\\\"languages\\\":[\\\"eng\\\",\\\"smo\\\"],\\\"name\\\":\\\"American Samoa\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"AT\\\",\\\"alpha3\\\":\\\"AUT\\\",\\\"countryCallingCodes\\\":[\\\"+43\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇦🇹\\\",\\\"ioc\\\":\\\"AUT\\\",\\\"languages\\\":[\\\"deu\\\"],\\\"name\\\":\\\"Austria\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"AU\\\",\\\"alpha3\\\":\\\"AUS\\\",\\\"countryCallingCodes\\\":[\\\"+61\\\"],\\\"currencies\\\":[\\\"AUD\\\"],\\\"emoji\\\":\\\"🇦🇺\\\",\\\"ioc\\\":\\\"AUS\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Australia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"AW\\\",\\\"alpha3\\\":\\\"ABW\\\",\\\"countryCallingCodes\\\":[\\\"+297\\\"],\\\"currencies\\\":[\\\"AWG\\\"],\\\"emoji\\\":\\\"🇦🇼\\\",\\\"ioc\\\":\\\"ARU\\\",\\\"languages\\\":[\\\"nld\\\"],\\\"name\\\":\\\"Aruba\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"AX\\\",\\\"alpha3\\\":\\\"ALA\\\",\\\"countryCallingCodes\\\":[\\\"+358\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇦🇽\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"swe\\\"],\\\"name\\\":\\\"Åland Islands\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"AZ\\\",\\\"alpha3\\\":\\\"AZE\\\",\\\"countryCallingCodes\\\":[\\\"+994\\\"],\\\"currencies\\\":[\\\"AZN\\\"],\\\"emoji\\\":\\\"🇦🇿\\\",\\\"ioc\\\":\\\"AZE\\\",\\\"languages\\\":[\\\"aze\\\"],\\\"name\\\":\\\"Azerbaijan\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BA\\\",\\\"alpha3\\\":\\\"BIH\\\",\\\"countryCallingCodes\\\":[\\\"+387\\\"],\\\"currencies\\\":[\\\"BAM\\\"],\\\"emoji\\\":\\\"🇧🇦\\\",\\\"ioc\\\":\\\"BIH\\\",\\\"languages\\\":[\\\"bos\\\",\\\"cre\\\",\\\"srp\\\"],\\\"name\\\":\\\"Bosnia & Herzegovina\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BB\\\",\\\"alpha3\\\":\\\"BRB\\\",\\\"countryCallingCodes\\\":[\\\"+1 246\\\"],\\\"currencies\\\":[\\\"BBD\\\"],\\\"emoji\\\":\\\"🇧🇧\\\",\\\"ioc\\\":\\\"BAR\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Barbados\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BD\\\",\\\"alpha3\\\":\\\"BGD\\\",\\\"countryCallingCodes\\\":[\\\"+880\\\"],\\\"currencies\\\":[\\\"BDT\\\"],\\\"emoji\\\":\\\"🇧🇩\\\",\\\"ioc\\\":\\\"BAN\\\",\\\"languages\\\":[\\\"ben\\\"],\\\"name\\\":\\\"Bangladesh\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BE\\\",\\\"alpha3\\\":\\\"BEL\\\",\\\"countryCallingCodes\\\":[\\\"+32\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇧🇪\\\",\\\"ioc\\\":\\\"BEL\\\",\\\"languages\\\":[\\\"nld\\\",\\\"fra\\\",\\\"deu\\\"],\\\"name\\\":\\\"Belgium\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BF\\\",\\\"alpha3\\\":\\\"BFA\\\",\\\"countryCallingCodes\\\":[\\\"+226\\\"],\\\"currencies\\\":[\\\"XOF\\\"],\\\"emoji\\\":\\\"🇧🇫\\\",\\\"ioc\\\":\\\"BUR\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"Burkina Faso\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BG\\\",\\\"alpha3\\\":\\\"BGR\\\",\\\"countryCallingCodes\\\":[\\\"+359\\\"],\\\"currencies\\\":[\\\"BGN\\\"],\\\"emoji\\\":\\\"🇧🇬\\\",\\\"ioc\\\":\\\"BUL\\\",\\\"languages\\\":[\\\"bul\\\"],\\\"name\\\":\\\"Bulgaria\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BH\\\",\\\"alpha3\\\":\\\"BHR\\\",\\\"countryCallingCodes\\\":[\\\"+973\\\"],\\\"currencies\\\":[\\\"BHD\\\"],\\\"emoji\\\":\\\"🇧🇭\\\",\\\"ioc\\\":\\\"BRN\\\",\\\"languages\\\":[\\\"ara\\\"],\\\"name\\\":\\\"Bahrain\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BI\\\",\\\"alpha3\\\":\\\"BDI\\\",\\\"countryCallingCodes\\\":[\\\"+257\\\"],\\\"currencies\\\":[\\\"BIF\\\"],\\\"emoji\\\":\\\"🇧🇮\\\",\\\"ioc\\\":\\\"BDI\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"Burundi\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BJ\\\",\\\"alpha3\\\":\\\"BEN\\\",\\\"countryCallingCodes\\\":[\\\"+229\\\"],\\\"currencies\\\":[\\\"XOF\\\"],\\\"emoji\\\":\\\"🇧🇯\\\",\\\"ioc\\\":\\\"BEN\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"Benin\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BL\\\",\\\"alpha3\\\":\\\"BLM\\\",\\\"countryCallingCodes\\\":[\\\"+590\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇧🇱\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"Saint Barthélemy\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BM\\\",\\\"alpha3\\\":\\\"BMU\\\",\\\"countryCallingCodes\\\":[\\\"+1 441\\\"],\\\"currencies\\\":[\\\"BMD\\\"],\\\"emoji\\\":\\\"🇧🇲\\\",\\\"ioc\\\":\\\"BER\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Bermuda\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BN\\\",\\\"alpha3\\\":\\\"BRN\\\",\\\"countryCallingCodes\\\":[\\\"+673\\\"],\\\"currencies\\\":[\\\"BND\\\"],\\\"emoji\\\":\\\"🇧🇳\\\",\\\"ioc\\\":\\\"BRU\\\",\\\"languages\\\":[\\\"msa\\\",\\\"eng\\\"],\\\"name\\\":\\\"Brunei Darussalam\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BO\\\",\\\"alpha3\\\":\\\"BOL\\\",\\\"countryCallingCodes\\\":[\\\"+591\\\"],\\\"currencies\\\":[\\\"BOB\\\",\\\"BOV\\\"],\\\"emoji\\\":\\\"🇧🇴\\\",\\\"ioc\\\":\\\"BOL\\\",\\\"languages\\\":[\\\"spa\\\",\\\"aym\\\",\\\"que\\\"],\\\"name\\\":\\\"Bolivia, Plurinational State Of\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BQ\\\",\\\"alpha3\\\":\\\"BES\\\",\\\"countryCallingCodes\\\":[\\\"+599\\\"],\\\"currencies\\\":[\\\"USD\\\"],\\\"emoji\\\":\\\"🇧🇶\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"nld\\\"],\\\"name\\\":\\\"Bonaire, Saint Eustatius And Saba\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BQ\\\",\\\"alpha3\\\":\\\"ATB\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"British Antarctic Territory\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"BR\\\",\\\"alpha3\\\":\\\"BRA\\\",\\\"countryCallingCodes\\\":[\\\"+55\\\"],\\\"currencies\\\":[\\\"BRL\\\"],\\\"emoji\\\":\\\"🇧🇷\\\",\\\"ioc\\\":\\\"BRA\\\",\\\"languages\\\":[\\\"por\\\"],\\\"name\\\":\\\"Brazil\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BS\\\",\\\"alpha3\\\":\\\"BHS\\\",\\\"countryCallingCodes\\\":[\\\"+1 242\\\"],\\\"currencies\\\":[\\\"BSD\\\"],\\\"emoji\\\":\\\"🇧🇸\\\",\\\"ioc\\\":\\\"BAH\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Bahamas\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BT\\\",\\\"alpha3\\\":\\\"BTN\\\",\\\"countryCallingCodes\\\":[\\\"+975\\\"],\\\"currencies\\\":[\\\"INR\\\",\\\"BTN\\\"],\\\"emoji\\\":\\\"🇧🇹\\\",\\\"ioc\\\":\\\"BHU\\\",\\\"languages\\\":[\\\"dzo\\\"],\\\"name\\\":\\\"Bhutan\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BU\\\",\\\"alpha3\\\":\\\"BUR\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Burma\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"BV\\\",\\\"alpha3\\\":\\\"BVT\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[\\\"NOK\\\"],\\\"emoji\\\":\\\"🇧🇻\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Bouvet Island\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BW\\\",\\\"alpha3\\\":\\\"BWA\\\",\\\"countryCallingCodes\\\":[\\\"+267\\\"],\\\"currencies\\\":[\\\"BWP\\\"],\\\"emoji\\\":\\\"🇧🇼\\\",\\\"ioc\\\":\\\"BOT\\\",\\\"languages\\\":[\\\"eng\\\",\\\"tsn\\\"],\\\"name\\\":\\\"Botswana\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BY\\\",\\\"alpha3\\\":\\\"BLR\\\",\\\"countryCallingCodes\\\":[\\\"+375\\\"],\\\"currencies\\\":[\\\"BYR\\\"],\\\"emoji\\\":\\\"🇧🇾\\\",\\\"ioc\\\":\\\"BLR\\\",\\\"languages\\\":[\\\"bel\\\",\\\"rus\\\"],\\\"name\\\":\\\"Belarus\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"BY\\\",\\\"alpha3\\\":\\\"BYS\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Byelorussian SSR\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"BZ\\\",\\\"alpha3\\\":\\\"BLZ\\\",\\\"countryCallingCodes\\\":[\\\"+501\\\"],\\\"currencies\\\":[\\\"BZD\\\"],\\\"emoji\\\":\\\"🇧🇿\\\",\\\"ioc\\\":\\\"BIZ\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Belize\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"CA\\\",\\\"alpha3\\\":\\\"CAN\\\",\\\"countryCallingCodes\\\":[\\\"+1\\\"],\\\"currencies\\\":[\\\"CAD\\\"],\\\"emoji\\\":\\\"🇨🇦\\\",\\\"ioc\\\":\\\"CAN\\\",\\\"languages\\\":[\\\"eng\\\",\\\"fra\\\"],\\\"name\\\":\\\"Canada\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"CC\\\",\\\"alpha3\\\":\\\"CCK\\\",\\\"countryCallingCodes\\\":[\\\"+61\\\"],\\\"currencies\\\":[\\\"AUD\\\"],\\\"emoji\\\":\\\"🇨🇨\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Cocos (Keeling) Islands\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"CD\\\",\\\"alpha3\\\":\\\"COD\\\",\\\"countryCallingCodes\\\":[\\\"+243\\\"],\\\"currencies\\\":[\\\"CDF\\\"],\\\"emoji\\\":\\\"🇨🇩\\\",\\\"ioc\\\":\\\"COD\\\",\\\"languages\\\":[\\\"fra\\\",\\\"lin\\\",\\\"kon\\\",\\\"swa\\\"],\\\"name\\\":\\\"Democratic Republic Of Congo\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"CF\\\",\\\"alpha3\\\":\\\"CAF\\\",\\\"countryCallingCodes\\\":[\\\"+236\\\"],\\\"currencies\\\":[\\\"XAF\\\"],\\\"emoji\\\":\\\"🇨🇫\\\",\\\"ioc\\\":\\\"CAF\\\",\\\"languages\\\":[\\\"fra\\\",\\\"sag\\\"],\\\"name\\\":\\\"Central African Republic\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"CG\\\",\\\"alpha3\\\":\\\"COG\\\",\\\"countryCallingCodes\\\":[\\\"+242\\\"],\\\"currencies\\\":[\\\"XAF\\\"],\\\"emoji\\\":\\\"🇨🇬\\\",\\\"ioc\\\":\\\"CGO\\\",\\\"languages\\\":[\\\"fra\\\",\\\"lin\\\"],\\\"name\\\":\\\"Republic Of Congo\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"CH\\\",\\\"alpha3\\\":\\\"CHE\\\",\\\"countryCallingCodes\\\":[\\\"+41\\\"],\\\"currencies\\\":[\\\"CHF\\\",\\\"CHE\\\",\\\"CHW\\\"],\\\"emoji\\\":\\\"🇨🇭\\\",\\\"ioc\\\":\\\"SUI\\\",\\\"languages\\\":[\\\"deu\\\",\\\"fra\\\",\\\"ita\\\",\\\"roh\\\"],\\\"name\\\":\\\"Switzerland\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"CI\\\",\\\"alpha3\\\":\\\"CIV\\\",\\\"countryCallingCodes\\\":[\\\"+225\\\"],\\\"currencies\\\":[\\\"XOF\\\"],\\\"emoji\\\":\\\"🇨🇮\\\",\\\"ioc\\\":\\\"CIV\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"Côte d'Ivoire\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"CK\\\",\\\"alpha3\\\":\\\"COK\\\",\\\"countryCallingCodes\\\":[\\\"+682\\\"],\\\"currencies\\\":[\\\"NZD\\\"],\\\"emoji\\\":\\\"🇨🇰\\\",\\\"ioc\\\":\\\"COK\\\",\\\"languages\\\":[\\\"eng\\\",\\\"mri\\\"],\\\"name\\\":\\\"Cook Islands\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"CL\\\",\\\"alpha3\\\":\\\"CHL\\\",\\\"countryCallingCodes\\\":[\\\"+56\\\"],\\\"currencies\\\":[\\\"CLP\\\",\\\"CLF\\\"],\\\"emoji\\\":\\\"🇨🇱\\\",\\\"ioc\\\":\\\"CHI\\\",\\\"languages\\\":[\\\"spa\\\"],\\\"name\\\":\\\"Chile\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"CM\\\",\\\"alpha3\\\":\\\"CMR\\\",\\\"countryCallingCodes\\\":[\\\"+237\\\"],\\\"currencies\\\":[\\\"XAF\\\"],\\\"emoji\\\":\\\"🇨🇲\\\",\\\"ioc\\\":\\\"CMR\\\",\\\"languages\\\":[\\\"eng\\\",\\\"fra\\\"],\\\"name\\\":\\\"Cameroon\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"CN\\\",\\\"alpha3\\\":\\\"CHN\\\",\\\"countryCallingCodes\\\":[\\\"+86\\\"],\\\"currencies\\\":[\\\"CNY\\\"],\\\"emoji\\\":\\\"🇨🇳\\\",\\\"ioc\\\":\\\"CHN\\\",\\\"languages\\\":[\\\"zho\\\"],\\\"name\\\":\\\"China\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"CO\\\",\\\"alpha3\\\":\\\"COL\\\",\\\"countryCallingCodes\\\":[\\\"+57\\\"],\\\"currencies\\\":[\\\"COP\\\",\\\"COU\\\"],\\\"emoji\\\":\\\"🇨🇴\\\",\\\"ioc\\\":\\\"COL\\\",\\\"languages\\\":[\\\"spa\\\"],\\\"name\\\":\\\"Colombia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"CP\\\",\\\"alpha3\\\":\\\"\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Clipperton Island\\\",\\\"status\\\":\\\"reserved\\\"},{\\\"alpha2\\\":\\\"CR\\\",\\\"alpha3\\\":\\\"CRI\\\",\\\"countryCallingCodes\\\":[\\\"+506\\\"],\\\"currencies\\\":[\\\"CRC\\\"],\\\"emoji\\\":\\\"🇨🇷\\\",\\\"ioc\\\":\\\"CRC\\\",\\\"languages\\\":[\\\"spa\\\"],\\\"name\\\":\\\"Costa Rica\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"CS\\\",\\\"alpha3\\\":\\\"CSK\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Czechoslovakia\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"CS\\\",\\\"alpha3\\\":\\\"SCG\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Serbia and Montenegro\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"CT\\\",\\\"alpha3\\\":\\\"CTE\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Canton and Enderbury Islands\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"CU\\\",\\\"alpha3\\\":\\\"CUB\\\",\\\"countryCallingCodes\\\":[\\\"+53\\\"],\\\"currencies\\\":[\\\"CUP\\\",\\\"CUC\\\"],\\\"emoji\\\":\\\"🇨🇺\\\",\\\"ioc\\\":\\\"CUB\\\",\\\"languages\\\":[\\\"spa\\\"],\\\"name\\\":\\\"Cuba\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"CV\\\",\\\"alpha3\\\":\\\"CPV\\\",\\\"countryCallingCodes\\\":[\\\"+238\\\"],\\\"currencies\\\":[\\\"CVE\\\"],\\\"emoji\\\":\\\"🇨🇻\\\",\\\"ioc\\\":\\\"CPV\\\",\\\"languages\\\":[\\\"por\\\"],\\\"name\\\":\\\"Cabo Verde\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"CW\\\",\\\"alpha3\\\":\\\"CUW\\\",\\\"countryCallingCodes\\\":[\\\"+599\\\"],\\\"currencies\\\":[\\\"ANG\\\"],\\\"emoji\\\":\\\"🇨🇼\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"nld\\\"],\\\"name\\\":\\\"Curacao\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"CX\\\",\\\"alpha3\\\":\\\"CXR\\\",\\\"countryCallingCodes\\\":[\\\"+61\\\"],\\\"currencies\\\":[\\\"AUD\\\"],\\\"emoji\\\":\\\"🇨🇽\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Christmas Island\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"CY\\\",\\\"alpha3\\\":\\\"CYP\\\",\\\"countryCallingCodes\\\":[\\\"+357\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇨🇾\\\",\\\"ioc\\\":\\\"CYP\\\",\\\"languages\\\":[\\\"ell\\\",\\\"tur\\\"],\\\"name\\\":\\\"Cyprus\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"CZ\\\",\\\"alpha3\\\":\\\"CZE\\\",\\\"countryCallingCodes\\\":[\\\"+420\\\"],\\\"currencies\\\":[\\\"CZK\\\"],\\\"emoji\\\":\\\"🇨🇿\\\",\\\"ioc\\\":\\\"CZE\\\",\\\"languages\\\":[\\\"ces\\\"],\\\"name\\\":\\\"Czech Republic\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"DD\\\",\\\"alpha3\\\":\\\"DDR\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"German Democratic Republic\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"DE\\\",\\\"alpha3\\\":\\\"DEU\\\",\\\"countryCallingCodes\\\":[\\\"+49\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇩🇪\\\",\\\"ioc\\\":\\\"GER\\\",\\\"languages\\\":[\\\"deu\\\"],\\\"name\\\":\\\"Germany\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"DG\\\",\\\"alpha3\\\":\\\"\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[\\\"USD\\\"],\\\"emoji\\\":\\\"\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Diego Garcia\\\",\\\"status\\\":\\\"reserved\\\"},{\\\"alpha2\\\":\\\"DJ\\\",\\\"alpha3\\\":\\\"DJI\\\",\\\"countryCallingCodes\\\":[\\\"+253\\\"],\\\"currencies\\\":[\\\"DJF\\\"],\\\"emoji\\\":\\\"🇩🇯\\\",\\\"ioc\\\":\\\"DJI\\\",\\\"languages\\\":[\\\"ara\\\",\\\"fra\\\"],\\\"name\\\":\\\"Djibouti\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"DK\\\",\\\"alpha3\\\":\\\"DNK\\\",\\\"countryCallingCodes\\\":[\\\"+45\\\"],\\\"currencies\\\":[\\\"DKK\\\"],\\\"emoji\\\":\\\"🇩🇰\\\",\\\"ioc\\\":\\\"DEN\\\",\\\"languages\\\":[\\\"dan\\\"],\\\"name\\\":\\\"Denmark\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"DM\\\",\\\"alpha3\\\":\\\"DMA\\\",\\\"countryCallingCodes\\\":[\\\"+1 767\\\"],\\\"currencies\\\":[\\\"XCD\\\"],\\\"emoji\\\":\\\"🇩🇲\\\",\\\"ioc\\\":\\\"DMA\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Dominica\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"DO\\\",\\\"alpha3\\\":\\\"DOM\\\",\\\"countryCallingCodes\\\":[\\\"+1 809\\\",\\\"+1 829\\\",\\\"+1 849\\\"],\\\"currencies\\\":[\\\"DOP\\\"],\\\"emoji\\\":\\\"🇩🇴\\\",\\\"ioc\\\":\\\"DOM\\\",\\\"languages\\\":[\\\"spa\\\"],\\\"name\\\":\\\"Dominican Republic\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"DY\\\",\\\"alpha3\\\":\\\"DHY\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Dahomey\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"DZ\\\",\\\"alpha3\\\":\\\"DZA\\\",\\\"countryCallingCodes\\\":[\\\"+213\\\"],\\\"currencies\\\":[\\\"DZD\\\"],\\\"emoji\\\":\\\"🇩🇿\\\",\\\"ioc\\\":\\\"ALG\\\",\\\"languages\\\":[\\\"ara\\\"],\\\"name\\\":\\\"Algeria\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"EA\\\",\\\"alpha3\\\":\\\"\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Ceuta, Mulilla\\\",\\\"status\\\":\\\"reserved\\\"},{\\\"alpha2\\\":\\\"EC\\\",\\\"alpha3\\\":\\\"ECU\\\",\\\"countryCallingCodes\\\":[\\\"+593\\\"],\\\"currencies\\\":[\\\"USD\\\"],\\\"emoji\\\":\\\"🇪🇨\\\",\\\"ioc\\\":\\\"ECU\\\",\\\"languages\\\":[\\\"spa\\\",\\\"que\\\"],\\\"name\\\":\\\"Ecuador\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"EE\\\",\\\"alpha3\\\":\\\"EST\\\",\\\"countryCallingCodes\\\":[\\\"+372\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇪🇪\\\",\\\"ioc\\\":\\\"EST\\\",\\\"languages\\\":[\\\"est\\\"],\\\"name\\\":\\\"Estonia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"EG\\\",\\\"alpha3\\\":\\\"EGY\\\",\\\"countryCallingCodes\\\":[\\\"+20\\\"],\\\"currencies\\\":[\\\"EGP\\\"],\\\"emoji\\\":\\\"🇪🇬\\\",\\\"ioc\\\":\\\"EGY\\\",\\\"languages\\\":[\\\"ara\\\"],\\\"name\\\":\\\"Egypt\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"EH\\\",\\\"alpha3\\\":\\\"ESH\\\",\\\"countryCallingCodes\\\":[\\\"+212\\\"],\\\"currencies\\\":[\\\"MAD\\\"],\\\"emoji\\\":\\\"🇪🇭\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Western Sahara\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"ER\\\",\\\"alpha3\\\":\\\"ERI\\\",\\\"countryCallingCodes\\\":[\\\"+291\\\"],\\\"currencies\\\":[\\\"ERN\\\"],\\\"emoji\\\":\\\"🇪🇷\\\",\\\"ioc\\\":\\\"ERI\\\",\\\"languages\\\":[\\\"eng\\\",\\\"ara\\\",\\\"tir\\\"],\\\"name\\\":\\\"Eritrea\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"ES\\\",\\\"alpha3\\\":\\\"ESP\\\",\\\"countryCallingCodes\\\":[\\\"+34\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇪🇸\\\",\\\"ioc\\\":\\\"ESP\\\",\\\"languages\\\":[\\\"spa\\\"],\\\"name\\\":\\\"Spain\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"ET\\\",\\\"alpha3\\\":\\\"ETH\\\",\\\"countryCallingCodes\\\":[\\\"+251\\\"],\\\"currencies\\\":[\\\"ETB\\\"],\\\"emoji\\\":\\\"🇪🇹\\\",\\\"ioc\\\":\\\"ETH\\\",\\\"languages\\\":[\\\"amh\\\"],\\\"name\\\":\\\"Ethiopia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"EU\\\",\\\"alpha3\\\":\\\"\\\",\\\"countryCallingCodes\\\":[\\\"+388\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇪🇺\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"European Union\\\",\\\"status\\\":\\\"reserved\\\"},{\\\"alpha2\\\":\\\"FI\\\",\\\"alpha3\\\":\\\"FIN\\\",\\\"countryCallingCodes\\\":[\\\"+358\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇫🇮\\\",\\\"ioc\\\":\\\"FIN\\\",\\\"languages\\\":[\\\"fin\\\",\\\"swe\\\"],\\\"name\\\":\\\"Finland\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"FJ\\\",\\\"alpha3\\\":\\\"FJI\\\",\\\"countryCallingCodes\\\":[\\\"+679\\\"],\\\"currencies\\\":[\\\"FJD\\\"],\\\"emoji\\\":\\\"🇫🇯\\\",\\\"ioc\\\":\\\"FIJ\\\",\\\"languages\\\":[\\\"eng\\\",\\\"fij\\\"],\\\"name\\\":\\\"Fiji\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"FK\\\",\\\"alpha3\\\":\\\"FLK\\\",\\\"countryCallingCodes\\\":[\\\"+500\\\"],\\\"currencies\\\":[\\\"FKP\\\"],\\\"emoji\\\":\\\"🇫🇰\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Falkland Islands\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"FM\\\",\\\"alpha3\\\":\\\"FSM\\\",\\\"countryCallingCodes\\\":[\\\"+691\\\"],\\\"currencies\\\":[\\\"USD\\\"],\\\"emoji\\\":\\\"🇫🇲\\\",\\\"ioc\\\":\\\"FSM\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Micronesia, Federated States Of\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"FO\\\",\\\"alpha3\\\":\\\"FRO\\\",\\\"countryCallingCodes\\\":[\\\"+298\\\"],\\\"currencies\\\":[\\\"DKK\\\"],\\\"emoji\\\":\\\"🇫🇴\\\",\\\"ioc\\\":\\\"FAI\\\",\\\"languages\\\":[\\\"fao\\\",\\\"dan\\\"],\\\"name\\\":\\\"Faroe Islands\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"FQ\\\",\\\"alpha3\\\":\\\"ATF\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"French Southern and Antarctic Territories\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"FR\\\",\\\"alpha3\\\":\\\"FRA\\\",\\\"countryCallingCodes\\\":[\\\"+33\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇫🇷\\\",\\\"ioc\\\":\\\"FRA\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"France\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"FX\\\",\\\"alpha3\\\":\\\"\\\",\\\"countryCallingCodes\\\":[\\\"+241\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"France, Metropolitan\\\",\\\"status\\\":\\\"reserved\\\"},{\\\"alpha2\\\":\\\"GA\\\",\\\"alpha3\\\":\\\"GAB\\\",\\\"countryCallingCodes\\\":[\\\"+241\\\"],\\\"currencies\\\":[\\\"XAF\\\"],\\\"emoji\\\":\\\"🇬🇦\\\",\\\"ioc\\\":\\\"GAB\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"Gabon\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"GB\\\",\\\"alpha3\\\":\\\"GBR\\\",\\\"countryCallingCodes\\\":[\\\"+44\\\"],\\\"currencies\\\":[\\\"GBP\\\"],\\\"emoji\\\":\\\"🇬🇧\\\",\\\"ioc\\\":\\\"GBR\\\",\\\"languages\\\":[\\\"eng\\\",\\\"cor\\\",\\\"gle\\\",\\\"gla\\\",\\\"cym\\\"],\\\"name\\\":\\\"United Kingdom\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"GD\\\",\\\"alpha3\\\":\\\"GRD\\\",\\\"countryCallingCodes\\\":[\\\"+473\\\"],\\\"currencies\\\":[\\\"XCD\\\"],\\\"emoji\\\":\\\"🇬🇩\\\",\\\"ioc\\\":\\\"GRN\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Grenada\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"GE\\\",\\\"alpha3\\\":\\\"GEO\\\",\\\"countryCallingCodes\\\":[\\\"+995\\\"],\\\"currencies\\\":[\\\"GEL\\\"],\\\"emoji\\\":\\\"🇬🇪\\\",\\\"ioc\\\":\\\"GEO\\\",\\\"languages\\\":[\\\"kat\\\"],\\\"name\\\":\\\"Georgia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"GE\\\",\\\"alpha3\\\":\\\"GEL\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Gilbert and Ellice Islands\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"GF\\\",\\\"alpha3\\\":\\\"GUF\\\",\\\"countryCallingCodes\\\":[\\\"+594\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇬🇫\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"French Guiana\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"GG\\\",\\\"alpha3\\\":\\\"GGY\\\",\\\"countryCallingCodes\\\":[\\\"+44\\\"],\\\"currencies\\\":[\\\"GBP\\\"],\\\"emoji\\\":\\\"🇬🇬\\\",\\\"ioc\\\":\\\"GCI\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"Guernsey\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"GH\\\",\\\"alpha3\\\":\\\"GHA\\\",\\\"countryCallingCodes\\\":[\\\"+233\\\"],\\\"currencies\\\":[\\\"GHS\\\"],\\\"emoji\\\":\\\"🇬🇭\\\",\\\"ioc\\\":\\\"GHA\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Ghana\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"GI\\\",\\\"alpha3\\\":\\\"GIB\\\",\\\"countryCallingCodes\\\":[\\\"+350\\\"],\\\"currencies\\\":[\\\"GIP\\\"],\\\"emoji\\\":\\\"🇬🇮\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Gibraltar\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"GL\\\",\\\"alpha3\\\":\\\"GRL\\\",\\\"countryCallingCodes\\\":[\\\"+299\\\"],\\\"currencies\\\":[\\\"DKK\\\"],\\\"emoji\\\":\\\"🇬🇱\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"kal\\\"],\\\"name\\\":\\\"Greenland\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"GM\\\",\\\"alpha3\\\":\\\"GMB\\\",\\\"countryCallingCodes\\\":[\\\"+220\\\"],\\\"currencies\\\":[\\\"GMD\\\"],\\\"emoji\\\":\\\"🇬🇲\\\",\\\"ioc\\\":\\\"GAM\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Gambia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"GN\\\",\\\"alpha3\\\":\\\"GIN\\\",\\\"countryCallingCodes\\\":[\\\"+224\\\"],\\\"currencies\\\":[\\\"GNF\\\"],\\\"emoji\\\":\\\"🇬🇳\\\",\\\"ioc\\\":\\\"GUI\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"Guinea\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"GP\\\",\\\"alpha3\\\":\\\"GLP\\\",\\\"countryCallingCodes\\\":[\\\"+590\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇬🇵\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"Guadeloupe\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"GQ\\\",\\\"alpha3\\\":\\\"GNQ\\\",\\\"countryCallingCodes\\\":[\\\"+240\\\"],\\\"currencies\\\":[\\\"XAF\\\"],\\\"emoji\\\":\\\"🇬🇶\\\",\\\"ioc\\\":\\\"GEQ\\\",\\\"languages\\\":[\\\"spa\\\",\\\"fra\\\",\\\"por\\\"],\\\"name\\\":\\\"Equatorial Guinea\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"GR\\\",\\\"alpha3\\\":\\\"GRC\\\",\\\"countryCallingCodes\\\":[\\\"+30\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇬🇷\\\",\\\"ioc\\\":\\\"GRE\\\",\\\"languages\\\":[\\\"ell\\\"],\\\"name\\\":\\\"Greece\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"GS\\\",\\\"alpha3\\\":\\\"SGS\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[\\\"GBP\\\"],\\\"emoji\\\":\\\"🇬🇸\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"South Georgia And The South Sandwich Islands\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"GT\\\",\\\"alpha3\\\":\\\"GTM\\\",\\\"countryCallingCodes\\\":[\\\"+502\\\"],\\\"currencies\\\":[\\\"GTQ\\\"],\\\"emoji\\\":\\\"🇬🇹\\\",\\\"ioc\\\":\\\"GUA\\\",\\\"languages\\\":[\\\"spa\\\"],\\\"name\\\":\\\"Guatemala\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"GU\\\",\\\"alpha3\\\":\\\"GUM\\\",\\\"countryCallingCodes\\\":[\\\"+1 671\\\"],\\\"currencies\\\":[\\\"USD\\\"],\\\"emoji\\\":\\\"🇬🇺\\\",\\\"ioc\\\":\\\"GUM\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Guam\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"GW\\\",\\\"alpha3\\\":\\\"GNB\\\",\\\"countryCallingCodes\\\":[\\\"+245\\\"],\\\"currencies\\\":[\\\"XOF\\\"],\\\"emoji\\\":\\\"🇬🇼\\\",\\\"ioc\\\":\\\"GBS\\\",\\\"languages\\\":[\\\"por\\\"],\\\"name\\\":\\\"Guinea-bissau\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"GY\\\",\\\"alpha3\\\":\\\"GUY\\\",\\\"countryCallingCodes\\\":[\\\"+592\\\"],\\\"currencies\\\":[\\\"GYD\\\"],\\\"emoji\\\":\\\"🇬🇾\\\",\\\"ioc\\\":\\\"GUY\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Guyana\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"HK\\\",\\\"alpha3\\\":\\\"HKG\\\",\\\"countryCallingCodes\\\":[\\\"+852\\\"],\\\"currencies\\\":[\\\"HKD\\\"],\\\"emoji\\\":\\\"🇭🇰\\\",\\\"ioc\\\":\\\"HKG\\\",\\\"languages\\\":[\\\"zho\\\",\\\"eng\\\"],\\\"name\\\":\\\"Hong Kong\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"HM\\\",\\\"alpha3\\\":\\\"HMD\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[\\\"AUD\\\"],\\\"emoji\\\":\\\"🇭🇲\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Heard Island And McDonald Islands\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"HN\\\",\\\"alpha3\\\":\\\"HND\\\",\\\"countryCallingCodes\\\":[\\\"+504\\\"],\\\"currencies\\\":[\\\"HNL\\\"],\\\"emoji\\\":\\\"🇭🇳\\\",\\\"ioc\\\":\\\"HON\\\",\\\"languages\\\":[\\\"spa\\\"],\\\"name\\\":\\\"Honduras\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"HR\\\",\\\"alpha3\\\":\\\"HRV\\\",\\\"countryCallingCodes\\\":[\\\"+385\\\"],\\\"currencies\\\":[\\\"HRK\\\"],\\\"emoji\\\":\\\"🇭🇷\\\",\\\"ioc\\\":\\\"CRO\\\",\\\"languages\\\":[\\\"hrv\\\"],\\\"name\\\":\\\"Croatia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"HT\\\",\\\"alpha3\\\":\\\"HTI\\\",\\\"countryCallingCodes\\\":[\\\"+509\\\"],\\\"currencies\\\":[\\\"HTG\\\",\\\"USD\\\"],\\\"emoji\\\":\\\"🇭🇹\\\",\\\"ioc\\\":\\\"HAI\\\",\\\"languages\\\":[\\\"fra\\\",\\\"hat\\\"],\\\"name\\\":\\\"Haiti\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"HU\\\",\\\"alpha3\\\":\\\"HUN\\\",\\\"countryCallingCodes\\\":[\\\"+36\\\"],\\\"currencies\\\":[\\\"HUF\\\"],\\\"emoji\\\":\\\"🇭🇺\\\",\\\"ioc\\\":\\\"HUN\\\",\\\"languages\\\":[\\\"hun\\\"],\\\"name\\\":\\\"Hungary\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"HV\\\",\\\"alpha3\\\":\\\"HVO\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Upper Volta\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"IC\\\",\\\"alpha3\\\":\\\"\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Canary Islands\\\",\\\"status\\\":\\\"reserved\\\"},{\\\"alpha2\\\":\\\"ID\\\",\\\"alpha3\\\":\\\"IDN\\\",\\\"countryCallingCodes\\\":[\\\"+62\\\"],\\\"currencies\\\":[\\\"IDR\\\"],\\\"emoji\\\":\\\"🇮🇩\\\",\\\"ioc\\\":\\\"INA\\\",\\\"languages\\\":[\\\"ind\\\"],\\\"name\\\":\\\"Indonesia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"IE\\\",\\\"alpha3\\\":\\\"IRL\\\",\\\"countryCallingCodes\\\":[\\\"+353\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇮🇪\\\",\\\"ioc\\\":\\\"IRL\\\",\\\"languages\\\":[\\\"eng\\\",\\\"gle\\\"],\\\"name\\\":\\\"Ireland\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"IL\\\",\\\"alpha3\\\":\\\"ISR\\\",\\\"countryCallingCodes\\\":[\\\"+972\\\"],\\\"currencies\\\":[\\\"ILS\\\"],\\\"emoji\\\":\\\"🇮🇱\\\",\\\"ioc\\\":\\\"ISR\\\",\\\"languages\\\":[\\\"heb\\\",\\\"ara\\\",\\\"eng\\\"],\\\"name\\\":\\\"Israel\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"IM\\\",\\\"alpha3\\\":\\\"IMN\\\",\\\"countryCallingCodes\\\":[\\\"+44\\\"],\\\"currencies\\\":[\\\"GBP\\\"],\\\"emoji\\\":\\\"🇮🇲\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"eng\\\",\\\"glv\\\"],\\\"name\\\":\\\"Isle Of Man\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"IN\\\",\\\"alpha3\\\":\\\"IND\\\",\\\"countryCallingCodes\\\":[\\\"+91\\\"],\\\"currencies\\\":[\\\"INR\\\"],\\\"emoji\\\":\\\"🇮🇳\\\",\\\"ioc\\\":\\\"IND\\\",\\\"languages\\\":[\\\"eng\\\",\\\"hin\\\"],\\\"name\\\":\\\"India\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"IO\\\",\\\"alpha3\\\":\\\"IOT\\\",\\\"countryCallingCodes\\\":[\\\"+246\\\"],\\\"currencies\\\":[\\\"USD\\\"],\\\"emoji\\\":\\\"🇮🇴\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"British Indian Ocean Territory\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"IQ\\\",\\\"alpha3\\\":\\\"IRQ\\\",\\\"countryCallingCodes\\\":[\\\"+964\\\"],\\\"currencies\\\":[\\\"IQD\\\"],\\\"emoji\\\":\\\"🇮🇶\\\",\\\"ioc\\\":\\\"IRQ\\\",\\\"languages\\\":[\\\"ara\\\",\\\"kur\\\"],\\\"name\\\":\\\"Iraq\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"IR\\\",\\\"alpha3\\\":\\\"IRN\\\",\\\"countryCallingCodes\\\":[\\\"+98\\\"],\\\"currencies\\\":[\\\"IRR\\\"],\\\"emoji\\\":\\\"🇮🇷\\\",\\\"ioc\\\":\\\"IRI\\\",\\\"languages\\\":[\\\"fas\\\"],\\\"name\\\":\\\"Iran, Islamic Republic Of\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"IS\\\",\\\"alpha3\\\":\\\"ISL\\\",\\\"countryCallingCodes\\\":[\\\"+354\\\"],\\\"currencies\\\":[\\\"ISK\\\"],\\\"emoji\\\":\\\"🇮🇸\\\",\\\"ioc\\\":\\\"ISL\\\",\\\"languages\\\":[\\\"isl\\\"],\\\"name\\\":\\\"Iceland\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"IT\\\",\\\"alpha3\\\":\\\"ITA\\\",\\\"countryCallingCodes\\\":[\\\"+39\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇮🇹\\\",\\\"ioc\\\":\\\"ITA\\\",\\\"languages\\\":[\\\"ita\\\"],\\\"name\\\":\\\"Italy\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"JE\\\",\\\"alpha3\\\":\\\"JEY\\\",\\\"countryCallingCodes\\\":[\\\"+44\\\"],\\\"currencies\\\":[\\\"GBP\\\"],\\\"emoji\\\":\\\"🇯🇪\\\",\\\"ioc\\\":\\\"JCI\\\",\\\"languages\\\":[\\\"eng\\\",\\\"fra\\\"],\\\"name\\\":\\\"Jersey\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"JM\\\",\\\"alpha3\\\":\\\"JAM\\\",\\\"countryCallingCodes\\\":[\\\"+1 876\\\"],\\\"currencies\\\":[\\\"JMD\\\"],\\\"emoji\\\":\\\"🇯🇲\\\",\\\"ioc\\\":\\\"JAM\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Jamaica\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"JO\\\",\\\"alpha3\\\":\\\"JOR\\\",\\\"countryCallingCodes\\\":[\\\"+962\\\"],\\\"currencies\\\":[\\\"JOD\\\"],\\\"emoji\\\":\\\"🇯🇴\\\",\\\"ioc\\\":\\\"JOR\\\",\\\"languages\\\":[\\\"ara\\\"],\\\"name\\\":\\\"Jordan\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"JP\\\",\\\"alpha3\\\":\\\"JPN\\\",\\\"countryCallingCodes\\\":[\\\"+81\\\"],\\\"currencies\\\":[\\\"JPY\\\"],\\\"emoji\\\":\\\"🇯🇵\\\",\\\"ioc\\\":\\\"JPN\\\",\\\"languages\\\":[\\\"jpn\\\"],\\\"name\\\":\\\"Japan\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"JT\\\",\\\"alpha3\\\":\\\"JTN\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Johnston Island\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"KE\\\",\\\"alpha3\\\":\\\"KEN\\\",\\\"countryCallingCodes\\\":[\\\"+254\\\"],\\\"currencies\\\":[\\\"KES\\\"],\\\"emoji\\\":\\\"🇰🇪\\\",\\\"ioc\\\":\\\"KEN\\\",\\\"languages\\\":[\\\"eng\\\",\\\"swa\\\"],\\\"name\\\":\\\"Kenya\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"KG\\\",\\\"alpha3\\\":\\\"KGZ\\\",\\\"countryCallingCodes\\\":[\\\"+996\\\"],\\\"currencies\\\":[\\\"KGS\\\"],\\\"emoji\\\":\\\"🇰🇬\\\",\\\"ioc\\\":\\\"KGZ\\\",\\\"languages\\\":[\\\"rus\\\"],\\\"name\\\":\\\"Kyrgyzstan\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"KH\\\",\\\"alpha3\\\":\\\"KHM\\\",\\\"countryCallingCodes\\\":[\\\"+855\\\"],\\\"currencies\\\":[\\\"KHR\\\"],\\\"emoji\\\":\\\"🇰🇭\\\",\\\"ioc\\\":\\\"CAM\\\",\\\"languages\\\":[\\\"khm\\\"],\\\"name\\\":\\\"Cambodia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"KI\\\",\\\"alpha3\\\":\\\"KIR\\\",\\\"countryCallingCodes\\\":[\\\"+686\\\"],\\\"currencies\\\":[\\\"AUD\\\"],\\\"emoji\\\":\\\"🇰🇮\\\",\\\"ioc\\\":\\\"KIR\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Kiribati\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"KM\\\",\\\"alpha3\\\":\\\"COM\\\",\\\"countryCallingCodes\\\":[\\\"+269\\\"],\\\"currencies\\\":[\\\"KMF\\\"],\\\"emoji\\\":\\\"🇰🇲\\\",\\\"ioc\\\":\\\"COM\\\",\\\"languages\\\":[\\\"ara\\\",\\\"fra\\\"],\\\"name\\\":\\\"Comoros\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"KN\\\",\\\"alpha3\\\":\\\"KNA\\\",\\\"countryCallingCodes\\\":[\\\"+1 869\\\"],\\\"currencies\\\":[\\\"XCD\\\"],\\\"emoji\\\":\\\"🇰🇳\\\",\\\"ioc\\\":\\\"SKN\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Saint Kitts And Nevis\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"KP\\\",\\\"alpha3\\\":\\\"PRK\\\",\\\"countryCallingCodes\\\":[\\\"+850\\\"],\\\"currencies\\\":[\\\"KPW\\\"],\\\"emoji\\\":\\\"🇰🇵\\\",\\\"ioc\\\":\\\"PRK\\\",\\\"languages\\\":[\\\"kor\\\"],\\\"name\\\":\\\"Korea, Democratic People's Republic Of\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"KR\\\",\\\"alpha3\\\":\\\"KOR\\\",\\\"countryCallingCodes\\\":[\\\"+82\\\"],\\\"currencies\\\":[\\\"KRW\\\"],\\\"emoji\\\":\\\"🇰🇷\\\",\\\"ioc\\\":\\\"KOR\\\",\\\"languages\\\":[\\\"kor\\\"],\\\"name\\\":\\\"Korea, Republic Of\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"KW\\\",\\\"alpha3\\\":\\\"KWT\\\",\\\"countryCallingCodes\\\":[\\\"+965\\\"],\\\"currencies\\\":[\\\"KWD\\\"],\\\"emoji\\\":\\\"🇰🇼\\\",\\\"ioc\\\":\\\"KUW\\\",\\\"languages\\\":[\\\"ara\\\"],\\\"name\\\":\\\"Kuwait\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"KY\\\",\\\"alpha3\\\":\\\"CYM\\\",\\\"countryCallingCodes\\\":[\\\"+1 345\\\"],\\\"currencies\\\":[\\\"KYD\\\"],\\\"emoji\\\":\\\"🇰🇾\\\",\\\"ioc\\\":\\\"CAY\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Cayman Islands\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"KZ\\\",\\\"alpha3\\\":\\\"KAZ\\\",\\\"countryCallingCodes\\\":[\\\"+7\\\",\\\"+7 6\\\",\\\"+7 7\\\"],\\\"currencies\\\":[\\\"KZT\\\"],\\\"emoji\\\":\\\"🇰🇿\\\",\\\"ioc\\\":\\\"KAZ\\\",\\\"languages\\\":[\\\"kaz\\\",\\\"rus\\\"],\\\"name\\\":\\\"Kazakhstan\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"LA\\\",\\\"alpha3\\\":\\\"LAO\\\",\\\"countryCallingCodes\\\":[\\\"+856\\\"],\\\"currencies\\\":[\\\"LAK\\\"],\\\"emoji\\\":\\\"🇱🇦\\\",\\\"ioc\\\":\\\"LAO\\\",\\\"languages\\\":[\\\"lao\\\"],\\\"name\\\":\\\"Lao People's Democratic Republic\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"LB\\\",\\\"alpha3\\\":\\\"LBN\\\",\\\"countryCallingCodes\\\":[\\\"+961\\\"],\\\"currencies\\\":[\\\"LBP\\\"],\\\"emoji\\\":\\\"🇱🇧\\\",\\\"ioc\\\":\\\"LIB\\\",\\\"languages\\\":[\\\"ara\\\",\\\"hye\\\"],\\\"name\\\":\\\"Lebanon\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"LC\\\",\\\"alpha3\\\":\\\"LCA\\\",\\\"countryCallingCodes\\\":[\\\"+1 758\\\"],\\\"currencies\\\":[\\\"XCD\\\"],\\\"emoji\\\":\\\"🇱🇨\\\",\\\"ioc\\\":\\\"LCA\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Saint Lucia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"LI\\\",\\\"alpha3\\\":\\\"LIE\\\",\\\"countryCallingCodes\\\":[\\\"+423\\\"],\\\"currencies\\\":[\\\"CHF\\\"],\\\"emoji\\\":\\\"🇱🇮\\\",\\\"ioc\\\":\\\"LIE\\\",\\\"languages\\\":[\\\"deu\\\"],\\\"name\\\":\\\"Liechtenstein\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"LK\\\",\\\"alpha3\\\":\\\"LKA\\\",\\\"countryCallingCodes\\\":[\\\"+94\\\"],\\\"currencies\\\":[\\\"LKR\\\"],\\\"emoji\\\":\\\"🇱🇰\\\",\\\"ioc\\\":\\\"SRI\\\",\\\"languages\\\":[\\\"sin\\\",\\\"tam\\\"],\\\"name\\\":\\\"Sri Lanka\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"LR\\\",\\\"alpha3\\\":\\\"LBR\\\",\\\"countryCallingCodes\\\":[\\\"+231\\\"],\\\"currencies\\\":[\\\"LRD\\\"],\\\"emoji\\\":\\\"🇱🇷\\\",\\\"ioc\\\":\\\"LBR\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Liberia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"LS\\\",\\\"alpha3\\\":\\\"LSO\\\",\\\"countryCallingCodes\\\":[\\\"+266\\\"],\\\"currencies\\\":[\\\"LSL\\\",\\\"ZAR\\\"],\\\"emoji\\\":\\\"🇱🇸\\\",\\\"ioc\\\":\\\"LES\\\",\\\"languages\\\":[\\\"eng\\\",\\\"sot\\\"],\\\"name\\\":\\\"Lesotho\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"LT\\\",\\\"alpha3\\\":\\\"LTU\\\",\\\"countryCallingCodes\\\":[\\\"+370\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇱🇹\\\",\\\"ioc\\\":\\\"LTU\\\",\\\"languages\\\":[\\\"lit\\\"],\\\"name\\\":\\\"Lithuania\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"LU\\\",\\\"alpha3\\\":\\\"LUX\\\",\\\"countryCallingCodes\\\":[\\\"+352\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇱🇺\\\",\\\"ioc\\\":\\\"LUX\\\",\\\"languages\\\":[\\\"fra\\\",\\\"deu\\\",\\\"ltz\\\"],\\\"name\\\":\\\"Luxembourg\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"LV\\\",\\\"alpha3\\\":\\\"LVA\\\",\\\"countryCallingCodes\\\":[\\\"+371\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇱🇻\\\",\\\"ioc\\\":\\\"LAT\\\",\\\"languages\\\":[\\\"lav\\\"],\\\"name\\\":\\\"Latvia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"LY\\\",\\\"alpha3\\\":\\\"LBY\\\",\\\"countryCallingCodes\\\":[\\\"+218\\\"],\\\"currencies\\\":[\\\"LYD\\\"],\\\"emoji\\\":\\\"🇱🇾\\\",\\\"ioc\\\":\\\"LBA\\\",\\\"languages\\\":[\\\"ara\\\"],\\\"name\\\":\\\"Libya\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MA\\\",\\\"alpha3\\\":\\\"MAR\\\",\\\"countryCallingCodes\\\":[\\\"+212\\\"],\\\"currencies\\\":[\\\"MAD\\\"],\\\"emoji\\\":\\\"🇲🇦\\\",\\\"ioc\\\":\\\"MAR\\\",\\\"languages\\\":[\\\"ara\\\"],\\\"name\\\":\\\"Morocco\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MC\\\",\\\"alpha3\\\":\\\"MCO\\\",\\\"countryCallingCodes\\\":[\\\"+377\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇲🇨\\\",\\\"ioc\\\":\\\"MON\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"Monaco\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MD\\\",\\\"alpha3\\\":\\\"MDA\\\",\\\"countryCallingCodes\\\":[\\\"+373\\\"],\\\"currencies\\\":[\\\"MDL\\\"],\\\"emoji\\\":\\\"🇲🇩\\\",\\\"ioc\\\":\\\"MDA\\\",\\\"languages\\\":[\\\"ron\\\"],\\\"name\\\":\\\"Moldova\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"ME\\\",\\\"alpha3\\\":\\\"MNE\\\",\\\"countryCallingCodes\\\":[\\\"+382\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇲🇪\\\",\\\"ioc\\\":\\\"MNE\\\",\\\"languages\\\":[\\\"mot\\\"],\\\"name\\\":\\\"Montenegro\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MF\\\",\\\"alpha3\\\":\\\"MAF\\\",\\\"countryCallingCodes\\\":[\\\"+590\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇲🇫\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"Saint Martin\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MG\\\",\\\"alpha3\\\":\\\"MDG\\\",\\\"countryCallingCodes\\\":[\\\"+261\\\"],\\\"currencies\\\":[\\\"MGA\\\"],\\\"emoji\\\":\\\"🇲🇬\\\",\\\"ioc\\\":\\\"MAD\\\",\\\"languages\\\":[\\\"fra\\\",\\\"mlg\\\"],\\\"name\\\":\\\"Madagascar\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MH\\\",\\\"alpha3\\\":\\\"MHL\\\",\\\"countryCallingCodes\\\":[\\\"+692\\\"],\\\"currencies\\\":[\\\"USD\\\"],\\\"emoji\\\":\\\"🇲🇭\\\",\\\"ioc\\\":\\\"MHL\\\",\\\"languages\\\":[\\\"eng\\\",\\\"mah\\\"],\\\"name\\\":\\\"Marshall Islands\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MI\\\",\\\"alpha3\\\":\\\"MID\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Midway Islands\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"MK\\\",\\\"alpha3\\\":\\\"MKD\\\",\\\"countryCallingCodes\\\":[\\\"+389\\\"],\\\"currencies\\\":[\\\"MKD\\\"],\\\"emoji\\\":\\\"🇲🇰\\\",\\\"ioc\\\":\\\"MKD\\\",\\\"languages\\\":[\\\"mkd\\\"],\\\"name\\\":\\\"Macedonia, The Former Yugoslav Republic Of\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"ML\\\",\\\"alpha3\\\":\\\"MLI\\\",\\\"countryCallingCodes\\\":[\\\"+223\\\"],\\\"currencies\\\":[\\\"XOF\\\"],\\\"emoji\\\":\\\"🇲🇱\\\",\\\"ioc\\\":\\\"MLI\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"Mali\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MM\\\",\\\"alpha3\\\":\\\"MMR\\\",\\\"countryCallingCodes\\\":[\\\"+95\\\"],\\\"currencies\\\":[\\\"MMK\\\"],\\\"emoji\\\":\\\"🇲🇲\\\",\\\"ioc\\\":\\\"MYA\\\",\\\"languages\\\":[\\\"mya\\\"],\\\"name\\\":\\\"Myanmar\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MN\\\",\\\"alpha3\\\":\\\"MNG\\\",\\\"countryCallingCodes\\\":[\\\"+976\\\"],\\\"currencies\\\":[\\\"MNT\\\"],\\\"emoji\\\":\\\"🇲🇳\\\",\\\"ioc\\\":\\\"MGL\\\",\\\"languages\\\":[\\\"mon\\\"],\\\"name\\\":\\\"Mongolia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MO\\\",\\\"alpha3\\\":\\\"MAC\\\",\\\"countryCallingCodes\\\":[\\\"+853\\\"],\\\"currencies\\\":[\\\"MOP\\\"],\\\"emoji\\\":\\\"🇲🇴\\\",\\\"ioc\\\":\\\"MAC\\\",\\\"languages\\\":[\\\"zho\\\",\\\"por\\\"],\\\"name\\\":\\\"Macao\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MP\\\",\\\"alpha3\\\":\\\"MNP\\\",\\\"countryCallingCodes\\\":[\\\"+1 670\\\"],\\\"currencies\\\":[\\\"USD\\\"],\\\"emoji\\\":\\\"🇲🇵\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Northern Mariana Islands\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MQ\\\",\\\"alpha3\\\":\\\"MTQ\\\",\\\"countryCallingCodes\\\":[\\\"+596\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇲🇶\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Martinique\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MR\\\",\\\"alpha3\\\":\\\"MRT\\\",\\\"countryCallingCodes\\\":[\\\"+222\\\"],\\\"currencies\\\":[\\\"MRO\\\"],\\\"emoji\\\":\\\"🇲🇷\\\",\\\"ioc\\\":\\\"MTN\\\",\\\"languages\\\":[\\\"ara\\\",\\\"fra\\\"],\\\"name\\\":\\\"Mauritania\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MS\\\",\\\"alpha3\\\":\\\"MSR\\\",\\\"countryCallingCodes\\\":[\\\"+1 664\\\"],\\\"currencies\\\":[\\\"XCD\\\"],\\\"emoji\\\":\\\"🇲🇸\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Montserrat\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MT\\\",\\\"alpha3\\\":\\\"MLT\\\",\\\"countryCallingCodes\\\":[\\\"+356\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇲🇹\\\",\\\"ioc\\\":\\\"MLT\\\",\\\"languages\\\":[\\\"mlt\\\",\\\"eng\\\"],\\\"name\\\":\\\"Malta\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MU\\\",\\\"alpha3\\\":\\\"MUS\\\",\\\"countryCallingCodes\\\":[\\\"+230\\\"],\\\"currencies\\\":[\\\"MUR\\\"],\\\"emoji\\\":\\\"🇲🇺\\\",\\\"ioc\\\":\\\"MRI\\\",\\\"languages\\\":[\\\"eng\\\",\\\"fra\\\"],\\\"name\\\":\\\"Mauritius\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MV\\\",\\\"alpha3\\\":\\\"MDV\\\",\\\"countryCallingCodes\\\":[\\\"+960\\\"],\\\"currencies\\\":[\\\"MVR\\\"],\\\"emoji\\\":\\\"🇲🇻\\\",\\\"ioc\\\":\\\"MDV\\\",\\\"languages\\\":[\\\"div\\\"],\\\"name\\\":\\\"Maldives\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MW\\\",\\\"alpha3\\\":\\\"MWI\\\",\\\"countryCallingCodes\\\":[\\\"+265\\\"],\\\"currencies\\\":[\\\"MWK\\\"],\\\"emoji\\\":\\\"🇲🇼\\\",\\\"ioc\\\":\\\"MAW\\\",\\\"languages\\\":[\\\"eng\\\",\\\"nya\\\"],\\\"name\\\":\\\"Malawi\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MX\\\",\\\"alpha3\\\":\\\"MEX\\\",\\\"countryCallingCodes\\\":[\\\"+52\\\"],\\\"currencies\\\":[\\\"MXN\\\",\\\"MXV\\\"],\\\"emoji\\\":\\\"🇲🇽\\\",\\\"ioc\\\":\\\"MEX\\\",\\\"languages\\\":[\\\"spa\\\"],\\\"name\\\":\\\"Mexico\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MY\\\",\\\"alpha3\\\":\\\"MYS\\\",\\\"countryCallingCodes\\\":[\\\"+60\\\"],\\\"currencies\\\":[\\\"MYR\\\"],\\\"emoji\\\":\\\"🇲🇾\\\",\\\"ioc\\\":\\\"MAS\\\",\\\"languages\\\":[\\\"msa\\\",\\\"eng\\\"],\\\"name\\\":\\\"Malaysia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"MZ\\\",\\\"alpha3\\\":\\\"MOZ\\\",\\\"countryCallingCodes\\\":[\\\"+258\\\"],\\\"currencies\\\":[\\\"MZN\\\"],\\\"emoji\\\":\\\"🇲🇿\\\",\\\"ioc\\\":\\\"MOZ\\\",\\\"languages\\\":[\\\"por\\\"],\\\"name\\\":\\\"Mozambique\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"NA\\\",\\\"alpha3\\\":\\\"NAM\\\",\\\"countryCallingCodes\\\":[\\\"+264\\\"],\\\"currencies\\\":[\\\"NAD\\\",\\\"ZAR\\\"],\\\"emoji\\\":\\\"🇳🇦\\\",\\\"ioc\\\":\\\"NAM\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Namibia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"NC\\\",\\\"alpha3\\\":\\\"NCL\\\",\\\"countryCallingCodes\\\":[\\\"+687\\\"],\\\"currencies\\\":[\\\"XPF\\\"],\\\"emoji\\\":\\\"🇳🇨\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"New Caledonia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"NE\\\",\\\"alpha3\\\":\\\"NER\\\",\\\"countryCallingCodes\\\":[\\\"+227\\\"],\\\"currencies\\\":[\\\"XOF\\\"],\\\"emoji\\\":\\\"🇳🇪\\\",\\\"ioc\\\":\\\"NIG\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"Niger\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"NF\\\",\\\"alpha3\\\":\\\"NFK\\\",\\\"countryCallingCodes\\\":[\\\"+672\\\"],\\\"currencies\\\":[\\\"AUD\\\"],\\\"emoji\\\":\\\"🇳🇫\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Norfolk Island\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"NG\\\",\\\"alpha3\\\":\\\"NGA\\\",\\\"countryCallingCodes\\\":[\\\"+234\\\"],\\\"currencies\\\":[\\\"NGN\\\"],\\\"emoji\\\":\\\"🇳🇬\\\",\\\"ioc\\\":\\\"NGR\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Nigeria\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"NH\\\",\\\"alpha3\\\":\\\"NHB\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"New Hebrides\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"NI\\\",\\\"alpha3\\\":\\\"NIC\\\",\\\"countryCallingCodes\\\":[\\\"+505\\\"],\\\"currencies\\\":[\\\"NIO\\\"],\\\"emoji\\\":\\\"🇳🇮\\\",\\\"ioc\\\":\\\"NCA\\\",\\\"languages\\\":[\\\"spa\\\"],\\\"name\\\":\\\"Nicaragua\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"NL\\\",\\\"alpha3\\\":\\\"NLD\\\",\\\"countryCallingCodes\\\":[\\\"+31\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇳🇱\\\",\\\"ioc\\\":\\\"NED\\\",\\\"languages\\\":[\\\"nld\\\"],\\\"name\\\":\\\"Netherlands\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"NO\\\",\\\"alpha3\\\":\\\"NOR\\\",\\\"countryCallingCodes\\\":[\\\"+47\\\"],\\\"currencies\\\":[\\\"NOK\\\"],\\\"emoji\\\":\\\"🇳🇴\\\",\\\"ioc\\\":\\\"NOR\\\",\\\"languages\\\":[\\\"nor\\\"],\\\"name\\\":\\\"Norway\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"NP\\\",\\\"alpha3\\\":\\\"NPL\\\",\\\"countryCallingCodes\\\":[\\\"+977\\\"],\\\"currencies\\\":[\\\"NPR\\\"],\\\"emoji\\\":\\\"🇳🇵\\\",\\\"ioc\\\":\\\"NEP\\\",\\\"languages\\\":[\\\"nep\\\"],\\\"name\\\":\\\"Nepal\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"NQ\\\",\\\"alpha3\\\":\\\"ATN\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Dronning Maud Land\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"NR\\\",\\\"alpha3\\\":\\\"NRU\\\",\\\"countryCallingCodes\\\":[\\\"+674\\\"],\\\"currencies\\\":[\\\"AUD\\\"],\\\"emoji\\\":\\\"🇳🇷\\\",\\\"ioc\\\":\\\"NRU\\\",\\\"languages\\\":[\\\"eng\\\",\\\"nau\\\"],\\\"name\\\":\\\"Nauru\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"NT\\\",\\\"alpha3\\\":\\\"NTZ\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Neutral Zone\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"NU\\\",\\\"alpha3\\\":\\\"NIU\\\",\\\"countryCallingCodes\\\":[\\\"+683\\\"],\\\"currencies\\\":[\\\"NZD\\\"],\\\"emoji\\\":\\\"🇳🇺\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Niue\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"NZ\\\",\\\"alpha3\\\":\\\"NZL\\\",\\\"countryCallingCodes\\\":[\\\"+64\\\"],\\\"currencies\\\":[\\\"NZD\\\"],\\\"emoji\\\":\\\"🇳🇿\\\",\\\"ioc\\\":\\\"NZL\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"New Zealand\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"OM\\\",\\\"alpha3\\\":\\\"OMN\\\",\\\"countryCallingCodes\\\":[\\\"+968\\\"],\\\"currencies\\\":[\\\"OMR\\\"],\\\"emoji\\\":\\\"🇴🇲\\\",\\\"ioc\\\":\\\"OMA\\\",\\\"languages\\\":[\\\"ara\\\"],\\\"name\\\":\\\"Oman\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"PA\\\",\\\"alpha3\\\":\\\"PAN\\\",\\\"countryCallingCodes\\\":[\\\"+507\\\"],\\\"currencies\\\":[\\\"PAB\\\",\\\"USD\\\"],\\\"emoji\\\":\\\"🇵🇦\\\",\\\"ioc\\\":\\\"PAN\\\",\\\"languages\\\":[\\\"spa\\\"],\\\"name\\\":\\\"Panama\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"PC\\\",\\\"alpha3\\\":\\\"PCI\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Pacific Islands, Trust Territory of the\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"PE\\\",\\\"alpha3\\\":\\\"PER\\\",\\\"countryCallingCodes\\\":[\\\"+51\\\"],\\\"currencies\\\":[\\\"PEN\\\"],\\\"emoji\\\":\\\"🇵🇪\\\",\\\"ioc\\\":\\\"PER\\\",\\\"languages\\\":[\\\"spa\\\",\\\"aym\\\",\\\"que\\\"],\\\"name\\\":\\\"Peru\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"PF\\\",\\\"alpha3\\\":\\\"PYF\\\",\\\"countryCallingCodes\\\":[\\\"+689\\\"],\\\"currencies\\\":[\\\"XPF\\\"],\\\"emoji\\\":\\\"🇵🇫\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"French Polynesia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"PG\\\",\\\"alpha3\\\":\\\"PNG\\\",\\\"countryCallingCodes\\\":[\\\"+675\\\"],\\\"currencies\\\":[\\\"PGK\\\"],\\\"emoji\\\":\\\"🇵🇬\\\",\\\"ioc\\\":\\\"PNG\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Papua New Guinea\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"PH\\\",\\\"alpha3\\\":\\\"PHL\\\",\\\"countryCallingCodes\\\":[\\\"+63\\\"],\\\"currencies\\\":[\\\"PHP\\\"],\\\"emoji\\\":\\\"🇵🇭\\\",\\\"ioc\\\":\\\"PHI\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Philippines\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"PK\\\",\\\"alpha3\\\":\\\"PAK\\\",\\\"countryCallingCodes\\\":[\\\"+92\\\"],\\\"currencies\\\":[\\\"PKR\\\"],\\\"emoji\\\":\\\"🇵🇰\\\",\\\"ioc\\\":\\\"PAK\\\",\\\"languages\\\":[\\\"urd\\\",\\\"eng\\\"],\\\"name\\\":\\\"Pakistan\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"PL\\\",\\\"alpha3\\\":\\\"POL\\\",\\\"countryCallingCodes\\\":[\\\"+48\\\"],\\\"currencies\\\":[\\\"PLN\\\"],\\\"emoji\\\":\\\"🇵🇱\\\",\\\"ioc\\\":\\\"POL\\\",\\\"languages\\\":[\\\"pol\\\"],\\\"name\\\":\\\"Poland\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"PM\\\",\\\"alpha3\\\":\\\"SPM\\\",\\\"countryCallingCodes\\\":[\\\"+508\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇵🇲\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Saint Pierre And Miquelon\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"PN\\\",\\\"alpha3\\\":\\\"PCN\\\",\\\"countryCallingCodes\\\":[\\\"+872\\\"],\\\"currencies\\\":[\\\"NZD\\\"],\\\"emoji\\\":\\\"🇵🇳\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Pitcairn\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"PR\\\",\\\"alpha3\\\":\\\"PRI\\\",\\\"countryCallingCodes\\\":[\\\"+1 787\\\",\\\"+1 939\\\"],\\\"currencies\\\":[\\\"USD\\\"],\\\"emoji\\\":\\\"🇵🇷\\\",\\\"ioc\\\":\\\"PUR\\\",\\\"languages\\\":[\\\"spa\\\",\\\"eng\\\"],\\\"name\\\":\\\"Puerto Rico\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"PS\\\",\\\"alpha3\\\":\\\"PSE\\\",\\\"countryCallingCodes\\\":[\\\"+970\\\"],\\\"currencies\\\":[\\\"JOD\\\",\\\"EGP\\\",\\\"ILS\\\"],\\\"emoji\\\":\\\"🇵🇸\\\",\\\"ioc\\\":\\\"PLE\\\",\\\"languages\\\":[\\\"ara\\\"],\\\"name\\\":\\\"Palestinian Territory, Occupied\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"PT\\\",\\\"alpha3\\\":\\\"PRT\\\",\\\"countryCallingCodes\\\":[\\\"+351\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇵🇹\\\",\\\"ioc\\\":\\\"POR\\\",\\\"languages\\\":[\\\"por\\\"],\\\"name\\\":\\\"Portugal\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"PU\\\",\\\"alpha3\\\":\\\"PUS\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"U.S. Miscellaneous Pacific Islands\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"PW\\\",\\\"alpha3\\\":\\\"PLW\\\",\\\"countryCallingCodes\\\":[\\\"+680\\\"],\\\"currencies\\\":[\\\"USD\\\"],\\\"emoji\\\":\\\"🇵🇼\\\",\\\"ioc\\\":\\\"PLW\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Palau\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"PY\\\",\\\"alpha3\\\":\\\"PRY\\\",\\\"countryCallingCodes\\\":[\\\"+595\\\"],\\\"currencies\\\":[\\\"PYG\\\"],\\\"emoji\\\":\\\"🇵🇾\\\",\\\"ioc\\\":\\\"PAR\\\",\\\"languages\\\":[\\\"spa\\\"],\\\"name\\\":\\\"Paraguay\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"PZ\\\",\\\"alpha3\\\":\\\"PCZ\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Panama Canal Zone\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"QA\\\",\\\"alpha3\\\":\\\"QAT\\\",\\\"countryCallingCodes\\\":[\\\"+974\\\"],\\\"currencies\\\":[\\\"QAR\\\"],\\\"emoji\\\":\\\"🇶🇦\\\",\\\"ioc\\\":\\\"QAT\\\",\\\"languages\\\":[\\\"ara\\\"],\\\"name\\\":\\\"Qatar\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"RE\\\",\\\"alpha3\\\":\\\"REU\\\",\\\"countryCallingCodes\\\":[\\\"+262\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇷🇪\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"Reunion\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"RH\\\",\\\"alpha3\\\":\\\"RHO\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Southern Rhodesia\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"RO\\\",\\\"alpha3\\\":\\\"ROU\\\",\\\"countryCallingCodes\\\":[\\\"+40\\\"],\\\"currencies\\\":[\\\"RON\\\"],\\\"emoji\\\":\\\"🇷🇴\\\",\\\"ioc\\\":\\\"ROU\\\",\\\"languages\\\":[\\\"ron\\\"],\\\"name\\\":\\\"Romania\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"RS\\\",\\\"alpha3\\\":\\\"SRB\\\",\\\"countryCallingCodes\\\":[\\\"+381\\\"],\\\"currencies\\\":[\\\"RSD\\\"],\\\"emoji\\\":\\\"🇷🇸\\\",\\\"ioc\\\":\\\"SRB\\\",\\\"languages\\\":[\\\"srp\\\"],\\\"name\\\":\\\"Serbia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"RU\\\",\\\"alpha3\\\":\\\"RUS\\\",\\\"countryCallingCodes\\\":[\\\"+7\\\",\\\"+7 3\\\",\\\"+7 4\\\",\\\"+7 8\\\"],\\\"currencies\\\":[\\\"RUB\\\"],\\\"emoji\\\":\\\"🇷🇺\\\",\\\"ioc\\\":\\\"RUS\\\",\\\"languages\\\":[\\\"rus\\\"],\\\"name\\\":\\\"Russian Federation\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"RW\\\",\\\"alpha3\\\":\\\"RWA\\\",\\\"countryCallingCodes\\\":[\\\"+250\\\"],\\\"currencies\\\":[\\\"RWF\\\"],\\\"emoji\\\":\\\"🇷🇼\\\",\\\"ioc\\\":\\\"RWA\\\",\\\"languages\\\":[\\\"eng\\\",\\\"fra\\\",\\\"kin\\\"],\\\"name\\\":\\\"Rwanda\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"SA\\\",\\\"alpha3\\\":\\\"SAU\\\",\\\"countryCallingCodes\\\":[\\\"+966\\\"],\\\"currencies\\\":[\\\"SAR\\\"],\\\"emoji\\\":\\\"🇸🇦\\\",\\\"ioc\\\":\\\"KSA\\\",\\\"languages\\\":[\\\"ara\\\"],\\\"name\\\":\\\"Saudi Arabia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"SB\\\",\\\"alpha3\\\":\\\"SLB\\\",\\\"countryCallingCodes\\\":[\\\"+677\\\"],\\\"currencies\\\":[\\\"SBD\\\"],\\\"emoji\\\":\\\"🇸🇧\\\",\\\"ioc\\\":\\\"SOL\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Solomon Islands\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"SC\\\",\\\"alpha3\\\":\\\"SYC\\\",\\\"countryCallingCodes\\\":[\\\"+248\\\"],\\\"currencies\\\":[\\\"SCR\\\"],\\\"emoji\\\":\\\"🇸🇨\\\",\\\"ioc\\\":\\\"SEY\\\",\\\"languages\\\":[\\\"eng\\\",\\\"fra\\\"],\\\"name\\\":\\\"Seychelles\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"SD\\\",\\\"alpha3\\\":\\\"SDN\\\",\\\"countryCallingCodes\\\":[\\\"+249\\\"],\\\"currencies\\\":[\\\"SDG\\\"],\\\"emoji\\\":\\\"🇸🇩\\\",\\\"ioc\\\":\\\"SUD\\\",\\\"languages\\\":[\\\"ara\\\",\\\"eng\\\"],\\\"name\\\":\\\"Sudan\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"SE\\\",\\\"alpha3\\\":\\\"SWE\\\",\\\"countryCallingCodes\\\":[\\\"+46\\\"],\\\"currencies\\\":[\\\"SEK\\\"],\\\"emoji\\\":\\\"🇸🇪\\\",\\\"ioc\\\":\\\"SWE\\\",\\\"languages\\\":[\\\"swe\\\"],\\\"name\\\":\\\"Sweden\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"SG\\\",\\\"alpha3\\\":\\\"SGP\\\",\\\"countryCallingCodes\\\":[\\\"+65\\\"],\\\"currencies\\\":[\\\"SGD\\\"],\\\"emoji\\\":\\\"🇸🇬\\\",\\\"ioc\\\":\\\"SIN\\\",\\\"languages\\\":[\\\"eng\\\",\\\"zho\\\",\\\"msa\\\",\\\"tam\\\"],\\\"name\\\":\\\"Singapore\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"SH\\\",\\\"alpha3\\\":\\\"SHN\\\",\\\"countryCallingCodes\\\":[\\\"+290\\\"],\\\"currencies\\\":[\\\"SHP\\\"],\\\"emoji\\\":\\\"🇸🇭\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Saint Helena, Ascension And Tristan Da Cunha\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"SI\\\",\\\"alpha3\\\":\\\"SVN\\\",\\\"countryCallingCodes\\\":[\\\"+386\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇸🇮\\\",\\\"ioc\\\":\\\"SLO\\\",\\\"languages\\\":[\\\"slv\\\"],\\\"name\\\":\\\"Slovenia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"SJ\\\",\\\"alpha3\\\":\\\"SJM\\\",\\\"countryCallingCodes\\\":[\\\"+47\\\"],\\\"currencies\\\":[\\\"NOK\\\"],\\\"emoji\\\":\\\"🇸🇯\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Svalbard And Jan Mayen\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"SK\\\",\\\"alpha3\\\":\\\"SVK\\\",\\\"countryCallingCodes\\\":[\\\"+421\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇸🇰\\\",\\\"ioc\\\":\\\"SVK\\\",\\\"languages\\\":[\\\"slk\\\"],\\\"name\\\":\\\"Slovakia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"SK\\\",\\\"alpha3\\\":\\\"SKM\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Sikkim\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"SL\\\",\\\"alpha3\\\":\\\"SLE\\\",\\\"countryCallingCodes\\\":[\\\"+232\\\"],\\\"currencies\\\":[\\\"SLL\\\"],\\\"emoji\\\":\\\"🇸🇱\\\",\\\"ioc\\\":\\\"SLE\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Sierra Leone\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"SM\\\",\\\"alpha3\\\":\\\"SMR\\\",\\\"countryCallingCodes\\\":[\\\"+378\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇸🇲\\\",\\\"ioc\\\":\\\"SMR\\\",\\\"languages\\\":[\\\"ita\\\"],\\\"name\\\":\\\"San Marino\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"SN\\\",\\\"alpha3\\\":\\\"SEN\\\",\\\"countryCallingCodes\\\":[\\\"+221\\\"],\\\"currencies\\\":[\\\"XOF\\\"],\\\"emoji\\\":\\\"🇸🇳\\\",\\\"ioc\\\":\\\"SEN\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"Senegal\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"SO\\\",\\\"alpha3\\\":\\\"SOM\\\",\\\"countryCallingCodes\\\":[\\\"+252\\\"],\\\"currencies\\\":[\\\"SOS\\\"],\\\"emoji\\\":\\\"🇸🇴\\\",\\\"ioc\\\":\\\"SOM\\\",\\\"languages\\\":[\\\"som\\\"],\\\"name\\\":\\\"Somalia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"SR\\\",\\\"alpha3\\\":\\\"SUR\\\",\\\"countryCallingCodes\\\":[\\\"+597\\\"],\\\"currencies\\\":[\\\"SRD\\\"],\\\"emoji\\\":\\\"🇸🇷\\\",\\\"ioc\\\":\\\"SUR\\\",\\\"languages\\\":[\\\"nld\\\"],\\\"name\\\":\\\"Suriname\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"SS\\\",\\\"alpha3\\\":\\\"SSD\\\",\\\"countryCallingCodes\\\":[\\\"+211\\\"],\\\"currencies\\\":[\\\"SSP\\\"],\\\"emoji\\\":\\\"🇸🇸\\\",\\\"ioc\\\":\\\"SSD\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"South Sudan\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"ST\\\",\\\"alpha3\\\":\\\"STP\\\",\\\"countryCallingCodes\\\":[\\\"+239\\\"],\\\"currencies\\\":[\\\"STD\\\"],\\\"emoji\\\":\\\"🇸🇹\\\",\\\"ioc\\\":\\\"STP\\\",\\\"languages\\\":[\\\"por\\\"],\\\"name\\\":\\\"Sao Tome and Principe\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"SU\\\",\\\"alpha3\\\":\\\"\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[\\\"RUB\\\"],\\\"emoji\\\":\\\"\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"rus\\\"],\\\"name\\\":\\\"USSR\\\",\\\"status\\\":\\\"reserved\\\"},{\\\"alpha2\\\":\\\"SV\\\",\\\"alpha3\\\":\\\"SLV\\\",\\\"countryCallingCodes\\\":[\\\"+503\\\"],\\\"currencies\\\":[\\\"USD\\\"],\\\"emoji\\\":\\\"🇸🇻\\\",\\\"ioc\\\":\\\"ESA\\\",\\\"languages\\\":[\\\"spa\\\"],\\\"name\\\":\\\"El Salvador\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"SX\\\",\\\"alpha3\\\":\\\"SXM\\\",\\\"countryCallingCodes\\\":[\\\"+1 721\\\"],\\\"currencies\\\":[\\\"ANG\\\"],\\\"emoji\\\":\\\"🇸🇽\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"nld\\\"],\\\"name\\\":\\\"Sint Maarten\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"SY\\\",\\\"alpha3\\\":\\\"SYR\\\",\\\"countryCallingCodes\\\":[\\\"+963\\\"],\\\"currencies\\\":[\\\"SYP\\\"],\\\"emoji\\\":\\\"🇸🇾\\\",\\\"ioc\\\":\\\"SYR\\\",\\\"languages\\\":[\\\"ara\\\"],\\\"name\\\":\\\"Syrian Arab Republic\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"SZ\\\",\\\"alpha3\\\":\\\"SWZ\\\",\\\"countryCallingCodes\\\":[\\\"+268\\\"],\\\"currencies\\\":[\\\"SZL\\\"],\\\"emoji\\\":\\\"🇸🇿\\\",\\\"ioc\\\":\\\"SWZ\\\",\\\"languages\\\":[\\\"eng\\\",\\\"ssw\\\"],\\\"name\\\":\\\"Swaziland\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"TA\\\",\\\"alpha3\\\":\\\"\\\",\\\"countryCallingCodes\\\":[\\\"+290\\\"],\\\"currencies\\\":[\\\"GBP\\\"],\\\"emoji\\\":\\\"\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Tristan de Cunha\\\",\\\"status\\\":\\\"reserved\\\"},{\\\"alpha2\\\":\\\"TC\\\",\\\"alpha3\\\":\\\"TCA\\\",\\\"countryCallingCodes\\\":[\\\"+1 649\\\"],\\\"currencies\\\":[\\\"USD\\\"],\\\"emoji\\\":\\\"🇹🇨\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Turks And Caicos Islands\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"TD\\\",\\\"alpha3\\\":\\\"TCD\\\",\\\"countryCallingCodes\\\":[\\\"+235\\\"],\\\"currencies\\\":[\\\"XAF\\\"],\\\"emoji\\\":\\\"🇹🇩\\\",\\\"ioc\\\":\\\"CHA\\\",\\\"languages\\\":[\\\"ara\\\",\\\"fra\\\"],\\\"name\\\":\\\"Chad\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"TF\\\",\\\"alpha3\\\":\\\"ATF\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇹🇫\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"French Southern Territories\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"TG\\\",\\\"alpha3\\\":\\\"TGO\\\",\\\"countryCallingCodes\\\":[\\\"+228\\\"],\\\"currencies\\\":[\\\"XOF\\\"],\\\"emoji\\\":\\\"🇹🇬\\\",\\\"ioc\\\":\\\"TOG\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"Togo\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"TH\\\",\\\"alpha3\\\":\\\"THA\\\",\\\"countryCallingCodes\\\":[\\\"+66\\\"],\\\"currencies\\\":[\\\"THB\\\"],\\\"emoji\\\":\\\"🇹🇭\\\",\\\"ioc\\\":\\\"THA\\\",\\\"languages\\\":[\\\"tha\\\"],\\\"name\\\":\\\"Thailand\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"TJ\\\",\\\"alpha3\\\":\\\"TJK\\\",\\\"countryCallingCodes\\\":[\\\"+992\\\"],\\\"currencies\\\":[\\\"TJS\\\"],\\\"emoji\\\":\\\"🇹🇯\\\",\\\"ioc\\\":\\\"TJK\\\",\\\"languages\\\":[\\\"tgk\\\",\\\"rus\\\"],\\\"name\\\":\\\"Tajikistan\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"TK\\\",\\\"alpha3\\\":\\\"TKL\\\",\\\"countryCallingCodes\\\":[\\\"+690\\\"],\\\"currencies\\\":[\\\"NZD\\\"],\\\"emoji\\\":\\\"🇹🇰\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Tokelau\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"TL\\\",\\\"alpha3\\\":\\\"TLS\\\",\\\"countryCallingCodes\\\":[\\\"+670\\\"],\\\"currencies\\\":[\\\"USD\\\"],\\\"emoji\\\":\\\"🇹🇱\\\",\\\"ioc\\\":\\\"TLS\\\",\\\"languages\\\":[\\\"por\\\"],\\\"name\\\":\\\"Timor-Leste, Democratic Republic of\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"TM\\\",\\\"alpha3\\\":\\\"TKM\\\",\\\"countryCallingCodes\\\":[\\\"+993\\\"],\\\"currencies\\\":[\\\"TMT\\\"],\\\"emoji\\\":\\\"🇹🇲\\\",\\\"ioc\\\":\\\"TKM\\\",\\\"languages\\\":[\\\"tuk\\\",\\\"rus\\\"],\\\"name\\\":\\\"Turkmenistan\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"TN\\\",\\\"alpha3\\\":\\\"TUN\\\",\\\"countryCallingCodes\\\":[\\\"+216\\\"],\\\"currencies\\\":[\\\"TND\\\"],\\\"emoji\\\":\\\"🇹🇳\\\",\\\"ioc\\\":\\\"TUN\\\",\\\"languages\\\":[\\\"ara\\\"],\\\"name\\\":\\\"Tunisia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"TO\\\",\\\"alpha3\\\":\\\"TON\\\",\\\"countryCallingCodes\\\":[\\\"+676\\\"],\\\"currencies\\\":[\\\"TOP\\\"],\\\"emoji\\\":\\\"🇹🇴\\\",\\\"ioc\\\":\\\"TGA\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Tonga\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"TP\\\",\\\"alpha3\\\":\\\"TMP\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"East Timor\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"TR\\\",\\\"alpha3\\\":\\\"TUR\\\",\\\"countryCallingCodes\\\":[\\\"+90\\\"],\\\"currencies\\\":[\\\"TRY\\\"],\\\"emoji\\\":\\\"🇹🇷\\\",\\\"ioc\\\":\\\"TUR\\\",\\\"languages\\\":[\\\"tur\\\"],\\\"name\\\":\\\"Turkey\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"TT\\\",\\\"alpha3\\\":\\\"TTO\\\",\\\"countryCallingCodes\\\":[\\\"+1 868\\\"],\\\"currencies\\\":[\\\"TTD\\\"],\\\"emoji\\\":\\\"🇹🇹\\\",\\\"ioc\\\":\\\"TTO\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Trinidad And Tobago\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"TV\\\",\\\"alpha3\\\":\\\"TUV\\\",\\\"countryCallingCodes\\\":[\\\"+688\\\"],\\\"currencies\\\":[\\\"AUD\\\"],\\\"emoji\\\":\\\"🇹🇻\\\",\\\"ioc\\\":\\\"TUV\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Tuvalu\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"TW\\\",\\\"alpha3\\\":\\\"TWN\\\",\\\"countryCallingCodes\\\":[\\\"+886\\\"],\\\"currencies\\\":[\\\"TWD\\\"],\\\"emoji\\\":\\\"🇹🇼\\\",\\\"ioc\\\":\\\"TPE\\\",\\\"languages\\\":[\\\"zho\\\"],\\\"name\\\":\\\"Taiwan\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"TZ\\\",\\\"alpha3\\\":\\\"TZA\\\",\\\"countryCallingCodes\\\":[\\\"+255\\\"],\\\"currencies\\\":[\\\"TZS\\\"],\\\"emoji\\\":\\\"🇹🇿\\\",\\\"ioc\\\":\\\"TAN\\\",\\\"languages\\\":[\\\"swa\\\",\\\"eng\\\"],\\\"name\\\":\\\"Tanzania, United Republic Of\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"UA\\\",\\\"alpha3\\\":\\\"UKR\\\",\\\"countryCallingCodes\\\":[\\\"+380\\\"],\\\"currencies\\\":[\\\"UAH\\\"],\\\"emoji\\\":\\\"🇺🇦\\\",\\\"ioc\\\":\\\"UKR\\\",\\\"languages\\\":[\\\"ukr\\\",\\\"rus\\\"],\\\"name\\\":\\\"Ukraine\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"UG\\\",\\\"alpha3\\\":\\\"UGA\\\",\\\"countryCallingCodes\\\":[\\\"+256\\\"],\\\"currencies\\\":[\\\"UGX\\\"],\\\"emoji\\\":\\\"🇺🇬\\\",\\\"ioc\\\":\\\"UGA\\\",\\\"languages\\\":[\\\"eng\\\",\\\"swa\\\"],\\\"name\\\":\\\"Uganda\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"UK\\\",\\\"alpha3\\\":\\\"\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[\\\"GBP\\\"],\\\"emoji\\\":\\\"\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"eng\\\",\\\"cor\\\",\\\"gle\\\",\\\"gla\\\",\\\"cym\\\"],\\\"name\\\":\\\"United Kingdom\\\",\\\"status\\\":\\\"reserved\\\"},{\\\"alpha2\\\":\\\"UM\\\",\\\"alpha3\\\":\\\"UMI\\\",\\\"countryCallingCodes\\\":[\\\"+1\\\"],\\\"currencies\\\":[\\\"USD\\\"],\\\"emoji\\\":\\\"🇺🇲\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"United States Minor Outlying Islands\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"US\\\",\\\"alpha3\\\":\\\"USA\\\",\\\"countryCallingCodes\\\":[\\\"+1\\\"],\\\"currencies\\\":[\\\"USD\\\"],\\\"emoji\\\":\\\"🇺🇸\\\",\\\"ioc\\\":\\\"USA\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"United States\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"UY\\\",\\\"alpha3\\\":\\\"URY\\\",\\\"countryCallingCodes\\\":[\\\"+598\\\"],\\\"currencies\\\":[\\\"UYU\\\",\\\"UYI\\\"],\\\"emoji\\\":\\\"🇺🇾\\\",\\\"ioc\\\":\\\"URU\\\",\\\"languages\\\":[\\\"spa\\\"],\\\"name\\\":\\\"Uruguay\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"UZ\\\",\\\"alpha3\\\":\\\"UZB\\\",\\\"countryCallingCodes\\\":[\\\"+998\\\"],\\\"currencies\\\":[\\\"UZS\\\"],\\\"emoji\\\":\\\"🇺🇿\\\",\\\"ioc\\\":\\\"UZB\\\",\\\"languages\\\":[\\\"uzb\\\",\\\"rus\\\"],\\\"name\\\":\\\"Uzbekistan\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"VA\\\",\\\"alpha3\\\":\\\"VAT\\\",\\\"countryCallingCodes\\\":[\\\"+379\\\",\\\"+39\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇻🇦\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"ita\\\"],\\\"name\\\":\\\"Vatican City State\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"VC\\\",\\\"alpha3\\\":\\\"VCT\\\",\\\"countryCallingCodes\\\":[\\\"+1 784\\\"],\\\"currencies\\\":[\\\"XCD\\\"],\\\"emoji\\\":\\\"🇻🇨\\\",\\\"ioc\\\":\\\"VIN\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Saint Vincent And The Grenadines\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"VD\\\",\\\"alpha3\\\":\\\"VDR\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Viet-Nam, Democratic Republic of\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"VE\\\",\\\"alpha3\\\":\\\"VEN\\\",\\\"countryCallingCodes\\\":[\\\"+58\\\"],\\\"currencies\\\":[\\\"VEF\\\"],\\\"emoji\\\":\\\"🇻🇪\\\",\\\"ioc\\\":\\\"VEN\\\",\\\"languages\\\":[\\\"spa\\\"],\\\"name\\\":\\\"Venezuela, Bolivarian Republic Of\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"VG\\\",\\\"alpha3\\\":\\\"VGB\\\",\\\"countryCallingCodes\\\":[\\\"+1 284\\\"],\\\"currencies\\\":[\\\"USD\\\"],\\\"emoji\\\":\\\"🇻🇬\\\",\\\"ioc\\\":\\\"IVB\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Virgin Islands (British)\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"VI\\\",\\\"alpha3\\\":\\\"VIR\\\",\\\"countryCallingCodes\\\":[\\\"+1 340\\\"],\\\"currencies\\\":[\\\"USD\\\"],\\\"emoji\\\":\\\"🇻🇮\\\",\\\"ioc\\\":\\\"ISV\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Virgin Islands (US)\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"VN\\\",\\\"alpha3\\\":\\\"VNM\\\",\\\"countryCallingCodes\\\":[\\\"+84\\\"],\\\"currencies\\\":[\\\"VND\\\"],\\\"emoji\\\":\\\"🇻🇳\\\",\\\"ioc\\\":\\\"VIE\\\",\\\"languages\\\":[\\\"vie\\\"],\\\"name\\\":\\\"Viet Nam\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"VU\\\",\\\"alpha3\\\":\\\"VUT\\\",\\\"countryCallingCodes\\\":[\\\"+678\\\"],\\\"currencies\\\":[\\\"VUV\\\"],\\\"emoji\\\":\\\"🇻🇺\\\",\\\"ioc\\\":\\\"VAN\\\",\\\"languages\\\":[\\\"bis\\\",\\\"eng\\\",\\\"fra\\\"],\\\"name\\\":\\\"Vanuatu\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"WF\\\",\\\"alpha3\\\":\\\"WLF\\\",\\\"countryCallingCodes\\\":[\\\"+681\\\"],\\\"currencies\\\":[\\\"XPF\\\"],\\\"emoji\\\":\\\"🇼🇫\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"Wallis And Futuna\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"WK\\\",\\\"alpha3\\\":\\\"WAK\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Wake Island\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"WS\\\",\\\"alpha3\\\":\\\"WSM\\\",\\\"countryCallingCodes\\\":[\\\"+685\\\"],\\\"currencies\\\":[\\\"WST\\\"],\\\"emoji\\\":\\\"🇼🇸\\\",\\\"ioc\\\":\\\"SAM\\\",\\\"languages\\\":[\\\"eng\\\",\\\"smo\\\"],\\\"name\\\":\\\"Samoa\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"XK\\\",\\\"alpha3\\\":\\\"\\\",\\\"countryCallingCodes\\\":[\\\"+383\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"\\\",\\\"ioc\\\":\\\"KOS\\\",\\\"languages\\\":[\\\"sqi\\\",\\\"srp\\\",\\\"bos\\\",\\\"tur\\\",\\\"rom\\\"],\\\"name\\\":\\\"Kosovo\\\",\\\"status\\\":\\\"user assigned\\\"},{\\\"alpha2\\\":\\\"YD\\\",\\\"alpha3\\\":\\\"YMD\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Yemen, Democratic\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"YE\\\",\\\"alpha3\\\":\\\"YEM\\\",\\\"countryCallingCodes\\\":[\\\"+967\\\"],\\\"currencies\\\":[\\\"YER\\\"],\\\"emoji\\\":\\\"🇾🇪\\\",\\\"ioc\\\":\\\"YEM\\\",\\\"languages\\\":[\\\"ara\\\"],\\\"name\\\":\\\"Yemen\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"YT\\\",\\\"alpha3\\\":\\\"MYT\\\",\\\"countryCallingCodes\\\":[\\\"+262\\\"],\\\"currencies\\\":[\\\"EUR\\\"],\\\"emoji\\\":\\\"🇾🇹\\\",\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[\\\"fra\\\"],\\\"name\\\":\\\"Mayotte\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"YU\\\",\\\"alpha3\\\":\\\"YUG\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Yugoslavia\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"ZA\\\",\\\"alpha3\\\":\\\"ZAF\\\",\\\"countryCallingCodes\\\":[\\\"+27\\\"],\\\"currencies\\\":[\\\"ZAR\\\"],\\\"emoji\\\":\\\"🇿🇦\\\",\\\"ioc\\\":\\\"RSA\\\",\\\"languages\\\":[\\\"afr\\\",\\\"eng\\\",\\\"nbl\\\",\\\"som\\\",\\\"tso\\\",\\\"ven\\\",\\\"xho\\\",\\\"zul\\\"],\\\"name\\\":\\\"South Africa\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"ZM\\\",\\\"alpha3\\\":\\\"ZMB\\\",\\\"countryCallingCodes\\\":[\\\"+260\\\"],\\\"currencies\\\":[\\\"ZMW\\\"],\\\"emoji\\\":\\\"🇿🇲\\\",\\\"ioc\\\":\\\"ZAM\\\",\\\"languages\\\":[\\\"eng\\\"],\\\"name\\\":\\\"Zambia\\\",\\\"status\\\":\\\"assigned\\\"},{\\\"alpha2\\\":\\\"ZR\\\",\\\"alpha3\\\":\\\"ZAR\\\",\\\"countryCallingCodes\\\":[],\\\"currencies\\\":[],\\\"ioc\\\":\\\"\\\",\\\"languages\\\":[],\\\"name\\\":\\\"Zaire\\\",\\\"status\\\":\\\"deleted\\\"},{\\\"alpha2\\\":\\\"ZW\\\",\\\"alpha3\\\":\\\"ZWE\\\",\\\"countryCallingCodes\\\":[\\\"+263\\\"],\\\"currencies\\\":[\\\"USD\\\",\\\"ZAR\\\",\\\"BWP\\\",\\\"GBP\\\",\\\"EUR\\\"],\\\"emoji\\\":\\\"🇿🇼\\\",\\\"ioc\\\":\\\"ZIM\\\",\\\"languages\\\":[\\\"eng\\\",\\\"sna\\\",\\\"nde\\\"],\\\"name\\\":\\\"Zimbabwe\\\",\\\"status\\\":\\\"assigned\\\"}]\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2NvdW50cnktZGF0YS9kYXRhL2NvdW50cmllcy5qc29uLmpzIiwic291cmNlcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/country-data/data/countries.json\n");

/***/ }),

/***/ "../node_modules/country-data/data/currencies.json":
/*!*********************************************************!*\
  !*** ../node_modules/country-data/data/currencies.json ***!
  \*********************************************************/
/*! exports provided: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"[{\\\"code\\\":\\\"AED\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"United Arab Emirates dirham\\\",\\\"number\\\":\\\"784\\\"},{\\\"code\\\":\\\"AFN\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Afghan afghani\\\",\\\"number\\\":\\\"971\\\"},{\\\"code\\\":\\\"ALL\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Albanian lek\\\",\\\"number\\\":\\\"8\\\"},{\\\"code\\\":\\\"AMD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Armenian dram\\\",\\\"number\\\":\\\"51\\\"},{\\\"code\\\":\\\"ANG\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Netherlands Antillean guilder\\\",\\\"number\\\":\\\"532\\\"},{\\\"code\\\":\\\"AOA\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Angolan kwanza\\\",\\\"number\\\":\\\"973\\\"},{\\\"code\\\":\\\"ARS\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Argentine peso\\\",\\\"number\\\":\\\"32\\\"},{\\\"code\\\":\\\"AUD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Australian dollar\\\",\\\"number\\\":\\\"36\\\"},{\\\"code\\\":\\\"AWG\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Aruban florin\\\",\\\"number\\\":\\\"533\\\"},{\\\"code\\\":\\\"AZN\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Azerbaijani manat\\\",\\\"number\\\":\\\"944\\\"},{\\\"code\\\":\\\"BAM\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Bosnia and Herzegovina convertible mark\\\",\\\"number\\\":\\\"977\\\"},{\\\"code\\\":\\\"BBD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Barbados dollar\\\",\\\"number\\\":\\\"52\\\"},{\\\"code\\\":\\\"BDT\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Bangladeshi taka\\\",\\\"number\\\":\\\"50\\\"},{\\\"code\\\":\\\"BGN\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Bulgarian lev\\\",\\\"number\\\":\\\"975\\\"},{\\\"code\\\":\\\"BHD\\\",\\\"decimals\\\":3,\\\"name\\\":\\\"Bahraini dinar\\\",\\\"number\\\":\\\"48\\\"},{\\\"code\\\":\\\"BIF\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Burundian franc\\\",\\\"number\\\":\\\"108\\\"},{\\\"code\\\":\\\"BMD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Bermudian dollar (customarily known as Bermuda dollar)\\\",\\\"number\\\":\\\"60\\\"},{\\\"code\\\":\\\"BND\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Brunei dollar\\\",\\\"number\\\":\\\"96\\\"},{\\\"code\\\":\\\"BOB\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Boliviano\\\",\\\"number\\\":\\\"68\\\"},{\\\"code\\\":\\\"BOV\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Bolivian Mvdol (funds code)\\\",\\\"number\\\":\\\"984\\\"},{\\\"code\\\":\\\"BRL\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Brazilian real\\\",\\\"number\\\":\\\"986\\\"},{\\\"code\\\":\\\"BSD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Bahamian dollar\\\",\\\"number\\\":\\\"44\\\"},{\\\"code\\\":\\\"BTN\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Bhutanese ngultrum\\\",\\\"number\\\":\\\"64\\\"},{\\\"code\\\":\\\"BWP\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Botswana pula\\\",\\\"number\\\":\\\"72\\\"},{\\\"code\\\":\\\"BYR\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Belarusian ruble\\\",\\\"number\\\":\\\"974\\\"},{\\\"code\\\":\\\"BZD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Belize dollar\\\",\\\"number\\\":\\\"84\\\"},{\\\"code\\\":\\\"CAD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Canadian dollar\\\",\\\"number\\\":\\\"124\\\"},{\\\"code\\\":\\\"CDF\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Congolese franc\\\",\\\"number\\\":\\\"976\\\"},{\\\"code\\\":\\\"CHE\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"WIR Euro (complementary currency)\\\",\\\"number\\\":\\\"947\\\"},{\\\"code\\\":\\\"CHF\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Swiss franc\\\",\\\"number\\\":\\\"756\\\"},{\\\"code\\\":\\\"CHW\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"WIR Franc (complementary currency)\\\",\\\"number\\\":\\\"948\\\"},{\\\"code\\\":\\\"CLF\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Unidad de Fomento (funds code)\\\",\\\"number\\\":\\\"990\\\"},{\\\"code\\\":\\\"CLP\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Chilean peso\\\",\\\"number\\\":\\\"152\\\"},{\\\"code\\\":\\\"CNY\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Chinese yuan\\\",\\\"number\\\":\\\"156\\\"},{\\\"code\\\":\\\"COP\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Colombian peso\\\",\\\"number\\\":\\\"170\\\"},{\\\"code\\\":\\\"COU\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Unidad de Valor Real\\\",\\\"number\\\":\\\"970\\\"},{\\\"code\\\":\\\"CRC\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Costa Rican colon\\\",\\\"number\\\":\\\"188\\\"},{\\\"code\\\":\\\"CUC\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Cuban convertible peso\\\",\\\"number\\\":\\\"931\\\"},{\\\"code\\\":\\\"CUP\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Cuban peso\\\",\\\"number\\\":\\\"192\\\"},{\\\"code\\\":\\\"CVE\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Cape Verde escudo\\\",\\\"number\\\":\\\"132\\\"},{\\\"code\\\":\\\"CZK\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Czech koruna\\\",\\\"number\\\":\\\"203\\\"},{\\\"code\\\":\\\"DJF\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Djiboutian franc\\\",\\\"number\\\":\\\"262\\\"},{\\\"code\\\":\\\"DKK\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Danish krone\\\",\\\"number\\\":\\\"208\\\"},{\\\"code\\\":\\\"DOP\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Dominican peso\\\",\\\"number\\\":\\\"214\\\"},{\\\"code\\\":\\\"DZD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Algerian dinar\\\",\\\"number\\\":\\\"12\\\"},{\\\"code\\\":\\\"EGP\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Egyptian pound\\\",\\\"number\\\":\\\"818\\\"},{\\\"code\\\":\\\"ERN\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Eritrean nakfa\\\",\\\"number\\\":\\\"232\\\"},{\\\"code\\\":\\\"ETB\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Ethiopian birr\\\",\\\"number\\\":\\\"230\\\"},{\\\"code\\\":\\\"EUR\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Euro\\\",\\\"number\\\":\\\"978\\\"},{\\\"code\\\":\\\"FJD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Fiji dollar\\\",\\\"number\\\":\\\"242\\\"},{\\\"code\\\":\\\"FKP\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Falkland Islands pound\\\",\\\"number\\\":\\\"238\\\"},{\\\"code\\\":\\\"GBP\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Pound sterling\\\",\\\"number\\\":\\\"826\\\"},{\\\"code\\\":\\\"GEL\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Georgian lari\\\",\\\"number\\\":\\\"981\\\"},{\\\"code\\\":\\\"GHS\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Ghanaian cedi\\\",\\\"number\\\":\\\"936\\\"},{\\\"code\\\":\\\"GIP\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Gibraltar pound\\\",\\\"number\\\":\\\"292\\\"},{\\\"code\\\":\\\"GMD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Gambian dalasi\\\",\\\"number\\\":\\\"270\\\"},{\\\"code\\\":\\\"GNF\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Guinean franc\\\",\\\"number\\\":\\\"324\\\"},{\\\"code\\\":\\\"GTQ\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Guatemalan quetzal\\\",\\\"number\\\":\\\"320\\\"},{\\\"code\\\":\\\"GYD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Guyanese dollar\\\",\\\"number\\\":\\\"328\\\"},{\\\"code\\\":\\\"HKD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Hong Kong dollar\\\",\\\"number\\\":\\\"344\\\"},{\\\"code\\\":\\\"HNL\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Honduran lempira\\\",\\\"number\\\":\\\"340\\\"},{\\\"code\\\":\\\"HRK\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Croatian kuna\\\",\\\"number\\\":\\\"191\\\"},{\\\"code\\\":\\\"HTG\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Haitian gourde\\\",\\\"number\\\":\\\"332\\\"},{\\\"code\\\":\\\"HUF\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Hungarian forint\\\",\\\"number\\\":\\\"348\\\"},{\\\"code\\\":\\\"IDR\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Indonesian rupiah\\\",\\\"number\\\":\\\"360\\\"},{\\\"code\\\":\\\"ILS\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Israeli new shekel\\\",\\\"number\\\":\\\"376\\\"},{\\\"code\\\":\\\"INR\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Indian rupee\\\",\\\"number\\\":\\\"356\\\"},{\\\"code\\\":\\\"IQD\\\",\\\"decimals\\\":3,\\\"name\\\":\\\"Iraqi dinar\\\",\\\"number\\\":\\\"368\\\"},{\\\"code\\\":\\\"IRR\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Iranian rial\\\",\\\"number\\\":\\\"364\\\"},{\\\"code\\\":\\\"ISK\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Icelandic króna\\\",\\\"number\\\":\\\"352\\\"},{\\\"code\\\":\\\"JMD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Jamaican dollar\\\",\\\"number\\\":\\\"388\\\"},{\\\"code\\\":\\\"JOD\\\",\\\"decimals\\\":3,\\\"name\\\":\\\"Jordanian dinar\\\",\\\"number\\\":\\\"400\\\"},{\\\"code\\\":\\\"JPY\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Japanese yen\\\",\\\"number\\\":\\\"392\\\"},{\\\"code\\\":\\\"KES\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Kenyan shilling\\\",\\\"number\\\":\\\"404\\\"},{\\\"code\\\":\\\"KGS\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Kyrgyzstani som\\\",\\\"number\\\":\\\"417\\\"},{\\\"code\\\":\\\"KHR\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Cambodian riel\\\",\\\"number\\\":\\\"116\\\"},{\\\"code\\\":\\\"KMF\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Comoro franc\\\",\\\"number\\\":\\\"174\\\"},{\\\"code\\\":\\\"KPW\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"North Korean won\\\",\\\"number\\\":\\\"408\\\"},{\\\"code\\\":\\\"KRW\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"South Korean won\\\",\\\"number\\\":\\\"410\\\"},{\\\"code\\\":\\\"KWD\\\",\\\"decimals\\\":3,\\\"name\\\":\\\"Kuwaiti dinar\\\",\\\"number\\\":\\\"414\\\"},{\\\"code\\\":\\\"KYD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Cayman Islands dollar\\\",\\\"number\\\":\\\"136\\\"},{\\\"code\\\":\\\"KZT\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Kazakhstani tenge\\\",\\\"number\\\":\\\"398\\\"},{\\\"code\\\":\\\"LAK\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Lao kip\\\",\\\"number\\\":\\\"418\\\"},{\\\"code\\\":\\\"LBP\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Lebanese pound\\\",\\\"number\\\":\\\"422\\\"},{\\\"code\\\":\\\"LKR\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Sri Lankan rupee\\\",\\\"number\\\":\\\"144\\\"},{\\\"code\\\":\\\"LRD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Liberian dollar\\\",\\\"number\\\":\\\"430\\\"},{\\\"code\\\":\\\"LSL\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Lesotho loti\\\",\\\"number\\\":\\\"426\\\"},{\\\"code\\\":\\\"LTL\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Lithuanian litas\\\",\\\"number\\\":\\\"440\\\"},{\\\"code\\\":\\\"LVL\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Latvian lats\\\",\\\"number\\\":\\\"428\\\"},{\\\"code\\\":\\\"LYD\\\",\\\"decimals\\\":3,\\\"name\\\":\\\"Libyan dinar\\\",\\\"number\\\":\\\"434\\\"},{\\\"code\\\":\\\"MAD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Moroccan dirham\\\",\\\"number\\\":\\\"504\\\"},{\\\"code\\\":\\\"MDL\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Moldovan leu\\\",\\\"number\\\":\\\"498\\\"},{\\\"code\\\":\\\"MGA\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Malagasy ariary\\\",\\\"number\\\":\\\"969\\\"},{\\\"code\\\":\\\"MKD\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Macedonian denar\\\",\\\"number\\\":\\\"807\\\"},{\\\"code\\\":\\\"MMK\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Myanma kyat\\\",\\\"number\\\":\\\"104\\\"},{\\\"code\\\":\\\"MNT\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Mongolian tugrik\\\",\\\"number\\\":\\\"496\\\"},{\\\"code\\\":\\\"MOP\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Macanese pataca\\\",\\\"number\\\":\\\"446\\\"},{\\\"code\\\":\\\"MRO\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Mauritanian ouguiya\\\",\\\"number\\\":\\\"478\\\"},{\\\"code\\\":\\\"MUR\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Mauritian rupee\\\",\\\"number\\\":\\\"480\\\"},{\\\"code\\\":\\\"MVR\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Maldivian rufiyaa\\\",\\\"number\\\":\\\"462\\\"},{\\\"code\\\":\\\"MWK\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Malawian kwacha\\\",\\\"number\\\":\\\"454\\\"},{\\\"code\\\":\\\"MXN\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Mexican peso\\\",\\\"number\\\":\\\"484\\\"},{\\\"code\\\":\\\"MXV\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Mexican Unidad de Inversion (UDI) (funds code)\\\",\\\"number\\\":\\\"979\\\"},{\\\"code\\\":\\\"MYR\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Malaysian ringgit\\\",\\\"number\\\":\\\"458\\\"},{\\\"code\\\":\\\"MZN\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Mozambican metical\\\",\\\"number\\\":\\\"943\\\"},{\\\"code\\\":\\\"NAD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Namibian dollar\\\",\\\"number\\\":\\\"516\\\"},{\\\"code\\\":\\\"NGN\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Nigerian naira\\\",\\\"number\\\":\\\"566\\\"},{\\\"code\\\":\\\"NIO\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Nicaraguan córdoba\\\",\\\"number\\\":\\\"558\\\"},{\\\"code\\\":\\\"NOK\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Norwegian krone\\\",\\\"number\\\":\\\"578\\\"},{\\\"code\\\":\\\"NPR\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Nepalese rupee\\\",\\\"number\\\":\\\"524\\\"},{\\\"code\\\":\\\"NZD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"New Zealand dollar\\\",\\\"number\\\":\\\"554\\\"},{\\\"code\\\":\\\"OMR\\\",\\\"decimals\\\":3,\\\"name\\\":\\\"Omani rial\\\",\\\"number\\\":\\\"512\\\"},{\\\"code\\\":\\\"PAB\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Panamanian balboa\\\",\\\"number\\\":\\\"590\\\"},{\\\"code\\\":\\\"PEN\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Peruvian nuevo sol\\\",\\\"number\\\":\\\"604\\\"},{\\\"code\\\":\\\"PGK\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Papua New Guinean kina\\\",\\\"number\\\":\\\"598\\\"},{\\\"code\\\":\\\"PHP\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Philippine peso\\\",\\\"number\\\":\\\"608\\\"},{\\\"code\\\":\\\"PKR\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Pakistani rupee\\\",\\\"number\\\":\\\"586\\\"},{\\\"code\\\":\\\"PLN\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Polish złoty\\\",\\\"number\\\":\\\"985\\\"},{\\\"code\\\":\\\"PYG\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Paraguayan guaraní\\\",\\\"number\\\":\\\"600\\\"},{\\\"code\\\":\\\"QAR\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Qatari riyal\\\",\\\"number\\\":\\\"634\\\"},{\\\"code\\\":\\\"RON\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Romanian new leu\\\",\\\"number\\\":\\\"946\\\"},{\\\"code\\\":\\\"RSD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Serbian dinar\\\",\\\"number\\\":\\\"941\\\"},{\\\"code\\\":\\\"RUB\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Russian rouble\\\",\\\"number\\\":\\\"643\\\"},{\\\"code\\\":\\\"RWF\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Rwandan franc\\\",\\\"number\\\":\\\"646\\\"},{\\\"code\\\":\\\"SAR\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Saudi riyal\\\",\\\"number\\\":\\\"682\\\"},{\\\"code\\\":\\\"SBD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Solomon Islands dollar\\\",\\\"number\\\":\\\"90\\\"},{\\\"code\\\":\\\"SCR\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Seychelles rupee\\\",\\\"number\\\":\\\"690\\\"},{\\\"code\\\":\\\"SDG\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Sudanese pound\\\",\\\"number\\\":\\\"938\\\"},{\\\"code\\\":\\\"SEK\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Swedish krona/kronor\\\",\\\"number\\\":\\\"752\\\"},{\\\"code\\\":\\\"SGD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Singapore dollar\\\",\\\"number\\\":\\\"702\\\"},{\\\"code\\\":\\\"SHP\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Saint Helena pound\\\",\\\"number\\\":\\\"654\\\"},{\\\"code\\\":\\\"SLL\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Sierra Leonean leone\\\",\\\"number\\\":\\\"694\\\"},{\\\"code\\\":\\\"SOS\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Somali shilling\\\",\\\"number\\\":\\\"706\\\"},{\\\"code\\\":\\\"SRD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Surinamese dollar\\\",\\\"number\\\":\\\"968\\\"},{\\\"code\\\":\\\"SSP\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"South Sudanese pound\\\",\\\"number\\\":\\\"728\\\"},{\\\"code\\\":\\\"STD\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"São Tomé and Príncipe dobra\\\",\\\"number\\\":\\\"678\\\"},{\\\"code\\\":\\\"SYP\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Syrian pound\\\",\\\"number\\\":\\\"760\\\"},{\\\"code\\\":\\\"SZL\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Swazi lilangeni\\\",\\\"number\\\":\\\"748\\\"},{\\\"code\\\":\\\"THB\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Thai baht\\\",\\\"number\\\":\\\"764\\\"},{\\\"code\\\":\\\"TJS\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Tajikistani somoni\\\",\\\"number\\\":\\\"972\\\"},{\\\"code\\\":\\\"TMT\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Turkmenistani manat\\\",\\\"number\\\":\\\"934\\\"},{\\\"code\\\":\\\"TND\\\",\\\"decimals\\\":3,\\\"name\\\":\\\"Tunisian dinar\\\",\\\"number\\\":\\\"788\\\"},{\\\"code\\\":\\\"TOP\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Tongan paʻanga\\\",\\\"number\\\":\\\"776\\\"},{\\\"code\\\":\\\"TRY\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Turkish lira\\\",\\\"number\\\":\\\"949\\\"},{\\\"code\\\":\\\"TTD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Trinidad and Tobago dollar\\\",\\\"number\\\":\\\"780\\\"},{\\\"code\\\":\\\"TWD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"New Taiwan dollar\\\",\\\"number\\\":\\\"901\\\"},{\\\"code\\\":\\\"TZS\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Tanzanian shilling\\\",\\\"number\\\":\\\"834\\\"},{\\\"code\\\":\\\"UAH\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Ukrainian hryvnia\\\",\\\"number\\\":\\\"980\\\"},{\\\"code\\\":\\\"UGX\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Ugandan shilling\\\",\\\"number\\\":\\\"800\\\"},{\\\"code\\\":\\\"USD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"United States dollar\\\",\\\"number\\\":\\\"840\\\"},{\\\"code\\\":\\\"USN\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"United States dollar (next day) (funds code)\\\",\\\"number\\\":\\\"997\\\"},{\\\"code\\\":\\\"USS\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"United States dollar (same day) (funds code) (one source[who?] claims it is no longer used, but it is still on the ISO 4217-MA list)\\\",\\\"number\\\":\\\"998\\\"},{\\\"code\\\":\\\"UYI\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Uruguay Peso en Unidades Indexadas (URUIURUI) (funds code)\\\",\\\"number\\\":\\\"940\\\"},{\\\"code\\\":\\\"UYU\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Uruguayan peso\\\",\\\"number\\\":\\\"858\\\"},{\\\"code\\\":\\\"UZS\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Uzbekistan som\\\",\\\"number\\\":\\\"860\\\"},{\\\"code\\\":\\\"VEF\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Venezuelan bolívar fuerte\\\",\\\"number\\\":\\\"937\\\"},{\\\"code\\\":\\\"VND\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Vietnamese dong\\\",\\\"number\\\":\\\"704\\\"},{\\\"code\\\":\\\"VUV\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"Vanuatu vatu\\\",\\\"number\\\":\\\"548\\\"},{\\\"code\\\":\\\"WST\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Samoan tala\\\",\\\"number\\\":\\\"882\\\"},{\\\"code\\\":\\\"XAF\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"CFA franc BEAC\\\",\\\"number\\\":\\\"950\\\"},{\\\"code\\\":\\\"XAG\\\",\\\"decimals\\\":null,\\\"name\\\":\\\"Silver (one troy ounce)\\\",\\\"number\\\":\\\"961\\\"},{\\\"code\\\":\\\"XAU\\\",\\\"decimals\\\":null,\\\"name\\\":\\\"Gold (one troy ounce)\\\",\\\"number\\\":\\\"959\\\"},{\\\"code\\\":\\\"XBA\\\",\\\"decimals\\\":null,\\\"name\\\":\\\"European Composite Unit (EURCO) (bond market unit)\\\",\\\"number\\\":\\\"955\\\"},{\\\"code\\\":\\\"XBB\\\",\\\"decimals\\\":null,\\\"name\\\":\\\"European Monetary Unit (E.M.U.-6) (bond market unit)\\\",\\\"number\\\":\\\"956\\\"},{\\\"code\\\":\\\"XBC\\\",\\\"decimals\\\":null,\\\"name\\\":\\\"European Unit of Account 9 (E.U.A.-9) (bond market unit)\\\",\\\"number\\\":\\\"957\\\"},{\\\"code\\\":\\\"XBD\\\",\\\"decimals\\\":null,\\\"name\\\":\\\"European Unit of Account 17 (E.U.A.-17) (bond market unit)\\\",\\\"number\\\":\\\"958\\\"},{\\\"code\\\":\\\"XCD\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"East Caribbean dollar\\\",\\\"number\\\":\\\"951\\\"},{\\\"code\\\":\\\"XDR\\\",\\\"decimals\\\":null,\\\"name\\\":\\\"Special drawing rights\\\",\\\"number\\\":\\\"960\\\"},{\\\"code\\\":\\\"XFU\\\",\\\"decimals\\\":null,\\\"name\\\":\\\"UIC franc (special settlement currency)\\\",\\\"number\\\":\\\"Nil\\\"},{\\\"code\\\":\\\"XOF\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"CFA franc BCEAO\\\",\\\"number\\\":\\\"952\\\"},{\\\"code\\\":\\\"XPD\\\",\\\"decimals\\\":null,\\\"name\\\":\\\"Palladium (one troy ounce)\\\",\\\"number\\\":\\\"964\\\"},{\\\"code\\\":\\\"XPF\\\",\\\"decimals\\\":0,\\\"name\\\":\\\"CFP franc\\\",\\\"number\\\":\\\"953\\\"},{\\\"code\\\":\\\"XPT\\\",\\\"decimals\\\":null,\\\"name\\\":\\\"Platinum (one troy ounce)\\\",\\\"number\\\":\\\"962\\\"},{\\\"code\\\":\\\"XTS\\\",\\\"decimals\\\":null,\\\"name\\\":\\\"Code reserved for testing purposes\\\",\\\"number\\\":\\\"963\\\"},{\\\"code\\\":\\\"XXX\\\",\\\"decimals\\\":null,\\\"name\\\":\\\"No currency\\\",\\\"number\\\":\\\"999\\\"},{\\\"code\\\":\\\"YER\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Yemeni rial\\\",\\\"number\\\":\\\"886\\\"},{\\\"code\\\":\\\"ZAR\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"South African rand\\\",\\\"number\\\":\\\"710\\\"},{\\\"code\\\":\\\"ZMW\\\",\\\"decimals\\\":2,\\\"name\\\":\\\"Zambian kwacha\\\",\\\"number\\\":\\\"967\\\"}]\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2NvdW50cnktZGF0YS9kYXRhL2N1cnJlbmNpZXMuanNvbi5qcyIsInNvdXJjZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/country-data/data/currencies.json\n");

/***/ }),

/***/ "../node_modules/country-data/data/languages.json":
/*!********************************************************!*\
  !*** ../node_modules/country-data/data/languages.json ***!
  \********************************************************/
/*! exports provided: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"[{\\\"alpha2\\\":\\\"aa\\\",\\\"alpha3\\\":\\\"aar\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Afar\\\"},{\\\"alpha2\\\":\\\"ab\\\",\\\"alpha3\\\":\\\"abk\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Abkhazian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ace\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Achinese\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ach\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Acoli\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ada\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Adangme\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ady\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Adygei\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ady\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Adyghe\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"afa\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Afro-Asiatic languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"afh\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Afrihili\\\"},{\\\"alpha2\\\":\\\"af\\\",\\\"alpha3\\\":\\\"afr\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Afrikaans\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ain\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Ainu\\\"},{\\\"alpha2\\\":\\\"ak\\\",\\\"alpha3\\\":\\\"aka\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Akan\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"akk\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Akkadian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ale\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Aleut\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"alg\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Algonquian languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"alt\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Southern Altai\\\"},{\\\"alpha2\\\":\\\"am\\\",\\\"alpha3\\\":\\\"amh\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Amharic\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ang\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"English, Old (ca.450-1100)\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"anp\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Angika\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"apa\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Apache languages\\\"},{\\\"alpha2\\\":\\\"ar\\\",\\\"alpha3\\\":\\\"ara\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Arabic\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"arc\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Imperial Aramaic (700-300 BCE)\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"arc\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Official Aramaic (700-300 BCE)\\\"},{\\\"alpha2\\\":\\\"an\\\",\\\"alpha3\\\":\\\"arg\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Aragonese\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"arn\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Mapuche\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"arn\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Mapudungun\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"arp\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Arapaho\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"art\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Artificial languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"arw\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Arawak\\\"},{\\\"alpha2\\\":\\\"as\\\",\\\"alpha3\\\":\\\"asm\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Assamese\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ast\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Asturian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ast\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Asturleonese\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ast\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Bable\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ast\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Leonese\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ath\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Athapascan languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"aus\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Australian languages\\\"},{\\\"alpha2\\\":\\\"av\\\",\\\"alpha3\\\":\\\"ava\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Avaric\\\"},{\\\"alpha2\\\":\\\"ae\\\",\\\"alpha3\\\":\\\"ave\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Avestan\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"awa\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Awadhi\\\"},{\\\"alpha2\\\":\\\"ay\\\",\\\"alpha3\\\":\\\"aym\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Aymara\\\"},{\\\"alpha2\\\":\\\"az\\\",\\\"alpha3\\\":\\\"aze\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Azerbaijani\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"bad\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Banda languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"bai\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Bamileke languages\\\"},{\\\"alpha2\\\":\\\"ba\\\",\\\"alpha3\\\":\\\"bak\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Bashkir\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"bal\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Baluchi\\\"},{\\\"alpha2\\\":\\\"bm\\\",\\\"alpha3\\\":\\\"bam\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Bambara\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ban\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Balinese\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"bas\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Basa\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"bat\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Baltic languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"bej\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Bedawiyet\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"bej\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Beja\\\"},{\\\"alpha2\\\":\\\"be\\\",\\\"alpha3\\\":\\\"bel\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Belarusian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"bem\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Bemba\\\"},{\\\"alpha2\\\":\\\"bn\\\",\\\"alpha3\\\":\\\"ben\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Bengali\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ber\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Berber languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"bho\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Bhojpuri\\\"},{\\\"alpha2\\\":\\\"bh\\\",\\\"alpha3\\\":\\\"bih\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Bihari languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"bik\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Bikol\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"bin\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Bini\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"bin\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Edo\\\"},{\\\"alpha2\\\":\\\"bi\\\",\\\"alpha3\\\":\\\"bis\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Bislama\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"bla\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Siksika\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"bnt\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Bantu languages\\\"},{\\\"alpha2\\\":\\\"bo\\\",\\\"alpha3\\\":\\\"bod\\\",\\\"bibliographic\\\":\\\"tib\\\",\\\"name\\\":\\\"Tibetan\\\"},{\\\"alpha2\\\":\\\"bs\\\",\\\"alpha3\\\":\\\"bos\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Bosnian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"bra\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Braj\\\"},{\\\"alpha2\\\":\\\"br\\\",\\\"alpha3\\\":\\\"bre\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Breton\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"btk\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Batak languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"bua\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Buriat\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"bug\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Buginese\\\"},{\\\"alpha2\\\":\\\"bg\\\",\\\"alpha3\\\":\\\"bul\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Bulgarian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"byn\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Bilin\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"byn\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Blin\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"cad\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Caddo\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"cai\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Central American Indian languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"car\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Galibi Carib\\\"},{\\\"alpha2\\\":\\\"ca\\\",\\\"alpha3\\\":\\\"cat\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Catalan\\\"},{\\\"alpha2\\\":\\\"ca\\\",\\\"alpha3\\\":\\\"cat\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Valencian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"cau\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Caucasian languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ceb\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Cebuano\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"cel\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Celtic languages\\\"},{\\\"alpha2\\\":\\\"cs\\\",\\\"alpha3\\\":\\\"ces\\\",\\\"bibliographic\\\":\\\"cze\\\",\\\"name\\\":\\\"Czech\\\"},{\\\"alpha2\\\":\\\"ch\\\",\\\"alpha3\\\":\\\"cha\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Chamorro\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"chb\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Chibcha\\\"},{\\\"alpha2\\\":\\\"ce\\\",\\\"alpha3\\\":\\\"che\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Chechen\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"chg\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Chagatai\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"chk\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Chuukese\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"chm\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Mari\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"chn\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Chinook jargon\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"cho\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Choctaw\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"chp\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Chipewyan\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"chp\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Dene Suline\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"chr\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Cherokee\\\"},{\\\"alpha2\\\":\\\"cu\\\",\\\"alpha3\\\":\\\"chu\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Church Slavic\\\"},{\\\"alpha2\\\":\\\"cu\\\",\\\"alpha3\\\":\\\"chu\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Church Slavonic\\\"},{\\\"alpha2\\\":\\\"cu\\\",\\\"alpha3\\\":\\\"chu\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Old Bulgarian\\\"},{\\\"alpha2\\\":\\\"cu\\\",\\\"alpha3\\\":\\\"chu\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Old Church Slavonic\\\"},{\\\"alpha2\\\":\\\"cu\\\",\\\"alpha3\\\":\\\"chu\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Old Slavonic\\\"},{\\\"alpha2\\\":\\\"cv\\\",\\\"alpha3\\\":\\\"chv\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Chuvash\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"chy\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Cheyenne\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"cmc\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Chamic languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"cop\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Coptic\\\"},{\\\"alpha2\\\":\\\"kw\\\",\\\"alpha3\\\":\\\"cor\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Cornish\\\"},{\\\"alpha2\\\":\\\"co\\\",\\\"alpha3\\\":\\\"cos\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Corsican\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"cpe\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Creoles and pidgins, English based\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"cpf\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Creoles and pidgins, French-based\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"cpp\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Creoles and pidgins, Portuguese-based\\\"},{\\\"alpha2\\\":\\\"cr\\\",\\\"alpha3\\\":\\\"cre\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Cree\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"crh\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Crimean Tatar\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"crh\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Crimean Turkish\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"crp\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Creoles and pidgins\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"csb\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kashubian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"cus\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Cushitic languages\\\"},{\\\"alpha2\\\":\\\"cy\\\",\\\"alpha3\\\":\\\"cym\\\",\\\"bibliographic\\\":\\\"wel\\\",\\\"name\\\":\\\"Welsh\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"dak\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Dakota\\\"},{\\\"alpha2\\\":\\\"da\\\",\\\"alpha3\\\":\\\"dan\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Danish\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"dar\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Dargwa\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"day\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Land Dayak languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"del\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Delaware\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"den\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Slave (Athapascan)\\\"},{\\\"alpha2\\\":\\\"de\\\",\\\"alpha3\\\":\\\"deu\\\",\\\"bibliographic\\\":\\\"ger\\\",\\\"name\\\":\\\"German\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"dgr\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Dogrib\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"din\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Dinka\\\"},{\\\"alpha2\\\":\\\"dv\\\",\\\"alpha3\\\":\\\"div\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Dhivehi\\\"},{\\\"alpha2\\\":\\\"dv\\\",\\\"alpha3\\\":\\\"div\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Divehi\\\"},{\\\"alpha2\\\":\\\"dv\\\",\\\"alpha3\\\":\\\"div\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Maldivian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"doi\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Dogri\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"dra\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Dravidian languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"dsb\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Lower Sorbian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"dua\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Duala\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"dum\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Dutch, Middle (ca.1050-1350)\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"dyu\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Dyula\\\"},{\\\"alpha2\\\":\\\"dz\\\",\\\"alpha3\\\":\\\"dzo\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Dzongkha\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"efi\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Efik\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"egy\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Egyptian (Ancient)\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"eka\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Ekajuk\\\"},{\\\"alpha2\\\":\\\"el\\\",\\\"alpha3\\\":\\\"ell\\\",\\\"bibliographic\\\":\\\"gre\\\",\\\"name\\\":\\\"Greek, Modern (1453-)\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"elx\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Elamite\\\"},{\\\"alpha2\\\":\\\"en\\\",\\\"alpha3\\\":\\\"eng\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"English\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"enm\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"English, Middle (1100-1500)\\\"},{\\\"alpha2\\\":\\\"eo\\\",\\\"alpha3\\\":\\\"epo\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Esperanto\\\"},{\\\"alpha2\\\":\\\"et\\\",\\\"alpha3\\\":\\\"est\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Estonian\\\"},{\\\"alpha2\\\":\\\"eu\\\",\\\"alpha3\\\":\\\"eus\\\",\\\"bibliographic\\\":\\\"baq\\\",\\\"name\\\":\\\"Basque\\\"},{\\\"alpha2\\\":\\\"ee\\\",\\\"alpha3\\\":\\\"ewe\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Ewe\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ewo\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Ewondo\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"fan\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Fang\\\"},{\\\"alpha2\\\":\\\"fo\\\",\\\"alpha3\\\":\\\"fao\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Faroese\\\"},{\\\"alpha2\\\":\\\"fa\\\",\\\"alpha3\\\":\\\"fas\\\",\\\"bibliographic\\\":\\\"per\\\",\\\"name\\\":\\\"Persian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"fat\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Fanti\\\"},{\\\"alpha2\\\":\\\"fj\\\",\\\"alpha3\\\":\\\"fij\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Fijian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"fil\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Filipino\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"fil\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Pilipino\\\"},{\\\"alpha2\\\":\\\"fi\\\",\\\"alpha3\\\":\\\"fin\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Finnish\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"fiu\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Finno-Ugrian languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"fon\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Fon\\\"},{\\\"alpha2\\\":\\\"fr\\\",\\\"alpha3\\\":\\\"fra\\\",\\\"bibliographic\\\":\\\"fre\\\",\\\"name\\\":\\\"French\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"frm\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"French, Middle (ca.1400-1600)\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"fro\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"French, Old (842-ca.1400)\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"frr\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Northern Frisian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"frs\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Eastern Frisian\\\"},{\\\"alpha2\\\":\\\"fy\\\",\\\"alpha3\\\":\\\"fry\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Western Frisian\\\"},{\\\"alpha2\\\":\\\"ff\\\",\\\"alpha3\\\":\\\"ful\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Fulah\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"fur\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Friulian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"gaa\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Ga\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"gay\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Gayo\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"gba\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Gbaya\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"gem\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Germanic languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"gez\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Geez\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"gil\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Gilbertese\\\"},{\\\"alpha2\\\":\\\"gd\\\",\\\"alpha3\\\":\\\"gla\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Gaelic\\\"},{\\\"alpha2\\\":\\\"gd\\\",\\\"alpha3\\\":\\\"gla\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Scottish Gaelic\\\"},{\\\"alpha2\\\":\\\"ga\\\",\\\"alpha3\\\":\\\"gle\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Irish\\\"},{\\\"alpha2\\\":\\\"gl\\\",\\\"alpha3\\\":\\\"glg\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Galician\\\"},{\\\"alpha2\\\":\\\"gv\\\",\\\"alpha3\\\":\\\"glv\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Manx\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"gmh\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"German, Middle High (ca.1050-1500)\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"goh\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"German, Old High (ca.750-1050)\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"gon\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Gondi\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"gor\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Gorontalo\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"got\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Gothic\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"grb\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Grebo\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"grc\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Greek, Ancient (to 1453)\\\"},{\\\"alpha2\\\":\\\"gn\\\",\\\"alpha3\\\":\\\"grn\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Guarani\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"gsw\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Alemannic\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"gsw\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Alsatian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"gsw\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Swiss German\\\"},{\\\"alpha2\\\":\\\"gu\\\",\\\"alpha3\\\":\\\"guj\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Gujarati\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"gwi\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Gwich'in\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"hai\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Haida\\\"},{\\\"alpha2\\\":\\\"ht\\\",\\\"alpha3\\\":\\\"hat\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Haitian\\\"},{\\\"alpha2\\\":\\\"ht\\\",\\\"alpha3\\\":\\\"hat\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Haitian Creole\\\"},{\\\"alpha2\\\":\\\"ha\\\",\\\"alpha3\\\":\\\"hau\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Hausa\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"haw\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Hawaiian\\\"},{\\\"alpha2\\\":\\\"he\\\",\\\"alpha3\\\":\\\"heb\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Hebrew\\\"},{\\\"alpha2\\\":\\\"hz\\\",\\\"alpha3\\\":\\\"her\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Herero\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"hil\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Hiligaynon\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"him\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Himachali languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"him\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Western Pahari languages\\\"},{\\\"alpha2\\\":\\\"hi\\\",\\\"alpha3\\\":\\\"hin\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Hindi\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"hit\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Hittite\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"hmn\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Hmong\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"hmn\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Mong\\\"},{\\\"alpha2\\\":\\\"ho\\\",\\\"alpha3\\\":\\\"hmo\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Hiri Motu\\\"},{\\\"alpha2\\\":\\\"hr\\\",\\\"alpha3\\\":\\\"hrv\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Croatian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"hsb\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Upper Sorbian\\\"},{\\\"alpha2\\\":\\\"hu\\\",\\\"alpha3\\\":\\\"hun\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Hungarian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"hup\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Hupa\\\"},{\\\"alpha2\\\":\\\"hy\\\",\\\"alpha3\\\":\\\"hye\\\",\\\"bibliographic\\\":\\\"arm\\\",\\\"name\\\":\\\"Armenian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"iba\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Iban\\\"},{\\\"alpha2\\\":\\\"ig\\\",\\\"alpha3\\\":\\\"ibo\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Igbo\\\"},{\\\"alpha2\\\":\\\"io\\\",\\\"alpha3\\\":\\\"ido\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Ido\\\"},{\\\"alpha2\\\":\\\"ii\\\",\\\"alpha3\\\":\\\"iii\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Nuosu\\\"},{\\\"alpha2\\\":\\\"ii\\\",\\\"alpha3\\\":\\\"iii\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sichuan Yi\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ijo\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Ijo languages\\\"},{\\\"alpha2\\\":\\\"iu\\\",\\\"alpha3\\\":\\\"iku\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Inuktitut\\\"},{\\\"alpha2\\\":\\\"ie\\\",\\\"alpha3\\\":\\\"ile\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Interlingue\\\"},{\\\"alpha2\\\":\\\"ie\\\",\\\"alpha3\\\":\\\"ile\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Occidental\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ilo\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Iloko\\\"},{\\\"alpha2\\\":\\\"ia\\\",\\\"alpha3\\\":\\\"ina\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Interlingua (International Auxiliary Language Association)\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"inc\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Indic languages\\\"},{\\\"alpha2\\\":\\\"id\\\",\\\"alpha3\\\":\\\"ind\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Indonesian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ine\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Indo-European languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"inh\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Ingush\\\"},{\\\"alpha2\\\":\\\"ik\\\",\\\"alpha3\\\":\\\"ipk\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Inupiaq\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ira\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Iranian languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"iro\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Iroquoian languages\\\"},{\\\"alpha2\\\":\\\"is\\\",\\\"alpha3\\\":\\\"isl\\\",\\\"bibliographic\\\":\\\"ice\\\",\\\"name\\\":\\\"Icelandic\\\"},{\\\"alpha2\\\":\\\"it\\\",\\\"alpha3\\\":\\\"ita\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Italian\\\"},{\\\"alpha2\\\":\\\"jv\\\",\\\"alpha3\\\":\\\"jav\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Javanese\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"jbo\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Lojban\\\"},{\\\"alpha2\\\":\\\"ja\\\",\\\"alpha3\\\":\\\"jpn\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Japanese\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"jpr\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Judeo-Persian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"jrb\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Judeo-Arabic\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"kaa\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kara-Kalpak\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"kab\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kabyle\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"kac\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Jingpho\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"kac\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kachin\\\"},{\\\"alpha2\\\":\\\"kl\\\",\\\"alpha3\\\":\\\"kal\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Greenlandic\\\"},{\\\"alpha2\\\":\\\"kl\\\",\\\"alpha3\\\":\\\"kal\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kalaallisut\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"kam\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kamba\\\"},{\\\"alpha2\\\":\\\"kn\\\",\\\"alpha3\\\":\\\"kan\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kannada\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"kar\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Karen languages\\\"},{\\\"alpha2\\\":\\\"ks\\\",\\\"alpha3\\\":\\\"kas\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kashmiri\\\"},{\\\"alpha2\\\":\\\"ka\\\",\\\"alpha3\\\":\\\"kat\\\",\\\"bibliographic\\\":\\\"geo\\\",\\\"name\\\":\\\"Georgian\\\"},{\\\"alpha2\\\":\\\"kr\\\",\\\"alpha3\\\":\\\"kau\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kanuri\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"kaw\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kawi\\\"},{\\\"alpha2\\\":\\\"kk\\\",\\\"alpha3\\\":\\\"kaz\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kazakh\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"kbd\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kabardian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"kha\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Khasi\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"khi\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Khoisan languages\\\"},{\\\"alpha2\\\":\\\"km\\\",\\\"alpha3\\\":\\\"khm\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Central Khmer\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"kho\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Khotanese\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"kho\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sakan\\\"},{\\\"alpha2\\\":\\\"ki\\\",\\\"alpha3\\\":\\\"kik\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Gikuyu\\\"},{\\\"alpha2\\\":\\\"ki\\\",\\\"alpha3\\\":\\\"kik\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kikuyu\\\"},{\\\"alpha2\\\":\\\"rw\\\",\\\"alpha3\\\":\\\"kin\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kinyarwanda\\\"},{\\\"alpha2\\\":\\\"ky\\\",\\\"alpha3\\\":\\\"kir\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kirghiz\\\"},{\\\"alpha2\\\":\\\"ky\\\",\\\"alpha3\\\":\\\"kir\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kyrgyz\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"kmb\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kimbundu\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"kok\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Konkani\\\"},{\\\"alpha2\\\":\\\"kv\\\",\\\"alpha3\\\":\\\"kom\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Komi\\\"},{\\\"alpha2\\\":\\\"kg\\\",\\\"alpha3\\\":\\\"kon\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kongo\\\"},{\\\"alpha2\\\":\\\"ko\\\",\\\"alpha3\\\":\\\"kor\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Korean\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"kos\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kosraean\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"kpe\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kpelle\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"krc\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Karachay-Balkar\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"krl\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Karelian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"kro\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kru languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"kru\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kurukh\\\"},{\\\"alpha2\\\":\\\"kj\\\",\\\"alpha3\\\":\\\"kua\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kuanyama\\\"},{\\\"alpha2\\\":\\\"kj\\\",\\\"alpha3\\\":\\\"kua\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kwanyama\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"kum\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kumyk\\\"},{\\\"alpha2\\\":\\\"ku\\\",\\\"alpha3\\\":\\\"kur\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kurdish\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"kut\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kutenai\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"lad\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Ladino\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"lah\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Lahnda\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"lam\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Lamba\\\"},{\\\"alpha2\\\":\\\"lo\\\",\\\"alpha3\\\":\\\"lao\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Lao\\\"},{\\\"alpha2\\\":\\\"la\\\",\\\"alpha3\\\":\\\"lat\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Latin\\\"},{\\\"alpha2\\\":\\\"lv\\\",\\\"alpha3\\\":\\\"lav\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Latvian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"lez\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Lezghian\\\"},{\\\"alpha2\\\":\\\"li\\\",\\\"alpha3\\\":\\\"lim\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Limburgan\\\"},{\\\"alpha2\\\":\\\"li\\\",\\\"alpha3\\\":\\\"lim\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Limburger\\\"},{\\\"alpha2\\\":\\\"li\\\",\\\"alpha3\\\":\\\"lim\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Limburgish\\\"},{\\\"alpha2\\\":\\\"ln\\\",\\\"alpha3\\\":\\\"lin\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Lingala\\\"},{\\\"alpha2\\\":\\\"lt\\\",\\\"alpha3\\\":\\\"lit\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Lithuanian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"lol\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Mongo\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"loz\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Lozi\\\"},{\\\"alpha2\\\":\\\"lb\\\",\\\"alpha3\\\":\\\"ltz\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Letzeburgesch\\\"},{\\\"alpha2\\\":\\\"lb\\\",\\\"alpha3\\\":\\\"ltz\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Luxembourgish\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"lua\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Luba-Lulua\\\"},{\\\"alpha2\\\":\\\"lu\\\",\\\"alpha3\\\":\\\"lub\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Luba-Katanga\\\"},{\\\"alpha2\\\":\\\"lg\\\",\\\"alpha3\\\":\\\"lug\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Ganda\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"lui\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Luiseno\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"lun\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Lunda\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"luo\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Luo (Kenya and Tanzania)\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"lus\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Lushai\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mad\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Madurese\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mag\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Magahi\\\"},{\\\"alpha2\\\":\\\"mh\\\",\\\"alpha3\\\":\\\"mah\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Marshallese\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mai\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Maithili\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mak\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Makasar\\\"},{\\\"alpha2\\\":\\\"ml\\\",\\\"alpha3\\\":\\\"mal\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Malayalam\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"man\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Mandingo\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"map\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Austronesian languages\\\"},{\\\"alpha2\\\":\\\"mr\\\",\\\"alpha3\\\":\\\"mar\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Marathi\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mas\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Masai\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mdf\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Moksha\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mdr\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Mandar\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"men\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Mende\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mga\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Irish, Middle (900-1200)\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mic\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Mi'kmaq\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mic\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Micmac\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"min\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Minangkabau\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mis\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Uncoded languages\\\"},{\\\"alpha2\\\":\\\"mk\\\",\\\"alpha3\\\":\\\"mkd\\\",\\\"bibliographic\\\":\\\"mac\\\",\\\"name\\\":\\\"Macedonian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mkh\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Mon-Khmer languages\\\"},{\\\"alpha2\\\":\\\"mg\\\",\\\"alpha3\\\":\\\"mlg\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Malagasy\\\"},{\\\"alpha2\\\":\\\"mt\\\",\\\"alpha3\\\":\\\"mlt\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Maltese\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mnc\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Manchu\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mni\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Manipuri\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mno\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Manobo languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"moh\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Mohawk\\\"},{\\\"alpha2\\\":\\\"mn\\\",\\\"alpha3\\\":\\\"mon\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Mongolian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mos\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Mossi\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mot\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Montenegrin\\\"},{\\\"alpha2\\\":\\\"mi\\\",\\\"alpha3\\\":\\\"mri\\\",\\\"bibliographic\\\":\\\"mao\\\",\\\"name\\\":\\\"Maori\\\"},{\\\"alpha2\\\":\\\"ms\\\",\\\"alpha3\\\":\\\"msa\\\",\\\"bibliographic\\\":\\\"may\\\",\\\"name\\\":\\\"Malay\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mul\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Multiple languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mun\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Munda languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mus\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Creek\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mwl\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Mirandese\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"mwr\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Marwari\\\"},{\\\"alpha2\\\":\\\"my\\\",\\\"alpha3\\\":\\\"mya\\\",\\\"bibliographic\\\":\\\"bur\\\",\\\"name\\\":\\\"Burmese\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"myn\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Mayan languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"myv\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Erzya\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nah\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Nahuatl languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nai\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"North American Indian languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nap\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Neapolitan\\\"},{\\\"alpha2\\\":\\\"na\\\",\\\"alpha3\\\":\\\"nau\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Nauru\\\"},{\\\"alpha2\\\":\\\"nv\\\",\\\"alpha3\\\":\\\"nav\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Navaho\\\"},{\\\"alpha2\\\":\\\"nv\\\",\\\"alpha3\\\":\\\"nav\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Navajo\\\"},{\\\"alpha2\\\":\\\"nr\\\",\\\"alpha3\\\":\\\"nbl\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Ndebele, South\\\"},{\\\"alpha2\\\":\\\"nr\\\",\\\"alpha3\\\":\\\"nbl\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"South Ndebele\\\"},{\\\"alpha2\\\":\\\"nd\\\",\\\"alpha3\\\":\\\"nde\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Ndebele, North\\\"},{\\\"alpha2\\\":\\\"nd\\\",\\\"alpha3\\\":\\\"nde\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"North Ndebele\\\"},{\\\"alpha2\\\":\\\"ng\\\",\\\"alpha3\\\":\\\"ndo\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Ndonga\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nds\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"German, Low\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nds\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Low German\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nds\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Low Saxon\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nds\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Saxon, Low\\\"},{\\\"alpha2\\\":\\\"ne\\\",\\\"alpha3\\\":\\\"nep\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Nepali\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"new\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Nepal Bhasa\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"new\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Newari\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nia\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Nias\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nic\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Niger-Kordofanian languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"niu\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Niuean\\\"},{\\\"alpha2\\\":\\\"nl\\\",\\\"alpha3\\\":\\\"nld\\\",\\\"bibliographic\\\":\\\"dut\\\",\\\"name\\\":\\\"Dutch\\\"},{\\\"alpha2\\\":\\\"nl\\\",\\\"alpha3\\\":\\\"nld\\\",\\\"bibliographic\\\":\\\"dut\\\",\\\"name\\\":\\\"Flemish\\\"},{\\\"alpha2\\\":\\\"nn\\\",\\\"alpha3\\\":\\\"nno\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Norwegian Nynorsk\\\"},{\\\"alpha2\\\":\\\"nn\\\",\\\"alpha3\\\":\\\"nno\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Nynorsk, Norwegian\\\"},{\\\"alpha2\\\":\\\"nb\\\",\\\"alpha3\\\":\\\"nob\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Bokmål, Norwegian\\\"},{\\\"alpha2\\\":\\\"nb\\\",\\\"alpha3\\\":\\\"nob\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Norwegian Bokmål\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nog\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Nogai\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"non\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Norse, Old\\\"},{\\\"alpha2\\\":\\\"no\\\",\\\"alpha3\\\":\\\"nor\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Norwegian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nqo\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"N'Ko\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nso\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Northern Sotho\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nso\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Pedi\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nso\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sepedi\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nso\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sotho, Northern\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nub\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Nubian languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nwc\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Classical Nepal Bhasa\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nwc\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Classical Newari\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nwc\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Old Newari\\\"},{\\\"alpha2\\\":\\\"ny\\\",\\\"alpha3\\\":\\\"nya\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Chewa\\\"},{\\\"alpha2\\\":\\\"ny\\\",\\\"alpha3\\\":\\\"nya\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Chichewa\\\"},{\\\"alpha2\\\":\\\"ny\\\",\\\"alpha3\\\":\\\"nya\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Nyanja\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nym\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Nyamwezi\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nyn\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Nyankole\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nyo\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Nyoro\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"nzi\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Nzima\\\"},{\\\"alpha2\\\":\\\"oc\\\",\\\"alpha3\\\":\\\"oci\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Occitan (post 1500)\\\"},{\\\"alpha2\\\":\\\"oj\\\",\\\"alpha3\\\":\\\"oji\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Ojibwa\\\"},{\\\"alpha2\\\":\\\"or\\\",\\\"alpha3\\\":\\\"ori\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Oriya\\\"},{\\\"alpha2\\\":\\\"om\\\",\\\"alpha3\\\":\\\"orm\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Oromo\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"osa\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Osage\\\"},{\\\"alpha2\\\":\\\"os\\\",\\\"alpha3\\\":\\\"oss\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Ossetian\\\"},{\\\"alpha2\\\":\\\"os\\\",\\\"alpha3\\\":\\\"oss\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Ossetic\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ota\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Turkish, Ottoman (1500-1928)\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"oto\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Otomian languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"paa\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Papuan languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"pag\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Pangasinan\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"pal\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Pahlavi\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"pam\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kapampangan\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"pam\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Pampanga\\\"},{\\\"alpha2\\\":\\\"pa\\\",\\\"alpha3\\\":\\\"pan\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Panjabi\\\"},{\\\"alpha2\\\":\\\"pa\\\",\\\"alpha3\\\":\\\"pan\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Punjabi\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"pap\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Papiamento\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"pau\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Palauan\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"peo\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Persian, Old (ca.600-400 B.C.)\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"phi\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Philippine languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"phn\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Phoenician\\\"},{\\\"alpha2\\\":\\\"pi\\\",\\\"alpha3\\\":\\\"pli\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Pali\\\"},{\\\"alpha2\\\":\\\"pl\\\",\\\"alpha3\\\":\\\"pol\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Polish\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"pon\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Pohnpeian\\\"},{\\\"alpha2\\\":\\\"pt\\\",\\\"alpha3\\\":\\\"por\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Portuguese\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"pra\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Prakrit languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"pro\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Occitan, Old (to 1500)\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"pro\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Provençal, Old (to 1500)\\\"},{\\\"alpha2\\\":\\\"ps\\\",\\\"alpha3\\\":\\\"pus\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Pashto\\\"},{\\\"alpha2\\\":\\\"ps\\\",\\\"alpha3\\\":\\\"pus\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Pushto\\\"},{\\\"alpha2\\\":\\\"qu\\\",\\\"alpha3\\\":\\\"que\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Quechua\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"raj\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Rajasthani\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"rap\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Rapanui\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"rar\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Cook Islands Maori\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"rar\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Rarotongan\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"roa\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Romance languages\\\"},{\\\"alpha2\\\":\\\"rm\\\",\\\"alpha3\\\":\\\"roh\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Romansh\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"rom\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Romany\\\"},{\\\"alpha2\\\":\\\"ro\\\",\\\"alpha3\\\":\\\"ron\\\",\\\"bibliographic\\\":\\\"rum\\\",\\\"name\\\":\\\"Moldavian\\\"},{\\\"alpha2\\\":\\\"ro\\\",\\\"alpha3\\\":\\\"ron\\\",\\\"bibliographic\\\":\\\"rum\\\",\\\"name\\\":\\\"Romanian\\\"},{\\\"alpha2\\\":\\\"rn\\\",\\\"alpha3\\\":\\\"run\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Rundi\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"rup\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Aromanian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"rup\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Arumanian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"rup\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Macedo-Romanian\\\"},{\\\"alpha2\\\":\\\"ru\\\",\\\"alpha3\\\":\\\"rus\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Russian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sad\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sandawe\\\"},{\\\"alpha2\\\":\\\"sg\\\",\\\"alpha3\\\":\\\"sag\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sango\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sah\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Yakut\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sai\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"South American Indian languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sal\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Salishan languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sam\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Samaritan Aramaic\\\"},{\\\"alpha2\\\":\\\"sa\\\",\\\"alpha3\\\":\\\"san\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sanskrit\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sas\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sasak\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sat\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Santali\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"scn\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sicilian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sco\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Scots\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sel\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Selkup\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sem\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Semitic languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sga\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Irish, Old (to 900)\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sgn\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sign Languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"shn\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Shan\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sid\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sidamo\\\"},{\\\"alpha2\\\":\\\"si\\\",\\\"alpha3\\\":\\\"sin\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sinhala\\\"},{\\\"alpha2\\\":\\\"si\\\",\\\"alpha3\\\":\\\"sin\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sinhalese\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sio\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Siouan languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sit\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sino-Tibetan languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sla\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Slavic languages\\\"},{\\\"alpha2\\\":\\\"sk\\\",\\\"alpha3\\\":\\\"slk\\\",\\\"bibliographic\\\":\\\"slo\\\",\\\"name\\\":\\\"Slovak\\\"},{\\\"alpha2\\\":\\\"sl\\\",\\\"alpha3\\\":\\\"slv\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Slovenian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sma\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Southern Sami\\\"},{\\\"alpha2\\\":\\\"se\\\",\\\"alpha3\\\":\\\"sme\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Northern Sami\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"smi\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sami languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"smj\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Lule Sami\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"smn\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Inari Sami\\\"},{\\\"alpha2\\\":\\\"sm\\\",\\\"alpha3\\\":\\\"smo\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Samoan\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sms\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Skolt Sami\\\"},{\\\"alpha2\\\":\\\"sn\\\",\\\"alpha3\\\":\\\"sna\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Shona\\\"},{\\\"alpha2\\\":\\\"sd\\\",\\\"alpha3\\\":\\\"snd\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sindhi\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"snk\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Soninke\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sog\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sogdian\\\"},{\\\"alpha2\\\":\\\"so\\\",\\\"alpha3\\\":\\\"som\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Somali\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"son\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Songhai languages\\\"},{\\\"alpha2\\\":\\\"st\\\",\\\"alpha3\\\":\\\"sot\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sotho, Southern\\\"},{\\\"alpha2\\\":\\\"es\\\",\\\"alpha3\\\":\\\"spa\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Castilian\\\"},{\\\"alpha2\\\":\\\"es\\\",\\\"alpha3\\\":\\\"spa\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Spanish\\\"},{\\\"alpha2\\\":\\\"sq\\\",\\\"alpha3\\\":\\\"sqi\\\",\\\"bibliographic\\\":\\\"alb\\\",\\\"name\\\":\\\"Albanian\\\"},{\\\"alpha2\\\":\\\"sc\\\",\\\"alpha3\\\":\\\"srd\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sardinian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"srn\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sranan Tongo\\\"},{\\\"alpha2\\\":\\\"sr\\\",\\\"alpha3\\\":\\\"srp\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Serbian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"srr\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Serer\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ssa\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Nilo-Saharan languages\\\"},{\\\"alpha2\\\":\\\"ss\\\",\\\"alpha3\\\":\\\"ssw\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Swati\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"suk\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sukuma\\\"},{\\\"alpha2\\\":\\\"su\\\",\\\"alpha3\\\":\\\"sun\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sundanese\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sus\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Susu\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"sux\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sumerian\\\"},{\\\"alpha2\\\":\\\"sw\\\",\\\"alpha3\\\":\\\"swa\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Swahili\\\"},{\\\"alpha2\\\":\\\"sv\\\",\\\"alpha3\\\":\\\"swe\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Swedish\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"syc\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Classical Syriac\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"syr\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Syriac\\\"},{\\\"alpha2\\\":\\\"ty\\\",\\\"alpha3\\\":\\\"tah\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tahitian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"tai\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tai languages\\\"},{\\\"alpha2\\\":\\\"ta\\\",\\\"alpha3\\\":\\\"tam\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tamil\\\"},{\\\"alpha2\\\":\\\"tt\\\",\\\"alpha3\\\":\\\"tat\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tatar\\\"},{\\\"alpha2\\\":\\\"te\\\",\\\"alpha3\\\":\\\"tel\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Telugu\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"tem\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Timne\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ter\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tereno\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"tet\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tetum\\\"},{\\\"alpha2\\\":\\\"tg\\\",\\\"alpha3\\\":\\\"tgk\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tajik\\\"},{\\\"alpha2\\\":\\\"tl\\\",\\\"alpha3\\\":\\\"tgl\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tagalog\\\"},{\\\"alpha2\\\":\\\"th\\\",\\\"alpha3\\\":\\\"tha\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Thai\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"tig\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tigre\\\"},{\\\"alpha2\\\":\\\"ti\\\",\\\"alpha3\\\":\\\"tir\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tigrinya\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"tiv\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tiv\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"tkl\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tokelau\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"tlh\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Klingon\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"tlh\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"tlhIngan-Hol\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"tli\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tlingit\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"tmh\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tamashek\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"tog\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tonga (Nyasa)\\\"},{\\\"alpha2\\\":\\\"to\\\",\\\"alpha3\\\":\\\"ton\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tonga (Tonga Islands)\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"tpi\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tok Pisin\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"tsi\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tsimshian\\\"},{\\\"alpha2\\\":\\\"tn\\\",\\\"alpha3\\\":\\\"tsn\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tswana\\\"},{\\\"alpha2\\\":\\\"ts\\\",\\\"alpha3\\\":\\\"tso\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tsonga\\\"},{\\\"alpha2\\\":\\\"tk\\\",\\\"alpha3\\\":\\\"tuk\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Turkmen\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"tum\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tumbuka\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"tup\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tupi languages\\\"},{\\\"alpha2\\\":\\\"tr\\\",\\\"alpha3\\\":\\\"tur\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Turkish\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"tut\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Altaic languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"tvl\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tuvalu\\\"},{\\\"alpha2\\\":\\\"tw\\\",\\\"alpha3\\\":\\\"twi\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Twi\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"tyv\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Tuvinian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"udm\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Udmurt\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"uga\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Ugaritic\\\"},{\\\"alpha2\\\":\\\"ug\\\",\\\"alpha3\\\":\\\"uig\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Uighur\\\"},{\\\"alpha2\\\":\\\"ug\\\",\\\"alpha3\\\":\\\"uig\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Uyghur\\\"},{\\\"alpha2\\\":\\\"uk\\\",\\\"alpha3\\\":\\\"ukr\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Ukrainian\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"umb\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Umbundu\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"und\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Undetermined\\\"},{\\\"alpha2\\\":\\\"ur\\\",\\\"alpha3\\\":\\\"urd\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Urdu\\\"},{\\\"alpha2\\\":\\\"uz\\\",\\\"alpha3\\\":\\\"uzb\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Uzbek\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"vai\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Vai\\\"},{\\\"alpha2\\\":\\\"ve\\\",\\\"alpha3\\\":\\\"ven\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Venda\\\"},{\\\"alpha2\\\":\\\"vi\\\",\\\"alpha3\\\":\\\"vie\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Vietnamese\\\"},{\\\"alpha2\\\":\\\"vo\\\",\\\"alpha3\\\":\\\"vol\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Volapük\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"vot\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Votic\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"wak\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Wakashan languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"wal\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Wolaitta\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"wal\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Wolaytta\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"war\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Waray\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"was\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Washo\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"wen\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Sorbian languages\\\"},{\\\"alpha2\\\":\\\"wa\\\",\\\"alpha3\\\":\\\"wln\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Walloon\\\"},{\\\"alpha2\\\":\\\"wo\\\",\\\"alpha3\\\":\\\"wol\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Wolof\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"xal\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kalmyk\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"xal\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Oirat\\\"},{\\\"alpha2\\\":\\\"xh\\\",\\\"alpha3\\\":\\\"xho\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Xhosa\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"yao\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Yao\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"yap\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Yapese\\\"},{\\\"alpha2\\\":\\\"yi\\\",\\\"alpha3\\\":\\\"yid\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Yiddish\\\"},{\\\"alpha2\\\":\\\"yo\\\",\\\"alpha3\\\":\\\"yor\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Yoruba\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"ypk\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Yupik languages\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"zap\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Zapotec\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"zbl\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Bliss\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"zbl\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Blissymbolics\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"zbl\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Blissymbols\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"zen\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Zenaga\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"zgh\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Standard Moroccan Tamazight\\\"},{\\\"alpha2\\\":\\\"za\\\",\\\"alpha3\\\":\\\"zha\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Chuang\\\"},{\\\"alpha2\\\":\\\"za\\\",\\\"alpha3\\\":\\\"zha\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Zhuang\\\"},{\\\"alpha2\\\":\\\"zh\\\",\\\"alpha3\\\":\\\"zho\\\",\\\"bibliographic\\\":\\\"chi\\\",\\\"name\\\":\\\"Chinese\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"znd\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Zande languages\\\"},{\\\"alpha2\\\":\\\"zu\\\",\\\"alpha3\\\":\\\"zul\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Zulu\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"zun\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Zuni\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"zxx\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"No linguistic content\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"zxx\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Not applicable\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"zza\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Dimili\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"zza\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Dimli\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"zza\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kirdki\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"zza\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Kirmanjki\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"zza\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Zaza\\\"},{\\\"alpha2\\\":\\\"\\\",\\\"alpha3\\\":\\\"zza\\\",\\\"bibliographic\\\":\\\"\\\",\\\"name\\\":\\\"Zazaki\\\"}]\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2NvdW50cnktZGF0YS9kYXRhL2xhbmd1YWdlcy5qc29uLmpzIiwic291cmNlcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/country-data/data/languages.json\n");

/***/ }),

/***/ "../node_modules/country-data/data/regions.js":
/*!****************************************************!*\
  !*** ../node_modules/country-data/data/regions.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar regions = {};\nregions.centralAsia = {\n  name: 'Central Asia',\n  countries: [// source is http://en.wikipedia.org/wiki/Central_Asia\n  'KZ', // Kazakhstan\n  'KG', // Kyrgyzstan\n  'TJ', // Tajikistan\n  'TM', // Turkmenistan\n  'UZ' // Uzbekistan\n  ]\n};\nregions.southernAsia = {\n  name: 'Southern Asia',\n  countries: [// source is http://en.wikipedia.org/wiki/South_Asia\n  'AF', // Afghanistan\n  'BD', // Bangladesh\n  'BT', // Bhutan\n  'IO', // British Indian Ocean Territory\n  'IN', // India\n  'IR', // Iran\n  'MV', // Maldives\n  'NP', // Nepal\n  'PK', // Pakistan\n  'LK' // Sri Lanka\n  ]\n};\nregions.southeastAsia = {\n  name: 'Southeast Asia',\n  countries: [// source is http://en.wikipedia.org/wiki/Southeast_Asia\n  'BN', // Brunei\n  'KH', // Cambodia\n  'CX', // Christmas Island\n  'CC', // Cocos (Keeling) Islands\n  'TL', // East Timor\n  'ID', // Indonesia\n  'LA', // Laos\n  'MY', // Malaysia\n  'MM', // Myanmar (Burma)\n  'PH', // Philippines\n  'SG', // Singapore\n  'TH', // Thailand\n  'VN' // Vietnam\n  ]\n};\nregions.eastAsia = {\n  name: 'East Asia',\n  countries: [// source is http://en.wikipedia.org/wiki/East_Asia\n  'CN', // China\n  'HK', // Hong Kong\n  'JP', // Japan\n  'KP', // North Korea\n  'KR', // South Korea\n  'MO', // Macao\n  'MN', // Mongolia\n  'TW' // Taiwan\n  ]\n};\nregions.westernAsia = {\n  name: 'Western Asia',\n  countries: [// source is http://en.wikipedia.org/wiki/Western_Asia\n  'AM', // Armenia\n  'AZ', // Azerbaijan\n  'BH', // Bahrain\n  'IQ', // Iraq\n  'IL', // Israel\n  'JO', // Jordan\n  'KW', // Kuwait\n  'LB', // Lebanon\n  'OM', // Oman\n  'PS', // Palestinian territories\n  'QA', // Qatar\n  'SA', // Saudi Arabia\n  'SY', // Syria\n  'TR', // Turkey\n  'AE', // United Arab Emirates\n  'YE' // Yemen\n  ]\n};\nregions.centralAfrica = {\n  name: 'Central Aftrica',\n  countries: [// source is http://en.wikipedia.org/wiki/Central_Africa\n  'AO', // Angola\n  'CM', // Cameroon\n  'CF', // Central African Republic\n  'TD', // Chad\n  'CG', // Republic of the Congo\n  'CD', // Democratic Republic of the Congo\n  'GQ', // Equatorial Guinea\n  'GA', // Gabon\n  'ST' // São Tomé and Príncipe\n  ]\n};\nregions.northAfrica = {\n  name: 'North Africa',\n  countries: [// source is http://en.wikipedia.org/wiki/North_Africa\n  'DZ', // Algeria\n  'EG', // Egypt\n  'LY', // Libya\n  'MA', // Morocco\n  'SD', // Sudan\n  'TN', // Tunisia\n  'EH' // Western Sahara\n  ]\n};\nregions.southernAfrica = {\n  name: 'Southern Africa',\n  countries: [// source is http://en.wikipedia.org/wiki/Southern_Africa\n  'BW', // Botswana\n  'LS', // Lesotho\n  'NA', // Namibia\n  'ZA', // South Africa\n  'SZ' // Swaziland\n  ]\n};\nregions.eastAfrica = {\n  name: 'East Africa',\n  countries: [// source is http://en.wikipedia.org/wiki/East_Africa\n  'BI', // Burundi\n  'KM', // Comoros\n  'DJ', // Djibouti\n  'ER', // Eritrea\n  'ET', // Ethiopia\n  'KE', // Kenya\n  'MG', // Madagascar\n  'MW', // Malawi\n  'MU', // Mauritius\n  'YT', // Mayotte (France)\n  'MZ', // Mozambique\n  'RE', // Réunion (France)\n  'RW', // Rwanda\n  'SC', // Seychelles\n  'SO', // Somalia\n  'SS', // South Sudan\n  'TZ', // Tanzania\n  'UG', // Uganda\n  'ZM', // Zambia\n  'ZW' // Zimbabwe\n  ]\n};\nregions.westAfrica = {\n  name: 'West Africa',\n  countries: [// source is http://en.wikipedia.org/wiki/West_Africa\n  'BJ', // Benin\n  'BF', // Burkina Faso\n  'CV', // Cabo Verde\n  'CI', // Côte d'Ivoire\n  'GM', // Gambia\n  'GH', // Ghana\n  'GN', // Guinea\n  'GW', // Guinea-Bissau\n  'LR', // Liberia\n  'ML', // Mali\n  'MR', // Mauritania\n  'NE', // Niger\n  'NG', // Nigeria\n  'SH', // Saint Helena, Ascension and Tristan da Cunha (United Kingdom)\n  'SN', // Senegal\n  'SL', // Sierra Leone\n  'TG' // Togo\n  ]\n};\nregions.centralAmerica = {\n  name: 'Central America',\n  countries: [// source is http://en.wikipedia.org/wiki/Central_America\n  'BZ', // Belize\n  'CR', // Costa Rica\n  'SV', // El Salvador\n  'GT', // Guatemala\n  'HN', // Honduras\n  'NI', // Nicaragua\n  'PA' // Panama\n  ]\n};\nregions.northernAmerica = {\n  name: 'Northern America',\n  countries: [// source is http://en.wikipedia.org/wiki/Northern_America\n  'BM', // Bermuda\n  'CA', // Canada\n  'GL', // Greenland\n  'MX', // Mexico\n  'PM', // Saint Pierre and Miquelon\n  'US' // United States\n  ]\n};\nregions.caribbean = {\n  name: 'Caribbean',\n  countries: [// source is http://en.wikipedia.org/wiki/Caribbean\n  'AI', // Anguilla\n  'AG', // Antigua and Barbuda\n  'AW', // Aruba\n  'BS', // Bahamas\n  'BB', // Barbados\n  'BQ', // Bonaire, Sint Eustatius & Saba\n  'VG', // British Virgin Islands\n  'KY', // Cayman Islands\n  'CU', // Cuba\n  'CW', // Curaçao\n  'DM', // Dominica\n  'DO', // Dominican Republic\n  'GD', // Grenada\n  'GP', // Guadeloupe\n  'HT', // Haiti\n  'JM', // Jamaica\n  'MQ', // Martinique\n  'MS', // Montserrat\n  'PR', // Puerto Rico\n  'BL', // Saint Barthélemy\n  'KN', // St. Kitts & Nevis\n  'LC', // Saint Lucia\n  'MF', // Saint Martin\n  'VC', // Saint Vincent and the Grenadines\n  'SX', // Sint Maarten\n  'TT', // Trinidad and Tobago\n  'TC', // Turks & Caicos\n  'VI' // United States Virgin Islands\n  ]\n};\nregions.southAmerica = {\n  name: 'South America',\n  countries: [// source is http://en.wikipedia.org/wiki/South_America\n  'AR', // Argentina\n  'BO', // Bolivia\n  'BR', // Brazil\n  'CL', // Chile\n  'CO', // Colombia\n  'EC', // Ecuador\n  'FK', // Falkland Islands\n  'GF', // French Guiana\n  'GY', // Guyana\n  'PY', // Paraguay\n  'PE', // Peru\n  'SR', // Suriname\n  'UY', // Uruguay\n  'VE' // Venezuela\n  ]\n};\nregions.antartica = {\n  name: 'Antartica',\n  countries: [// source is http://en.wikipedia.org/wiki/Antarctica\n  'AQ', // Antarctica\n  'BV', // Bouvet Island\n  'TF', // French Southern Territories\n  'HM', // Heard Island and McDonald Islands\n  'GS' // South Georgia and the South Sandwich Islands\n  ]\n};\nregions.northernEurope = {\n  name: 'Northern Europe',\n  countries: [// source is http://en.wikipedia.org/wiki/Northern_Europe\n  'AX', // Åland\n  'DK', // Denmark\n  'EE', // Estonia\n  'FO', // Faroe Islands\n  'FI', // Finland\n  'GG', // Guernsey\n  'IS', // Iceland\n  'IE', // Republic of Ireland\n  'JE', // Jersey (UK)\n  'IM', // Isle of Man\n  'LV', // Latvia\n  'LT', // Lithuania\n  'NO', // Norway\n  'SJ', // Svalbard and Jan Mayen\n  'SE', // Sweden\n  'GB' // United Kingdom\n  ]\n};\nregions.southernEurope = {\n  name: 'Southern Europe',\n  countries: [// source is http://en.wikipedia.org/wiki/Southern_Europe\n  'AL', // Albania\n  'AD', // Andorra\n  'BA', // Bosnia and Herzegovina\n  'HR', // Croatia\n  'CY', // Cyprus\n  'GI', // Gibraltar\n  'GR', // Greece\n  'IT', // Italy\n  'MK', // Republic of Macedonia\n  'VA', // Vatican City\n  'MT', // Malta\n  'ME', // Montenegro\n  'PT', // Portugal\n  'SM', // San Marino\n  'RS', // Serbia\n  'SI', // Slovenia\n  'ES' // Spain\n  ]\n};\nregions.easternEurope = {\n  name: 'Eastern Europe',\n  countries: [// source is http://en.wikipedia.org/wiki/Eastern_Europe\n  'BY', // Belarus\n  'BG', // Bulgaria\n  'CZ', // Czech Republic\n  'GE', // Georgia\n  'HU', // Hungary\n  'MD', // Moldova\n  'PL', // Poland\n  'RO', // Romania\n  'RU', // Russia\n  'SK', // Slovakia\n  'UA' // Ukraine\n  ]\n};\nregions.westernEurope = {\n  name: 'Western Europe',\n  countries: [// source is http://en.wikipedia.org/wiki/Western_Europe\n  'AT', // Austria\n  'BE', // Belgium\n  'FR', // France\n  'DE', // Germany\n  'LI', // Liechtenstein\n  'LU', // Luxembourg\n  'MC', // Monaco\n  'NL', // Netherlands\n  'CH' // Switzerland\n  ]\n};\nregions.australia = {\n  name: 'Australia',\n  countries: [// source is http://en.wikipedia.org/wiki/Oceania\n  'AU', // Australia\n  'NF', // Norfolk Island\n  'NZ' // New Zealand\n  ]\n};\nregions.melanesia = {\n  name: 'Melanesia',\n  countries: [// source is http://en.wikipedia.org/wiki/Oceania\n  'FJ', // Fiji\n  'NC', //  New Caledonia\n  'PG', // Papua New Guinea\n  'SB', // Solomon Islands\n  'VU' // Vanuatu\n  ]\n};\nregions.micronesia = {\n  name: 'Micronesia',\n  countries: [// source is http://en.wikipedia.org/wiki/Oceania\n  'GU', // Guam\n  'KI', // Kiribati\n  'MH', // Marshall Islands\n  'FM', // Micronesia, Fed. Sts.\n  'NR', // Nauru\n  'MP', // Northern Mariana Islands\n  'PW', // Palau\n  'UM' // United States Minor Outlying Islands\n  ]\n};\nregions.polynesia = {\n  name: 'Polynesia',\n  countries: [// source is http://en.wikipedia.org/wiki/Oceania\n  'AS', // American Samoa\n  'CK', // Cook Islands\n  'PF', // French Polynesia\n  'NU', // Niue\n  'PN', // Pitcairn Islands\n  'WS', // Samoa\n  'TK', // Tokelau\n  'TO', // Tonga\n  'TV', // Tuvalu\n  'WF' // Wallis and Futuna\n  ]\n};\nmodule.exports = regions;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/country-data/data/regions.js\n");

/***/ }),

/***/ "../node_modules/country-data/index.js":
/*!*********************************************!*\
  !*** ../node_modules/country-data/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _ = __webpack_require__(/*! underscore */ \"../node_modules/country-data/node_modules/underscore/underscore.js\");\n\nvar continents = __webpack_require__(/*! ./data/continents */ \"../node_modules/country-data/data/continents.js\");\n\nvar regions = __webpack_require__(/*! ./data/regions */ \"../node_modules/country-data/data/regions.js\");\n\nvar countriesAll = __webpack_require__(/*! ./data/countries.json */ \"../node_modules/country-data/data/countries.json\");\n\nvar currenciesAll = __webpack_require__(/*! ./data/currencies.json */ \"../node_modules/country-data/data/currencies.json\");\n\nvar languagesAll = __webpack_require__(/*! ./data/languages.json */ \"../node_modules/country-data/data/languages.json\");\n\nvar lookup = __webpack_require__(/*! ./lookup */ \"../node_modules/country-data/lookup.js\");\n\nvar getSymbol = __webpack_require__(/*! currency-symbol-map */ \"../node_modules/currency-symbol-map/currency-symbol-map.js\");\n\nexports.continents = continents;\nexports.regions = regions;\nexports.countries = {\n  all: countriesAll\n};\n\n_.each(countriesAll, function (country) {\n  // prefer assigned country codes over inactive ones\n  var exportedAlpha2 = exports.countries[country.alpha2];\n\n  if (!exportedAlpha2 || exportedAlpha2.status === 'deleted') {\n    exports.countries[country.alpha2] = country;\n  }\n\n  var exportedAlpha3 = exports.countries[country.alpha3];\n\n  if (!exportedAlpha3 || exportedAlpha3.status === 'deleted') {\n    exports.countries[country.alpha3] = country;\n  }\n});\n\nexports.currencies = {\n  all: currenciesAll\n};\n\n_.each(currenciesAll, function (currency) {\n  //If the symbol isn't available, default to the currency code\n  var symbol = getSymbol(currency.code);\n\n  if (symbol == '?') {\n    symbol = currency.code;\n  }\n\n  currency.symbol = symbol;\n  exports.currencies[currency.code] = currency;\n});\n\nexports.languages = {\n  all: languagesAll\n}; // Note that for the languages there are several entries with the same alpha3 -\n// eg Dutch and Flemish. Not sure how to best deal with that - here whichever\n// comes last wins.\n\n_.each(languagesAll, function (language) {\n  exports.languages[language.alpha2] = language;\n  exports.languages[language.bibliographic] = language;\n  exports.languages[language.alpha3] = language;\n});\n\nexports.lookup = lookup({\n  countries: countriesAll,\n  currencies: currenciesAll,\n  languages: languagesAll\n});\nvar callingCountries = {\n  all: []\n};\n\nvar callingCodesAll = _.reduce(countriesAll, function (codes, country) {\n  if (country.countryCallingCodes && country.countryCallingCodes.length) {\n    callingCountries.all.push(country);\n    callingCountries[country.alpha2] = country;\n    callingCountries[country.alpha3] = country;\n\n    _.each(country.countryCallingCodes, function (code) {\n      if (codes.indexOf(code) == -1) {\n        codes.push(code);\n      }\n    });\n  }\n\n  return codes;\n}, []);\n\ndelete callingCountries['']; // remove empty alpha3s\n\nexports.callingCountries = callingCountries;\ncallingCodesAll.sort(function (a, b) {\n  var parse = function parse(str) {\n    return parseInt(str);\n  };\n\n  var splitA = _.map(a.split(' '), parse);\n\n  var splitB = _.map(b.split(' '), parse);\n\n  if (splitA[0] < splitB[0]) {\n    return -1;\n  } else if (splitA[0] > splitB[0]) {\n    return 1;\n  } else {\n    // Same - check split[1]\n    if (splitA[1] === undefined && splitB[1] !== undefined) {\n      return -1;\n    } else if (splitA[1] !== undefined && splitB[1] === undefined) {\n      return 1;\n    } else if (splitA[1] < splitB[1]) {\n      return -1;\n    } else if (splitA[1] > splitB[1]) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n});\nexports.callingCodes = {\n  all: callingCodesAll\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2NvdW50cnktZGF0YS9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY291bnRyeS1kYXRhL2luZGV4LmpzPzMwN2MiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgXyA9IHJlcXVpcmUoJ3VuZGVyc2NvcmUnKTtcbnZhciBjb250aW5lbnRzID0gcmVxdWlyZSgnLi9kYXRhL2NvbnRpbmVudHMnKTtcbnZhciByZWdpb25zID0gcmVxdWlyZSgnLi9kYXRhL3JlZ2lvbnMnKTtcbnZhciBjb3VudHJpZXNBbGwgPSByZXF1aXJlKCcuL2RhdGEvY291bnRyaWVzLmpzb24nKTtcbnZhciBjdXJyZW5jaWVzQWxsID0gcmVxdWlyZSgnLi9kYXRhL2N1cnJlbmNpZXMuanNvbicpO1xudmFyIGxhbmd1YWdlc0FsbCA9IHJlcXVpcmUoJy4vZGF0YS9sYW5ndWFnZXMuanNvbicpO1xudmFyIGxvb2t1cCA9IHJlcXVpcmUoJy4vbG9va3VwJyk7XG5cbnZhciBnZXRTeW1ib2wgPSByZXF1aXJlKCdjdXJyZW5jeS1zeW1ib2wtbWFwJylcblxuZXhwb3J0cy5jb250aW5lbnRzID0gY29udGluZW50cztcbmV4cG9ydHMucmVnaW9ucyA9IHJlZ2lvbnM7XG5cbmV4cG9ydHMuY291bnRyaWVzID0ge1xuICBhbGw6IGNvdW50cmllc0FsbCxcbn07XG5cbl8uZWFjaChjb3VudHJpZXNBbGwsIGZ1bmN0aW9uIChjb3VudHJ5KSB7XG4gIC8vIHByZWZlciBhc3NpZ25lZCBjb3VudHJ5IGNvZGVzIG92ZXIgaW5hY3RpdmUgb25lc1xuICB2YXIgZXhwb3J0ZWRBbHBoYTIgPSBleHBvcnRzLmNvdW50cmllc1tjb3VudHJ5LmFscGhhMl07XG4gIGlmICghZXhwb3J0ZWRBbHBoYTIgfHwgZXhwb3J0ZWRBbHBoYTIuc3RhdHVzID09PSAnZGVsZXRlZCcpIHtcbiAgICBleHBvcnRzLmNvdW50cmllc1tjb3VudHJ5LmFscGhhMl0gPSBjb3VudHJ5O1xuICB9XG5cbiAgdmFyIGV4cG9ydGVkQWxwaGEzID0gZXhwb3J0cy5jb3VudHJpZXNbY291bnRyeS5hbHBoYTNdO1xuICBpZiAoIWV4cG9ydGVkQWxwaGEzIHx8IGV4cG9ydGVkQWxwaGEzLnN0YXR1cyA9PT0gJ2RlbGV0ZWQnKSB7XG4gICAgZXhwb3J0cy5jb3VudHJpZXNbY291bnRyeS5hbHBoYTNdID0gY291bnRyeTtcbiAgfVxufSk7XG5cbmV4cG9ydHMuY3VycmVuY2llcyA9IHtcbiAgYWxsOiBjdXJyZW5jaWVzQWxsLFxufTtcblxuXy5lYWNoKGN1cnJlbmNpZXNBbGwsIGZ1bmN0aW9uIChjdXJyZW5jeSkge1xuICAvL0lmIHRoZSBzeW1ib2wgaXNuJ3QgYXZhaWxhYmxlLCBkZWZhdWx0IHRvIHRoZSBjdXJyZW5jeSBjb2RlXG4gIHZhciBzeW1ib2wgPSBnZXRTeW1ib2woY3VycmVuY3kuY29kZSk7XG4gIGlmIChzeW1ib2wgPT0gJz8nKSB7XG4gICAgc3ltYm9sID0gY3VycmVuY3kuY29kZTtcbiAgfVxuXG4gIGN1cnJlbmN5LnN5bWJvbCA9IHN5bWJvbDtcbiAgZXhwb3J0cy5jdXJyZW5jaWVzW2N1cnJlbmN5LmNvZGVdID0gY3VycmVuY3k7XG59KTtcblxuZXhwb3J0cy5sYW5ndWFnZXMgPSB7XG4gIGFsbDogbGFuZ3VhZ2VzQWxsLFxufTtcblxuLy8gTm90ZSB0aGF0IGZvciB0aGUgbGFuZ3VhZ2VzIHRoZXJlIGFyZSBzZXZlcmFsIGVudHJpZXMgd2l0aCB0aGUgc2FtZSBhbHBoYTMgLVxuLy8gZWcgRHV0Y2ggYW5kIEZsZW1pc2guIE5vdCBzdXJlIGhvdyB0byBiZXN0IGRlYWwgd2l0aCB0aGF0IC0gaGVyZSB3aGljaGV2ZXJcbi8vIGNvbWVzIGxhc3Qgd2lucy5cbl8uZWFjaChsYW5ndWFnZXNBbGwsIGZ1bmN0aW9uIChsYW5ndWFnZSkge1xuICBleHBvcnRzLmxhbmd1YWdlc1tsYW5ndWFnZS5hbHBoYTJdID0gbGFuZ3VhZ2U7XG4gIGV4cG9ydHMubGFuZ3VhZ2VzW2xhbmd1YWdlLmJpYmxpb2dyYXBoaWNdID0gbGFuZ3VhZ2U7XG4gIGV4cG9ydHMubGFuZ3VhZ2VzW2xhbmd1YWdlLmFscGhhM10gPSBsYW5ndWFnZTtcbn0pO1xuXG5leHBvcnRzLmxvb2t1cCA9IGxvb2t1cCh7XG4gICAgY291bnRyaWVzOiBjb3VudHJpZXNBbGwsXG4gICAgY3VycmVuY2llczogY3VycmVuY2llc0FsbCxcbiAgICBsYW5ndWFnZXM6IGxhbmd1YWdlc0FsbFxufSk7XG5cbnZhciBjYWxsaW5nQ291bnRyaWVzID0ge2FsbDogW119O1xuXG52YXIgY2FsbGluZ0NvZGVzQWxsID0gXy5yZWR1Y2UoY291bnRyaWVzQWxsLCBmdW5jdGlvbiAoY29kZXMsIGNvdW50cnkpIHtcbiAgaWYgKGNvdW50cnkuY291bnRyeUNhbGxpbmdDb2RlcyAmJiBjb3VudHJ5LmNvdW50cnlDYWxsaW5nQ29kZXMubGVuZ3RoKSB7XG4gICAgY2FsbGluZ0NvdW50cmllcy5hbGwucHVzaChjb3VudHJ5KTtcblxuICAgIGNhbGxpbmdDb3VudHJpZXNbY291bnRyeS5hbHBoYTJdID0gY291bnRyeTtcbiAgICBjYWxsaW5nQ291bnRyaWVzW2NvdW50cnkuYWxwaGEzXSA9IGNvdW50cnk7XG5cbiAgICBfLmVhY2goY291bnRyeS5jb3VudHJ5Q2FsbGluZ0NvZGVzLCBmdW5jdGlvbiAoY29kZSkge1xuICAgICAgaWYgKGNvZGVzLmluZGV4T2YoY29kZSkgPT0gLTEpIHtcbiAgICAgICAgY29kZXMucHVzaChjb2RlKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICByZXR1cm4gY29kZXM7XG59LCBbXSk7XG5cbmRlbGV0ZSBjYWxsaW5nQ291bnRyaWVzWycnXTsgLy8gcmVtb3ZlIGVtcHR5IGFscGhhM3NcbmV4cG9ydHMuY2FsbGluZ0NvdW50cmllcyA9IGNhbGxpbmdDb3VudHJpZXM7XG5cbmNhbGxpbmdDb2Rlc0FsbC5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gIHZhciBwYXJzZSA9IGZ1bmN0aW9uIChzdHIpIHsgcmV0dXJuIHBhcnNlSW50KHN0cikgfTtcbiAgdmFyIHNwbGl0QSA9IF8ubWFwKGEuc3BsaXQoJyAnKSwgcGFyc2UpO1xuICB2YXIgc3BsaXRCID0gXy5tYXAoYi5zcGxpdCgnICcpLCBwYXJzZSk7XG5cbiAgaWYgKHNwbGl0QVswXSA8IHNwbGl0QlswXSkge1xuICAgIHJldHVybiAtMTtcbiAgfSBlbHNlIGlmIChzcGxpdEFbMF0gPiBzcGxpdEJbMF0pIHtcbiAgICByZXR1cm4gMTtcbiAgfSBlbHNlIHtcbiAgICAvLyBTYW1lIC0gY2hlY2sgc3BsaXRbMV1cbiAgICBpZiAoc3BsaXRBWzFdID09PSB1bmRlZmluZWQgJiYgc3BsaXRCWzFdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiAtMTtcbiAgICB9IGVsc2UgaWYgKHNwbGl0QVsxXSAhPT0gdW5kZWZpbmVkICYmIHNwbGl0QlsxXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gMTtcbiAgICB9IGVsc2UgaWYgKHNwbGl0QVsxXSA8IHNwbGl0QlsxXSkge1xuICAgICAgcmV0dXJuIC0xO1xuICAgIH0gZWxzZSBpZiAoc3BsaXRBWzFdID4gc3BsaXRCWzFdKSB7XG4gICAgICByZXR1cm4gMTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICB9XG59KTtcblxuZXhwb3J0cy5jYWxsaW5nQ29kZXMgPSB7XG4gIGFsbDogY2FsbGluZ0NvZGVzQWxsXG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQURBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQVZBO0FBQ0E7QUFZQTtBQUNBO0FBREE7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUkE7QUFDQTtBQVVBO0FBQ0E7QUFEQTtBQUtBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFLQTtBQUNBO0FBQUE7QUFiQTtBQUNBO0FBZUE7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFEQTtBQUdBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFEQTtBQUdBO0FBREE7QUFHQTtBQURBO0FBR0E7QUFDQTtBQUNBO0FBdEJBO0FBeUJBO0FBQ0E7QUFEQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/country-data/index.js\n");

/***/ }),

/***/ "../node_modules/country-data/lookup.js":
/*!**********************************************!*\
  !*** ../node_modules/country-data/lookup.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var _ = __webpack_require__(/*! underscore */ \"../node_modules/country-data/node_modules/underscore/underscore.js\");\n\nmodule.exports = init;\n\nfunction init(o) {\n  return {\n    countries: search.bind(null, o.countries),\n    currencies: search.bind(null, o.currencies),\n    languages: search.bind(null, o.languages)\n  };\n}\n\nfunction search(data, query) {\n  var q = _.pairs(query);\n\n  return data.filter(function (d) {\n    return q.filter(function (v) {\n      var prop = d[v[0]];\n      if (_.isArray(prop)) return prop.indexOf(v[1]) >= 0;\n      return prop == v[1];\n    }).length == q.length;\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2NvdW50cnktZGF0YS9sb29rdXAuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvdW50cnktZGF0YS9sb29rdXAuanM/MmVkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgXyA9IHJlcXVpcmUoJ3VuZGVyc2NvcmUnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBpbml0O1xuXG5mdW5jdGlvbiBpbml0KG8pIHtcbiAgcmV0dXJuIHtcbiAgICBjb3VudHJpZXM6IHNlYXJjaC5iaW5kKG51bGwsIG8uY291bnRyaWVzKSxcbiAgICBjdXJyZW5jaWVzOiBzZWFyY2guYmluZChudWxsLCBvLmN1cnJlbmNpZXMpLFxuICAgIGxhbmd1YWdlczogc2VhcmNoLmJpbmQobnVsbCwgby5sYW5ndWFnZXMpXG4gIH07XG59XG5cbmZ1bmN0aW9uIHNlYXJjaChkYXRhLCBxdWVyeSkge1xuICB2YXIgcSA9IF8ucGFpcnMocXVlcnkpO1xuXG4gIHJldHVybiBkYXRhLmZpbHRlcihmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIHEuZmlsdGVyKGZ1bmN0aW9uKHYpIHtcbiAgICAgIHZhciBwcm9wID0gZFt2WzBdXTtcblxuICAgICAgaWYoXy5pc0FycmF5KHByb3ApKSByZXR1cm4gcHJvcC5pbmRleE9mKHZbMV0pID49IDA7XG5cbiAgICAgIHJldHVybiBwcm9wID09IHZbMV07XG4gICAgfSkubGVuZ3RoID09IHEubGVuZ3RoO1xuICB9KTtcbn0iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFMQTtBQURBO0FBU0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/country-data/lookup.js\n");

/***/ }),

/***/ "../node_modules/country-data/node_modules/underscore/underscore.js":
/*!**************************************************************************!*\
  !*** ../node_modules/country-data/node_modules/underscore/underscore.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n} //     Underscore.js 1.9.2\n//     https://underscorejs.org\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n\n(function () {\n  // Baseline setup\n  // --------------\n  // Establish the root object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var root = (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) == 'object' && self.self === self && self || (typeof global === \"undefined\" ? \"undefined\" : _typeof(global)) == 'object' && global.global === global && global || this || {}; // Save the previous value of the `_` variable.\n\n  var previousUnderscore = root._; // Save bytes in the minified (but not gzipped) version:\n\n  var ArrayProto = Array.prototype,\n      ObjProto = Object.prototype;\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null; // Create quick reference variables for speed access to core prototypes.\n\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty; // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n\n  var nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeCreate = Object.create; // Naked function reference for surrogate-prototype-swapping.\n\n  var Ctor = function Ctor() {}; // Create a safe reference to the Underscore object for use below.\n\n\n  var _ = function _(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  }; // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for their old module API. If we're in\n  // the browser, add `_` as a global object.\n  // (`nodeType` is checked to ensure that `module`\n  // and `exports` are not HTML elements.)\n\n\n  if ( true && !exports.nodeType) {\n    if ( true && !module.nodeType && module.exports) {\n      exports = module.exports = _;\n    }\n\n    exports._ = _;\n  } else {\n    root._ = _;\n  } // Current version.\n\n\n  _.VERSION = '1.9.2'; // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n\n  var optimizeCb = function optimizeCb(func, context, argCount) {\n    if (context === void 0) return func;\n\n    switch (argCount == null ? 3 : argCount) {\n      case 1:\n        return function (value) {\n          return func.call(context, value);\n        };\n      // The 2-argument case is omitted because we’re not using it.\n\n      case 3:\n        return function (value, index, collection) {\n          return func.call(context, value, index, collection);\n        };\n\n      case 4:\n        return function (accumulator, value, index, collection) {\n          return func.call(context, accumulator, value, index, collection);\n        };\n    }\n\n    return function () {\n      return func.apply(context, arguments);\n    };\n  };\n\n  var builtinIteratee; // An internal function to generate callbacks that can be applied to each\n  // element in a collection, returning the desired result — either `identity`,\n  // an arbitrary callback, a property matcher, or a property accessor.\n\n  var cb = function cb(value, context, argCount) {\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n    return _.property(value);\n  }; // External wrapper for our callback generator. Users may customize\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n  // This abstraction hides the internal-only argCount argument.\n\n\n  _.iteratee = builtinIteratee = function builtinIteratee(value, context) {\n    return cb(value, context, Infinity);\n  }; // Some functions take a variable number of arguments, or a few expected\n  // arguments at the beginning and then a variable number of values to operate\n  // on. This helper accumulates all remaining arguments past the function’s\n  // argument length (or an explicit `startIndex`), into an array that becomes\n  // the last argument. Similar to ES6’s \"rest parameter\".\n\n\n  var restArguments = function restArguments(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function () {\n      var length = Math.max(arguments.length - startIndex, 0),\n          rest = Array(length),\n          index = 0;\n\n      for (; index < length; index++) {\n        rest[index] = arguments[index + startIndex];\n      }\n\n      switch (startIndex) {\n        case 0:\n          return func.call(this, rest);\n\n        case 1:\n          return func.call(this, arguments[0], rest);\n\n        case 2:\n          return func.call(this, arguments[0], arguments[1], rest);\n      }\n\n      var args = Array(startIndex + 1);\n\n      for (index = 0; index < startIndex; index++) {\n        args[index] = arguments[index];\n      }\n\n      args[startIndex] = rest;\n      return func.apply(this, args);\n    };\n  }; // An internal function for creating a new object that inherits from another.\n\n\n  var baseCreate = function baseCreate(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor();\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var shallowProperty = function shallowProperty(key) {\n    return function (obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  var has = function has(obj, path) {\n    return obj != null && hasOwnProperty.call(obj, path);\n  };\n\n  var deepGet = function deepGet(obj, path) {\n    var length = path.length;\n\n    for (var i = 0; i < length; i++) {\n      if (obj == null) return void 0;\n      obj = obj[path[i]];\n    }\n\n    return length ? obj : void 0;\n  }; // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object.\n  // Related: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n\n\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = shallowProperty('length');\n\n  var isArrayLike = function isArrayLike(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  }; // Collection Functions\n  // --------------------\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n\n\n  _.each = _.forEach = function (obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n\n    return obj;\n  }; // Return the results of applying the iteratee to each element.\n\n\n  _.map = _.collect = function (obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n\n    return results;\n  }; // Create a reducing function iterating left or right.\n\n\n  var createReduce = function createReduce(dir) {\n    // Wrap code that reassigns argument variables in a separate function than\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n    var reducer = function reducer(obj, iteratee, memo, initial) {\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n\n      if (!initial) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n\n      return memo;\n    };\n\n    return function (obj, iteratee, memo, context) {\n      var initial = arguments.length >= 3;\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n    };\n  }; // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n\n\n  _.reduce = _.foldl = _.inject = createReduce(1); // The right-associative version of reduce, also known as `foldr`.\n\n  _.reduceRight = _.foldr = createReduce(-1); // Return the first value which passes a truth test. Aliased as `detect`.\n\n  _.find = _.detect = function (obj, predicate, context) {\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\n    var key = keyFinder(obj, predicate, context);\n    if (key !== void 0 && key !== -1) return obj[key];\n  }; // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n\n\n  _.filter = _.select = function (obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n\n    _.each(obj, function (value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n\n    return results;\n  }; // Return all the elements for which a truth test fails.\n\n\n  _.reject = function (obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  }; // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n\n\n  _.every = _.all = function (obj, predicate, context) {\n    predicate = cb(predicate, context);\n\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n\n    return true;\n  }; // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n\n\n  _.some = _.any = function (obj, predicate, context) {\n    predicate = cb(predicate, context);\n\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n\n    return false;\n  }; // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n\n\n  _.contains = _.includes = _.include = function (obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  }; // Invoke a method (with arguments) on every item in a collection.\n\n\n  _.invoke = restArguments(function (obj, path, args) {\n    var contextPath, func;\n\n    if (_.isFunction(path)) {\n      func = path;\n    } else if (_.isArray(path)) {\n      contextPath = path.slice(0, -1);\n      path = path[path.length - 1];\n    }\n\n    return _.map(obj, function (context) {\n      var method = func;\n\n      if (!method) {\n        if (contextPath && contextPath.length) {\n          context = deepGet(context, contextPath);\n        }\n\n        if (context == null) return void 0;\n        method = context[path];\n      }\n\n      return method == null ? method : method.apply(context, args);\n    });\n  }); // Convenience version of a common use case of `map`: fetching a property.\n\n  _.pluck = function (obj, key) {\n    return _.map(obj, _.property(key));\n  }; // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n\n\n  _.where = function (obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  }; // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n\n\n  _.findWhere = function (obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  }; // Return the maximum element (or element-based computation).\n\n\n  _.max = function (obj, iteratee, context) {\n    var result = -Infinity,\n        lastComputed = -Infinity,\n        value,\n        computed;\n\n    if (iteratee == null || typeof iteratee == 'number' && _typeof(obj[0]) != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n\n        if (value != null && value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n\n      _.each(obj, function (v, index, list) {\n        computed = iteratee(v, index, list);\n\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n\n    return result;\n  }; // Return the minimum element (or element-based computation).\n\n\n  _.min = function (obj, iteratee, context) {\n    var result = Infinity,\n        lastComputed = Infinity,\n        value,\n        computed;\n\n    if (iteratee == null || typeof iteratee == 'number' && _typeof(obj[0]) != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n\n        if (value != null && value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n\n      _.each(obj, function (v, index, list) {\n        computed = iteratee(v, index, list);\n\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n\n    return result;\n  }; // Shuffle a collection.\n\n\n  _.shuffle = function (obj) {\n    return _.sample(obj, Infinity);\n  }; // Sample **n** random values from a collection using the modern version of the\n  // [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n\n\n  _.sample = function (obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\n    var length = getLength(sample);\n    n = Math.max(Math.min(n, length), 0);\n    var last = length - 1;\n\n    for (var index = 0; index < n; index++) {\n      var rand = _.random(index, last);\n\n      var temp = sample[index];\n      sample[index] = sample[rand];\n      sample[rand] = temp;\n    }\n\n    return sample.slice(0, n);\n  }; // Sort the object's values by a criterion produced by an iteratee.\n\n\n  _.sortBy = function (obj, iteratee, context) {\n    var index = 0;\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function (value, key, list) {\n      return {\n        value: value,\n        index: index++,\n        criteria: iteratee(value, key, list)\n      };\n    }).sort(function (left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n\n      return left.index - right.index;\n    }), 'value');\n  }; // An internal function used for aggregate \"group by\" operations.\n\n\n  var group = function group(behavior, partition) {\n    return function (obj, iteratee, context) {\n      var result = partition ? [[], []] : {};\n      iteratee = cb(iteratee, context);\n\n      _.each(obj, function (value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n\n      return result;\n    };\n  }; // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n\n\n  _.groupBy = group(function (result, value, key) {\n    if (has(result, key)) result[key].push(value);else result[key] = [value];\n  }); // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n\n  _.indexBy = group(function (result, value, key) {\n    result[key] = value;\n  }); // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n\n  _.countBy = group(function (result, value, key) {\n    if (has(result, key)) result[key]++;else result[key] = 1;\n  });\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g; // Safely create a real, live array from anything iterable.\n\n  _.toArray = function (obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n\n    if (_.isString(obj)) {\n      // Keep surrogate pair characters together\n      return obj.match(reStrSymbol);\n    }\n\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  }; // Return the number of elements in an object.\n\n\n  _.size = function (obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  }; // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n\n\n  _.partition = group(function (result, value, pass) {\n    result[pass ? 0 : 1].push(value);\n  }, true); // Array Functions\n  // ---------------\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n\n  _.first = _.head = _.take = function (array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  }; // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n\n\n  _.initial = function (array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  }; // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n\n\n  _.last = function (array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  }; // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n\n\n  _.rest = _.tail = _.drop = function (array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  }; // Trim out all falsy values from an array.\n\n\n  _.compact = function (array) {\n    return _.filter(array, Boolean);\n  }; // Internal implementation of a recursive `flatten` function.\n\n\n  var flatten = function flatten(input, shallow, strict, output) {\n    output = output || [];\n    var idx = output.length;\n\n    for (var i = 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        // Flatten current level of array or arguments object.\n        if (shallow) {\n          var j = 0,\n              len = value.length;\n\n          while (j < len) {\n            output[idx++] = value[j++];\n          }\n        } else {\n          flatten(value, shallow, strict, output);\n          idx = output.length;\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n\n    return output;\n  }; // Flatten out an array, either recursively (by default), or just one level.\n\n\n  _.flatten = function (array, shallow) {\n    return flatten(array, shallow, false);\n  }; // Return a version of the array that does not contain the specified value(s).\n\n\n  _.without = restArguments(function (array, otherArrays) {\n    return _.difference(array, otherArrays);\n  }); // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // The faster algorithm will not work with an iteratee if the iteratee\n  // is not a one-to-one function, so providing an iteratee will disable\n  // the faster algorithm.\n  // Aliased as `unique`.\n\n  _.uniq = _.unique = function (array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n\n      if (isSorted && !iteratee) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n\n    return result;\n  }; // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n\n\n  _.union = restArguments(function (arrays) {\n    return _.uniq(flatten(arrays, true, true));\n  }); // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n\n  _.intersection = function (array) {\n    var result = [];\n    var argsLength = arguments.length;\n\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      var j;\n\n      for (j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n\n      if (j === argsLength) result.push(item);\n    }\n\n    return result;\n  }; // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n\n\n  _.difference = restArguments(function (array, rest) {\n    rest = flatten(rest, true, true);\n    return _.filter(array, function (value) {\n      return !_.contains(rest, value);\n    });\n  }); // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices.\n\n  _.unzip = function (array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n\n    return result;\n  }; // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n\n\n  _.zip = restArguments(_.unzip); // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\n\n  _.object = function (list, values) {\n    var result = {};\n\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n\n    return result;\n  }; // Generator function to create the findIndex and findLastIndex functions.\n\n\n  var createPredicateIndexFinder = function createPredicateIndexFinder(dir) {\n    return function (array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n\n      return -1;\n    };\n  }; // Returns the first index on an array-like that passes a predicate test.\n\n\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1); // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n\n  _.sortedIndex = function (array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0,\n        high = getLength(array);\n\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1;else high = mid;\n    }\n\n    return low;\n  }; // Generator function to create the indexOf and lastIndexOf functions.\n\n\n  var createIndexFinder = function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function (array, item, idx) {\n      var i = 0,\n          length = getLength(array);\n\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n\n      return -1;\n    };\n  }; // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n\n\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex); // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](https://docs.python.org/library/functions.html#range).\n\n  _.range = function (start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n\n    if (!step) {\n      step = stop < start ? -1 : 1;\n    }\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  }; // Chunk a single array into multiple arrays, each containing `count` or fewer\n  // items.\n\n\n  _.chunk = function (array, count) {\n    if (count == null || count < 1) return [];\n    var result = [];\n    var i = 0,\n        length = array.length;\n\n    while (i < length) {\n      result.push(slice.call(array, i, i += count));\n    }\n\n    return result;\n  }; // Function (ahem) Functions\n  // ------------------\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments.\n\n\n  var executeBound = function executeBound(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  }; // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n\n\n  _.bind = restArguments(function (func, context, args) {\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var bound = restArguments(function (callArgs) {\n      return executeBound(func, bound, context, this, args.concat(callArgs));\n    });\n    return bound;\n  }); // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder by default, allowing any combination of arguments to be\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n\n  _.partial = restArguments(function (func, boundArgs) {\n    var placeholder = _.partial.placeholder;\n\n    var bound = function bound() {\n      var position = 0,\n          length = boundArgs.length;\n      var args = Array(length);\n\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n      }\n\n      while (position < arguments.length) {\n        args.push(arguments[position++]);\n      }\n\n      return executeBound(func, bound, this, this, args);\n    };\n\n    return bound;\n  });\n  _.partial.placeholder = _; // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n\n  _.bindAll = restArguments(function (obj, keys) {\n    keys = flatten(keys, false, false);\n    var index = keys.length;\n    if (index < 1) throw new Error('bindAll must be passed function names');\n\n    while (index--) {\n      var key = keys[index];\n      obj[key] = _.bind(obj[key], obj);\n    }\n  }); // Memoize an expensive function by storing its results.\n\n  _.memoize = function (func, hasher) {\n    var memoize = function memoize(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n\n    memoize.cache = {};\n    return memoize;\n  }; // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n\n\n  _.delay = restArguments(function (func, wait, args) {\n    return setTimeout(function () {\n      return func.apply(null, args);\n    }, wait);\n  }); // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n\n  _.defer = _.partial(_.delay, _, 1); // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n\n  _.throttle = function (func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function later() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function throttled() {\n      var now = _.now();\n\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n\n      return result;\n    };\n\n    throttled.cancel = function () {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  }; // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n\n\n  _.debounce = function (func, wait, immediate) {\n    var timeout, result;\n\n    var later = function later(context, args) {\n      timeout = null;\n      if (args) result = func.apply(context, args);\n    };\n\n    var debounced = restArguments(function (args) {\n      if (timeout) clearTimeout(timeout);\n\n      if (immediate) {\n        var callNow = !timeout;\n        timeout = setTimeout(later, wait);\n        if (callNow) result = func.apply(this, args);\n      } else {\n        timeout = _.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function () {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  }; // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n\n\n  _.wrap = function (func, wrapper) {\n    return _.partial(wrapper, func);\n  }; // Returns a negated version of the passed-in predicate.\n\n\n  _.negate = function (predicate) {\n    return function () {\n      return !predicate.apply(this, arguments);\n    };\n  }; // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n\n\n  _.compose = function () {\n    var args = arguments;\n    var start = args.length - 1;\n    return function () {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n\n      while (i--) {\n        result = args[i].call(this, result);\n      }\n\n      return result;\n    };\n  }; // Returns a function that will only be executed on and after the Nth call.\n\n\n  _.after = function (times, func) {\n    return function () {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  }; // Returns a function that will only be executed up to (but not including) the Nth call.\n\n\n  _.before = function (times, func) {\n    var memo;\n    return function () {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n\n      if (times <= 1) func = null;\n      return memo;\n    };\n  }; // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n\n\n  _.once = _.partial(_.before, 2);\n  _.restArguments = restArguments; // Object Functions\n  // ----------------\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n\n  var hasEnumBug = !{\n    toString: null\n  }.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  var collectNonEnumProps = function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto; // Constructor is a special case.\n\n    var prop = 'constructor';\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }; // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\n\n\n  _.keys = function (obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n\n    for (var key in obj) {\n      if (has(obj, key)) keys.push(key);\n    } // Ahem, IE < 9.\n\n\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  }; // Retrieve all the property names of an object.\n\n\n  _.allKeys = function (obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n\n    for (var key in obj) {\n      keys.push(key);\n    } // Ahem, IE < 9.\n\n\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  }; // Retrieve the values of an object's properties.\n\n\n  _.values = function (obj) {\n    var keys = _.keys(obj);\n\n    var length = keys.length;\n    var values = Array(length);\n\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n\n    return values;\n  }; // Returns the results of applying the iteratee to each element of the object.\n  // In contrast to _.map it returns an object.\n\n\n  _.mapObject = function (obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n\n    var keys = _.keys(obj),\n        length = keys.length,\n        results = {};\n\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys[index];\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n    }\n\n    return results;\n  }; // Convert an object into a list of `[key, value]` pairs.\n  // The opposite of _.object.\n\n\n  _.pairs = function (obj) {\n    var keys = _.keys(obj);\n\n    var length = keys.length;\n    var pairs = Array(length);\n\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n\n    return pairs;\n  }; // Invert the keys and values of an object. The values must be serializable.\n\n\n  _.invert = function (obj) {\n    var result = {};\n\n    var keys = _.keys(obj);\n\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n\n    return result;\n  }; // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`.\n\n\n  _.functions = _.methods = function (obj) {\n    var names = [];\n\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n\n    return names.sort();\n  }; // An internal function for creating assigner functions.\n\n\n  var createAssigner = function createAssigner(keysFunc, defaults) {\n    return function (obj) {\n      var length = arguments.length;\n      if (defaults) obj = Object(obj);\n      if (length < 2 || obj == null) return obj;\n\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n\n      return obj;\n    };\n  }; // Extend a given object with all the properties in passed-in object(s).\n\n\n  _.extend = createAssigner(_.allKeys); // Assigns a given object with all the own properties in the passed-in object(s).\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n\n  _.extendOwn = _.assign = createAssigner(_.keys); // Returns the first key on an object that passes a predicate test.\n\n  _.findKey = function (obj, predicate, context) {\n    predicate = cb(predicate, context);\n\n    var keys = _.keys(obj),\n        key;\n\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  }; // Internal pick helper function to determine if `obj` has key `key`.\n\n\n  var keyInObj = function keyInObj(value, key, obj) {\n    return key in obj;\n  }; // Return a copy of the object only containing the whitelisted properties.\n\n\n  _.pick = restArguments(function (obj, keys) {\n    var result = {},\n        iteratee = keys[0];\n    if (obj == null) return result;\n\n    if (_.isFunction(iteratee)) {\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n      keys = _.allKeys(obj);\n    } else {\n      iteratee = keyInObj;\n      keys = flatten(keys, false, false);\n      obj = Object(obj);\n    }\n\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n\n    return result;\n  }); // Return a copy of the object without the blacklisted properties.\n\n  _.omit = restArguments(function (obj, keys) {\n    var iteratee = keys[0],\n        context;\n\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n      if (keys.length > 1) context = keys[1];\n    } else {\n      keys = _.map(flatten(keys, false, false), String);\n\n      iteratee = function iteratee(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n\n    return _.pick(obj, iteratee, context);\n  }); // Fill in a given object with default properties.\n\n  _.defaults = createAssigner(_.allKeys, true); // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n\n  _.create = function (prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  }; // Create a (shallow-cloned) duplicate of an object.\n\n\n  _.clone = function (obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  }; // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n\n\n  _.tap = function (obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  }; // Returns whether an object has a given set of `key:value` pairs.\n\n\n  _.isMatch = function (object, attrs) {\n    var keys = _.keys(attrs),\n        length = keys.length;\n\n    if (object == null) return !length;\n    var obj = Object(object);\n\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n\n    return true;\n  }; // Internal recursive comparison function for `isEqual`.\n\n\n  var eq, deepEq;\n\n  eq = function eq(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](https://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b; // `null` or `undefined` only equal to itself (strict comparison).\n\n    if (a == null || b == null) return false; // `NaN`s are equivalent, but non-reflexive.\n\n    if (a !== a) return b !== b; // Exhaust primitive checks\n\n    var type = _typeof(a);\n\n    if (type !== 'function' && type !== 'object' && _typeof(b) != 'object') return false;\n    return deepEq(a, b, aStack, bStack);\n  }; // Internal recursive comparison function for `isEqual`.\n\n\n  deepEq = function deepEq(a, b, aStack, bStack) {\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped; // Compare `[[Class]]` names.\n\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]': // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN.\n        if (+a !== +a) return +b !== +b; // An `egal` comparison is performed for other numeric values.\n\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n\n      case '[object Symbol]':\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    }\n\n    var areArrays = className === '[object Array]';\n\n    if (!areArrays) {\n      if (_typeof(a) != 'object' || _typeof(b) != 'object') return false; // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n\n      var aCtor = a.constructor,\n          bCtor = b.constructor;\n\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor && _.isFunction(bCtor) && bCtor instanceof bCtor) && 'constructor' in a && 'constructor' in b) {\n        return false;\n      }\n    } // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n\n\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    } // Add the first object to the stack of traversed objects.\n\n\n    aStack.push(a);\n    bStack.push(b); // Recursively compare objects and arrays.\n\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false; // Deep compare the contents, ignoring non-numeric properties.\n\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a),\n          key;\n\n      length = keys.length; // Ensure that both objects contain the same number of properties before comparing deep equality.\n\n      if (_.keys(b).length !== length) return false;\n\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    } // Remove the first object from the stack of traversed objects.\n\n\n    aStack.pop();\n    bStack.pop();\n    return true;\n  }; // Perform a deep comparison to check if two objects are equal.\n\n\n  _.isEqual = function (a, b) {\n    return eq(a, b);\n  }; // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n\n\n  _.isEmpty = function (obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  }; // Is a given value a DOM element?\n\n\n  _.isElement = function (obj) {\n    return !!(obj && obj.nodeType === 1);\n  }; // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n\n\n  _.isArray = nativeIsArray || function (obj) {\n    return toString.call(obj) === '[object Array]';\n  }; // Is a given variable an object?\n\n\n  _.isObject = function (obj) {\n    var type = _typeof(obj);\n\n    return type === 'function' || type === 'object' && !!obj;\n  }; // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\n\n\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function (name) {\n    _['is' + name] = function (obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  }); // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n\n\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function (obj) {\n      return has(obj, 'callee');\n    };\n  } // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n\n\n  var nodelist = root.document && root.document.childNodes;\n\n  if ( true && (typeof Int8Array === \"undefined\" ? \"undefined\" : _typeof(Int8Array)) != 'object' && typeof nodelist != 'function') {\n    _.isFunction = function (obj) {\n      return typeof obj == 'function' || false;\n    };\n  } // Is a given object a finite number?\n\n\n  _.isFinite = function (obj) {\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\n  }; // Is the given value `NaN`?\n\n\n  _.isNaN = function (obj) {\n    return _.isNumber(obj) && isNaN(obj);\n  }; // Is a given value a boolean?\n\n\n  _.isBoolean = function (obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  }; // Is a given value equal to null?\n\n\n  _.isNull = function (obj) {\n    return obj === null;\n  }; // Is a given variable undefined?\n\n\n  _.isUndefined = function (obj) {\n    return obj === void 0;\n  }; // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n\n\n  _.has = function (obj, path) {\n    if (!_.isArray(path)) {\n      return has(obj, path);\n    }\n\n    var length = path.length;\n\n    for (var i = 0; i < length; i++) {\n      var key = path[i];\n\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n\n      obj = obj[key];\n    }\n\n    return !!length;\n  }; // Utility Functions\n  // -----------------\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n\n\n  _.noConflict = function () {\n    root._ = previousUnderscore;\n    return this;\n  }; // Keep the identity function around for default iteratees.\n\n\n  _.identity = function (value) {\n    return value;\n  }; // Predicate-generating functions. Often useful outside of Underscore.\n\n\n  _.constant = function (value) {\n    return function () {\n      return value;\n    };\n  };\n\n  _.noop = function () {}; // Creates a function that, when passed an object, will traverse that object’s\n  // properties down the given `path`, specified as an array of keys or indexes.\n\n\n  _.property = function (path) {\n    if (!_.isArray(path)) {\n      return shallowProperty(path);\n    }\n\n    return function (obj) {\n      return deepGet(obj, path);\n    };\n  }; // Generates a function for a given object that returns a given property.\n\n\n  _.propertyOf = function (obj) {\n    if (obj == null) {\n      return function () {};\n    }\n\n    return function (path) {\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\n    };\n  }; // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n\n\n  _.matcher = _.matches = function (attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function (obj) {\n      return _.isMatch(obj, attrs);\n    };\n  }; // Run a function **n** times.\n\n\n  _.times = function (n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n\n    for (var i = 0; i < n; i++) {\n      accum[i] = iteratee(i);\n    }\n\n    return accum;\n  }; // Return a random integer between min and max (inclusive).\n\n\n  _.random = function (min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n\n    return min + Math.floor(Math.random() * (max - min + 1));\n  }; // A (possibly faster) way to get the current timestamp as an integer.\n\n\n  _.now = Date.now || function () {\n    return new Date().getTime();\n  }; // List of HTML entities for escaping.\n\n\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n\n  var unescapeMap = _.invert(escapeMap); // Functions for escaping and unescaping strings to/from HTML interpolation.\n\n\n  var createEscaper = function createEscaper(map) {\n    var escaper = function escaper(match) {\n      return map[match];\n    }; // Regexes for identifying a key that needs to be escaped.\n\n\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function (string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap); // Traverses the children of `obj` along `path`. If a child is a function, it\n  // is invoked with its parent as context. Returns the value of the final\n  // child, or `fallback` if any child is undefined.\n\n  _.result = function (obj, path, fallback) {\n    if (!_.isArray(path)) path = [path];\n    var length = path.length;\n\n    if (!length) {\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\n    }\n\n    for (var i = 0; i < length; i++) {\n      var prop = obj == null ? void 0 : obj[path[i]];\n\n      if (prop === void 0) {\n        prop = fallback;\n        i = length; // Ensure we don't continue iterating.\n      }\n\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\n    }\n\n    return obj;\n  }; // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n\n\n  var idCounter = 0;\n\n  _.uniqueId = function (prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  }; // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n\n\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  }; // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n\n  var noMatch = /(.)^/; // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    \"\\u2028\": 'u2028',\n    \"\\u2029\": 'u2029'\n  };\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function escapeChar(match) {\n    return '\\\\' + escapes[match];\n  }; // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n\n\n  _.template = function (text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings); // Combine delimiters into one regular expression via alternation.\n\n    var matcher = RegExp([(settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source].join('|') + '|$', 'g'); // Compile the template source, escaping string literals appropriately.\n\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      } // Adobe VMs need the match returned to produce the correct offset.\n\n\n      return match;\n    });\n    source += \"';\\n\"; // If a variable is not specified, place data values in local scope.\n\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n    source = \"var __t,__p='',__j=Array.prototype.join,\" + \"print=function(){__p+=__j.call(arguments,'');};\\n\" + source + 'return __p;\\n';\n    var render;\n\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function template(data) {\n      return render.call(this, data, _);\n    }; // Provide the compiled source as a convenience for precompilation.\n\n\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n    return template;\n  }; // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n\n\n  _.chain = function (obj) {\n    var instance = _(obj);\n\n    instance._chain = true;\n    return instance;\n  }; // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n  // Helper function to continue chaining intermediate results.\n\n\n  var chainResult = function chainResult(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  }; // Add your own custom functions to the Underscore object.\n\n\n  _.mixin = function (obj) {\n    _.each(_.functions(obj), function (name) {\n      var func = _[name] = obj[name];\n\n      _.prototype[name] = function () {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return chainResult(this, func.apply(_, args));\n      };\n    });\n\n    return _;\n  }; // Add all of the Underscore functions to the wrapper object.\n\n\n  _.mixin(_); // Add all mutator Array functions to the wrapper.\n\n\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function (name) {\n    var method = ArrayProto[name];\n\n    _.prototype[name] = function () {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return chainResult(this, obj);\n    };\n  }); // Add all accessor Array functions to the wrapper.\n\n\n  _.each(['concat', 'join', 'slice'], function (name) {\n    var method = ArrayProto[name];\n\n    _.prototype[name] = function () {\n      return chainResult(this, method.apply(this._wrapped, arguments));\n    };\n  }); // Extracts the result from a wrapped and chained object.\n\n\n  _.prototype.value = function () {\n    return this._wrapped;\n  }; // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n\n\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function () {\n    return String(this._wrapped);\n  }; // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return _;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n})();\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../web/node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../../../web/node_modules/webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2NvdW50cnktZGF0YS9ub2RlX21vZHVsZXMvdW5kZXJzY29yZS91bmRlcnNjb3JlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3VudHJ5LWRhdGEvbm9kZV9tb2R1bGVzL3VuZGVyc2NvcmUvdW5kZXJzY29yZS5qcz8zNjRiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vICAgICBVbmRlcnNjb3JlLmpzIDEuOS4yXG4vLyAgICAgaHR0cHM6Ly91bmRlcnNjb3JlanMub3JnXG4vLyAgICAgKGMpIDIwMDktMjAxOCBKZXJlbXkgQXNoa2VuYXMsIERvY3VtZW50Q2xvdWQgYW5kIEludmVzdGlnYXRpdmUgUmVwb3J0ZXJzICYgRWRpdG9yc1xuLy8gICAgIFVuZGVyc2NvcmUgbWF5IGJlIGZyZWVseSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5cbihmdW5jdGlvbigpIHtcblxuICAvLyBCYXNlbGluZSBzZXR1cFxuICAvLyAtLS0tLS0tLS0tLS0tLVxuXG4gIC8vIEVzdGFibGlzaCB0aGUgcm9vdCBvYmplY3QsIGB3aW5kb3dgIChgc2VsZmApIGluIHRoZSBicm93c2VyLCBgZ2xvYmFsYFxuICAvLyBvbiB0aGUgc2VydmVyLCBvciBgdGhpc2AgaW4gc29tZSB2aXJ0dWFsIG1hY2hpbmVzLiBXZSB1c2UgYHNlbGZgXG4gIC8vIGluc3RlYWQgb2YgYHdpbmRvd2AgZm9yIGBXZWJXb3JrZXJgIHN1cHBvcnQuXG4gIHZhciByb290ID0gdHlwZW9mIHNlbGYgPT0gJ29iamVjdCcgJiYgc2VsZi5zZWxmID09PSBzZWxmICYmIHNlbGYgfHxcbiAgICAgICAgICAgIHR5cGVvZiBnbG9iYWwgPT0gJ29iamVjdCcgJiYgZ2xvYmFsLmdsb2JhbCA9PT0gZ2xvYmFsICYmIGdsb2JhbCB8fFxuICAgICAgICAgICAgdGhpcyB8fFxuICAgICAgICAgICAge307XG5cbiAgLy8gU2F2ZSB0aGUgcHJldmlvdXMgdmFsdWUgb2YgdGhlIGBfYCB2YXJpYWJsZS5cbiAgdmFyIHByZXZpb3VzVW5kZXJzY29yZSA9IHJvb3QuXztcblxuICAvLyBTYXZlIGJ5dGVzIGluIHRoZSBtaW5pZmllZCAoYnV0IG5vdCBnemlwcGVkKSB2ZXJzaW9uOlxuICB2YXIgQXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZSwgT2JqUHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuICB2YXIgU3ltYm9sUHJvdG8gPSB0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyA/IFN5bWJvbC5wcm90b3R5cGUgOiBudWxsO1xuXG4gIC8vIENyZWF0ZSBxdWljayByZWZlcmVuY2UgdmFyaWFibGVzIGZvciBzcGVlZCBhY2Nlc3MgdG8gY29yZSBwcm90b3R5cGVzLlxuICB2YXIgcHVzaCA9IEFycmF5UHJvdG8ucHVzaCxcbiAgICAgIHNsaWNlID0gQXJyYXlQcm90by5zbGljZSxcbiAgICAgIHRvU3RyaW5nID0gT2JqUHJvdG8udG9TdHJpbmcsXG4gICAgICBoYXNPd25Qcm9wZXJ0eSA9IE9ialByb3RvLmhhc093blByb3BlcnR5O1xuXG4gIC8vIEFsbCAqKkVDTUFTY3JpcHQgNSoqIG5hdGl2ZSBmdW5jdGlvbiBpbXBsZW1lbnRhdGlvbnMgdGhhdCB3ZSBob3BlIHRvIHVzZVxuICAvLyBhcmUgZGVjbGFyZWQgaGVyZS5cbiAgdmFyIG5hdGl2ZUlzQXJyYXkgPSBBcnJheS5pc0FycmF5LFxuICAgICAgbmF0aXZlS2V5cyA9IE9iamVjdC5rZXlzLFxuICAgICAgbmF0aXZlQ3JlYXRlID0gT2JqZWN0LmNyZWF0ZTtcblxuICAvLyBOYWtlZCBmdW5jdGlvbiByZWZlcmVuY2UgZm9yIHN1cnJvZ2F0ZS1wcm90b3R5cGUtc3dhcHBpbmcuXG4gIHZhciBDdG9yID0gZnVuY3Rpb24oKXt9O1xuXG4gIC8vIENyZWF0ZSBhIHNhZmUgcmVmZXJlbmNlIHRvIHRoZSBVbmRlcnNjb3JlIG9iamVjdCBmb3IgdXNlIGJlbG93LlxuICB2YXIgXyA9IGZ1bmN0aW9uKG9iaikge1xuICAgIGlmIChvYmogaW5zdGFuY2VvZiBfKSByZXR1cm4gb2JqO1xuICAgIGlmICghKHRoaXMgaW5zdGFuY2VvZiBfKSkgcmV0dXJuIG5ldyBfKG9iaik7XG4gICAgdGhpcy5fd3JhcHBlZCA9IG9iajtcbiAgfTtcblxuICAvLyBFeHBvcnQgdGhlIFVuZGVyc2NvcmUgb2JqZWN0IGZvciAqKk5vZGUuanMqKiwgd2l0aFxuICAvLyBiYWNrd2FyZHMtY29tcGF0aWJpbGl0eSBmb3IgdGhlaXIgb2xkIG1vZHVsZSBBUEkuIElmIHdlJ3JlIGluXG4gIC8vIHRoZSBicm93c2VyLCBhZGQgYF9gIGFzIGEgZ2xvYmFsIG9iamVjdC5cbiAgLy8gKGBub2RlVHlwZWAgaXMgY2hlY2tlZCB0byBlbnN1cmUgdGhhdCBgbW9kdWxlYFxuICAvLyBhbmQgYGV4cG9ydHNgIGFyZSBub3QgSFRNTCBlbGVtZW50cy4pXG4gIGlmICh0eXBlb2YgZXhwb3J0cyAhPSAndW5kZWZpbmVkJyAmJiAhZXhwb3J0cy5ub2RlVHlwZSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlICE9ICd1bmRlZmluZWQnICYmICFtb2R1bGUubm9kZVR5cGUgJiYgbW9kdWxlLmV4cG9ydHMpIHtcbiAgICAgIGV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IF87XG4gICAgfVxuICAgIGV4cG9ydHMuXyA9IF87XG4gIH0gZWxzZSB7XG4gICAgcm9vdC5fID0gXztcbiAgfVxuXG4gIC8vIEN1cnJlbnQgdmVyc2lvbi5cbiAgXy5WRVJTSU9OID0gJzEuOS4yJztcblxuICAvLyBJbnRlcm5hbCBmdW5jdGlvbiB0aGF0IHJldHVybnMgYW4gZWZmaWNpZW50IChmb3IgY3VycmVudCBlbmdpbmVzKSB2ZXJzaW9uXG4gIC8vIG9mIHRoZSBwYXNzZWQtaW4gY2FsbGJhY2ssIHRvIGJlIHJlcGVhdGVkbHkgYXBwbGllZCBpbiBvdGhlciBVbmRlcnNjb3JlXG4gIC8vIGZ1bmN0aW9ucy5cbiAgdmFyIG9wdGltaXplQ2IgPSBmdW5jdGlvbihmdW5jLCBjb250ZXh0LCBhcmdDb3VudCkge1xuICAgIGlmIChjb250ZXh0ID09PSB2b2lkIDApIHJldHVybiBmdW5jO1xuICAgIHN3aXRjaCAoYXJnQ291bnQgPT0gbnVsbCA/IDMgOiBhcmdDb3VudCkge1xuICAgICAgY2FzZSAxOiByZXR1cm4gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmMuY2FsbChjb250ZXh0LCB2YWx1ZSk7XG4gICAgICB9O1xuICAgICAgLy8gVGhlIDItYXJndW1lbnQgY2FzZSBpcyBvbWl0dGVkIGJlY2F1c2Ugd2XigJlyZSBub3QgdXNpbmcgaXQuXG4gICAgICBjYXNlIDM6IHJldHVybiBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGNvbGxlY3Rpb24pIHtcbiAgICAgICAgcmV0dXJuIGZ1bmMuY2FsbChjb250ZXh0LCB2YWx1ZSwgaW5kZXgsIGNvbGxlY3Rpb24pO1xuICAgICAgfTtcbiAgICAgIGNhc2UgNDogcmV0dXJuIGZ1bmN0aW9uKGFjY3VtdWxhdG9yLCB2YWx1ZSwgaW5kZXgsIGNvbGxlY3Rpb24pIHtcbiAgICAgICAgcmV0dXJuIGZ1bmMuY2FsbChjb250ZXh0LCBhY2N1bXVsYXRvciwgdmFsdWUsIGluZGV4LCBjb2xsZWN0aW9uKTtcbiAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3VtZW50cyk7XG4gICAgfTtcbiAgfTtcblxuICB2YXIgYnVpbHRpbkl0ZXJhdGVlO1xuXG4gIC8vIEFuIGludGVybmFsIGZ1bmN0aW9uIHRvIGdlbmVyYXRlIGNhbGxiYWNrcyB0aGF0IGNhbiBiZSBhcHBsaWVkIHRvIGVhY2hcbiAgLy8gZWxlbWVudCBpbiBhIGNvbGxlY3Rpb24sIHJldHVybmluZyB0aGUgZGVzaXJlZCByZXN1bHQg4oCUIGVpdGhlciBgaWRlbnRpdHlgLFxuICAvLyBhbiBhcmJpdHJhcnkgY2FsbGJhY2ssIGEgcHJvcGVydHkgbWF0Y2hlciwgb3IgYSBwcm9wZXJ0eSBhY2Nlc3Nvci5cbiAgdmFyIGNiID0gZnVuY3Rpb24odmFsdWUsIGNvbnRleHQsIGFyZ0NvdW50KSB7XG4gICAgaWYgKF8uaXRlcmF0ZWUgIT09IGJ1aWx0aW5JdGVyYXRlZSkgcmV0dXJuIF8uaXRlcmF0ZWUodmFsdWUsIGNvbnRleHQpO1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSByZXR1cm4gXy5pZGVudGl0eTtcbiAgICBpZiAoXy5pc0Z1bmN0aW9uKHZhbHVlKSkgcmV0dXJuIG9wdGltaXplQ2IodmFsdWUsIGNvbnRleHQsIGFyZ0NvdW50KTtcbiAgICBpZiAoXy5pc09iamVjdCh2YWx1ZSkgJiYgIV8uaXNBcnJheSh2YWx1ZSkpIHJldHVybiBfLm1hdGNoZXIodmFsdWUpO1xuICAgIHJldHVybiBfLnByb3BlcnR5KHZhbHVlKTtcbiAgfTtcblxuICAvLyBFeHRlcm5hbCB3cmFwcGVyIGZvciBvdXIgY2FsbGJhY2sgZ2VuZXJhdG9yLiBVc2VycyBtYXkgY3VzdG9taXplXG4gIC8vIGBfLml0ZXJhdGVlYCBpZiB0aGV5IHdhbnQgYWRkaXRpb25hbCBwcmVkaWNhdGUvaXRlcmF0ZWUgc2hvcnRoYW5kIHN0eWxlcy5cbiAgLy8gVGhpcyBhYnN0cmFjdGlvbiBoaWRlcyB0aGUgaW50ZXJuYWwtb25seSBhcmdDb3VudCBhcmd1bWVudC5cbiAgXy5pdGVyYXRlZSA9IGJ1aWx0aW5JdGVyYXRlZSA9IGZ1bmN0aW9uKHZhbHVlLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIGNiKHZhbHVlLCBjb250ZXh0LCBJbmZpbml0eSk7XG4gIH07XG5cbiAgLy8gU29tZSBmdW5jdGlvbnMgdGFrZSBhIHZhcmlhYmxlIG51bWJlciBvZiBhcmd1bWVudHMsIG9yIGEgZmV3IGV4cGVjdGVkXG4gIC8vIGFyZ3VtZW50cyBhdCB0aGUgYmVnaW5uaW5nIGFuZCB0aGVuIGEgdmFyaWFibGUgbnVtYmVyIG9mIHZhbHVlcyB0byBvcGVyYXRlXG4gIC8vIG9uLiBUaGlzIGhlbHBlciBhY2N1bXVsYXRlcyBhbGwgcmVtYWluaW5nIGFyZ3VtZW50cyBwYXN0IHRoZSBmdW5jdGlvbuKAmXNcbiAgLy8gYXJndW1lbnQgbGVuZ3RoIChvciBhbiBleHBsaWNpdCBgc3RhcnRJbmRleGApLCBpbnRvIGFuIGFycmF5IHRoYXQgYmVjb21lc1xuICAvLyB0aGUgbGFzdCBhcmd1bWVudC4gU2ltaWxhciB0byBFUzbigJlzIFwicmVzdCBwYXJhbWV0ZXJcIi5cbiAgdmFyIHJlc3RBcmd1bWVudHMgPSBmdW5jdGlvbihmdW5jLCBzdGFydEluZGV4KSB7XG4gICAgc3RhcnRJbmRleCA9IHN0YXJ0SW5kZXggPT0gbnVsbCA/IGZ1bmMubGVuZ3RoIC0gMSA6ICtzdGFydEluZGV4O1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBsZW5ndGggPSBNYXRoLm1heChhcmd1bWVudHMubGVuZ3RoIC0gc3RhcnRJbmRleCwgMCksXG4gICAgICAgICAgcmVzdCA9IEFycmF5KGxlbmd0aCksXG4gICAgICAgICAgaW5kZXggPSAwO1xuICAgICAgZm9yICg7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgIHJlc3RbaW5kZXhdID0gYXJndW1lbnRzW2luZGV4ICsgc3RhcnRJbmRleF07XG4gICAgICB9XG4gICAgICBzd2l0Y2ggKHN0YXJ0SW5kZXgpIHtcbiAgICAgICAgY2FzZSAwOiByZXR1cm4gZnVuYy5jYWxsKHRoaXMsIHJlc3QpO1xuICAgICAgICBjYXNlIDE6IHJldHVybiBmdW5jLmNhbGwodGhpcywgYXJndW1lbnRzWzBdLCByZXN0KTtcbiAgICAgICAgY2FzZSAyOiByZXR1cm4gZnVuYy5jYWxsKHRoaXMsIGFyZ3VtZW50c1swXSwgYXJndW1lbnRzWzFdLCByZXN0KTtcbiAgICAgIH1cbiAgICAgIHZhciBhcmdzID0gQXJyYXkoc3RhcnRJbmRleCArIDEpO1xuICAgICAgZm9yIChpbmRleCA9IDA7IGluZGV4IDwgc3RhcnRJbmRleDsgaW5kZXgrKykge1xuICAgICAgICBhcmdzW2luZGV4XSA9IGFyZ3VtZW50c1tpbmRleF07XG4gICAgICB9XG4gICAgICBhcmdzW3N0YXJ0SW5kZXhdID0gcmVzdDtcbiAgICAgIHJldHVybiBmdW5jLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIH07XG4gIH07XG5cbiAgLy8gQW4gaW50ZXJuYWwgZnVuY3Rpb24gZm9yIGNyZWF0aW5nIGEgbmV3IG9iamVjdCB0aGF0IGluaGVyaXRzIGZyb20gYW5vdGhlci5cbiAgdmFyIGJhc2VDcmVhdGUgPSBmdW5jdGlvbihwcm90b3R5cGUpIHtcbiAgICBpZiAoIV8uaXNPYmplY3QocHJvdG90eXBlKSkgcmV0dXJuIHt9O1xuICAgIGlmIChuYXRpdmVDcmVhdGUpIHJldHVybiBuYXRpdmVDcmVhdGUocHJvdG90eXBlKTtcbiAgICBDdG9yLnByb3RvdHlwZSA9IHByb3RvdHlwZTtcbiAgICB2YXIgcmVzdWx0ID0gbmV3IEN0b3I7XG4gICAgQ3Rvci5wcm90b3R5cGUgPSBudWxsO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgdmFyIHNoYWxsb3dQcm9wZXJ0eSA9IGZ1bmN0aW9uKGtleSkge1xuICAgIHJldHVybiBmdW5jdGlvbihvYmopIHtcbiAgICAgIHJldHVybiBvYmogPT0gbnVsbCA/IHZvaWQgMCA6IG9ialtrZXldO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGhhcyA9IGZ1bmN0aW9uKG9iaiwgcGF0aCkge1xuICAgIHJldHVybiBvYmogIT0gbnVsbCAmJiBoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcGF0aCk7XG4gIH1cblxuICB2YXIgZGVlcEdldCA9IGZ1bmN0aW9uKG9iaiwgcGF0aCkge1xuICAgIHZhciBsZW5ndGggPSBwYXRoLmxlbmd0aDtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAob2JqID09IG51bGwpIHJldHVybiB2b2lkIDA7XG4gICAgICBvYmogPSBvYmpbcGF0aFtpXV07XG4gICAgfVxuICAgIHJldHVybiBsZW5ndGggPyBvYmogOiB2b2lkIDA7XG4gIH07XG5cbiAgLy8gSGVscGVyIGZvciBjb2xsZWN0aW9uIG1ldGhvZHMgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgYSBjb2xsZWN0aW9uXG4gIC8vIHNob3VsZCBiZSBpdGVyYXRlZCBhcyBhbiBhcnJheSBvciBhcyBhbiBvYmplY3QuXG4gIC8vIFJlbGF0ZWQ6IGh0dHBzOi8vcGVvcGxlLm1vemlsbGEub3JnL35qb3JlbmRvcmZmL2VzNi1kcmFmdC5odG1sI3NlYy10b2xlbmd0aFxuICAvLyBBdm9pZHMgYSB2ZXJ5IG5hc3R5IGlPUyA4IEpJVCBidWcgb24gQVJNLTY0LiAjMjA5NFxuICB2YXIgTUFYX0FSUkFZX0lOREVYID0gTWF0aC5wb3coMiwgNTMpIC0gMTtcbiAgdmFyIGdldExlbmd0aCA9IHNoYWxsb3dQcm9wZXJ0eSgnbGVuZ3RoJyk7XG4gIHZhciBpc0FycmF5TGlrZSA9IGZ1bmN0aW9uKGNvbGxlY3Rpb24pIHtcbiAgICB2YXIgbGVuZ3RoID0gZ2V0TGVuZ3RoKGNvbGxlY3Rpb24pO1xuICAgIHJldHVybiB0eXBlb2YgbGVuZ3RoID09ICdudW1iZXInICYmIGxlbmd0aCA+PSAwICYmIGxlbmd0aCA8PSBNQVhfQVJSQVlfSU5ERVg7XG4gIH07XG5cbiAgLy8gQ29sbGVjdGlvbiBGdW5jdGlvbnNcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAvLyBUaGUgY29ybmVyc3RvbmUsIGFuIGBlYWNoYCBpbXBsZW1lbnRhdGlvbiwgYWthIGBmb3JFYWNoYC5cbiAgLy8gSGFuZGxlcyByYXcgb2JqZWN0cyBpbiBhZGRpdGlvbiB0byBhcnJheS1saWtlcy4gVHJlYXRzIGFsbFxuICAvLyBzcGFyc2UgYXJyYXktbGlrZXMgYXMgaWYgdGhleSB3ZXJlIGRlbnNlLlxuICBfLmVhY2ggPSBfLmZvckVhY2ggPSBmdW5jdGlvbihvYmosIGl0ZXJhdGVlLCBjb250ZXh0KSB7XG4gICAgaXRlcmF0ZWUgPSBvcHRpbWl6ZUNiKGl0ZXJhdGVlLCBjb250ZXh0KTtcbiAgICB2YXIgaSwgbGVuZ3RoO1xuICAgIGlmIChpc0FycmF5TGlrZShvYmopKSB7XG4gICAgICBmb3IgKGkgPSAwLCBsZW5ndGggPSBvYmoubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaXRlcmF0ZWUob2JqW2ldLCBpLCBvYmopO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIga2V5cyA9IF8ua2V5cyhvYmopO1xuICAgICAgZm9yIChpID0gMCwgbGVuZ3RoID0ga2V5cy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICBpdGVyYXRlZShvYmpba2V5c1tpXV0sIGtleXNbaV0sIG9iaik7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBvYmo7XG4gIH07XG5cbiAgLy8gUmV0dXJuIHRoZSByZXN1bHRzIG9mIGFwcGx5aW5nIHRoZSBpdGVyYXRlZSB0byBlYWNoIGVsZW1lbnQuXG4gIF8ubWFwID0gXy5jb2xsZWN0ID0gZnVuY3Rpb24ob2JqLCBpdGVyYXRlZSwgY29udGV4dCkge1xuICAgIGl0ZXJhdGVlID0gY2IoaXRlcmF0ZWUsIGNvbnRleHQpO1xuICAgIHZhciBrZXlzID0gIWlzQXJyYXlMaWtlKG9iaikgJiYgXy5rZXlzKG9iaiksXG4gICAgICAgIGxlbmd0aCA9IChrZXlzIHx8IG9iaikubGVuZ3RoLFxuICAgICAgICByZXN1bHRzID0gQXJyYXkobGVuZ3RoKTtcbiAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICB2YXIgY3VycmVudEtleSA9IGtleXMgPyBrZXlzW2luZGV4XSA6IGluZGV4O1xuICAgICAgcmVzdWx0c1tpbmRleF0gPSBpdGVyYXRlZShvYmpbY3VycmVudEtleV0sIGN1cnJlbnRLZXksIG9iaik7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHRzO1xuICB9O1xuXG4gIC8vIENyZWF0ZSBhIHJlZHVjaW5nIGZ1bmN0aW9uIGl0ZXJhdGluZyBsZWZ0IG9yIHJpZ2h0LlxuICB2YXIgY3JlYXRlUmVkdWNlID0gZnVuY3Rpb24oZGlyKSB7XG4gICAgLy8gV3JhcCBjb2RlIHRoYXQgcmVhc3NpZ25zIGFyZ3VtZW50IHZhcmlhYmxlcyBpbiBhIHNlcGFyYXRlIGZ1bmN0aW9uIHRoYW5cbiAgICAvLyB0aGUgb25lIHRoYXQgYWNjZXNzZXMgYGFyZ3VtZW50cy5sZW5ndGhgIHRvIGF2b2lkIGEgcGVyZiBoaXQuICgjMTk5MSlcbiAgICB2YXIgcmVkdWNlciA9IGZ1bmN0aW9uKG9iaiwgaXRlcmF0ZWUsIG1lbW8sIGluaXRpYWwpIHtcbiAgICAgIHZhciBrZXlzID0gIWlzQXJyYXlMaWtlKG9iaikgJiYgXy5rZXlzKG9iaiksXG4gICAgICAgICAgbGVuZ3RoID0gKGtleXMgfHwgb2JqKS5sZW5ndGgsXG4gICAgICAgICAgaW5kZXggPSBkaXIgPiAwID8gMCA6IGxlbmd0aCAtIDE7XG4gICAgICBpZiAoIWluaXRpYWwpIHtcbiAgICAgICAgbWVtbyA9IG9ialtrZXlzID8ga2V5c1tpbmRleF0gOiBpbmRleF07XG4gICAgICAgIGluZGV4ICs9IGRpcjtcbiAgICAgIH1cbiAgICAgIGZvciAoOyBpbmRleCA+PSAwICYmIGluZGV4IDwgbGVuZ3RoOyBpbmRleCArPSBkaXIpIHtcbiAgICAgICAgdmFyIGN1cnJlbnRLZXkgPSBrZXlzID8ga2V5c1tpbmRleF0gOiBpbmRleDtcbiAgICAgICAgbWVtbyA9IGl0ZXJhdGVlKG1lbW8sIG9ialtjdXJyZW50S2V5XSwgY3VycmVudEtleSwgb2JqKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBtZW1vO1xuICAgIH07XG5cbiAgICByZXR1cm4gZnVuY3Rpb24ob2JqLCBpdGVyYXRlZSwgbWVtbywgY29udGV4dCkge1xuICAgICAgdmFyIGluaXRpYWwgPSBhcmd1bWVudHMubGVuZ3RoID49IDM7XG4gICAgICByZXR1cm4gcmVkdWNlcihvYmosIG9wdGltaXplQ2IoaXRlcmF0ZWUsIGNvbnRleHQsIDQpLCBtZW1vLCBpbml0aWFsKTtcbiAgICB9O1xuICB9O1xuXG4gIC8vICoqUmVkdWNlKiogYnVpbGRzIHVwIGEgc2luZ2xlIHJlc3VsdCBmcm9tIGEgbGlzdCBvZiB2YWx1ZXMsIGFrYSBgaW5qZWN0YCxcbiAgLy8gb3IgYGZvbGRsYC5cbiAgXy5yZWR1Y2UgPSBfLmZvbGRsID0gXy5pbmplY3QgPSBjcmVhdGVSZWR1Y2UoMSk7XG5cbiAgLy8gVGhlIHJpZ2h0LWFzc29jaWF0aXZlIHZlcnNpb24gb2YgcmVkdWNlLCBhbHNvIGtub3duIGFzIGBmb2xkcmAuXG4gIF8ucmVkdWNlUmlnaHQgPSBfLmZvbGRyID0gY3JlYXRlUmVkdWNlKC0xKTtcblxuICAvLyBSZXR1cm4gdGhlIGZpcnN0IHZhbHVlIHdoaWNoIHBhc3NlcyBhIHRydXRoIHRlc3QuIEFsaWFzZWQgYXMgYGRldGVjdGAuXG4gIF8uZmluZCA9IF8uZGV0ZWN0ID0gZnVuY3Rpb24ob2JqLCBwcmVkaWNhdGUsIGNvbnRleHQpIHtcbiAgICB2YXIga2V5RmluZGVyID0gaXNBcnJheUxpa2Uob2JqKSA/IF8uZmluZEluZGV4IDogXy5maW5kS2V5O1xuICAgIHZhciBrZXkgPSBrZXlGaW5kZXIob2JqLCBwcmVkaWNhdGUsIGNvbnRleHQpO1xuICAgIGlmIChrZXkgIT09IHZvaWQgMCAmJiBrZXkgIT09IC0xKSByZXR1cm4gb2JqW2tleV07XG4gIH07XG5cbiAgLy8gUmV0dXJuIGFsbCB0aGUgZWxlbWVudHMgdGhhdCBwYXNzIGEgdHJ1dGggdGVzdC5cbiAgLy8gQWxpYXNlZCBhcyBgc2VsZWN0YC5cbiAgXy5maWx0ZXIgPSBfLnNlbGVjdCA9IGZ1bmN0aW9uKG9iaiwgcHJlZGljYXRlLCBjb250ZXh0KSB7XG4gICAgdmFyIHJlc3VsdHMgPSBbXTtcbiAgICBwcmVkaWNhdGUgPSBjYihwcmVkaWNhdGUsIGNvbnRleHQpO1xuICAgIF8uZWFjaChvYmosIGZ1bmN0aW9uKHZhbHVlLCBpbmRleCwgbGlzdCkge1xuICAgICAgaWYgKHByZWRpY2F0ZSh2YWx1ZSwgaW5kZXgsIGxpc3QpKSByZXN1bHRzLnB1c2godmFsdWUpO1xuICAgIH0pO1xuICAgIHJldHVybiByZXN1bHRzO1xuICB9O1xuXG4gIC8vIFJldHVybiBhbGwgdGhlIGVsZW1lbnRzIGZvciB3aGljaCBhIHRydXRoIHRlc3QgZmFpbHMuXG4gIF8ucmVqZWN0ID0gZnVuY3Rpb24ob2JqLCBwcmVkaWNhdGUsIGNvbnRleHQpIHtcbiAgICByZXR1cm4gXy5maWx0ZXIob2JqLCBfLm5lZ2F0ZShjYihwcmVkaWNhdGUpKSwgY29udGV4dCk7XG4gIH07XG5cbiAgLy8gRGV0ZXJtaW5lIHdoZXRoZXIgYWxsIG9mIHRoZSBlbGVtZW50cyBtYXRjaCBhIHRydXRoIHRlc3QuXG4gIC8vIEFsaWFzZWQgYXMgYGFsbGAuXG4gIF8uZXZlcnkgPSBfLmFsbCA9IGZ1bmN0aW9uKG9iaiwgcHJlZGljYXRlLCBjb250ZXh0KSB7XG4gICAgcHJlZGljYXRlID0gY2IocHJlZGljYXRlLCBjb250ZXh0KTtcbiAgICB2YXIga2V5cyA9ICFpc0FycmF5TGlrZShvYmopICYmIF8ua2V5cyhvYmopLFxuICAgICAgICBsZW5ndGggPSAoa2V5cyB8fCBvYmopLmxlbmd0aDtcbiAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICB2YXIgY3VycmVudEtleSA9IGtleXMgPyBrZXlzW2luZGV4XSA6IGluZGV4O1xuICAgICAgaWYgKCFwcmVkaWNhdGUob2JqW2N1cnJlbnRLZXldLCBjdXJyZW50S2V5LCBvYmopKSByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9O1xuXG4gIC8vIERldGVybWluZSBpZiBhdCBsZWFzdCBvbmUgZWxlbWVudCBpbiB0aGUgb2JqZWN0IG1hdGNoZXMgYSB0cnV0aCB0ZXN0LlxuICAvLyBBbGlhc2VkIGFzIGBhbnlgLlxuICBfLnNvbWUgPSBfLmFueSA9IGZ1bmN0aW9uKG9iaiwgcHJlZGljYXRlLCBjb250ZXh0KSB7XG4gICAgcHJlZGljYXRlID0gY2IocHJlZGljYXRlLCBjb250ZXh0KTtcbiAgICB2YXIga2V5cyA9ICFpc0FycmF5TGlrZShvYmopICYmIF8ua2V5cyhvYmopLFxuICAgICAgICBsZW5ndGggPSAoa2V5cyB8fCBvYmopLmxlbmd0aDtcbiAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICB2YXIgY3VycmVudEtleSA9IGtleXMgPyBrZXlzW2luZGV4XSA6IGluZGV4O1xuICAgICAgaWYgKHByZWRpY2F0ZShvYmpbY3VycmVudEtleV0sIGN1cnJlbnRLZXksIG9iaikpIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH07XG5cbiAgLy8gRGV0ZXJtaW5lIGlmIHRoZSBhcnJheSBvciBvYmplY3QgY29udGFpbnMgYSBnaXZlbiBpdGVtICh1c2luZyBgPT09YCkuXG4gIC8vIEFsaWFzZWQgYXMgYGluY2x1ZGVzYCBhbmQgYGluY2x1ZGVgLlxuICBfLmNvbnRhaW5zID0gXy5pbmNsdWRlcyA9IF8uaW5jbHVkZSA9IGZ1bmN0aW9uKG9iaiwgaXRlbSwgZnJvbUluZGV4LCBndWFyZCkge1xuICAgIGlmICghaXNBcnJheUxpa2Uob2JqKSkgb2JqID0gXy52YWx1ZXMob2JqKTtcbiAgICBpZiAodHlwZW9mIGZyb21JbmRleCAhPSAnbnVtYmVyJyB8fCBndWFyZCkgZnJvbUluZGV4ID0gMDtcbiAgICByZXR1cm4gXy5pbmRleE9mKG9iaiwgaXRlbSwgZnJvbUluZGV4KSA+PSAwO1xuICB9O1xuXG4gIC8vIEludm9rZSBhIG1ldGhvZCAod2l0aCBhcmd1bWVudHMpIG9uIGV2ZXJ5IGl0ZW0gaW4gYSBjb2xsZWN0aW9uLlxuICBfLmludm9rZSA9IHJlc3RBcmd1bWVudHMoZnVuY3Rpb24ob2JqLCBwYXRoLCBhcmdzKSB7XG4gICAgdmFyIGNvbnRleHRQYXRoLCBmdW5jO1xuICAgIGlmIChfLmlzRnVuY3Rpb24ocGF0aCkpIHtcbiAgICAgIGZ1bmMgPSBwYXRoO1xuICAgIH0gZWxzZSBpZiAoXy5pc0FycmF5KHBhdGgpKSB7XG4gICAgICBjb250ZXh0UGF0aCA9IHBhdGguc2xpY2UoMCwgLTEpO1xuICAgICAgcGF0aCA9IHBhdGhbcGF0aC5sZW5ndGggLSAxXTtcbiAgICB9XG4gICAgcmV0dXJuIF8ubWFwKG9iaiwgZnVuY3Rpb24oY29udGV4dCkge1xuICAgICAgdmFyIG1ldGhvZCA9IGZ1bmM7XG4gICAgICBpZiAoIW1ldGhvZCkge1xuICAgICAgICBpZiAoY29udGV4dFBhdGggJiYgY29udGV4dFBhdGgubGVuZ3RoKSB7XG4gICAgICAgICAgY29udGV4dCA9IGRlZXBHZXQoY29udGV4dCwgY29udGV4dFBhdGgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb250ZXh0ID09IG51bGwpIHJldHVybiB2b2lkIDA7XG4gICAgICAgIG1ldGhvZCA9IGNvbnRleHRbcGF0aF07XG4gICAgICB9XG4gICAgICByZXR1cm4gbWV0aG9kID09IG51bGwgPyBtZXRob2QgOiBtZXRob2QuYXBwbHkoY29udGV4dCwgYXJncyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIC8vIENvbnZlbmllbmNlIHZlcnNpb24gb2YgYSBjb21tb24gdXNlIGNhc2Ugb2YgYG1hcGA6IGZldGNoaW5nIGEgcHJvcGVydHkuXG4gIF8ucGx1Y2sgPSBmdW5jdGlvbihvYmosIGtleSkge1xuICAgIHJldHVybiBfLm1hcChvYmosIF8ucHJvcGVydHkoa2V5KSk7XG4gIH07XG5cbiAgLy8gQ29udmVuaWVuY2UgdmVyc2lvbiBvZiBhIGNvbW1vbiB1c2UgY2FzZSBvZiBgZmlsdGVyYDogc2VsZWN0aW5nIG9ubHkgb2JqZWN0c1xuICAvLyBjb250YWluaW5nIHNwZWNpZmljIGBrZXk6dmFsdWVgIHBhaXJzLlxuICBfLndoZXJlID0gZnVuY3Rpb24ob2JqLCBhdHRycykge1xuICAgIHJldHVybiBfLmZpbHRlcihvYmosIF8ubWF0Y2hlcihhdHRycykpO1xuICB9O1xuXG4gIC8vIENvbnZlbmllbmNlIHZlcnNpb24gb2YgYSBjb21tb24gdXNlIGNhc2Ugb2YgYGZpbmRgOiBnZXR0aW5nIHRoZSBmaXJzdCBvYmplY3RcbiAgLy8gY29udGFpbmluZyBzcGVjaWZpYyBga2V5OnZhbHVlYCBwYWlycy5cbiAgXy5maW5kV2hlcmUgPSBmdW5jdGlvbihvYmosIGF0dHJzKSB7XG4gICAgcmV0dXJuIF8uZmluZChvYmosIF8ubWF0Y2hlcihhdHRycykpO1xuICB9O1xuXG4gIC8vIFJldHVybiB0aGUgbWF4aW11bSBlbGVtZW50IChvciBlbGVtZW50LWJhc2VkIGNvbXB1dGF0aW9uKS5cbiAgXy5tYXggPSBmdW5jdGlvbihvYmosIGl0ZXJhdGVlLCBjb250ZXh0KSB7XG4gICAgdmFyIHJlc3VsdCA9IC1JbmZpbml0eSwgbGFzdENvbXB1dGVkID0gLUluZmluaXR5LFxuICAgICAgICB2YWx1ZSwgY29tcHV0ZWQ7XG4gICAgaWYgKGl0ZXJhdGVlID09IG51bGwgfHwgdHlwZW9mIGl0ZXJhdGVlID09ICdudW1iZXInICYmIHR5cGVvZiBvYmpbMF0gIT0gJ29iamVjdCcgJiYgb2JqICE9IG51bGwpIHtcbiAgICAgIG9iaiA9IGlzQXJyYXlMaWtlKG9iaikgPyBvYmogOiBfLnZhbHVlcyhvYmopO1xuICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9IG9iai5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICB2YWx1ZSA9IG9ialtpXTtcbiAgICAgICAgaWYgKHZhbHVlICE9IG51bGwgJiYgdmFsdWUgPiByZXN1bHQpIHtcbiAgICAgICAgICByZXN1bHQgPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpdGVyYXRlZSA9IGNiKGl0ZXJhdGVlLCBjb250ZXh0KTtcbiAgICAgIF8uZWFjaChvYmosIGZ1bmN0aW9uKHYsIGluZGV4LCBsaXN0KSB7XG4gICAgICAgIGNvbXB1dGVkID0gaXRlcmF0ZWUodiwgaW5kZXgsIGxpc3QpO1xuICAgICAgICBpZiAoY29tcHV0ZWQgPiBsYXN0Q29tcHV0ZWQgfHwgY29tcHV0ZWQgPT09IC1JbmZpbml0eSAmJiByZXN1bHQgPT09IC1JbmZpbml0eSkge1xuICAgICAgICAgIHJlc3VsdCA9IHY7XG4gICAgICAgICAgbGFzdENvbXB1dGVkID0gY29tcHV0ZWQ7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuXG4gIC8vIFJldHVybiB0aGUgbWluaW11bSBlbGVtZW50IChvciBlbGVtZW50LWJhc2VkIGNvbXB1dGF0aW9uKS5cbiAgXy5taW4gPSBmdW5jdGlvbihvYmosIGl0ZXJhdGVlLCBjb250ZXh0KSB7XG4gICAgdmFyIHJlc3VsdCA9IEluZmluaXR5LCBsYXN0Q29tcHV0ZWQgPSBJbmZpbml0eSxcbiAgICAgICAgdmFsdWUsIGNvbXB1dGVkO1xuICAgIGlmIChpdGVyYXRlZSA9PSBudWxsIHx8IHR5cGVvZiBpdGVyYXRlZSA9PSAnbnVtYmVyJyAmJiB0eXBlb2Ygb2JqWzBdICE9ICdvYmplY3QnICYmIG9iaiAhPSBudWxsKSB7XG4gICAgICBvYmogPSBpc0FycmF5TGlrZShvYmopID8gb2JqIDogXy52YWx1ZXMob2JqKTtcbiAgICAgIGZvciAodmFyIGkgPSAwLCBsZW5ndGggPSBvYmoubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFsdWUgPSBvYmpbaV07XG4gICAgICAgIGlmICh2YWx1ZSAhPSBudWxsICYmIHZhbHVlIDwgcmVzdWx0KSB7XG4gICAgICAgICAgcmVzdWx0ID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaXRlcmF0ZWUgPSBjYihpdGVyYXRlZSwgY29udGV4dCk7XG4gICAgICBfLmVhY2gob2JqLCBmdW5jdGlvbih2LCBpbmRleCwgbGlzdCkge1xuICAgICAgICBjb21wdXRlZCA9IGl0ZXJhdGVlKHYsIGluZGV4LCBsaXN0KTtcbiAgICAgICAgaWYgKGNvbXB1dGVkIDwgbGFzdENvbXB1dGVkIHx8IGNvbXB1dGVkID09PSBJbmZpbml0eSAmJiByZXN1bHQgPT09IEluZmluaXR5KSB7XG4gICAgICAgICAgcmVzdWx0ID0gdjtcbiAgICAgICAgICBsYXN0Q29tcHV0ZWQgPSBjb21wdXRlZDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgLy8gU2h1ZmZsZSBhIGNvbGxlY3Rpb24uXG4gIF8uc2h1ZmZsZSA9IGZ1bmN0aW9uKG9iaikge1xuICAgIHJldHVybiBfLnNhbXBsZShvYmosIEluZmluaXR5KTtcbiAgfTtcblxuICAvLyBTYW1wbGUgKipuKiogcmFuZG9tIHZhbHVlcyBmcm9tIGEgY29sbGVjdGlvbiB1c2luZyB0aGUgbW9kZXJuIHZlcnNpb24gb2YgdGhlXG4gIC8vIFtGaXNoZXItWWF0ZXMgc2h1ZmZsZV0oaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvRmlzaGVy4oCTWWF0ZXNfc2h1ZmZsZSkuXG4gIC8vIElmICoqbioqIGlzIG5vdCBzcGVjaWZpZWQsIHJldHVybnMgYSBzaW5nbGUgcmFuZG9tIGVsZW1lbnQuXG4gIC8vIFRoZSBpbnRlcm5hbCBgZ3VhcmRgIGFyZ3VtZW50IGFsbG93cyBpdCB0byB3b3JrIHdpdGggYG1hcGAuXG4gIF8uc2FtcGxlID0gZnVuY3Rpb24ob2JqLCBuLCBndWFyZCkge1xuICAgIGlmIChuID09IG51bGwgfHwgZ3VhcmQpIHtcbiAgICAgIGlmICghaXNBcnJheUxpa2Uob2JqKSkgb2JqID0gXy52YWx1ZXMob2JqKTtcbiAgICAgIHJldHVybiBvYmpbXy5yYW5kb20ob2JqLmxlbmd0aCAtIDEpXTtcbiAgICB9XG4gICAgdmFyIHNhbXBsZSA9IGlzQXJyYXlMaWtlKG9iaikgPyBfLmNsb25lKG9iaikgOiBfLnZhbHVlcyhvYmopO1xuICAgIHZhciBsZW5ndGggPSBnZXRMZW5ndGgoc2FtcGxlKTtcbiAgICBuID0gTWF0aC5tYXgoTWF0aC5taW4obiwgbGVuZ3RoKSwgMCk7XG4gICAgdmFyIGxhc3QgPSBsZW5ndGggLSAxO1xuICAgIGZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCBuOyBpbmRleCsrKSB7XG4gICAgICB2YXIgcmFuZCA9IF8ucmFuZG9tKGluZGV4LCBsYXN0KTtcbiAgICAgIHZhciB0ZW1wID0gc2FtcGxlW2luZGV4XTtcbiAgICAgIHNhbXBsZVtpbmRleF0gPSBzYW1wbGVbcmFuZF07XG4gICAgICBzYW1wbGVbcmFuZF0gPSB0ZW1wO1xuICAgIH1cbiAgICByZXR1cm4gc2FtcGxlLnNsaWNlKDAsIG4pO1xuICB9O1xuXG4gIC8vIFNvcnQgdGhlIG9iamVjdCdzIHZhbHVlcyBieSBhIGNyaXRlcmlvbiBwcm9kdWNlZCBieSBhbiBpdGVyYXRlZS5cbiAgXy5zb3J0QnkgPSBmdW5jdGlvbihvYmosIGl0ZXJhdGVlLCBjb250ZXh0KSB7XG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICBpdGVyYXRlZSA9IGNiKGl0ZXJhdGVlLCBjb250ZXh0KTtcbiAgICByZXR1cm4gXy5wbHVjayhfLm1hcChvYmosIGZ1bmN0aW9uKHZhbHVlLCBrZXksIGxpc3QpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgICAgaW5kZXg6IGluZGV4KyssXG4gICAgICAgIGNyaXRlcmlhOiBpdGVyYXRlZSh2YWx1ZSwga2V5LCBsaXN0KVxuICAgICAgfTtcbiAgICB9KS5zb3J0KGZ1bmN0aW9uKGxlZnQsIHJpZ2h0KSB7XG4gICAgICB2YXIgYSA9IGxlZnQuY3JpdGVyaWE7XG4gICAgICB2YXIgYiA9IHJpZ2h0LmNyaXRlcmlhO1xuICAgICAgaWYgKGEgIT09IGIpIHtcbiAgICAgICAgaWYgKGEgPiBiIHx8IGEgPT09IHZvaWQgMCkgcmV0dXJuIDE7XG4gICAgICAgIGlmIChhIDwgYiB8fCBiID09PSB2b2lkIDApIHJldHVybiAtMTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBsZWZ0LmluZGV4IC0gcmlnaHQuaW5kZXg7XG4gICAgfSksICd2YWx1ZScpO1xuICB9O1xuXG4gIC8vIEFuIGludGVybmFsIGZ1bmN0aW9uIHVzZWQgZm9yIGFnZ3JlZ2F0ZSBcImdyb3VwIGJ5XCIgb3BlcmF0aW9ucy5cbiAgdmFyIGdyb3VwID0gZnVuY3Rpb24oYmVoYXZpb3IsIHBhcnRpdGlvbikge1xuICAgIHJldHVybiBmdW5jdGlvbihvYmosIGl0ZXJhdGVlLCBjb250ZXh0KSB7XG4gICAgICB2YXIgcmVzdWx0ID0gcGFydGl0aW9uID8gW1tdLCBbXV0gOiB7fTtcbiAgICAgIGl0ZXJhdGVlID0gY2IoaXRlcmF0ZWUsIGNvbnRleHQpO1xuICAgICAgXy5lYWNoKG9iaiwgZnVuY3Rpb24odmFsdWUsIGluZGV4KSB7XG4gICAgICAgIHZhciBrZXkgPSBpdGVyYXRlZSh2YWx1ZSwgaW5kZXgsIG9iaik7XG4gICAgICAgIGJlaGF2aW9yKHJlc3VsdCwgdmFsdWUsIGtleSk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgfTtcblxuICAvLyBHcm91cHMgdGhlIG9iamVjdCdzIHZhbHVlcyBieSBhIGNyaXRlcmlvbi4gUGFzcyBlaXRoZXIgYSBzdHJpbmcgYXR0cmlidXRlXG4gIC8vIHRvIGdyb3VwIGJ5LCBvciBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0aGUgY3JpdGVyaW9uLlxuICBfLmdyb3VwQnkgPSBncm91cChmdW5jdGlvbihyZXN1bHQsIHZhbHVlLCBrZXkpIHtcbiAgICBpZiAoaGFzKHJlc3VsdCwga2V5KSkgcmVzdWx0W2tleV0ucHVzaCh2YWx1ZSk7IGVsc2UgcmVzdWx0W2tleV0gPSBbdmFsdWVdO1xuICB9KTtcblxuICAvLyBJbmRleGVzIHRoZSBvYmplY3QncyB2YWx1ZXMgYnkgYSBjcml0ZXJpb24sIHNpbWlsYXIgdG8gYGdyb3VwQnlgLCBidXQgZm9yXG4gIC8vIHdoZW4geW91IGtub3cgdGhhdCB5b3VyIGluZGV4IHZhbHVlcyB3aWxsIGJlIHVuaXF1ZS5cbiAgXy5pbmRleEJ5ID0gZ3JvdXAoZnVuY3Rpb24ocmVzdWx0LCB2YWx1ZSwga2V5KSB7XG4gICAgcmVzdWx0W2tleV0gPSB2YWx1ZTtcbiAgfSk7XG5cbiAgLy8gQ291bnRzIGluc3RhbmNlcyBvZiBhbiBvYmplY3QgdGhhdCBncm91cCBieSBhIGNlcnRhaW4gY3JpdGVyaW9uLiBQYXNzXG4gIC8vIGVpdGhlciBhIHN0cmluZyBhdHRyaWJ1dGUgdG8gY291bnQgYnksIG9yIGEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIHRoZVxuICAvLyBjcml0ZXJpb24uXG4gIF8uY291bnRCeSA9IGdyb3VwKGZ1bmN0aW9uKHJlc3VsdCwgdmFsdWUsIGtleSkge1xuICAgIGlmIChoYXMocmVzdWx0LCBrZXkpKSByZXN1bHRba2V5XSsrOyBlbHNlIHJlc3VsdFtrZXldID0gMTtcbiAgfSk7XG5cbiAgdmFyIHJlU3RyU3ltYm9sID0gL1teXFx1ZDgwMC1cXHVkZmZmXXxbXFx1ZDgwMC1cXHVkYmZmXVtcXHVkYzAwLVxcdWRmZmZdfFtcXHVkODAwLVxcdWRmZmZdL2c7XG4gIC8vIFNhZmVseSBjcmVhdGUgYSByZWFsLCBsaXZlIGFycmF5IGZyb20gYW55dGhpbmcgaXRlcmFibGUuXG4gIF8udG9BcnJheSA9IGZ1bmN0aW9uKG9iaikge1xuICAgIGlmICghb2JqKSByZXR1cm4gW107XG4gICAgaWYgKF8uaXNBcnJheShvYmopKSByZXR1cm4gc2xpY2UuY2FsbChvYmopO1xuICAgIGlmIChfLmlzU3RyaW5nKG9iaikpIHtcbiAgICAgIC8vIEtlZXAgc3Vycm9nYXRlIHBhaXIgY2hhcmFjdGVycyB0b2dldGhlclxuICAgICAgcmV0dXJuIG9iai5tYXRjaChyZVN0clN5bWJvbCk7XG4gICAgfVxuICAgIGlmIChpc0FycmF5TGlrZShvYmopKSByZXR1cm4gXy5tYXAob2JqLCBfLmlkZW50aXR5KTtcbiAgICByZXR1cm4gXy52YWx1ZXMob2JqKTtcbiAgfTtcblxuICAvLyBSZXR1cm4gdGhlIG51bWJlciBvZiBlbGVtZW50cyBpbiBhbiBvYmplY3QuXG4gIF8uc2l6ZSA9IGZ1bmN0aW9uKG9iaikge1xuICAgIGlmIChvYmogPT0gbnVsbCkgcmV0dXJuIDA7XG4gICAgcmV0dXJuIGlzQXJyYXlMaWtlKG9iaikgPyBvYmoubGVuZ3RoIDogXy5rZXlzKG9iaikubGVuZ3RoO1xuICB9O1xuXG4gIC8vIFNwbGl0IGEgY29sbGVjdGlvbiBpbnRvIHR3byBhcnJheXM6IG9uZSB3aG9zZSBlbGVtZW50cyBhbGwgc2F0aXNmeSB0aGUgZ2l2ZW5cbiAgLy8gcHJlZGljYXRlLCBhbmQgb25lIHdob3NlIGVsZW1lbnRzIGFsbCBkbyBub3Qgc2F0aXNmeSB0aGUgcHJlZGljYXRlLlxuICBfLnBhcnRpdGlvbiA9IGdyb3VwKGZ1bmN0aW9uKHJlc3VsdCwgdmFsdWUsIHBhc3MpIHtcbiAgICByZXN1bHRbcGFzcyA/IDAgOiAxXS5wdXNoKHZhbHVlKTtcbiAgfSwgdHJ1ZSk7XG5cbiAgLy8gQXJyYXkgRnVuY3Rpb25zXG4gIC8vIC0tLS0tLS0tLS0tLS0tLVxuXG4gIC8vIEdldCB0aGUgZmlyc3QgZWxlbWVudCBvZiBhbiBhcnJheS4gUGFzc2luZyAqKm4qKiB3aWxsIHJldHVybiB0aGUgZmlyc3QgTlxuICAvLyB2YWx1ZXMgaW4gdGhlIGFycmF5LiBBbGlhc2VkIGFzIGBoZWFkYCBhbmQgYHRha2VgLiBUaGUgKipndWFyZCoqIGNoZWNrXG4gIC8vIGFsbG93cyBpdCB0byB3b3JrIHdpdGggYF8ubWFwYC5cbiAgXy5maXJzdCA9IF8uaGVhZCA9IF8udGFrZSA9IGZ1bmN0aW9uKGFycmF5LCBuLCBndWFyZCkge1xuICAgIGlmIChhcnJheSA9PSBudWxsIHx8IGFycmF5Lmxlbmd0aCA8IDEpIHJldHVybiBuID09IG51bGwgPyB2b2lkIDAgOiBbXTtcbiAgICBpZiAobiA9PSBudWxsIHx8IGd1YXJkKSByZXR1cm4gYXJyYXlbMF07XG4gICAgcmV0dXJuIF8uaW5pdGlhbChhcnJheSwgYXJyYXkubGVuZ3RoIC0gbik7XG4gIH07XG5cbiAgLy8gUmV0dXJucyBldmVyeXRoaW5nIGJ1dCB0aGUgbGFzdCBlbnRyeSBvZiB0aGUgYXJyYXkuIEVzcGVjaWFsbHkgdXNlZnVsIG9uXG4gIC8vIHRoZSBhcmd1bWVudHMgb2JqZWN0LiBQYXNzaW5nICoqbioqIHdpbGwgcmV0dXJuIGFsbCB0aGUgdmFsdWVzIGluXG4gIC8vIHRoZSBhcnJheSwgZXhjbHVkaW5nIHRoZSBsYXN0IE4uXG4gIF8uaW5pdGlhbCA9IGZ1bmN0aW9uKGFycmF5LCBuLCBndWFyZCkge1xuICAgIHJldHVybiBzbGljZS5jYWxsKGFycmF5LCAwLCBNYXRoLm1heCgwLCBhcnJheS5sZW5ndGggLSAobiA9PSBudWxsIHx8IGd1YXJkID8gMSA6IG4pKSk7XG4gIH07XG5cbiAgLy8gR2V0IHRoZSBsYXN0IGVsZW1lbnQgb2YgYW4gYXJyYXkuIFBhc3NpbmcgKipuKiogd2lsbCByZXR1cm4gdGhlIGxhc3QgTlxuICAvLyB2YWx1ZXMgaW4gdGhlIGFycmF5LlxuICBfLmxhc3QgPSBmdW5jdGlvbihhcnJheSwgbiwgZ3VhcmQpIHtcbiAgICBpZiAoYXJyYXkgPT0gbnVsbCB8fCBhcnJheS5sZW5ndGggPCAxKSByZXR1cm4gbiA9PSBudWxsID8gdm9pZCAwIDogW107XG4gICAgaWYgKG4gPT0gbnVsbCB8fCBndWFyZCkgcmV0dXJuIGFycmF5W2FycmF5Lmxlbmd0aCAtIDFdO1xuICAgIHJldHVybiBfLnJlc3QoYXJyYXksIE1hdGgubWF4KDAsIGFycmF5Lmxlbmd0aCAtIG4pKTtcbiAgfTtcblxuICAvLyBSZXR1cm5zIGV2ZXJ5dGhpbmcgYnV0IHRoZSBmaXJzdCBlbnRyeSBvZiB0aGUgYXJyYXkuIEFsaWFzZWQgYXMgYHRhaWxgIGFuZCBgZHJvcGAuXG4gIC8vIEVzcGVjaWFsbHkgdXNlZnVsIG9uIHRoZSBhcmd1bWVudHMgb2JqZWN0LiBQYXNzaW5nIGFuICoqbioqIHdpbGwgcmV0dXJuXG4gIC8vIHRoZSByZXN0IE4gdmFsdWVzIGluIHRoZSBhcnJheS5cbiAgXy5yZXN0ID0gXy50YWlsID0gXy5kcm9wID0gZnVuY3Rpb24oYXJyYXksIG4sIGd1YXJkKSB7XG4gICAgcmV0dXJuIHNsaWNlLmNhbGwoYXJyYXksIG4gPT0gbnVsbCB8fCBndWFyZCA/IDEgOiBuKTtcbiAgfTtcblxuICAvLyBUcmltIG91dCBhbGwgZmFsc3kgdmFsdWVzIGZyb20gYW4gYXJyYXkuXG4gIF8uY29tcGFjdCA9IGZ1bmN0aW9uKGFycmF5KSB7XG4gICAgcmV0dXJuIF8uZmlsdGVyKGFycmF5LCBCb29sZWFuKTtcbiAgfTtcblxuICAvLyBJbnRlcm5hbCBpbXBsZW1lbnRhdGlvbiBvZiBhIHJlY3Vyc2l2ZSBgZmxhdHRlbmAgZnVuY3Rpb24uXG4gIHZhciBmbGF0dGVuID0gZnVuY3Rpb24oaW5wdXQsIHNoYWxsb3csIHN0cmljdCwgb3V0cHV0KSB7XG4gICAgb3V0cHV0ID0gb3V0cHV0IHx8IFtdO1xuICAgIHZhciBpZHggPSBvdXRwdXQubGVuZ3RoO1xuICAgIGZvciAodmFyIGkgPSAwLCBsZW5ndGggPSBnZXRMZW5ndGgoaW5wdXQpOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciB2YWx1ZSA9IGlucHV0W2ldO1xuICAgICAgaWYgKGlzQXJyYXlMaWtlKHZhbHVlKSAmJiAoXy5pc0FycmF5KHZhbHVlKSB8fCBfLmlzQXJndW1lbnRzKHZhbHVlKSkpIHtcbiAgICAgICAgLy8gRmxhdHRlbiBjdXJyZW50IGxldmVsIG9mIGFycmF5IG9yIGFyZ3VtZW50cyBvYmplY3QuXG4gICAgICAgIGlmIChzaGFsbG93KSB7XG4gICAgICAgICAgdmFyIGogPSAwLCBsZW4gPSB2YWx1ZS5sZW5ndGg7XG4gICAgICAgICAgd2hpbGUgKGogPCBsZW4pIG91dHB1dFtpZHgrK10gPSB2YWx1ZVtqKytdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGZsYXR0ZW4odmFsdWUsIHNoYWxsb3csIHN0cmljdCwgb3V0cHV0KTtcbiAgICAgICAgICBpZHggPSBvdXRwdXQubGVuZ3RoO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKCFzdHJpY3QpIHtcbiAgICAgICAgb3V0cHV0W2lkeCsrXSA9IHZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gb3V0cHV0O1xuICB9O1xuXG4gIC8vIEZsYXR0ZW4gb3V0IGFuIGFycmF5LCBlaXRoZXIgcmVjdXJzaXZlbHkgKGJ5IGRlZmF1bHQpLCBvciBqdXN0IG9uZSBsZXZlbC5cbiAgXy5mbGF0dGVuID0gZnVuY3Rpb24oYXJyYXksIHNoYWxsb3cpIHtcbiAgICByZXR1cm4gZmxhdHRlbihhcnJheSwgc2hhbGxvdywgZmFsc2UpO1xuICB9O1xuXG4gIC8vIFJldHVybiBhIHZlcnNpb24gb2YgdGhlIGFycmF5IHRoYXQgZG9lcyBub3QgY29udGFpbiB0aGUgc3BlY2lmaWVkIHZhbHVlKHMpLlxuICBfLndpdGhvdXQgPSByZXN0QXJndW1lbnRzKGZ1bmN0aW9uKGFycmF5LCBvdGhlckFycmF5cykge1xuICAgIHJldHVybiBfLmRpZmZlcmVuY2UoYXJyYXksIG90aGVyQXJyYXlzKTtcbiAgfSk7XG5cbiAgLy8gUHJvZHVjZSBhIGR1cGxpY2F0ZS1mcmVlIHZlcnNpb24gb2YgdGhlIGFycmF5LiBJZiB0aGUgYXJyYXkgaGFzIGFscmVhZHlcbiAgLy8gYmVlbiBzb3J0ZWQsIHlvdSBoYXZlIHRoZSBvcHRpb24gb2YgdXNpbmcgYSBmYXN0ZXIgYWxnb3JpdGhtLlxuICAvLyBUaGUgZmFzdGVyIGFsZ29yaXRobSB3aWxsIG5vdCB3b3JrIHdpdGggYW4gaXRlcmF0ZWUgaWYgdGhlIGl0ZXJhdGVlXG4gIC8vIGlzIG5vdCBhIG9uZS10by1vbmUgZnVuY3Rpb24sIHNvIHByb3ZpZGluZyBhbiBpdGVyYXRlZSB3aWxsIGRpc2FibGVcbiAgLy8gdGhlIGZhc3RlciBhbGdvcml0aG0uXG4gIC8vIEFsaWFzZWQgYXMgYHVuaXF1ZWAuXG4gIF8udW5pcSA9IF8udW5pcXVlID0gZnVuY3Rpb24oYXJyYXksIGlzU29ydGVkLCBpdGVyYXRlZSwgY29udGV4dCkge1xuICAgIGlmICghXy5pc0Jvb2xlYW4oaXNTb3J0ZWQpKSB7XG4gICAgICBjb250ZXh0ID0gaXRlcmF0ZWU7XG4gICAgICBpdGVyYXRlZSA9IGlzU29ydGVkO1xuICAgICAgaXNTb3J0ZWQgPSBmYWxzZTtcbiAgICB9XG4gICAgaWYgKGl0ZXJhdGVlICE9IG51bGwpIGl0ZXJhdGVlID0gY2IoaXRlcmF0ZWUsIGNvbnRleHQpO1xuICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICB2YXIgc2VlbiA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwLCBsZW5ndGggPSBnZXRMZW5ndGgoYXJyYXkpOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciB2YWx1ZSA9IGFycmF5W2ldLFxuICAgICAgICAgIGNvbXB1dGVkID0gaXRlcmF0ZWUgPyBpdGVyYXRlZSh2YWx1ZSwgaSwgYXJyYXkpIDogdmFsdWU7XG4gICAgICBpZiAoaXNTb3J0ZWQgJiYgIWl0ZXJhdGVlKSB7XG4gICAgICAgIGlmICghaSB8fCBzZWVuICE9PSBjb21wdXRlZCkgcmVzdWx0LnB1c2godmFsdWUpO1xuICAgICAgICBzZWVuID0gY29tcHV0ZWQ7XG4gICAgICB9IGVsc2UgaWYgKGl0ZXJhdGVlKSB7XG4gICAgICAgIGlmICghXy5jb250YWlucyhzZWVuLCBjb21wdXRlZCkpIHtcbiAgICAgICAgICBzZWVuLnB1c2goY29tcHV0ZWQpO1xuICAgICAgICAgIHJlc3VsdC5wdXNoKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICghXy5jb250YWlucyhyZXN1bHQsIHZhbHVlKSkge1xuICAgICAgICByZXN1bHQucHVzaCh2YWx1ZSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgLy8gUHJvZHVjZSBhbiBhcnJheSB0aGF0IGNvbnRhaW5zIHRoZSB1bmlvbjogZWFjaCBkaXN0aW5jdCBlbGVtZW50IGZyb20gYWxsIG9mXG4gIC8vIHRoZSBwYXNzZWQtaW4gYXJyYXlzLlxuICBfLnVuaW9uID0gcmVzdEFyZ3VtZW50cyhmdW5jdGlvbihhcnJheXMpIHtcbiAgICByZXR1cm4gXy51bmlxKGZsYXR0ZW4oYXJyYXlzLCB0cnVlLCB0cnVlKSk7XG4gIH0pO1xuXG4gIC8vIFByb2R1Y2UgYW4gYXJyYXkgdGhhdCBjb250YWlucyBldmVyeSBpdGVtIHNoYXJlZCBiZXR3ZWVuIGFsbCB0aGVcbiAgLy8gcGFzc2VkLWluIGFycmF5cy5cbiAgXy5pbnRlcnNlY3Rpb24gPSBmdW5jdGlvbihhcnJheSkge1xuICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICB2YXIgYXJnc0xlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9IGdldExlbmd0aChhcnJheSk7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGl0ZW0gPSBhcnJheVtpXTtcbiAgICAgIGlmIChfLmNvbnRhaW5zKHJlc3VsdCwgaXRlbSkpIGNvbnRpbnVlO1xuICAgICAgdmFyIGo7XG4gICAgICBmb3IgKGogPSAxOyBqIDwgYXJnc0xlbmd0aDsgaisrKSB7XG4gICAgICAgIGlmICghXy5jb250YWlucyhhcmd1bWVudHNbal0sIGl0ZW0pKSBicmVhaztcbiAgICAgIH1cbiAgICAgIGlmIChqID09PSBhcmdzTGVuZ3RoKSByZXN1bHQucHVzaChpdGVtKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcblxuICAvLyBUYWtlIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gb25lIGFycmF5IGFuZCBhIG51bWJlciBvZiBvdGhlciBhcnJheXMuXG4gIC8vIE9ubHkgdGhlIGVsZW1lbnRzIHByZXNlbnQgaW4ganVzdCB0aGUgZmlyc3QgYXJyYXkgd2lsbCByZW1haW4uXG4gIF8uZGlmZmVyZW5jZSA9IHJlc3RBcmd1bWVudHMoZnVuY3Rpb24oYXJyYXksIHJlc3QpIHtcbiAgICByZXN0ID0gZmxhdHRlbihyZXN0LCB0cnVlLCB0cnVlKTtcbiAgICByZXR1cm4gXy5maWx0ZXIoYXJyYXksIGZ1bmN0aW9uKHZhbHVlKXtcbiAgICAgIHJldHVybiAhXy5jb250YWlucyhyZXN0LCB2YWx1ZSk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIC8vIENvbXBsZW1lbnQgb2YgXy56aXAuIFVuemlwIGFjY2VwdHMgYW4gYXJyYXkgb2YgYXJyYXlzIGFuZCBncm91cHNcbiAgLy8gZWFjaCBhcnJheSdzIGVsZW1lbnRzIG9uIHNoYXJlZCBpbmRpY2VzLlxuICBfLnVuemlwID0gZnVuY3Rpb24oYXJyYXkpIHtcbiAgICB2YXIgbGVuZ3RoID0gYXJyYXkgJiYgXy5tYXgoYXJyYXksIGdldExlbmd0aCkubGVuZ3RoIHx8IDA7XG4gICAgdmFyIHJlc3VsdCA9IEFycmF5KGxlbmd0aCk7XG5cbiAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICByZXN1bHRbaW5kZXhdID0gXy5wbHVjayhhcnJheSwgaW5kZXgpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuXG4gIC8vIFppcCB0b2dldGhlciBtdWx0aXBsZSBsaXN0cyBpbnRvIGEgc2luZ2xlIGFycmF5IC0tIGVsZW1lbnRzIHRoYXQgc2hhcmVcbiAgLy8gYW4gaW5kZXggZ28gdG9nZXRoZXIuXG4gIF8uemlwID0gcmVzdEFyZ3VtZW50cyhfLnVuemlwKTtcblxuICAvLyBDb252ZXJ0cyBsaXN0cyBpbnRvIG9iamVjdHMuIFBhc3MgZWl0aGVyIGEgc2luZ2xlIGFycmF5IG9mIGBba2V5LCB2YWx1ZV1gXG4gIC8vIHBhaXJzLCBvciB0d28gcGFyYWxsZWwgYXJyYXlzIG9mIHRoZSBzYW1lIGxlbmd0aCAtLSBvbmUgb2Yga2V5cywgYW5kIG9uZSBvZlxuICAvLyB0aGUgY29ycmVzcG9uZGluZyB2YWx1ZXMuIFBhc3NpbmcgYnkgcGFpcnMgaXMgdGhlIHJldmVyc2Ugb2YgXy5wYWlycy5cbiAgXy5vYmplY3QgPSBmdW5jdGlvbihsaXN0LCB2YWx1ZXMpIHtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9IGdldExlbmd0aChsaXN0KTsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAodmFsdWVzKSB7XG4gICAgICAgIHJlc3VsdFtsaXN0W2ldXSA9IHZhbHVlc1tpXTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc3VsdFtsaXN0W2ldWzBdXSA9IGxpc3RbaV1bMV07XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgLy8gR2VuZXJhdG9yIGZ1bmN0aW9uIHRvIGNyZWF0ZSB0aGUgZmluZEluZGV4IGFuZCBmaW5kTGFzdEluZGV4IGZ1bmN0aW9ucy5cbiAgdmFyIGNyZWF0ZVByZWRpY2F0ZUluZGV4RmluZGVyID0gZnVuY3Rpb24oZGlyKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGFycmF5LCBwcmVkaWNhdGUsIGNvbnRleHQpIHtcbiAgICAgIHByZWRpY2F0ZSA9IGNiKHByZWRpY2F0ZSwgY29udGV4dCk7XG4gICAgICB2YXIgbGVuZ3RoID0gZ2V0TGVuZ3RoKGFycmF5KTtcbiAgICAgIHZhciBpbmRleCA9IGRpciA+IDAgPyAwIDogbGVuZ3RoIC0gMTtcbiAgICAgIGZvciAoOyBpbmRleCA+PSAwICYmIGluZGV4IDwgbGVuZ3RoOyBpbmRleCArPSBkaXIpIHtcbiAgICAgICAgaWYgKHByZWRpY2F0ZShhcnJheVtpbmRleF0sIGluZGV4LCBhcnJheSkpIHJldHVybiBpbmRleDtcbiAgICAgIH1cbiAgICAgIHJldHVybiAtMTtcbiAgICB9O1xuICB9O1xuXG4gIC8vIFJldHVybnMgdGhlIGZpcnN0IGluZGV4IG9uIGFuIGFycmF5LWxpa2UgdGhhdCBwYXNzZXMgYSBwcmVkaWNhdGUgdGVzdC5cbiAgXy5maW5kSW5kZXggPSBjcmVhdGVQcmVkaWNhdGVJbmRleEZpbmRlcigxKTtcbiAgXy5maW5kTGFzdEluZGV4ID0gY3JlYXRlUHJlZGljYXRlSW5kZXhGaW5kZXIoLTEpO1xuXG4gIC8vIFVzZSBhIGNvbXBhcmF0b3IgZnVuY3Rpb24gdG8gZmlndXJlIG91dCB0aGUgc21hbGxlc3QgaW5kZXggYXQgd2hpY2hcbiAgLy8gYW4gb2JqZWN0IHNob3VsZCBiZSBpbnNlcnRlZCBzbyBhcyB0byBtYWludGFpbiBvcmRlci4gVXNlcyBiaW5hcnkgc2VhcmNoLlxuICBfLnNvcnRlZEluZGV4ID0gZnVuY3Rpb24oYXJyYXksIG9iaiwgaXRlcmF0ZWUsIGNvbnRleHQpIHtcbiAgICBpdGVyYXRlZSA9IGNiKGl0ZXJhdGVlLCBjb250ZXh0LCAxKTtcbiAgICB2YXIgdmFsdWUgPSBpdGVyYXRlZShvYmopO1xuICAgIHZhciBsb3cgPSAwLCBoaWdoID0gZ2V0TGVuZ3RoKGFycmF5KTtcbiAgICB3aGlsZSAobG93IDwgaGlnaCkge1xuICAgICAgdmFyIG1pZCA9IE1hdGguZmxvb3IoKGxvdyArIGhpZ2gpIC8gMik7XG4gICAgICBpZiAoaXRlcmF0ZWUoYXJyYXlbbWlkXSkgPCB2YWx1ZSkgbG93ID0gbWlkICsgMTsgZWxzZSBoaWdoID0gbWlkO1xuICAgIH1cbiAgICByZXR1cm4gbG93O1xuICB9O1xuXG4gIC8vIEdlbmVyYXRvciBmdW5jdGlvbiB0byBjcmVhdGUgdGhlIGluZGV4T2YgYW5kIGxhc3RJbmRleE9mIGZ1bmN0aW9ucy5cbiAgdmFyIGNyZWF0ZUluZGV4RmluZGVyID0gZnVuY3Rpb24oZGlyLCBwcmVkaWNhdGVGaW5kLCBzb3J0ZWRJbmRleCkge1xuICAgIHJldHVybiBmdW5jdGlvbihhcnJheSwgaXRlbSwgaWR4KSB7XG4gICAgICB2YXIgaSA9IDAsIGxlbmd0aCA9IGdldExlbmd0aChhcnJheSk7XG4gICAgICBpZiAodHlwZW9mIGlkeCA9PSAnbnVtYmVyJykge1xuICAgICAgICBpZiAoZGlyID4gMCkge1xuICAgICAgICAgIGkgPSBpZHggPj0gMCA/IGlkeCA6IE1hdGgubWF4KGlkeCArIGxlbmd0aCwgaSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbGVuZ3RoID0gaWR4ID49IDAgPyBNYXRoLm1pbihpZHggKyAxLCBsZW5ndGgpIDogaWR4ICsgbGVuZ3RoICsgMTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChzb3J0ZWRJbmRleCAmJiBpZHggJiYgbGVuZ3RoKSB7XG4gICAgICAgIGlkeCA9IHNvcnRlZEluZGV4KGFycmF5LCBpdGVtKTtcbiAgICAgICAgcmV0dXJuIGFycmF5W2lkeF0gPT09IGl0ZW0gPyBpZHggOiAtMTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtICE9PSBpdGVtKSB7XG4gICAgICAgIGlkeCA9IHByZWRpY2F0ZUZpbmQoc2xpY2UuY2FsbChhcnJheSwgaSwgbGVuZ3RoKSwgXy5pc05hTik7XG4gICAgICAgIHJldHVybiBpZHggPj0gMCA/IGlkeCArIGkgOiAtMTtcbiAgICAgIH1cbiAgICAgIGZvciAoaWR4ID0gZGlyID4gMCA/IGkgOiBsZW5ndGggLSAxOyBpZHggPj0gMCAmJiBpZHggPCBsZW5ndGg7IGlkeCArPSBkaXIpIHtcbiAgICAgICAgaWYgKGFycmF5W2lkeF0gPT09IGl0ZW0pIHJldHVybiBpZHg7XG4gICAgICB9XG4gICAgICByZXR1cm4gLTE7XG4gICAgfTtcbiAgfTtcblxuICAvLyBSZXR1cm4gdGhlIHBvc2l0aW9uIG9mIHRoZSBmaXJzdCBvY2N1cnJlbmNlIG9mIGFuIGl0ZW0gaW4gYW4gYXJyYXksXG4gIC8vIG9yIC0xIGlmIHRoZSBpdGVtIGlzIG5vdCBpbmNsdWRlZCBpbiB0aGUgYXJyYXkuXG4gIC8vIElmIHRoZSBhcnJheSBpcyBsYXJnZSBhbmQgYWxyZWFkeSBpbiBzb3J0IG9yZGVyLCBwYXNzIGB0cnVlYFxuICAvLyBmb3IgKippc1NvcnRlZCoqIHRvIHVzZSBiaW5hcnkgc2VhcmNoLlxuICBfLmluZGV4T2YgPSBjcmVhdGVJbmRleEZpbmRlcigxLCBfLmZpbmRJbmRleCwgXy5zb3J0ZWRJbmRleCk7XG4gIF8ubGFzdEluZGV4T2YgPSBjcmVhdGVJbmRleEZpbmRlcigtMSwgXy5maW5kTGFzdEluZGV4KTtcblxuICAvLyBHZW5lcmF0ZSBhbiBpbnRlZ2VyIEFycmF5IGNvbnRhaW5pbmcgYW4gYXJpdGhtZXRpYyBwcm9ncmVzc2lvbi4gQSBwb3J0IG9mXG4gIC8vIHRoZSBuYXRpdmUgUHl0aG9uIGByYW5nZSgpYCBmdW5jdGlvbi4gU2VlXG4gIC8vIFt0aGUgUHl0aG9uIGRvY3VtZW50YXRpb25dKGh0dHBzOi8vZG9jcy5weXRob24ub3JnL2xpYnJhcnkvZnVuY3Rpb25zLmh0bWwjcmFuZ2UpLlxuICBfLnJhbmdlID0gZnVuY3Rpb24oc3RhcnQsIHN0b3AsIHN0ZXApIHtcbiAgICBpZiAoc3RvcCA9PSBudWxsKSB7XG4gICAgICBzdG9wID0gc3RhcnQgfHwgMDtcbiAgICAgIHN0YXJ0ID0gMDtcbiAgICB9XG4gICAgaWYgKCFzdGVwKSB7XG4gICAgICBzdGVwID0gc3RvcCA8IHN0YXJ0ID8gLTEgOiAxO1xuICAgIH1cblxuICAgIHZhciBsZW5ndGggPSBNYXRoLm1heChNYXRoLmNlaWwoKHN0b3AgLSBzdGFydCkgLyBzdGVwKSwgMCk7XG4gICAgdmFyIHJhbmdlID0gQXJyYXkobGVuZ3RoKTtcblxuICAgIGZvciAodmFyIGlkeCA9IDA7IGlkeCA8IGxlbmd0aDsgaWR4KyssIHN0YXJ0ICs9IHN0ZXApIHtcbiAgICAgIHJhbmdlW2lkeF0gPSBzdGFydDtcbiAgICB9XG5cbiAgICByZXR1cm4gcmFuZ2U7XG4gIH07XG5cbiAgLy8gQ2h1bmsgYSBzaW5nbGUgYXJyYXkgaW50byBtdWx0aXBsZSBhcnJheXMsIGVhY2ggY29udGFpbmluZyBgY291bnRgIG9yIGZld2VyXG4gIC8vIGl0ZW1zLlxuICBfLmNodW5rID0gZnVuY3Rpb24oYXJyYXksIGNvdW50KSB7XG4gICAgaWYgKGNvdW50ID09IG51bGwgfHwgY291bnQgPCAxKSByZXR1cm4gW107XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIHZhciBpID0gMCwgbGVuZ3RoID0gYXJyYXkubGVuZ3RoO1xuICAgIHdoaWxlIChpIDwgbGVuZ3RoKSB7XG4gICAgICByZXN1bHQucHVzaChzbGljZS5jYWxsKGFycmF5LCBpLCBpICs9IGNvdW50KSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgLy8gRnVuY3Rpb24gKGFoZW0pIEZ1bmN0aW9uc1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS1cblxuICAvLyBEZXRlcm1pbmVzIHdoZXRoZXIgdG8gZXhlY3V0ZSBhIGZ1bmN0aW9uIGFzIGEgY29uc3RydWN0b3JcbiAgLy8gb3IgYSBub3JtYWwgZnVuY3Rpb24gd2l0aCB0aGUgcHJvdmlkZWQgYXJndW1lbnRzLlxuICB2YXIgZXhlY3V0ZUJvdW5kID0gZnVuY3Rpb24oc291cmNlRnVuYywgYm91bmRGdW5jLCBjb250ZXh0LCBjYWxsaW5nQ29udGV4dCwgYXJncykge1xuICAgIGlmICghKGNhbGxpbmdDb250ZXh0IGluc3RhbmNlb2YgYm91bmRGdW5jKSkgcmV0dXJuIHNvdXJjZUZ1bmMuYXBwbHkoY29udGV4dCwgYXJncyk7XG4gICAgdmFyIHNlbGYgPSBiYXNlQ3JlYXRlKHNvdXJjZUZ1bmMucHJvdG90eXBlKTtcbiAgICB2YXIgcmVzdWx0ID0gc291cmNlRnVuYy5hcHBseShzZWxmLCBhcmdzKTtcbiAgICBpZiAoXy5pc09iamVjdChyZXN1bHQpKSByZXR1cm4gcmVzdWx0O1xuICAgIHJldHVybiBzZWxmO1xuICB9O1xuXG4gIC8vIENyZWF0ZSBhIGZ1bmN0aW9uIGJvdW5kIHRvIGEgZ2l2ZW4gb2JqZWN0IChhc3NpZ25pbmcgYHRoaXNgLCBhbmQgYXJndW1lbnRzLFxuICAvLyBvcHRpb25hbGx5KS4gRGVsZWdhdGVzIHRvICoqRUNNQVNjcmlwdCA1KioncyBuYXRpdmUgYEZ1bmN0aW9uLmJpbmRgIGlmXG4gIC8vIGF2YWlsYWJsZS5cbiAgXy5iaW5kID0gcmVzdEFyZ3VtZW50cyhmdW5jdGlvbihmdW5jLCBjb250ZXh0LCBhcmdzKSB7XG4gICAgaWYgKCFfLmlzRnVuY3Rpb24oZnVuYykpIHRocm93IG5ldyBUeXBlRXJyb3IoJ0JpbmQgbXVzdCBiZSBjYWxsZWQgb24gYSBmdW5jdGlvbicpO1xuICAgIHZhciBib3VuZCA9IHJlc3RBcmd1bWVudHMoZnVuY3Rpb24oY2FsbEFyZ3MpIHtcbiAgICAgIHJldHVybiBleGVjdXRlQm91bmQoZnVuYywgYm91bmQsIGNvbnRleHQsIHRoaXMsIGFyZ3MuY29uY2F0KGNhbGxBcmdzKSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGJvdW5kO1xuICB9KTtcblxuICAvLyBQYXJ0aWFsbHkgYXBwbHkgYSBmdW5jdGlvbiBieSBjcmVhdGluZyBhIHZlcnNpb24gdGhhdCBoYXMgaGFkIHNvbWUgb2YgaXRzXG4gIC8vIGFyZ3VtZW50cyBwcmUtZmlsbGVkLCB3aXRob3V0IGNoYW5naW5nIGl0cyBkeW5hbWljIGB0aGlzYCBjb250ZXh0LiBfIGFjdHNcbiAgLy8gYXMgYSBwbGFjZWhvbGRlciBieSBkZWZhdWx0LCBhbGxvd2luZyBhbnkgY29tYmluYXRpb24gb2YgYXJndW1lbnRzIHRvIGJlXG4gIC8vIHByZS1maWxsZWQuIFNldCBgXy5wYXJ0aWFsLnBsYWNlaG9sZGVyYCBmb3IgYSBjdXN0b20gcGxhY2Vob2xkZXIgYXJndW1lbnQuXG4gIF8ucGFydGlhbCA9IHJlc3RBcmd1bWVudHMoZnVuY3Rpb24oZnVuYywgYm91bmRBcmdzKSB7XG4gICAgdmFyIHBsYWNlaG9sZGVyID0gXy5wYXJ0aWFsLnBsYWNlaG9sZGVyO1xuICAgIHZhciBib3VuZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHBvc2l0aW9uID0gMCwgbGVuZ3RoID0gYm91bmRBcmdzLmxlbmd0aDtcbiAgICAgIHZhciBhcmdzID0gQXJyYXkobGVuZ3RoKTtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgYXJnc1tpXSA9IGJvdW5kQXJnc1tpXSA9PT0gcGxhY2Vob2xkZXIgPyBhcmd1bWVudHNbcG9zaXRpb24rK10gOiBib3VuZEFyZ3NbaV07XG4gICAgICB9XG4gICAgICB3aGlsZSAocG9zaXRpb24gPCBhcmd1bWVudHMubGVuZ3RoKSBhcmdzLnB1c2goYXJndW1lbnRzW3Bvc2l0aW9uKytdKTtcbiAgICAgIHJldHVybiBleGVjdXRlQm91bmQoZnVuYywgYm91bmQsIHRoaXMsIHRoaXMsIGFyZ3MpO1xuICAgIH07XG4gICAgcmV0dXJuIGJvdW5kO1xuICB9KTtcblxuICBfLnBhcnRpYWwucGxhY2Vob2xkZXIgPSBfO1xuXG4gIC8vIEJpbmQgYSBudW1iZXIgb2YgYW4gb2JqZWN0J3MgbWV0aG9kcyB0byB0aGF0IG9iamVjdC4gUmVtYWluaW5nIGFyZ3VtZW50c1xuICAvLyBhcmUgdGhlIG1ldGhvZCBuYW1lcyB0byBiZSBib3VuZC4gVXNlZnVsIGZvciBlbnN1cmluZyB0aGF0IGFsbCBjYWxsYmFja3NcbiAgLy8gZGVmaW5lZCBvbiBhbiBvYmplY3QgYmVsb25nIHRvIGl0LlxuICBfLmJpbmRBbGwgPSByZXN0QXJndW1lbnRzKGZ1bmN0aW9uKG9iaiwga2V5cykge1xuICAgIGtleXMgPSBmbGF0dGVuKGtleXMsIGZhbHNlLCBmYWxzZSk7XG4gICAgdmFyIGluZGV4ID0ga2V5cy5sZW5ndGg7XG4gICAgaWYgKGluZGV4IDwgMSkgdGhyb3cgbmV3IEVycm9yKCdiaW5kQWxsIG11c3QgYmUgcGFzc2VkIGZ1bmN0aW9uIG5hbWVzJyk7XG4gICAgd2hpbGUgKGluZGV4LS0pIHtcbiAgICAgIHZhciBrZXkgPSBrZXlzW2luZGV4XTtcbiAgICAgIG9ialtrZXldID0gXy5iaW5kKG9ialtrZXldLCBvYmopO1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gTWVtb2l6ZSBhbiBleHBlbnNpdmUgZnVuY3Rpb24gYnkgc3RvcmluZyBpdHMgcmVzdWx0cy5cbiAgXy5tZW1vaXplID0gZnVuY3Rpb24oZnVuYywgaGFzaGVyKSB7XG4gICAgdmFyIG1lbW9pemUgPSBmdW5jdGlvbihrZXkpIHtcbiAgICAgIHZhciBjYWNoZSA9IG1lbW9pemUuY2FjaGU7XG4gICAgICB2YXIgYWRkcmVzcyA9ICcnICsgKGhhc2hlciA/IGhhc2hlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDoga2V5KTtcbiAgICAgIGlmICghaGFzKGNhY2hlLCBhZGRyZXNzKSkgY2FjaGVbYWRkcmVzc10gPSBmdW5jLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICByZXR1cm4gY2FjaGVbYWRkcmVzc107XG4gICAgfTtcbiAgICBtZW1vaXplLmNhY2hlID0ge307XG4gICAgcmV0dXJuIG1lbW9pemU7XG4gIH07XG5cbiAgLy8gRGVsYXlzIGEgZnVuY3Rpb24gZm9yIHRoZSBnaXZlbiBudW1iZXIgb2YgbWlsbGlzZWNvbmRzLCBhbmQgdGhlbiBjYWxsc1xuICAvLyBpdCB3aXRoIHRoZSBhcmd1bWVudHMgc3VwcGxpZWQuXG4gIF8uZGVsYXkgPSByZXN0QXJndW1lbnRzKGZ1bmN0aW9uKGZ1bmMsIHdhaXQsIGFyZ3MpIHtcbiAgICByZXR1cm4gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBmdW5jLmFwcGx5KG51bGwsIGFyZ3MpO1xuICAgIH0sIHdhaXQpO1xuICB9KTtcblxuICAvLyBEZWZlcnMgYSBmdW5jdGlvbiwgc2NoZWR1bGluZyBpdCB0byBydW4gYWZ0ZXIgdGhlIGN1cnJlbnQgY2FsbCBzdGFjayBoYXNcbiAgLy8gY2xlYXJlZC5cbiAgXy5kZWZlciA9IF8ucGFydGlhbChfLmRlbGF5LCBfLCAxKTtcblxuICAvLyBSZXR1cm5zIGEgZnVuY3Rpb24sIHRoYXQsIHdoZW4gaW52b2tlZCwgd2lsbCBvbmx5IGJlIHRyaWdnZXJlZCBhdCBtb3N0IG9uY2VcbiAgLy8gZHVyaW5nIGEgZ2l2ZW4gd2luZG93IG9mIHRpbWUuIE5vcm1hbGx5LCB0aGUgdGhyb3R0bGVkIGZ1bmN0aW9uIHdpbGwgcnVuXG4gIC8vIGFzIG11Y2ggYXMgaXQgY2FuLCB3aXRob3V0IGV2ZXIgZ29pbmcgbW9yZSB0aGFuIG9uY2UgcGVyIGB3YWl0YCBkdXJhdGlvbjtcbiAgLy8gYnV0IGlmIHlvdSdkIGxpa2UgdG8gZGlzYWJsZSB0aGUgZXhlY3V0aW9uIG9uIHRoZSBsZWFkaW5nIGVkZ2UsIHBhc3NcbiAgLy8gYHtsZWFkaW5nOiBmYWxzZX1gLiBUbyBkaXNhYmxlIGV4ZWN1dGlvbiBvbiB0aGUgdHJhaWxpbmcgZWRnZSwgZGl0dG8uXG4gIF8udGhyb3R0bGUgPSBmdW5jdGlvbihmdW5jLCB3YWl0LCBvcHRpb25zKSB7XG4gICAgdmFyIHRpbWVvdXQsIGNvbnRleHQsIGFyZ3MsIHJlc3VsdDtcbiAgICB2YXIgcHJldmlvdXMgPSAwO1xuICAgIGlmICghb3B0aW9ucykgb3B0aW9ucyA9IHt9O1xuXG4gICAgdmFyIGxhdGVyID0gZnVuY3Rpb24oKSB7XG4gICAgICBwcmV2aW91cyA9IG9wdGlvbnMubGVhZGluZyA9PT0gZmFsc2UgPyAwIDogXy5ub3coKTtcbiAgICAgIHRpbWVvdXQgPSBudWxsO1xuICAgICAgcmVzdWx0ID0gZnVuYy5hcHBseShjb250ZXh0LCBhcmdzKTtcbiAgICAgIGlmICghdGltZW91dCkgY29udGV4dCA9IGFyZ3MgPSBudWxsO1xuICAgIH07XG5cbiAgICB2YXIgdGhyb3R0bGVkID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgbm93ID0gXy5ub3coKTtcbiAgICAgIGlmICghcHJldmlvdXMgJiYgb3B0aW9ucy5sZWFkaW5nID09PSBmYWxzZSkgcHJldmlvdXMgPSBub3c7XG4gICAgICB2YXIgcmVtYWluaW5nID0gd2FpdCAtIChub3cgLSBwcmV2aW91cyk7XG4gICAgICBjb250ZXh0ID0gdGhpcztcbiAgICAgIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgICBpZiAocmVtYWluaW5nIDw9IDAgfHwgcmVtYWluaW5nID4gd2FpdCkge1xuICAgICAgICBpZiAodGltZW91dCkge1xuICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICAgICAgICB0aW1lb3V0ID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBwcmV2aW91cyA9IG5vdztcbiAgICAgICAgcmVzdWx0ID0gZnVuYy5hcHBseShjb250ZXh0LCBhcmdzKTtcbiAgICAgICAgaWYgKCF0aW1lb3V0KSBjb250ZXh0ID0gYXJncyA9IG51bGw7XG4gICAgICB9IGVsc2UgaWYgKCF0aW1lb3V0ICYmIG9wdGlvbnMudHJhaWxpbmcgIT09IGZhbHNlKSB7XG4gICAgICAgIHRpbWVvdXQgPSBzZXRUaW1lb3V0KGxhdGVyLCByZW1haW5pbmcpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuXG4gICAgdGhyb3R0bGVkLmNhbmNlbCA9IGZ1bmN0aW9uKCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuICAgICAgcHJldmlvdXMgPSAwO1xuICAgICAgdGltZW91dCA9IGNvbnRleHQgPSBhcmdzID0gbnVsbDtcbiAgICB9O1xuXG4gICAgcmV0dXJuIHRocm90dGxlZDtcbiAgfTtcblxuICAvLyBSZXR1cm5zIGEgZnVuY3Rpb24sIHRoYXQsIGFzIGxvbmcgYXMgaXQgY29udGludWVzIHRvIGJlIGludm9rZWQsIHdpbGwgbm90XG4gIC8vIGJlIHRyaWdnZXJlZC4gVGhlIGZ1bmN0aW9uIHdpbGwgYmUgY2FsbGVkIGFmdGVyIGl0IHN0b3BzIGJlaW5nIGNhbGxlZCBmb3JcbiAgLy8gTiBtaWxsaXNlY29uZHMuIElmIGBpbW1lZGlhdGVgIGlzIHBhc3NlZCwgdHJpZ2dlciB0aGUgZnVuY3Rpb24gb24gdGhlXG4gIC8vIGxlYWRpbmcgZWRnZSwgaW5zdGVhZCBvZiB0aGUgdHJhaWxpbmcuXG4gIF8uZGVib3VuY2UgPSBmdW5jdGlvbihmdW5jLCB3YWl0LCBpbW1lZGlhdGUpIHtcbiAgICB2YXIgdGltZW91dCwgcmVzdWx0O1xuXG4gICAgdmFyIGxhdGVyID0gZnVuY3Rpb24oY29udGV4dCwgYXJncykge1xuICAgICAgdGltZW91dCA9IG51bGw7XG4gICAgICBpZiAoYXJncykgcmVzdWx0ID0gZnVuYy5hcHBseShjb250ZXh0LCBhcmdzKTtcbiAgICB9O1xuXG4gICAgdmFyIGRlYm91bmNlZCA9IHJlc3RBcmd1bWVudHMoZnVuY3Rpb24oYXJncykge1xuICAgICAgaWYgKHRpbWVvdXQpIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICAgIGlmIChpbW1lZGlhdGUpIHtcbiAgICAgICAgdmFyIGNhbGxOb3cgPSAhdGltZW91dDtcbiAgICAgICAgdGltZW91dCA9IHNldFRpbWVvdXQobGF0ZXIsIHdhaXQpO1xuICAgICAgICBpZiAoY2FsbE5vdykgcmVzdWx0ID0gZnVuYy5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRpbWVvdXQgPSBfLmRlbGF5KGxhdGVyLCB3YWl0LCB0aGlzLCBhcmdzKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9KTtcblxuICAgIGRlYm91bmNlZC5jYW5jZWwgPSBmdW5jdGlvbigpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICAgIHRpbWVvdXQgPSBudWxsO1xuICAgIH07XG5cbiAgICByZXR1cm4gZGVib3VuY2VkO1xuICB9O1xuXG4gIC8vIFJldHVybnMgdGhlIGZpcnN0IGZ1bmN0aW9uIHBhc3NlZCBhcyBhbiBhcmd1bWVudCB0byB0aGUgc2Vjb25kLFxuICAvLyBhbGxvd2luZyB5b3UgdG8gYWRqdXN0IGFyZ3VtZW50cywgcnVuIGNvZGUgYmVmb3JlIGFuZCBhZnRlciwgYW5kXG4gIC8vIGNvbmRpdGlvbmFsbHkgZXhlY3V0ZSB0aGUgb3JpZ2luYWwgZnVuY3Rpb24uXG4gIF8ud3JhcCA9IGZ1bmN0aW9uKGZ1bmMsIHdyYXBwZXIpIHtcbiAgICByZXR1cm4gXy5wYXJ0aWFsKHdyYXBwZXIsIGZ1bmMpO1xuICB9O1xuXG4gIC8vIFJldHVybnMgYSBuZWdhdGVkIHZlcnNpb24gb2YgdGhlIHBhc3NlZC1pbiBwcmVkaWNhdGUuXG4gIF8ubmVnYXRlID0gZnVuY3Rpb24ocHJlZGljYXRlKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuICFwcmVkaWNhdGUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB9O1xuICB9O1xuXG4gIC8vIFJldHVybnMgYSBmdW5jdGlvbiB0aGF0IGlzIHRoZSBjb21wb3NpdGlvbiBvZiBhIGxpc3Qgb2YgZnVuY3Rpb25zLCBlYWNoXG4gIC8vIGNvbnN1bWluZyB0aGUgcmV0dXJuIHZhbHVlIG9mIHRoZSBmdW5jdGlvbiB0aGF0IGZvbGxvd3MuXG4gIF8uY29tcG9zZSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBhcmdzID0gYXJndW1lbnRzO1xuICAgIHZhciBzdGFydCA9IGFyZ3MubGVuZ3RoIC0gMTtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgaSA9IHN0YXJ0O1xuICAgICAgdmFyIHJlc3VsdCA9IGFyZ3Nbc3RhcnRdLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB3aGlsZSAoaS0tKSByZXN1bHQgPSBhcmdzW2ldLmNhbGwodGhpcywgcmVzdWx0KTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgfTtcblxuICAvLyBSZXR1cm5zIGEgZnVuY3Rpb24gdGhhdCB3aWxsIG9ubHkgYmUgZXhlY3V0ZWQgb24gYW5kIGFmdGVyIHRoZSBOdGggY2FsbC5cbiAgXy5hZnRlciA9IGZ1bmN0aW9uKHRpbWVzLCBmdW5jKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKC0tdGltZXMgPCAxKSB7XG4gICAgICAgIHJldHVybiBmdW5jLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9XG4gICAgfTtcbiAgfTtcblxuICAvLyBSZXR1cm5zIGEgZnVuY3Rpb24gdGhhdCB3aWxsIG9ubHkgYmUgZXhlY3V0ZWQgdXAgdG8gKGJ1dCBub3QgaW5jbHVkaW5nKSB0aGUgTnRoIGNhbGwuXG4gIF8uYmVmb3JlID0gZnVuY3Rpb24odGltZXMsIGZ1bmMpIHtcbiAgICB2YXIgbWVtbztcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoLS10aW1lcyA+IDApIHtcbiAgICAgICAgbWVtbyA9IGZ1bmMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIH1cbiAgICAgIGlmICh0aW1lcyA8PSAxKSBmdW5jID0gbnVsbDtcbiAgICAgIHJldHVybiBtZW1vO1xuICAgIH07XG4gIH07XG5cbiAgLy8gUmV0dXJucyBhIGZ1bmN0aW9uIHRoYXQgd2lsbCBiZSBleGVjdXRlZCBhdCBtb3N0IG9uZSB0aW1lLCBubyBtYXR0ZXIgaG93XG4gIC8vIG9mdGVuIHlvdSBjYWxsIGl0LiBVc2VmdWwgZm9yIGxhenkgaW5pdGlhbGl6YXRpb24uXG4gIF8ub25jZSA9IF8ucGFydGlhbChfLmJlZm9yZSwgMik7XG5cbiAgXy5yZXN0QXJndW1lbnRzID0gcmVzdEFyZ3VtZW50cztcblxuICAvLyBPYmplY3QgRnVuY3Rpb25zXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS1cblxuICAvLyBLZXlzIGluIElFIDwgOSB0aGF0IHdvbid0IGJlIGl0ZXJhdGVkIGJ5IGBmb3Iga2V5IGluIC4uLmAgYW5kIHRodXMgbWlzc2VkLlxuICB2YXIgaGFzRW51bUJ1ZyA9ICF7dG9TdHJpbmc6IG51bGx9LnByb3BlcnR5SXNFbnVtZXJhYmxlKCd0b1N0cmluZycpO1xuICB2YXIgbm9uRW51bWVyYWJsZVByb3BzID0gWyd2YWx1ZU9mJywgJ2lzUHJvdG90eXBlT2YnLCAndG9TdHJpbmcnLFxuICAgICdwcm9wZXJ0eUlzRW51bWVyYWJsZScsICdoYXNPd25Qcm9wZXJ0eScsICd0b0xvY2FsZVN0cmluZyddO1xuXG4gIHZhciBjb2xsZWN0Tm9uRW51bVByb3BzID0gZnVuY3Rpb24ob2JqLCBrZXlzKSB7XG4gICAgdmFyIG5vbkVudW1JZHggPSBub25FbnVtZXJhYmxlUHJvcHMubGVuZ3RoO1xuICAgIHZhciBjb25zdHJ1Y3RvciA9IG9iai5jb25zdHJ1Y3RvcjtcbiAgICB2YXIgcHJvdG8gPSBfLmlzRnVuY3Rpb24oY29uc3RydWN0b3IpICYmIGNvbnN0cnVjdG9yLnByb3RvdHlwZSB8fCBPYmpQcm90bztcblxuICAgIC8vIENvbnN0cnVjdG9yIGlzIGEgc3BlY2lhbCBjYXNlLlxuICAgIHZhciBwcm9wID0gJ2NvbnN0cnVjdG9yJztcbiAgICBpZiAoaGFzKG9iaiwgcHJvcCkgJiYgIV8uY29udGFpbnMoa2V5cywgcHJvcCkpIGtleXMucHVzaChwcm9wKTtcblxuICAgIHdoaWxlIChub25FbnVtSWR4LS0pIHtcbiAgICAgIHByb3AgPSBub25FbnVtZXJhYmxlUHJvcHNbbm9uRW51bUlkeF07XG4gICAgICBpZiAocHJvcCBpbiBvYmogJiYgb2JqW3Byb3BdICE9PSBwcm90b1twcm9wXSAmJiAhXy5jb250YWlucyhrZXlzLCBwcm9wKSkge1xuICAgICAgICBrZXlzLnB1c2gocHJvcCk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIC8vIFJldHJpZXZlIHRoZSBuYW1lcyBvZiBhbiBvYmplY3QncyBvd24gcHJvcGVydGllcy5cbiAgLy8gRGVsZWdhdGVzIHRvICoqRUNNQVNjcmlwdCA1KioncyBuYXRpdmUgYE9iamVjdC5rZXlzYC5cbiAgXy5rZXlzID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgaWYgKCFfLmlzT2JqZWN0KG9iaikpIHJldHVybiBbXTtcbiAgICBpZiAobmF0aXZlS2V5cykgcmV0dXJuIG5hdGl2ZUtleXMob2JqKTtcbiAgICB2YXIga2V5cyA9IFtdO1xuICAgIGZvciAodmFyIGtleSBpbiBvYmopIGlmIChoYXMob2JqLCBrZXkpKSBrZXlzLnB1c2goa2V5KTtcbiAgICAvLyBBaGVtLCBJRSA8IDkuXG4gICAgaWYgKGhhc0VudW1CdWcpIGNvbGxlY3ROb25FbnVtUHJvcHMob2JqLCBrZXlzKTtcbiAgICByZXR1cm4ga2V5cztcbiAgfTtcblxuICAvLyBSZXRyaWV2ZSBhbGwgdGhlIHByb3BlcnR5IG5hbWVzIG9mIGFuIG9iamVjdC5cbiAgXy5hbGxLZXlzID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgaWYgKCFfLmlzT2JqZWN0KG9iaikpIHJldHVybiBbXTtcbiAgICB2YXIga2V5cyA9IFtdO1xuICAgIGZvciAodmFyIGtleSBpbiBvYmopIGtleXMucHVzaChrZXkpO1xuICAgIC8vIEFoZW0sIElFIDwgOS5cbiAgICBpZiAoaGFzRW51bUJ1ZykgY29sbGVjdE5vbkVudW1Qcm9wcyhvYmosIGtleXMpO1xuICAgIHJldHVybiBrZXlzO1xuICB9O1xuXG4gIC8vIFJldHJpZXZlIHRoZSB2YWx1ZXMgb2YgYW4gb2JqZWN0J3MgcHJvcGVydGllcy5cbiAgXy52YWx1ZXMgPSBmdW5jdGlvbihvYmopIHtcbiAgICB2YXIga2V5cyA9IF8ua2V5cyhvYmopO1xuICAgIHZhciBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgICB2YXIgdmFsdWVzID0gQXJyYXkobGVuZ3RoKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICB2YWx1ZXNbaV0gPSBvYmpba2V5c1tpXV07XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZXM7XG4gIH07XG5cbiAgLy8gUmV0dXJucyB0aGUgcmVzdWx0cyBvZiBhcHBseWluZyB0aGUgaXRlcmF0ZWUgdG8gZWFjaCBlbGVtZW50IG9mIHRoZSBvYmplY3QuXG4gIC8vIEluIGNvbnRyYXN0IHRvIF8ubWFwIGl0IHJldHVybnMgYW4gb2JqZWN0LlxuICBfLm1hcE9iamVjdCA9IGZ1bmN0aW9uKG9iaiwgaXRlcmF0ZWUsIGNvbnRleHQpIHtcbiAgICBpdGVyYXRlZSA9IGNiKGl0ZXJhdGVlLCBjb250ZXh0KTtcbiAgICB2YXIga2V5cyA9IF8ua2V5cyhvYmopLFxuICAgICAgICBsZW5ndGggPSBrZXlzLmxlbmd0aCxcbiAgICAgICAgcmVzdWx0cyA9IHt9O1xuICAgIGZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KyspIHtcbiAgICAgIHZhciBjdXJyZW50S2V5ID0ga2V5c1tpbmRleF07XG4gICAgICByZXN1bHRzW2N1cnJlbnRLZXldID0gaXRlcmF0ZWUob2JqW2N1cnJlbnRLZXldLCBjdXJyZW50S2V5LCBvYmopO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0cztcbiAgfTtcblxuICAvLyBDb252ZXJ0IGFuIG9iamVjdCBpbnRvIGEgbGlzdCBvZiBgW2tleSwgdmFsdWVdYCBwYWlycy5cbiAgLy8gVGhlIG9wcG9zaXRlIG9mIF8ub2JqZWN0LlxuICBfLnBhaXJzID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgdmFyIGtleXMgPSBfLmtleXMob2JqKTtcbiAgICB2YXIgbGVuZ3RoID0ga2V5cy5sZW5ndGg7XG4gICAgdmFyIHBhaXJzID0gQXJyYXkobGVuZ3RoKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICBwYWlyc1tpXSA9IFtrZXlzW2ldLCBvYmpba2V5c1tpXV1dO1xuICAgIH1cbiAgICByZXR1cm4gcGFpcnM7XG4gIH07XG5cbiAgLy8gSW52ZXJ0IHRoZSBrZXlzIGFuZCB2YWx1ZXMgb2YgYW4gb2JqZWN0LiBUaGUgdmFsdWVzIG11c3QgYmUgc2VyaWFsaXphYmxlLlxuICBfLmludmVydCA9IGZ1bmN0aW9uKG9iaikge1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICB2YXIga2V5cyA9IF8ua2V5cyhvYmopO1xuICAgIGZvciAodmFyIGkgPSAwLCBsZW5ndGggPSBrZXlzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICByZXN1bHRbb2JqW2tleXNbaV1dXSA9IGtleXNbaV07XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgLy8gUmV0dXJuIGEgc29ydGVkIGxpc3Qgb2YgdGhlIGZ1bmN0aW9uIG5hbWVzIGF2YWlsYWJsZSBvbiB0aGUgb2JqZWN0LlxuICAvLyBBbGlhc2VkIGFzIGBtZXRob2RzYC5cbiAgXy5mdW5jdGlvbnMgPSBfLm1ldGhvZHMgPSBmdW5jdGlvbihvYmopIHtcbiAgICB2YXIgbmFtZXMgPSBbXTtcbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgICBpZiAoXy5pc0Z1bmN0aW9uKG9ialtrZXldKSkgbmFtZXMucHVzaChrZXkpO1xuICAgIH1cbiAgICByZXR1cm4gbmFtZXMuc29ydCgpO1xuICB9O1xuXG4gIC8vIEFuIGludGVybmFsIGZ1bmN0aW9uIGZvciBjcmVhdGluZyBhc3NpZ25lciBmdW5jdGlvbnMuXG4gIHZhciBjcmVhdGVBc3NpZ25lciA9IGZ1bmN0aW9uKGtleXNGdW5jLCBkZWZhdWx0cykge1xuICAgIHJldHVybiBmdW5jdGlvbihvYmopIHtcbiAgICAgIHZhciBsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgaWYgKGRlZmF1bHRzKSBvYmogPSBPYmplY3Qob2JqKTtcbiAgICAgIGlmIChsZW5ndGggPCAyIHx8IG9iaiA9PSBudWxsKSByZXR1cm4gb2JqO1xuICAgICAgZm9yICh2YXIgaW5kZXggPSAxOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2luZGV4XSxcbiAgICAgICAgICAgIGtleXMgPSBrZXlzRnVuYyhzb3VyY2UpLFxuICAgICAgICAgICAgbCA9IGtleXMubGVuZ3RoO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuICAgICAgICAgIGlmICghZGVmYXVsdHMgfHwgb2JqW2tleV0gPT09IHZvaWQgMCkgb2JqW2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIG9iajtcbiAgICB9O1xuICB9O1xuXG4gIC8vIEV4dGVuZCBhIGdpdmVuIG9iamVjdCB3aXRoIGFsbCB0aGUgcHJvcGVydGllcyBpbiBwYXNzZWQtaW4gb2JqZWN0KHMpLlxuICBfLmV4dGVuZCA9IGNyZWF0ZUFzc2lnbmVyKF8uYWxsS2V5cyk7XG5cbiAgLy8gQXNzaWducyBhIGdpdmVuIG9iamVjdCB3aXRoIGFsbCB0aGUgb3duIHByb3BlcnRpZXMgaW4gdGhlIHBhc3NlZC1pbiBvYmplY3QocykuXG4gIC8vIChodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9PYmplY3QvYXNzaWduKVxuICBfLmV4dGVuZE93biA9IF8uYXNzaWduID0gY3JlYXRlQXNzaWduZXIoXy5rZXlzKTtcblxuICAvLyBSZXR1cm5zIHRoZSBmaXJzdCBrZXkgb24gYW4gb2JqZWN0IHRoYXQgcGFzc2VzIGEgcHJlZGljYXRlIHRlc3QuXG4gIF8uZmluZEtleSA9IGZ1bmN0aW9uKG9iaiwgcHJlZGljYXRlLCBjb250ZXh0KSB7XG4gICAgcHJlZGljYXRlID0gY2IocHJlZGljYXRlLCBjb250ZXh0KTtcbiAgICB2YXIga2V5cyA9IF8ua2V5cyhvYmopLCBrZXk7XG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9IGtleXMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgIGtleSA9IGtleXNbaV07XG4gICAgICBpZiAocHJlZGljYXRlKG9ialtrZXldLCBrZXksIG9iaikpIHJldHVybiBrZXk7XG4gICAgfVxuICB9O1xuXG4gIC8vIEludGVybmFsIHBpY2sgaGVscGVyIGZ1bmN0aW9uIHRvIGRldGVybWluZSBpZiBgb2JqYCBoYXMga2V5IGBrZXlgLlxuICB2YXIga2V5SW5PYmogPSBmdW5jdGlvbih2YWx1ZSwga2V5LCBvYmopIHtcbiAgICByZXR1cm4ga2V5IGluIG9iajtcbiAgfTtcblxuICAvLyBSZXR1cm4gYSBjb3B5IG9mIHRoZSBvYmplY3Qgb25seSBjb250YWluaW5nIHRoZSB3aGl0ZWxpc3RlZCBwcm9wZXJ0aWVzLlxuICBfLnBpY2sgPSByZXN0QXJndW1lbnRzKGZ1bmN0aW9uKG9iaiwga2V5cykge1xuICAgIHZhciByZXN1bHQgPSB7fSwgaXRlcmF0ZWUgPSBrZXlzWzBdO1xuICAgIGlmIChvYmogPT0gbnVsbCkgcmV0dXJuIHJlc3VsdDtcbiAgICBpZiAoXy5pc0Z1bmN0aW9uKGl0ZXJhdGVlKSkge1xuICAgICAgaWYgKGtleXMubGVuZ3RoID4gMSkgaXRlcmF0ZWUgPSBvcHRpbWl6ZUNiKGl0ZXJhdGVlLCBrZXlzWzFdKTtcbiAgICAgIGtleXMgPSBfLmFsbEtleXMob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaXRlcmF0ZWUgPSBrZXlJbk9iajtcbiAgICAgIGtleXMgPSBmbGF0dGVuKGtleXMsIGZhbHNlLCBmYWxzZSk7XG4gICAgICBvYmogPSBPYmplY3Qob2JqKTtcbiAgICB9XG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9IGtleXMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuICAgICAgdmFyIHZhbHVlID0gb2JqW2tleV07XG4gICAgICBpZiAoaXRlcmF0ZWUodmFsdWUsIGtleSwgb2JqKSkgcmVzdWx0W2tleV0gPSB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfSk7XG5cbiAgLy8gUmV0dXJuIGEgY29weSBvZiB0aGUgb2JqZWN0IHdpdGhvdXQgdGhlIGJsYWNrbGlzdGVkIHByb3BlcnRpZXMuXG4gIF8ub21pdCA9IHJlc3RBcmd1bWVudHMoZnVuY3Rpb24ob2JqLCBrZXlzKSB7XG4gICAgdmFyIGl0ZXJhdGVlID0ga2V5c1swXSwgY29udGV4dDtcbiAgICBpZiAoXy5pc0Z1bmN0aW9uKGl0ZXJhdGVlKSkge1xuICAgICAgaXRlcmF0ZWUgPSBfLm5lZ2F0ZShpdGVyYXRlZSk7XG4gICAgICBpZiAoa2V5cy5sZW5ndGggPiAxKSBjb250ZXh0ID0ga2V5c1sxXTtcbiAgICB9IGVsc2Uge1xuICAgICAga2V5cyA9IF8ubWFwKGZsYXR0ZW4oa2V5cywgZmFsc2UsIGZhbHNlKSwgU3RyaW5nKTtcbiAgICAgIGl0ZXJhdGVlID0gZnVuY3Rpb24odmFsdWUsIGtleSkge1xuICAgICAgICByZXR1cm4gIV8uY29udGFpbnMoa2V5cywga2V5KTtcbiAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBfLnBpY2sob2JqLCBpdGVyYXRlZSwgY29udGV4dCk7XG4gIH0pO1xuXG4gIC8vIEZpbGwgaW4gYSBnaXZlbiBvYmplY3Qgd2l0aCBkZWZhdWx0IHByb3BlcnRpZXMuXG4gIF8uZGVmYXVsdHMgPSBjcmVhdGVBc3NpZ25lcihfLmFsbEtleXMsIHRydWUpO1xuXG4gIC8vIENyZWF0ZXMgYW4gb2JqZWN0IHRoYXQgaW5oZXJpdHMgZnJvbSB0aGUgZ2l2ZW4gcHJvdG90eXBlIG9iamVjdC5cbiAgLy8gSWYgYWRkaXRpb25hbCBwcm9wZXJ0aWVzIGFyZSBwcm92aWRlZCB0aGVuIHRoZXkgd2lsbCBiZSBhZGRlZCB0byB0aGVcbiAgLy8gY3JlYXRlZCBvYmplY3QuXG4gIF8uY3JlYXRlID0gZnVuY3Rpb24ocHJvdG90eXBlLCBwcm9wcykge1xuICAgIHZhciByZXN1bHQgPSBiYXNlQ3JlYXRlKHByb3RvdHlwZSk7XG4gICAgaWYgKHByb3BzKSBfLmV4dGVuZE93bihyZXN1bHQsIHByb3BzKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuXG4gIC8vIENyZWF0ZSBhIChzaGFsbG93LWNsb25lZCkgZHVwbGljYXRlIG9mIGFuIG9iamVjdC5cbiAgXy5jbG9uZSA9IGZ1bmN0aW9uKG9iaikge1xuICAgIGlmICghXy5pc09iamVjdChvYmopKSByZXR1cm4gb2JqO1xuICAgIHJldHVybiBfLmlzQXJyYXkob2JqKSA/IG9iai5zbGljZSgpIDogXy5leHRlbmQoe30sIG9iaik7XG4gIH07XG5cbiAgLy8gSW52b2tlcyBpbnRlcmNlcHRvciB3aXRoIHRoZSBvYmosIGFuZCB0aGVuIHJldHVybnMgb2JqLlxuICAvLyBUaGUgcHJpbWFyeSBwdXJwb3NlIG9mIHRoaXMgbWV0aG9kIGlzIHRvIFwidGFwIGludG9cIiBhIG1ldGhvZCBjaGFpbiwgaW5cbiAgLy8gb3JkZXIgdG8gcGVyZm9ybSBvcGVyYXRpb25zIG9uIGludGVybWVkaWF0ZSByZXN1bHRzIHdpdGhpbiB0aGUgY2hhaW4uXG4gIF8udGFwID0gZnVuY3Rpb24ob2JqLCBpbnRlcmNlcHRvcikge1xuICAgIGludGVyY2VwdG9yKG9iaik7XG4gICAgcmV0dXJuIG9iajtcbiAgfTtcblxuICAvLyBSZXR1cm5zIHdoZXRoZXIgYW4gb2JqZWN0IGhhcyBhIGdpdmVuIHNldCBvZiBga2V5OnZhbHVlYCBwYWlycy5cbiAgXy5pc01hdGNoID0gZnVuY3Rpb24ob2JqZWN0LCBhdHRycykge1xuICAgIHZhciBrZXlzID0gXy5rZXlzKGF0dHJzKSwgbGVuZ3RoID0ga2V5cy5sZW5ndGg7XG4gICAgaWYgKG9iamVjdCA9PSBudWxsKSByZXR1cm4gIWxlbmd0aDtcbiAgICB2YXIgb2JqID0gT2JqZWN0KG9iamVjdCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgICBpZiAoYXR0cnNba2V5XSAhPT0gb2JqW2tleV0gfHwgIShrZXkgaW4gb2JqKSkgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfTtcblxuXG4gIC8vIEludGVybmFsIHJlY3Vyc2l2ZSBjb21wYXJpc29uIGZ1bmN0aW9uIGZvciBgaXNFcXVhbGAuXG4gIHZhciBlcSwgZGVlcEVxO1xuICBlcSA9IGZ1bmN0aW9uKGEsIGIsIGFTdGFjaywgYlN0YWNrKSB7XG4gICAgLy8gSWRlbnRpY2FsIG9iamVjdHMgYXJlIGVxdWFsLiBgMCA9PT0gLTBgLCBidXQgdGhleSBhcmVuJ3QgaWRlbnRpY2FsLlxuICAgIC8vIFNlZSB0aGUgW0hhcm1vbnkgYGVnYWxgIHByb3Bvc2FsXShodHRwczovL3dpa2kuZWNtYXNjcmlwdC5vcmcvZG9rdS5waHA/aWQ9aGFybW9ueTplZ2FsKS5cbiAgICBpZiAoYSA9PT0gYikgcmV0dXJuIGEgIT09IDAgfHwgMSAvIGEgPT09IDEgLyBiO1xuICAgIC8vIGBudWxsYCBvciBgdW5kZWZpbmVkYCBvbmx5IGVxdWFsIHRvIGl0c2VsZiAoc3RyaWN0IGNvbXBhcmlzb24pLlxuICAgIGlmIChhID09IG51bGwgfHwgYiA9PSBudWxsKSByZXR1cm4gZmFsc2U7XG4gICAgLy8gYE5hTmBzIGFyZSBlcXVpdmFsZW50LCBidXQgbm9uLXJlZmxleGl2ZS5cbiAgICBpZiAoYSAhPT0gYSkgcmV0dXJuIGIgIT09IGI7XG4gICAgLy8gRXhoYXVzdCBwcmltaXRpdmUgY2hlY2tzXG4gICAgdmFyIHR5cGUgPSB0eXBlb2YgYTtcbiAgICBpZiAodHlwZSAhPT0gJ2Z1bmN0aW9uJyAmJiB0eXBlICE9PSAnb2JqZWN0JyAmJiB0eXBlb2YgYiAhPSAnb2JqZWN0JykgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiBkZWVwRXEoYSwgYiwgYVN0YWNrLCBiU3RhY2spO1xuICB9O1xuXG4gIC8vIEludGVybmFsIHJlY3Vyc2l2ZSBjb21wYXJpc29uIGZ1bmN0aW9uIGZvciBgaXNFcXVhbGAuXG4gIGRlZXBFcSA9IGZ1bmN0aW9uKGEsIGIsIGFTdGFjaywgYlN0YWNrKSB7XG4gICAgLy8gVW53cmFwIGFueSB3cmFwcGVkIG9iamVjdHMuXG4gICAgaWYgKGEgaW5zdGFuY2VvZiBfKSBhID0gYS5fd3JhcHBlZDtcbiAgICBpZiAoYiBpbnN0YW5jZW9mIF8pIGIgPSBiLl93cmFwcGVkO1xuICAgIC8vIENvbXBhcmUgYFtbQ2xhc3NdXWAgbmFtZXMuXG4gICAgdmFyIGNsYXNzTmFtZSA9IHRvU3RyaW5nLmNhbGwoYSk7XG4gICAgaWYgKGNsYXNzTmFtZSAhPT0gdG9TdHJpbmcuY2FsbChiKSkgcmV0dXJuIGZhbHNlO1xuICAgIHN3aXRjaCAoY2xhc3NOYW1lKSB7XG4gICAgICAvLyBTdHJpbmdzLCBudW1iZXJzLCByZWd1bGFyIGV4cHJlc3Npb25zLCBkYXRlcywgYW5kIGJvb2xlYW5zIGFyZSBjb21wYXJlZCBieSB2YWx1ZS5cbiAgICAgIGNhc2UgJ1tvYmplY3QgUmVnRXhwXSc6XG4gICAgICAvLyBSZWdFeHBzIGFyZSBjb2VyY2VkIHRvIHN0cmluZ3MgZm9yIGNvbXBhcmlzb24gKE5vdGU6ICcnICsgL2EvaSA9PT0gJy9hL2knKVxuICAgICAgY2FzZSAnW29iamVjdCBTdHJpbmddJzpcbiAgICAgICAgLy8gUHJpbWl0aXZlcyBhbmQgdGhlaXIgY29ycmVzcG9uZGluZyBvYmplY3Qgd3JhcHBlcnMgYXJlIGVxdWl2YWxlbnQ7IHRodXMsIGBcIjVcImAgaXNcbiAgICAgICAgLy8gZXF1aXZhbGVudCB0byBgbmV3IFN0cmluZyhcIjVcIilgLlxuICAgICAgICByZXR1cm4gJycgKyBhID09PSAnJyArIGI7XG4gICAgICBjYXNlICdbb2JqZWN0IE51bWJlcl0nOlxuICAgICAgICAvLyBgTmFOYHMgYXJlIGVxdWl2YWxlbnQsIGJ1dCBub24tcmVmbGV4aXZlLlxuICAgICAgICAvLyBPYmplY3QoTmFOKSBpcyBlcXVpdmFsZW50IHRvIE5hTi5cbiAgICAgICAgaWYgKCthICE9PSArYSkgcmV0dXJuICtiICE9PSArYjtcbiAgICAgICAgLy8gQW4gYGVnYWxgIGNvbXBhcmlzb24gaXMgcGVyZm9ybWVkIGZvciBvdGhlciBudW1lcmljIHZhbHVlcy5cbiAgICAgICAgcmV0dXJuICthID09PSAwID8gMSAvICthID09PSAxIC8gYiA6ICthID09PSArYjtcbiAgICAgIGNhc2UgJ1tvYmplY3QgRGF0ZV0nOlxuICAgICAgY2FzZSAnW29iamVjdCBCb29sZWFuXSc6XG4gICAgICAgIC8vIENvZXJjZSBkYXRlcyBhbmQgYm9vbGVhbnMgdG8gbnVtZXJpYyBwcmltaXRpdmUgdmFsdWVzLiBEYXRlcyBhcmUgY29tcGFyZWQgYnkgdGhlaXJcbiAgICAgICAgLy8gbWlsbGlzZWNvbmQgcmVwcmVzZW50YXRpb25zLiBOb3RlIHRoYXQgaW52YWxpZCBkYXRlcyB3aXRoIG1pbGxpc2Vjb25kIHJlcHJlc2VudGF0aW9uc1xuICAgICAgICAvLyBvZiBgTmFOYCBhcmUgbm90IGVxdWl2YWxlbnQuXG4gICAgICAgIHJldHVybiArYSA9PT0gK2I7XG4gICAgICBjYXNlICdbb2JqZWN0IFN5bWJvbF0nOlxuICAgICAgICByZXR1cm4gU3ltYm9sUHJvdG8udmFsdWVPZi5jYWxsKGEpID09PSBTeW1ib2xQcm90by52YWx1ZU9mLmNhbGwoYik7XG4gICAgfVxuXG4gICAgdmFyIGFyZUFycmF5cyA9IGNsYXNzTmFtZSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbiAgICBpZiAoIWFyZUFycmF5cykge1xuICAgICAgaWYgKHR5cGVvZiBhICE9ICdvYmplY3QnIHx8IHR5cGVvZiBiICE9ICdvYmplY3QnKSByZXR1cm4gZmFsc2U7XG5cbiAgICAgIC8vIE9iamVjdHMgd2l0aCBkaWZmZXJlbnQgY29uc3RydWN0b3JzIGFyZSBub3QgZXF1aXZhbGVudCwgYnV0IGBPYmplY3RgcyBvciBgQXJyYXlgc1xuICAgICAgLy8gZnJvbSBkaWZmZXJlbnQgZnJhbWVzIGFyZS5cbiAgICAgIHZhciBhQ3RvciA9IGEuY29uc3RydWN0b3IsIGJDdG9yID0gYi5jb25zdHJ1Y3RvcjtcbiAgICAgIGlmIChhQ3RvciAhPT0gYkN0b3IgJiYgIShfLmlzRnVuY3Rpb24oYUN0b3IpICYmIGFDdG9yIGluc3RhbmNlb2YgYUN0b3IgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfLmlzRnVuY3Rpb24oYkN0b3IpICYmIGJDdG9yIGluc3RhbmNlb2YgYkN0b3IpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICYmICgnY29uc3RydWN0b3InIGluIGEgJiYgJ2NvbnN0cnVjdG9yJyBpbiBiKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICAgIC8vIEFzc3VtZSBlcXVhbGl0eSBmb3IgY3ljbGljIHN0cnVjdHVyZXMuIFRoZSBhbGdvcml0aG0gZm9yIGRldGVjdGluZyBjeWNsaWNcbiAgICAvLyBzdHJ1Y3R1cmVzIGlzIGFkYXB0ZWQgZnJvbSBFUyA1LjEgc2VjdGlvbiAxNS4xMi4zLCBhYnN0cmFjdCBvcGVyYXRpb24gYEpPYC5cblxuICAgIC8vIEluaXRpYWxpemluZyBzdGFjayBvZiB0cmF2ZXJzZWQgb2JqZWN0cy5cbiAgICAvLyBJdCdzIGRvbmUgaGVyZSBzaW5jZSB3ZSBvbmx5IG5lZWQgdGhlbSBmb3Igb2JqZWN0cyBhbmQgYXJyYXlzIGNvbXBhcmlzb24uXG4gICAgYVN0YWNrID0gYVN0YWNrIHx8IFtdO1xuICAgIGJTdGFjayA9IGJTdGFjayB8fCBbXTtcbiAgICB2YXIgbGVuZ3RoID0gYVN0YWNrLmxlbmd0aDtcbiAgICB3aGlsZSAobGVuZ3RoLS0pIHtcbiAgICAgIC8vIExpbmVhciBzZWFyY2guIFBlcmZvcm1hbmNlIGlzIGludmVyc2VseSBwcm9wb3J0aW9uYWwgdG8gdGhlIG51bWJlciBvZlxuICAgICAgLy8gdW5pcXVlIG5lc3RlZCBzdHJ1Y3R1cmVzLlxuICAgICAgaWYgKGFTdGFja1tsZW5ndGhdID09PSBhKSByZXR1cm4gYlN0YWNrW2xlbmd0aF0gPT09IGI7XG4gICAgfVxuXG4gICAgLy8gQWRkIHRoZSBmaXJzdCBvYmplY3QgdG8gdGhlIHN0YWNrIG9mIHRyYXZlcnNlZCBvYmplY3RzLlxuICAgIGFTdGFjay5wdXNoKGEpO1xuICAgIGJTdGFjay5wdXNoKGIpO1xuXG4gICAgLy8gUmVjdXJzaXZlbHkgY29tcGFyZSBvYmplY3RzIGFuZCBhcnJheXMuXG4gICAgaWYgKGFyZUFycmF5cykge1xuICAgICAgLy8gQ29tcGFyZSBhcnJheSBsZW5ndGhzIHRvIGRldGVybWluZSBpZiBhIGRlZXAgY29tcGFyaXNvbiBpcyBuZWNlc3NhcnkuXG4gICAgICBsZW5ndGggPSBhLmxlbmd0aDtcbiAgICAgIGlmIChsZW5ndGggIT09IGIubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG4gICAgICAvLyBEZWVwIGNvbXBhcmUgdGhlIGNvbnRlbnRzLCBpZ25vcmluZyBub24tbnVtZXJpYyBwcm9wZXJ0aWVzLlxuICAgICAgd2hpbGUgKGxlbmd0aC0tKSB7XG4gICAgICAgIGlmICghZXEoYVtsZW5ndGhdLCBiW2xlbmd0aF0sIGFTdGFjaywgYlN0YWNrKSkgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBEZWVwIGNvbXBhcmUgb2JqZWN0cy5cbiAgICAgIHZhciBrZXlzID0gXy5rZXlzKGEpLCBrZXk7XG4gICAgICBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgICAgIC8vIEVuc3VyZSB0aGF0IGJvdGggb2JqZWN0cyBjb250YWluIHRoZSBzYW1lIG51bWJlciBvZiBwcm9wZXJ0aWVzIGJlZm9yZSBjb21wYXJpbmcgZGVlcCBlcXVhbGl0eS5cbiAgICAgIGlmIChfLmtleXMoYikubGVuZ3RoICE9PSBsZW5ndGgpIHJldHVybiBmYWxzZTtcbiAgICAgIHdoaWxlIChsZW5ndGgtLSkge1xuICAgICAgICAvLyBEZWVwIGNvbXBhcmUgZWFjaCBtZW1iZXJcbiAgICAgICAga2V5ID0ga2V5c1tsZW5ndGhdO1xuICAgICAgICBpZiAoIShoYXMoYiwga2V5KSAmJiBlcShhW2tleV0sIGJba2V5XSwgYVN0YWNrLCBiU3RhY2spKSkgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBSZW1vdmUgdGhlIGZpcnN0IG9iamVjdCBmcm9tIHRoZSBzdGFjayBvZiB0cmF2ZXJzZWQgb2JqZWN0cy5cbiAgICBhU3RhY2sucG9wKCk7XG4gICAgYlN0YWNrLnBvcCgpO1xuICAgIHJldHVybiB0cnVlO1xuICB9O1xuXG4gIC8vIFBlcmZvcm0gYSBkZWVwIGNvbXBhcmlzb24gdG8gY2hlY2sgaWYgdHdvIG9iamVjdHMgYXJlIGVxdWFsLlxuICBfLmlzRXF1YWwgPSBmdW5jdGlvbihhLCBiKSB7XG4gICAgcmV0dXJuIGVxKGEsIGIpO1xuICB9O1xuXG4gIC8vIElzIGEgZ2l2ZW4gYXJyYXksIHN0cmluZywgb3Igb2JqZWN0IGVtcHR5P1xuICAvLyBBbiBcImVtcHR5XCIgb2JqZWN0IGhhcyBubyBlbnVtZXJhYmxlIG93bi1wcm9wZXJ0aWVzLlxuICBfLmlzRW1wdHkgPSBmdW5jdGlvbihvYmopIHtcbiAgICBpZiAob2JqID09IG51bGwpIHJldHVybiB0cnVlO1xuICAgIGlmIChpc0FycmF5TGlrZShvYmopICYmIChfLmlzQXJyYXkob2JqKSB8fCBfLmlzU3RyaW5nKG9iaikgfHwgXy5pc0FyZ3VtZW50cyhvYmopKSkgcmV0dXJuIG9iai5sZW5ndGggPT09IDA7XG4gICAgcmV0dXJuIF8ua2V5cyhvYmopLmxlbmd0aCA9PT0gMDtcbiAgfTtcblxuICAvLyBJcyBhIGdpdmVuIHZhbHVlIGEgRE9NIGVsZW1lbnQ/XG4gIF8uaXNFbGVtZW50ID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgcmV0dXJuICEhKG9iaiAmJiBvYmoubm9kZVR5cGUgPT09IDEpO1xuICB9O1xuXG4gIC8vIElzIGEgZ2l2ZW4gdmFsdWUgYW4gYXJyYXk/XG4gIC8vIERlbGVnYXRlcyB0byBFQ01BNSdzIG5hdGl2ZSBBcnJheS5pc0FycmF5XG4gIF8uaXNBcnJheSA9IG5hdGl2ZUlzQXJyYXkgfHwgZnVuY3Rpb24ob2JqKSB7XG4gICAgcmV0dXJuIHRvU3RyaW5nLmNhbGwob2JqKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbiAgfTtcblxuICAvLyBJcyBhIGdpdmVuIHZhcmlhYmxlIGFuIG9iamVjdD9cbiAgXy5pc09iamVjdCA9IGZ1bmN0aW9uKG9iaikge1xuICAgIHZhciB0eXBlID0gdHlwZW9mIG9iajtcbiAgICByZXR1cm4gdHlwZSA9PT0gJ2Z1bmN0aW9uJyB8fCB0eXBlID09PSAnb2JqZWN0JyAmJiAhIW9iajtcbiAgfTtcblxuICAvLyBBZGQgc29tZSBpc1R5cGUgbWV0aG9kczogaXNBcmd1bWVudHMsIGlzRnVuY3Rpb24sIGlzU3RyaW5nLCBpc051bWJlciwgaXNEYXRlLCBpc1JlZ0V4cCwgaXNFcnJvciwgaXNNYXAsIGlzV2Vha01hcCwgaXNTZXQsIGlzV2Vha1NldC5cbiAgXy5lYWNoKFsnQXJndW1lbnRzJywgJ0Z1bmN0aW9uJywgJ1N0cmluZycsICdOdW1iZXInLCAnRGF0ZScsICdSZWdFeHAnLCAnRXJyb3InLCAnU3ltYm9sJywgJ01hcCcsICdXZWFrTWFwJywgJ1NldCcsICdXZWFrU2V0J10sIGZ1bmN0aW9uKG5hbWUpIHtcbiAgICBfWydpcycgKyBuYW1lXSA9IGZ1bmN0aW9uKG9iaikge1xuICAgICAgcmV0dXJuIHRvU3RyaW5nLmNhbGwob2JqKSA9PT0gJ1tvYmplY3QgJyArIG5hbWUgKyAnXSc7XG4gICAgfTtcbiAgfSk7XG5cbiAgLy8gRGVmaW5lIGEgZmFsbGJhY2sgdmVyc2lvbiBvZiB0aGUgbWV0aG9kIGluIGJyb3dzZXJzIChhaGVtLCBJRSA8IDkpLCB3aGVyZVxuICAvLyB0aGVyZSBpc24ndCBhbnkgaW5zcGVjdGFibGUgXCJBcmd1bWVudHNcIiB0eXBlLlxuICBpZiAoIV8uaXNBcmd1bWVudHMoYXJndW1lbnRzKSkge1xuICAgIF8uaXNBcmd1bWVudHMgPSBmdW5jdGlvbihvYmopIHtcbiAgICAgIHJldHVybiBoYXMob2JqLCAnY2FsbGVlJyk7XG4gICAgfTtcbiAgfVxuXG4gIC8vIE9wdGltaXplIGBpc0Z1bmN0aW9uYCBpZiBhcHByb3ByaWF0ZS4gV29yayBhcm91bmQgc29tZSB0eXBlb2YgYnVncyBpbiBvbGQgdjgsXG4gIC8vIElFIDExICgjMTYyMSksIFNhZmFyaSA4ICgjMTkyOSksIGFuZCBQaGFudG9tSlMgKCMyMjM2KS5cbiAgdmFyIG5vZGVsaXN0ID0gcm9vdC5kb2N1bWVudCAmJiByb290LmRvY3VtZW50LmNoaWxkTm9kZXM7XG4gIGlmICh0eXBlb2YgLy4vICE9ICdmdW5jdGlvbicgJiYgdHlwZW9mIEludDhBcnJheSAhPSAnb2JqZWN0JyAmJiB0eXBlb2Ygbm9kZWxpc3QgIT0gJ2Z1bmN0aW9uJykge1xuICAgIF8uaXNGdW5jdGlvbiA9IGZ1bmN0aW9uKG9iaikge1xuICAgICAgcmV0dXJuIHR5cGVvZiBvYmogPT0gJ2Z1bmN0aW9uJyB8fCBmYWxzZTtcbiAgICB9O1xuICB9XG5cbiAgLy8gSXMgYSBnaXZlbiBvYmplY3QgYSBmaW5pdGUgbnVtYmVyP1xuICBfLmlzRmluaXRlID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgcmV0dXJuICFfLmlzU3ltYm9sKG9iaikgJiYgaXNGaW5pdGUob2JqKSAmJiAhaXNOYU4ocGFyc2VGbG9hdChvYmopKTtcbiAgfTtcblxuICAvLyBJcyB0aGUgZ2l2ZW4gdmFsdWUgYE5hTmA/XG4gIF8uaXNOYU4gPSBmdW5jdGlvbihvYmopIHtcbiAgICByZXR1cm4gXy5pc051bWJlcihvYmopICYmIGlzTmFOKG9iaik7XG4gIH07XG5cbiAgLy8gSXMgYSBnaXZlbiB2YWx1ZSBhIGJvb2xlYW4/XG4gIF8uaXNCb29sZWFuID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgcmV0dXJuIG9iaiA9PT0gdHJ1ZSB8fCBvYmogPT09IGZhbHNlIHx8IHRvU3RyaW5nLmNhbGwob2JqKSA9PT0gJ1tvYmplY3QgQm9vbGVhbl0nO1xuICB9O1xuXG4gIC8vIElzIGEgZ2l2ZW4gdmFsdWUgZXF1YWwgdG8gbnVsbD9cbiAgXy5pc051bGwgPSBmdW5jdGlvbihvYmopIHtcbiAgICByZXR1cm4gb2JqID09PSBudWxsO1xuICB9O1xuXG4gIC8vIElzIGEgZ2l2ZW4gdmFyaWFibGUgdW5kZWZpbmVkP1xuICBfLmlzVW5kZWZpbmVkID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgcmV0dXJuIG9iaiA9PT0gdm9pZCAwO1xuICB9O1xuXG4gIC8vIFNob3J0Y3V0IGZ1bmN0aW9uIGZvciBjaGVja2luZyBpZiBhbiBvYmplY3QgaGFzIGEgZ2l2ZW4gcHJvcGVydHkgZGlyZWN0bHlcbiAgLy8gb24gaXRzZWxmIChpbiBvdGhlciB3b3Jkcywgbm90IG9uIGEgcHJvdG90eXBlKS5cbiAgXy5oYXMgPSBmdW5jdGlvbihvYmosIHBhdGgpIHtcbiAgICBpZiAoIV8uaXNBcnJheShwYXRoKSkge1xuICAgICAgcmV0dXJuIGhhcyhvYmosIHBhdGgpO1xuICAgIH1cbiAgICB2YXIgbGVuZ3RoID0gcGF0aC5sZW5ndGg7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGtleSA9IHBhdGhbaV07XG4gICAgICBpZiAob2JqID09IG51bGwgfHwgIWhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIG9iaiA9IG9ialtrZXldO1xuICAgIH1cbiAgICByZXR1cm4gISFsZW5ndGg7XG4gIH07XG5cbiAgLy8gVXRpbGl0eSBGdW5jdGlvbnNcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS1cblxuICAvLyBSdW4gVW5kZXJzY29yZS5qcyBpbiAqbm9Db25mbGljdCogbW9kZSwgcmV0dXJuaW5nIHRoZSBgX2AgdmFyaWFibGUgdG8gaXRzXG4gIC8vIHByZXZpb3VzIG93bmVyLiBSZXR1cm5zIGEgcmVmZXJlbmNlIHRvIHRoZSBVbmRlcnNjb3JlIG9iamVjdC5cbiAgXy5ub0NvbmZsaWN0ID0gZnVuY3Rpb24oKSB7XG4gICAgcm9vdC5fID0gcHJldmlvdXNVbmRlcnNjb3JlO1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIC8vIEtlZXAgdGhlIGlkZW50aXR5IGZ1bmN0aW9uIGFyb3VuZCBmb3IgZGVmYXVsdCBpdGVyYXRlZXMuXG4gIF8uaWRlbnRpdHkgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfTtcblxuICAvLyBQcmVkaWNhdGUtZ2VuZXJhdGluZyBmdW5jdGlvbnMuIE9mdGVuIHVzZWZ1bCBvdXRzaWRlIG9mIFVuZGVyc2NvcmUuXG4gIF8uY29uc3RhbnQgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9O1xuICB9O1xuXG4gIF8ubm9vcCA9IGZ1bmN0aW9uKCl7fTtcblxuICAvLyBDcmVhdGVzIGEgZnVuY3Rpb24gdGhhdCwgd2hlbiBwYXNzZWQgYW4gb2JqZWN0LCB3aWxsIHRyYXZlcnNlIHRoYXQgb2JqZWN04oCZc1xuICAvLyBwcm9wZXJ0aWVzIGRvd24gdGhlIGdpdmVuIGBwYXRoYCwgc3BlY2lmaWVkIGFzIGFuIGFycmF5IG9mIGtleXMgb3IgaW5kZXhlcy5cbiAgXy5wcm9wZXJ0eSA9IGZ1bmN0aW9uKHBhdGgpIHtcbiAgICBpZiAoIV8uaXNBcnJheShwYXRoKSkge1xuICAgICAgcmV0dXJuIHNoYWxsb3dQcm9wZXJ0eShwYXRoKTtcbiAgICB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uKG9iaikge1xuICAgICAgcmV0dXJuIGRlZXBHZXQob2JqLCBwYXRoKTtcbiAgICB9O1xuICB9O1xuXG4gIC8vIEdlbmVyYXRlcyBhIGZ1bmN0aW9uIGZvciBhIGdpdmVuIG9iamVjdCB0aGF0IHJldHVybnMgYSBnaXZlbiBwcm9wZXJ0eS5cbiAgXy5wcm9wZXJ0eU9mID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgaWYgKG9iaiA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24oKXt9O1xuICAgIH1cbiAgICByZXR1cm4gZnVuY3Rpb24ocGF0aCkge1xuICAgICAgcmV0dXJuICFfLmlzQXJyYXkocGF0aCkgPyBvYmpbcGF0aF0gOiBkZWVwR2V0KG9iaiwgcGF0aCk7XG4gICAgfTtcbiAgfTtcblxuICAvLyBSZXR1cm5zIGEgcHJlZGljYXRlIGZvciBjaGVja2luZyB3aGV0aGVyIGFuIG9iamVjdCBoYXMgYSBnaXZlbiBzZXQgb2ZcbiAgLy8gYGtleTp2YWx1ZWAgcGFpcnMuXG4gIF8ubWF0Y2hlciA9IF8ubWF0Y2hlcyA9IGZ1bmN0aW9uKGF0dHJzKSB7XG4gICAgYXR0cnMgPSBfLmV4dGVuZE93bih7fSwgYXR0cnMpO1xuICAgIHJldHVybiBmdW5jdGlvbihvYmopIHtcbiAgICAgIHJldHVybiBfLmlzTWF0Y2gob2JqLCBhdHRycyk7XG4gICAgfTtcbiAgfTtcblxuICAvLyBSdW4gYSBmdW5jdGlvbiAqKm4qKiB0aW1lcy5cbiAgXy50aW1lcyA9IGZ1bmN0aW9uKG4sIGl0ZXJhdGVlLCBjb250ZXh0KSB7XG4gICAgdmFyIGFjY3VtID0gQXJyYXkoTWF0aC5tYXgoMCwgbikpO1xuICAgIGl0ZXJhdGVlID0gb3B0aW1pemVDYihpdGVyYXRlZSwgY29udGV4dCwgMSk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuOyBpKyspIGFjY3VtW2ldID0gaXRlcmF0ZWUoaSk7XG4gICAgcmV0dXJuIGFjY3VtO1xuICB9O1xuXG4gIC8vIFJldHVybiBhIHJhbmRvbSBpbnRlZ2VyIGJldHdlZW4gbWluIGFuZCBtYXggKGluY2x1c2l2ZSkuXG4gIF8ucmFuZG9tID0gZnVuY3Rpb24obWluLCBtYXgpIHtcbiAgICBpZiAobWF4ID09IG51bGwpIHtcbiAgICAgIG1heCA9IG1pbjtcbiAgICAgIG1pbiA9IDA7XG4gICAgfVxuICAgIHJldHVybiBtaW4gKyBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluICsgMSkpO1xuICB9O1xuXG4gIC8vIEEgKHBvc3NpYmx5IGZhc3Rlcikgd2F5IHRvIGdldCB0aGUgY3VycmVudCB0aW1lc3RhbXAgYXMgYW4gaW50ZWdlci5cbiAgXy5ub3cgPSBEYXRlLm5vdyB8fCBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG4gIH07XG5cbiAgLy8gTGlzdCBvZiBIVE1MIGVudGl0aWVzIGZvciBlc2NhcGluZy5cbiAgdmFyIGVzY2FwZU1hcCA9IHtcbiAgICAnJic6ICcmYW1wOycsXG4gICAgJzwnOiAnJmx0OycsXG4gICAgJz4nOiAnJmd0OycsXG4gICAgJ1wiJzogJyZxdW90OycsXG4gICAgXCInXCI6ICcmI3gyNzsnLFxuICAgICdgJzogJyYjeDYwOydcbiAgfTtcbiAgdmFyIHVuZXNjYXBlTWFwID0gXy5pbnZlcnQoZXNjYXBlTWFwKTtcblxuICAvLyBGdW5jdGlvbnMgZm9yIGVzY2FwaW5nIGFuZCB1bmVzY2FwaW5nIHN0cmluZ3MgdG8vZnJvbSBIVE1MIGludGVycG9sYXRpb24uXG4gIHZhciBjcmVhdGVFc2NhcGVyID0gZnVuY3Rpb24obWFwKSB7XG4gICAgdmFyIGVzY2FwZXIgPSBmdW5jdGlvbihtYXRjaCkge1xuICAgICAgcmV0dXJuIG1hcFttYXRjaF07XG4gICAgfTtcbiAgICAvLyBSZWdleGVzIGZvciBpZGVudGlmeWluZyBhIGtleSB0aGF0IG5lZWRzIHRvIGJlIGVzY2FwZWQuXG4gICAgdmFyIHNvdXJjZSA9ICcoPzonICsgXy5rZXlzKG1hcCkuam9pbignfCcpICsgJyknO1xuICAgIHZhciB0ZXN0UmVnZXhwID0gUmVnRXhwKHNvdXJjZSk7XG4gICAgdmFyIHJlcGxhY2VSZWdleHAgPSBSZWdFeHAoc291cmNlLCAnZycpO1xuICAgIHJldHVybiBmdW5jdGlvbihzdHJpbmcpIHtcbiAgICAgIHN0cmluZyA9IHN0cmluZyA9PSBudWxsID8gJycgOiAnJyArIHN0cmluZztcbiAgICAgIHJldHVybiB0ZXN0UmVnZXhwLnRlc3Qoc3RyaW5nKSA/IHN0cmluZy5yZXBsYWNlKHJlcGxhY2VSZWdleHAsIGVzY2FwZXIpIDogc3RyaW5nO1xuICAgIH07XG4gIH07XG4gIF8uZXNjYXBlID0gY3JlYXRlRXNjYXBlcihlc2NhcGVNYXApO1xuICBfLnVuZXNjYXBlID0gY3JlYXRlRXNjYXBlcih1bmVzY2FwZU1hcCk7XG5cbiAgLy8gVHJhdmVyc2VzIHRoZSBjaGlsZHJlbiBvZiBgb2JqYCBhbG9uZyBgcGF0aGAuIElmIGEgY2hpbGQgaXMgYSBmdW5jdGlvbiwgaXRcbiAgLy8gaXMgaW52b2tlZCB3aXRoIGl0cyBwYXJlbnQgYXMgY29udGV4dC4gUmV0dXJucyB0aGUgdmFsdWUgb2YgdGhlIGZpbmFsXG4gIC8vIGNoaWxkLCBvciBgZmFsbGJhY2tgIGlmIGFueSBjaGlsZCBpcyB1bmRlZmluZWQuXG4gIF8ucmVzdWx0ID0gZnVuY3Rpb24ob2JqLCBwYXRoLCBmYWxsYmFjaykge1xuICAgIGlmICghXy5pc0FycmF5KHBhdGgpKSBwYXRoID0gW3BhdGhdO1xuICAgIHZhciBsZW5ndGggPSBwYXRoLmxlbmd0aDtcbiAgICBpZiAoIWxlbmd0aCkge1xuICAgICAgcmV0dXJuIF8uaXNGdW5jdGlvbihmYWxsYmFjaykgPyBmYWxsYmFjay5jYWxsKG9iaikgOiBmYWxsYmFjaztcbiAgICB9XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHByb3AgPSBvYmogPT0gbnVsbCA/IHZvaWQgMCA6IG9ialtwYXRoW2ldXTtcbiAgICAgIGlmIChwcm9wID09PSB2b2lkIDApIHtcbiAgICAgICAgcHJvcCA9IGZhbGxiYWNrO1xuICAgICAgICBpID0gbGVuZ3RoOyAvLyBFbnN1cmUgd2UgZG9uJ3QgY29udGludWUgaXRlcmF0aW5nLlxuICAgICAgfVxuICAgICAgb2JqID0gXy5pc0Z1bmN0aW9uKHByb3ApID8gcHJvcC5jYWxsKG9iaikgOiBwcm9wO1xuICAgIH1cbiAgICByZXR1cm4gb2JqO1xuICB9O1xuXG4gIC8vIEdlbmVyYXRlIGEgdW5pcXVlIGludGVnZXIgaWQgKHVuaXF1ZSB3aXRoaW4gdGhlIGVudGlyZSBjbGllbnQgc2Vzc2lvbikuXG4gIC8vIFVzZWZ1bCBmb3IgdGVtcG9yYXJ5IERPTSBpZHMuXG4gIHZhciBpZENvdW50ZXIgPSAwO1xuICBfLnVuaXF1ZUlkID0gZnVuY3Rpb24ocHJlZml4KSB7XG4gICAgdmFyIGlkID0gKytpZENvdW50ZXIgKyAnJztcbiAgICByZXR1cm4gcHJlZml4ID8gcHJlZml4ICsgaWQgOiBpZDtcbiAgfTtcblxuICAvLyBCeSBkZWZhdWx0LCBVbmRlcnNjb3JlIHVzZXMgRVJCLXN0eWxlIHRlbXBsYXRlIGRlbGltaXRlcnMsIGNoYW5nZSB0aGVcbiAgLy8gZm9sbG93aW5nIHRlbXBsYXRlIHNldHRpbmdzIHRvIHVzZSBhbHRlcm5hdGl2ZSBkZWxpbWl0ZXJzLlxuICBfLnRlbXBsYXRlU2V0dGluZ3MgPSB7XG4gICAgZXZhbHVhdGU6IC88JShbXFxzXFxTXSs/KSU+L2csXG4gICAgaW50ZXJwb2xhdGU6IC88JT0oW1xcc1xcU10rPyklPi9nLFxuICAgIGVzY2FwZTogLzwlLShbXFxzXFxTXSs/KSU+L2dcbiAgfTtcblxuICAvLyBXaGVuIGN1c3RvbWl6aW5nIGB0ZW1wbGF0ZVNldHRpbmdzYCwgaWYgeW91IGRvbid0IHdhbnQgdG8gZGVmaW5lIGFuXG4gIC8vIGludGVycG9sYXRpb24sIGV2YWx1YXRpb24gb3IgZXNjYXBpbmcgcmVnZXgsIHdlIG5lZWQgb25lIHRoYXQgaXNcbiAgLy8gZ3VhcmFudGVlZCBub3QgdG8gbWF0Y2guXG4gIHZhciBub01hdGNoID0gLyguKV4vO1xuXG4gIC8vIENlcnRhaW4gY2hhcmFjdGVycyBuZWVkIHRvIGJlIGVzY2FwZWQgc28gdGhhdCB0aGV5IGNhbiBiZSBwdXQgaW50byBhXG4gIC8vIHN0cmluZyBsaXRlcmFsLlxuICB2YXIgZXNjYXBlcyA9IHtcbiAgICBcIidcIjogXCInXCIsXG4gICAgJ1xcXFwnOiAnXFxcXCcsXG4gICAgJ1xccic6ICdyJyxcbiAgICAnXFxuJzogJ24nLFxuICAgICdcXHUyMDI4JzogJ3UyMDI4JyxcbiAgICAnXFx1MjAyOSc6ICd1MjAyOSdcbiAgfTtcblxuICB2YXIgZXNjYXBlUmVnRXhwID0gL1xcXFx8J3xcXHJ8XFxufFxcdTIwMjh8XFx1MjAyOS9nO1xuXG4gIHZhciBlc2NhcGVDaGFyID0gZnVuY3Rpb24obWF0Y2gpIHtcbiAgICByZXR1cm4gJ1xcXFwnICsgZXNjYXBlc1ttYXRjaF07XG4gIH07XG5cbiAgLy8gSmF2YVNjcmlwdCBtaWNyby10ZW1wbGF0aW5nLCBzaW1pbGFyIHRvIEpvaG4gUmVzaWcncyBpbXBsZW1lbnRhdGlvbi5cbiAgLy8gVW5kZXJzY29yZSB0ZW1wbGF0aW5nIGhhbmRsZXMgYXJiaXRyYXJ5IGRlbGltaXRlcnMsIHByZXNlcnZlcyB3aGl0ZXNwYWNlLFxuICAvLyBhbmQgY29ycmVjdGx5IGVzY2FwZXMgcXVvdGVzIHdpdGhpbiBpbnRlcnBvbGF0ZWQgY29kZS5cbiAgLy8gTkI6IGBvbGRTZXR0aW5nc2Agb25seSBleGlzdHMgZm9yIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5LlxuICBfLnRlbXBsYXRlID0gZnVuY3Rpb24odGV4dCwgc2V0dGluZ3MsIG9sZFNldHRpbmdzKSB7XG4gICAgaWYgKCFzZXR0aW5ncyAmJiBvbGRTZXR0aW5ncykgc2V0dGluZ3MgPSBvbGRTZXR0aW5ncztcbiAgICBzZXR0aW5ncyA9IF8uZGVmYXVsdHMoe30sIHNldHRpbmdzLCBfLnRlbXBsYXRlU2V0dGluZ3MpO1xuXG4gICAgLy8gQ29tYmluZSBkZWxpbWl0ZXJzIGludG8gb25lIHJlZ3VsYXIgZXhwcmVzc2lvbiB2aWEgYWx0ZXJuYXRpb24uXG4gICAgdmFyIG1hdGNoZXIgPSBSZWdFeHAoW1xuICAgICAgKHNldHRpbmdzLmVzY2FwZSB8fCBub01hdGNoKS5zb3VyY2UsXG4gICAgICAoc2V0dGluZ3MuaW50ZXJwb2xhdGUgfHwgbm9NYXRjaCkuc291cmNlLFxuICAgICAgKHNldHRpbmdzLmV2YWx1YXRlIHx8IG5vTWF0Y2gpLnNvdXJjZVxuICAgIF0uam9pbignfCcpICsgJ3wkJywgJ2cnKTtcblxuICAgIC8vIENvbXBpbGUgdGhlIHRlbXBsYXRlIHNvdXJjZSwgZXNjYXBpbmcgc3RyaW5nIGxpdGVyYWxzIGFwcHJvcHJpYXRlbHkuXG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICB2YXIgc291cmNlID0gXCJfX3ArPSdcIjtcbiAgICB0ZXh0LnJlcGxhY2UobWF0Y2hlciwgZnVuY3Rpb24obWF0Y2gsIGVzY2FwZSwgaW50ZXJwb2xhdGUsIGV2YWx1YXRlLCBvZmZzZXQpIHtcbiAgICAgIHNvdXJjZSArPSB0ZXh0LnNsaWNlKGluZGV4LCBvZmZzZXQpLnJlcGxhY2UoZXNjYXBlUmVnRXhwLCBlc2NhcGVDaGFyKTtcbiAgICAgIGluZGV4ID0gb2Zmc2V0ICsgbWF0Y2gubGVuZ3RoO1xuXG4gICAgICBpZiAoZXNjYXBlKSB7XG4gICAgICAgIHNvdXJjZSArPSBcIicrXFxuKChfX3Q9KFwiICsgZXNjYXBlICsgXCIpKT09bnVsbD8nJzpfLmVzY2FwZShfX3QpKStcXG4nXCI7XG4gICAgICB9IGVsc2UgaWYgKGludGVycG9sYXRlKSB7XG4gICAgICAgIHNvdXJjZSArPSBcIicrXFxuKChfX3Q9KFwiICsgaW50ZXJwb2xhdGUgKyBcIikpPT1udWxsPycnOl9fdCkrXFxuJ1wiO1xuICAgICAgfSBlbHNlIGlmIChldmFsdWF0ZSkge1xuICAgICAgICBzb3VyY2UgKz0gXCInO1xcblwiICsgZXZhbHVhdGUgKyBcIlxcbl9fcCs9J1wiO1xuICAgICAgfVxuXG4gICAgICAvLyBBZG9iZSBWTXMgbmVlZCB0aGUgbWF0Y2ggcmV0dXJuZWQgdG8gcHJvZHVjZSB0aGUgY29ycmVjdCBvZmZzZXQuXG4gICAgICByZXR1cm4gbWF0Y2g7XG4gICAgfSk7XG4gICAgc291cmNlICs9IFwiJztcXG5cIjtcblxuICAgIC8vIElmIGEgdmFyaWFibGUgaXMgbm90IHNwZWNpZmllZCwgcGxhY2UgZGF0YSB2YWx1ZXMgaW4gbG9jYWwgc2NvcGUuXG4gICAgaWYgKCFzZXR0aW5ncy52YXJpYWJsZSkgc291cmNlID0gJ3dpdGgob2JqfHx7fSl7XFxuJyArIHNvdXJjZSArICd9XFxuJztcblxuICAgIHNvdXJjZSA9IFwidmFyIF9fdCxfX3A9JycsX19qPUFycmF5LnByb3RvdHlwZS5qb2luLFwiICtcbiAgICAgIFwicHJpbnQ9ZnVuY3Rpb24oKXtfX3ArPV9fai5jYWxsKGFyZ3VtZW50cywnJyk7fTtcXG5cIiArXG4gICAgICBzb3VyY2UgKyAncmV0dXJuIF9fcDtcXG4nO1xuXG4gICAgdmFyIHJlbmRlcjtcbiAgICB0cnkge1xuICAgICAgcmVuZGVyID0gbmV3IEZ1bmN0aW9uKHNldHRpbmdzLnZhcmlhYmxlIHx8ICdvYmonLCAnXycsIHNvdXJjZSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgZS5zb3VyY2UgPSBzb3VyY2U7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cblxuICAgIHZhciB0ZW1wbGF0ZSA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgIHJldHVybiByZW5kZXIuY2FsbCh0aGlzLCBkYXRhLCBfKTtcbiAgICB9O1xuXG4gICAgLy8gUHJvdmlkZSB0aGUgY29tcGlsZWQgc291cmNlIGFzIGEgY29udmVuaWVuY2UgZm9yIHByZWNvbXBpbGF0aW9uLlxuICAgIHZhciBhcmd1bWVudCA9IHNldHRpbmdzLnZhcmlhYmxlIHx8ICdvYmonO1xuICAgIHRlbXBsYXRlLnNvdXJjZSA9ICdmdW5jdGlvbignICsgYXJndW1lbnQgKyAnKXtcXG4nICsgc291cmNlICsgJ30nO1xuXG4gICAgcmV0dXJuIHRlbXBsYXRlO1xuICB9O1xuXG4gIC8vIEFkZCBhIFwiY2hhaW5cIiBmdW5jdGlvbi4gU3RhcnQgY2hhaW5pbmcgYSB3cmFwcGVkIFVuZGVyc2NvcmUgb2JqZWN0LlxuICBfLmNoYWluID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgdmFyIGluc3RhbmNlID0gXyhvYmopO1xuICAgIGluc3RhbmNlLl9jaGFpbiA9IHRydWU7XG4gICAgcmV0dXJuIGluc3RhbmNlO1xuICB9O1xuXG4gIC8vIE9PUFxuICAvLyAtLS0tLS0tLS0tLS0tLS1cbiAgLy8gSWYgVW5kZXJzY29yZSBpcyBjYWxsZWQgYXMgYSBmdW5jdGlvbiwgaXQgcmV0dXJucyBhIHdyYXBwZWQgb2JqZWN0IHRoYXRcbiAgLy8gY2FuIGJlIHVzZWQgT08tc3R5bGUuIFRoaXMgd3JhcHBlciBob2xkcyBhbHRlcmVkIHZlcnNpb25zIG9mIGFsbCB0aGVcbiAgLy8gdW5kZXJzY29yZSBmdW5jdGlvbnMuIFdyYXBwZWQgb2JqZWN0cyBtYXkgYmUgY2hhaW5lZC5cblxuICAvLyBIZWxwZXIgZnVuY3Rpb24gdG8gY29udGludWUgY2hhaW5pbmcgaW50ZXJtZWRpYXRlIHJlc3VsdHMuXG4gIHZhciBjaGFpblJlc3VsdCA9IGZ1bmN0aW9uKGluc3RhbmNlLCBvYmopIHtcbiAgICByZXR1cm4gaW5zdGFuY2UuX2NoYWluID8gXyhvYmopLmNoYWluKCkgOiBvYmo7XG4gIH07XG5cbiAgLy8gQWRkIHlvdXIgb3duIGN1c3RvbSBmdW5jdGlvbnMgdG8gdGhlIFVuZGVyc2NvcmUgb2JqZWN0LlxuICBfLm1peGluID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgXy5lYWNoKF8uZnVuY3Rpb25zKG9iaiksIGZ1bmN0aW9uKG5hbWUpIHtcbiAgICAgIHZhciBmdW5jID0gX1tuYW1lXSA9IG9ialtuYW1lXTtcbiAgICAgIF8ucHJvdG90eXBlW25hbWVdID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBhcmdzID0gW3RoaXMuX3dyYXBwZWRdO1xuICAgICAgICBwdXNoLmFwcGx5KGFyZ3MsIGFyZ3VtZW50cyk7XG4gICAgICAgIHJldHVybiBjaGFpblJlc3VsdCh0aGlzLCBmdW5jLmFwcGx5KF8sIGFyZ3MpKTtcbiAgICAgIH07XG4gICAgfSk7XG4gICAgcmV0dXJuIF87XG4gIH07XG5cbiAgLy8gQWRkIGFsbCBvZiB0aGUgVW5kZXJzY29yZSBmdW5jdGlvbnMgdG8gdGhlIHdyYXBwZXIgb2JqZWN0LlxuICBfLm1peGluKF8pO1xuXG4gIC8vIEFkZCBhbGwgbXV0YXRvciBBcnJheSBmdW5jdGlvbnMgdG8gdGhlIHdyYXBwZXIuXG4gIF8uZWFjaChbJ3BvcCcsICdwdXNoJywgJ3JldmVyc2UnLCAnc2hpZnQnLCAnc29ydCcsICdzcGxpY2UnLCAndW5zaGlmdCddLCBmdW5jdGlvbihuYW1lKSB7XG4gICAgdmFyIG1ldGhvZCA9IEFycmF5UHJvdG9bbmFtZV07XG4gICAgXy5wcm90b3R5cGVbbmFtZV0gPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBvYmogPSB0aGlzLl93cmFwcGVkO1xuICAgICAgbWV0aG9kLmFwcGx5KG9iaiwgYXJndW1lbnRzKTtcbiAgICAgIGlmICgobmFtZSA9PT0gJ3NoaWZ0JyB8fCBuYW1lID09PSAnc3BsaWNlJykgJiYgb2JqLmxlbmd0aCA9PT0gMCkgZGVsZXRlIG9ialswXTtcbiAgICAgIHJldHVybiBjaGFpblJlc3VsdCh0aGlzLCBvYmopO1xuICAgIH07XG4gIH0pO1xuXG4gIC8vIEFkZCBhbGwgYWNjZXNzb3IgQXJyYXkgZnVuY3Rpb25zIHRvIHRoZSB3cmFwcGVyLlxuICBfLmVhY2goWydjb25jYXQnLCAnam9pbicsICdzbGljZSddLCBmdW5jdGlvbihuYW1lKSB7XG4gICAgdmFyIG1ldGhvZCA9IEFycmF5UHJvdG9bbmFtZV07XG4gICAgXy5wcm90b3R5cGVbbmFtZV0gPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBjaGFpblJlc3VsdCh0aGlzLCBtZXRob2QuYXBwbHkodGhpcy5fd3JhcHBlZCwgYXJndW1lbnRzKSk7XG4gICAgfTtcbiAgfSk7XG5cbiAgLy8gRXh0cmFjdHMgdGhlIHJlc3VsdCBmcm9tIGEgd3JhcHBlZCBhbmQgY2hhaW5lZCBvYmplY3QuXG4gIF8ucHJvdG90eXBlLnZhbHVlID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX3dyYXBwZWQ7XG4gIH07XG5cbiAgLy8gUHJvdmlkZSB1bndyYXBwaW5nIHByb3h5IGZvciBzb21lIG1ldGhvZHMgdXNlZCBpbiBlbmdpbmUgb3BlcmF0aW9uc1xuICAvLyBzdWNoIGFzIGFyaXRobWV0aWMgYW5kIEpTT04gc3RyaW5naWZpY2F0aW9uLlxuICBfLnByb3RvdHlwZS52YWx1ZU9mID0gXy5wcm90b3R5cGUudG9KU09OID0gXy5wcm90b3R5cGUudmFsdWU7XG5cbiAgXy5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gU3RyaW5nKHRoaXMuX3dyYXBwZWQpO1xuICB9O1xuXG4gIC8vIEFNRCByZWdpc3RyYXRpb24gaGFwcGVucyBhdCB0aGUgZW5kIGZvciBjb21wYXRpYmlsaXR5IHdpdGggQU1EIGxvYWRlcnNcbiAgLy8gdGhhdCBtYXkgbm90IGVuZm9yY2UgbmV4dC10dXJuIHNlbWFudGljcyBvbiBtb2R1bGVzLiBFdmVuIHRob3VnaCBnZW5lcmFsXG4gIC8vIHByYWN0aWNlIGZvciBBTUQgcmVnaXN0cmF0aW9uIGlzIHRvIGJlIGFub255bW91cywgdW5kZXJzY29yZSByZWdpc3RlcnNcbiAgLy8gYXMgYSBuYW1lZCBtb2R1bGUgYmVjYXVzZSwgbGlrZSBqUXVlcnksIGl0IGlzIGEgYmFzZSBsaWJyYXJ5IHRoYXQgaXNcbiAgLy8gcG9wdWxhciBlbm91Z2ggdG8gYmUgYnVuZGxlZCBpbiBhIHRoaXJkIHBhcnR5IGxpYiwgYnV0IG5vdCBiZSBwYXJ0IG9mXG4gIC8vIGFuIEFNRCBsb2FkIHJlcXVlc3QuIFRob3NlIGNhc2VzIGNvdWxkIGdlbmVyYXRlIGFuIGVycm9yIHdoZW4gYW5cbiAgLy8gYW5vbnltb3VzIGRlZmluZSgpIGlzIGNhbGxlZCBvdXRzaWRlIG9mIGEgbG9hZGVyIHJlcXVlc3QuXG4gIGlmICh0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgIGRlZmluZSgndW5kZXJzY29yZScsIFtdLCBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBfO1xuICAgIH0pO1xuICB9XG59KCkpO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBRUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQU1BO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBdkNBO0FBMkNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUpBO0FBTUE7QUFyREE7QUFDQTtBQUNBO0FBdURBO0FBR0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUNBO0FBRUE7QUFBQTtBQUNBO0FBREE7QUFSQTtBQUNBO0FBV0E7QUFDQTtBQURBO0FBZEE7QUFDQTtBQWtCQTtBQUdBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTNGQTtBQStGQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFsR0E7QUFzR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUhBO0FBQ0E7QUFJQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBakJBO0FBNUdBO0FBQ0E7QUFDQTtBQWdJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU5BO0FBQ0E7QUFRQTtBQUNBO0FBQ0E7QUFEQTtBQURBO0FBQ0E7QUFLQTtBQUNBO0FBREE7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQTNKQTtBQStKQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBdEtBO0FBMEtBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQUtBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUE1TEE7QUFDQTtBQUNBO0FBOExBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBek1BO0FBQ0E7QUFDQTtBQTJNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQVpBO0FBQ0E7QUFjQTtBQUNBO0FBQ0E7QUFGQTtBQS9OQTtBQXNPQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBaFBBO0FBb1BBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQURBO0FBQ0E7QUFFQTtBQTNQQTtBQUNBO0FBQ0E7QUE2UEE7QUFDQTtBQWhRQTtBQW9RQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUE3UUE7QUFpUkE7QUFDQTtBQUNBO0FBREE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBMVJBO0FBOFJBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBbFNBO0FBQ0E7QUFDQTtBQW9TQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBVEE7QUE5U0E7QUFDQTtBQTJUQTtBQUNBO0FBN1RBO0FBaVVBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFuVUE7QUF1VUE7QUFDQTtBQUNBO0FBREE7QUFDQTtBQXpVQTtBQUNBO0FBQ0E7QUEyVUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFQQTtBQVNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUxBO0FBT0E7QUFDQTtBQUFBO0FBbFdBO0FBQ0E7QUFDQTtBQW9XQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQVBBO0FBU0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBTEE7QUFPQTtBQUNBO0FBQUE7QUEzWEE7QUFDQTtBQUNBO0FBNlhBO0FBQ0E7QUFoWUE7QUFvWUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUF0WkE7QUFDQTtBQUNBO0FBd1pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQURBO0FBT0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBYkE7QUE3WkE7QUFDQTtBQUNBO0FBNmFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFGQTtBQUNBO0FBR0E7QUFQQTtBQWhiQTtBQTRiQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBOWJBO0FBa2NBO0FBQ0E7QUFBQTtBQUNBO0FBcGNBO0FBd2NBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFEQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBeGRBO0FBQ0E7QUFDQTtBQTBkQTtBQUNBO0FBQ0E7QUE5ZEE7QUFrZUE7QUFDQTtBQUNBO0FBREE7QUFDQTtBQURBO0FBS0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBaGZBO0FBb2ZBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFDQTtBQXZmQTtBQTJmQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQS9mQTtBQW1nQkE7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBdGdCQTtBQUNBO0FBQ0E7QUF3Z0JBO0FBQ0E7QUEzZ0JBO0FBQ0E7QUFDQTtBQTZnQkE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQVJBO0FBVUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQWppQkE7QUFDQTtBQUNBO0FBbWlCQTtBQUNBO0FBdGlCQTtBQUNBO0FBQ0E7QUF3aUJBO0FBQ0E7QUEzaUJBO0FBK2lCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBNWtCQTtBQWdsQkE7QUFDQTtBQUNBO0FBREE7QUFDQTtBQWxsQkE7QUFzbEJBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBbm1CQTtBQXVtQkE7QUFDQTtBQUNBO0FBREE7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQTFtQkE7QUFnbkJBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUF4bkJBO0FBNG5CQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQTNvQkE7QUFDQTtBQUNBO0FBNm9CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBUEE7QUFocEJBO0FBQ0E7QUFDQTtBQTBwQkE7QUFDQTtBQUdBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUF6cUJBO0FBQ0E7QUFDQTtBQTJxQkE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUxBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQW5CQTtBQTlxQkE7QUFzc0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBL3RCQTtBQW11QkE7QUFDQTtBQUNBO0FBREE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQTN1QkE7QUErdUJBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUF4dkJBO0FBNHZCQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFHQTtBQW53QkE7QUF1d0JBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQVBBO0FBQ0E7QUFRQTtBQVhBO0FBY0E7QUFHQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFweUJBO0FBQ0E7QUF1eUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBQ0E7QUFLQTtBQUNBO0FBaHpCQTtBQW96QkE7QUFDQTtBQUNBO0FBREE7QUFDQTtBQUNBO0FBREE7QUF0ekJBO0FBNHpCQTtBQUNBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQVBBO0FBU0E7QUFDQTtBQUNBO0FBQUE7QUFqQkE7QUFDQTtBQW1CQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBQ0E7QUFLQTtBQTEyQkE7QUE4MkJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBVkE7QUFDQTtBQVlBO0FBQ0E7QUFDQTtBQUZBO0FBQ0E7QUFJQTtBQTM0QkE7QUErNEJBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFDQTtBQWw1QkE7QUFDQTtBQUNBO0FBbzVCQTtBQUNBO0FBQ0E7QUFEQTtBQXY1QkE7QUE2NUJBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUpBO0FBajZCQTtBQUNBO0FBQ0E7QUF3NkJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQTM2QkE7QUFDQTtBQUNBO0FBaTdCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFMQTtBQXI3QkE7QUErN0JBO0FBQ0E7QUFDQTtBQURBO0FBRUE7QUFHQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBMTlCQTtBQTg5QkE7QUFDQTtBQUNBO0FBREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFKQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBdCtCQTtBQUNBO0FBQ0E7QUF3K0JBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUhBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFoL0JBO0FBQ0E7QUFDQTtBQWsvQkE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQTMvQkE7QUErL0JBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBemdDQTtBQTZnQ0E7QUFDQTtBQUNBO0FBREE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQXJoQ0E7QUFDQTtBQUNBO0FBdWhDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQS9oQ0E7QUFtaUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUF6aUNBO0FBQ0E7QUFDQTtBQTJpQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBYkE7QUE5aUNBO0FBQ0E7QUFDQTtBQThqQ0E7QUFHQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBN2tDQTtBQUNBO0FBQ0E7QUEra0NBO0FBQ0E7QUFsbENBO0FBQ0E7QUFDQTtBQW9sQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBdG1DQTtBQUNBO0FBeW1DQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUFBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFBQTtBQXJuQ0E7QUFDQTtBQXduQ0E7QUFHQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQWpvQ0E7QUFDQTtBQUNBO0FBbW9DQTtBQUNBO0FBQ0E7QUF2b0NBO0FBMm9DQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQS9vQ0E7QUFDQTtBQUNBO0FBaXBDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQTNwQ0E7QUFDQTtBQUNBO0FBOHBDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUE1cUNBO0FBQ0E7QUFDQTtBQThxQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBckJBO0FBQ0E7QUF1QkE7QUFDQTtBQUFBO0FBQ0E7QUFHQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFHQTtBQUNBO0FBMUNBO0FBNkNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBdkRBO0FBQ0E7QUFDQTtBQXlEQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUEE7QUFTQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWpGQTtBQUNBO0FBQ0E7QUFrRkE7QUFDQTtBQUNBO0FBdHdDQTtBQUNBO0FBQ0E7QUF3d0NBO0FBQ0E7QUEzd0NBO0FBK3dDQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQW54Q0E7QUFDQTtBQUNBO0FBcXhDQTtBQUNBO0FBeHhDQTtBQTR4Q0E7QUFDQTtBQUNBO0FBREE7QUFDQTtBQTl4Q0E7QUFDQTtBQUNBO0FBZ3lDQTtBQUNBO0FBQ0E7QUFBQTtBQXB5Q0E7QUFDQTtBQUNBO0FBc3lDQTtBQUNBO0FBQ0E7QUFEQTtBQXp5Q0E7QUEreUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQURBO0FBanpDQTtBQXV6Q0E7QUFDQTtBQUNBO0FBREE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQURBO0FBMXpDQTtBQUNBO0FBQ0E7QUE4ekNBO0FBQ0E7QUFqMENBO0FBQ0E7QUFDQTtBQW0wQ0E7QUFDQTtBQXQwQ0E7QUFDQTtBQUNBO0FBdzBDQTtBQUNBO0FBMzBDQTtBQUNBO0FBQ0E7QUE2MENBO0FBQ0E7QUFoMUNBO0FBQ0E7QUFDQTtBQWsxQ0E7QUFDQTtBQXIxQ0E7QUF5MUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQXQyQ0E7QUEwMkNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFoM0NBO0FBQ0E7QUFDQTtBQWszQ0E7QUFDQTtBQXIzQ0E7QUFDQTtBQUNBO0FBdTNDQTtBQUNBO0FBQ0E7QUFEQTtBQURBO0FBQ0E7QUFLQTtBQUdBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBREE7QUF2NENBO0FBQ0E7QUFDQTtBQTI0Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFEQTtBQWo1Q0E7QUF1NUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUExNUNBO0FBQ0E7QUFDQTtBQTg1Q0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBcDZDQTtBQUNBO0FBQ0E7QUFzNkNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBNzZDQTtBQUNBO0FBQ0E7QUErNkNBO0FBQ0E7QUFsN0NBO0FBQ0E7QUFDQTtBQW83Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFOQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFSQTtBQUNBO0FBWUE7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFsK0NBO0FBcytDQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBMStDQTtBQTgrQ0E7QUFDQTtBQUNBO0FBREE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU9BO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7QUFTQTtBQUNBO0FBQ0E7QUFDQTtBQXhnREE7QUE0Z0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFHQTtBQURBO0FBR0E7QUFUQTtBQUNBO0FBQ0E7QUFXQTtBQWJBO0FBZUE7QUFDQTtBQUVBO0FBRUE7QUFJQTtBQUNBO0FBQUE7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBL0NBO0FBQ0E7QUFDQTtBQWlEQTtBQUNBO0FBRUE7QUFya0RBO0FBQ0E7QUFDQTtBQXVrREE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQTVrREE7QUFnbERBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBREE7QUFDQTtBQXZsREE7QUFDQTtBQUNBO0FBeWxEQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFGQTtBQUNBO0FBT0E7QUFwbURBO0FBQ0E7QUFDQTtBQXNtREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBN21EQTtBQUNBO0FBQ0E7QUFvbkRBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFEQTtBQXhuREE7QUFDQTtBQUNBO0FBNG5EQTtBQUNBO0FBL25EQTtBQW1vREE7QUFDQTtBQUNBO0FBREE7QUFDQTtBQUNBO0FBQ0E7QUF2b0RBO0FBMm9EQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFDQTtBQUNBO0FBREE7QUFBQTtBQUdBO0FBcnBEQTtBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/country-data/node_modules/underscore/underscore.js\n");

/***/ }),

/***/ "../node_modules/currency-symbol-map/currency-symbol-map.js":
/*!******************************************************************!*\
  !*** ../node_modules/currency-symbol-map/currency-symbol-map.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = mapSymbol;\n\nvar map = __webpack_require__(/*! ./map */ \"../node_modules/currency-symbol-map/map.js\");\n\nfunction mapSymbol(currencyCode) {\n  if (map.hasOwnProperty(currencyCode)) {\n    return map[currencyCode];\n  } else {\n    return '?';\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2N1cnJlbmN5LXN5bWJvbC1tYXAvY3VycmVuY3ktc3ltYm9sLW1hcC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY3VycmVuY3ktc3ltYm9sLW1hcC9jdXJyZW5jeS1zeW1ib2wtbWFwLmpzP2RiMjUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBtYXBTeW1ib2xcblxudmFyIG1hcCA9IHJlcXVpcmUoJy4vbWFwJylcblxuZnVuY3Rpb24gbWFwU3ltYm9sKGN1cnJlbmN5Q29kZSkge1xuICBpZiAobWFwLmhhc093blByb3BlcnR5KGN1cnJlbmN5Q29kZSkpIHtcbiAgICByZXR1cm4gbWFwW2N1cnJlbmN5Q29kZV1cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gJz8nXG4gIH1cbn0iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/currency-symbol-map/currency-symbol-map.js\n");

/***/ }),

/***/ "../node_modules/currency-symbol-map/map.js":
/*!**************************************************!*\
  !*** ../node_modules/currency-symbol-map/map.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  \"ALL\": \"L\",\n  \"AFN\": \"؋\",\n  \"ARS\": \"$\",\n  \"AWG\": \"ƒ\",\n  \"AUD\": \"$\",\n  \"AZN\": \"₼\",\n  \"BSD\": \"$\",\n  \"BBD\": \"$\",\n  \"BYR\": \"p.\",\n  \"BZD\": \"BZ$\",\n  \"BMD\": \"$\",\n  \"BOB\": \"Bs.\",\n  \"BAM\": \"KM\",\n  \"BWP\": \"P\",\n  \"BGN\": \"лв\",\n  \"BRL\": \"R$\",\n  \"BND\": \"$\",\n  \"KHR\": \"៛\",\n  \"CAD\": \"$\",\n  \"KYD\": \"$\",\n  \"CLP\": \"$\",\n  \"CNY\": \"¥\",\n  \"COP\": \"$\",\n  \"CRC\": \"₡\",\n  \"HRK\": \"kn\",\n  \"CUP\": \"₱\",\n  \"CZK\": \"Kč\",\n  \"DKK\": \"kr\",\n  \"DOP\": \"RD$\",\n  \"XCD\": \"$\",\n  \"EGP\": \"£\",\n  \"SVC\": \"$\",\n  \"EEK\": \"kr\",\n  \"EUR\": \"€\",\n  \"FKP\": \"£\",\n  \"FJD\": \"$\",\n  \"GHC\": \"¢\",\n  \"GIP\": \"£\",\n  \"GTQ\": \"Q\",\n  \"GGP\": \"£\",\n  \"GYD\": \"$\",\n  \"HNL\": \"L\",\n  \"HKD\": \"$\",\n  \"HUF\": \"Ft\",\n  \"ISK\": \"kr\",\n  \"INR\": \"₹\",\n  \"IDR\": \"Rp\",\n  \"IRR\": \"﷼\",\n  \"IMP\": \"£\",\n  \"ILS\": \"₪\",\n  \"JMD\": \"J$\",\n  \"JPY\": \"¥\",\n  \"JEP\": \"£\",\n  \"KES\": \"KSh\",\n  \"KZT\": \"лв\",\n  \"KPW\": \"₩\",\n  \"KRW\": \"₩\",\n  \"KGS\": \"лв\",\n  \"LAK\": \"₭\",\n  \"LVL\": \"Ls\",\n  \"LBP\": \"£\",\n  \"LRD\": \"$\",\n  \"LTL\": \"Lt\",\n  \"MKD\": \"ден\",\n  \"MYR\": \"RM\",\n  \"MUR\": \"₨\",\n  \"MXN\": \"$\",\n  \"MNT\": \"₮\",\n  \"MZN\": \"MT\",\n  \"NAD\": \"$\",\n  \"NPR\": \"₨\",\n  \"ANG\": \"ƒ\",\n  \"NZD\": \"$\",\n  \"NIO\": \"C$\",\n  \"NGN\": \"₦\",\n  \"NOK\": \"kr\",\n  \"OMR\": \"﷼\",\n  \"PKR\": \"₨\",\n  \"PAB\": \"B/.\",\n  \"PYG\": \"Gs\",\n  \"PEN\": \"S/.\",\n  \"PHP\": \"₱\",\n  \"PLN\": \"zł\",\n  \"QAR\": \"﷼\",\n  \"RON\": \"lei\",\n  \"RUB\": \"₽\",\n  \"SHP\": \"£\",\n  \"SAR\": \"﷼\",\n  \"RSD\": \"Дин.\",\n  \"SCR\": \"₨\",\n  \"SGD\": \"$\",\n  \"SBD\": \"$\",\n  \"SOS\": \"S\",\n  \"ZAR\": \"R\",\n  \"LKR\": \"₨\",\n  \"SEK\": \"kr\",\n  \"CHF\": \"CHF\",\n  \"SRD\": \"$\",\n  \"SYP\": \"£\",\n  \"TZS\": \"TSh\",\n  \"TWD\": \"NT$\",\n  \"THB\": \"฿\",\n  \"TTD\": \"TT$\",\n  \"TRY\": \"\",\n  \"TRL\": \"₤\",\n  \"TVD\": \"$\",\n  \"UGX\": \"USh\",\n  \"UAH\": \"₴\",\n  \"GBP\": \"£\",\n  \"USD\": \"$\",\n  \"UYU\": \"$U\",\n  \"UZS\": \"лв\",\n  \"VEF\": \"Bs\",\n  \"VND\": \"₫\",\n  \"YER\": \"﷼\",\n  \"ZWD\": \"Z$\"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL2N1cnJlbmN5LXN5bWJvbC1tYXAvbWFwLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jdXJyZW5jeS1zeW1ib2wtbWFwL21hcC5qcz84MjhlIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID1cbnsgXCJBTExcIjogXCJMXCJcbiwgXCJBRk5cIjogXCLYi1wiXG4sIFwiQVJTXCI6IFwiJFwiXG4sIFwiQVdHXCI6IFwixpJcIlxuLCBcIkFVRFwiOiBcIiRcIlxuLCBcIkFaTlwiOiBcIuKCvFwiXG4sIFwiQlNEXCI6IFwiJFwiXG4sIFwiQkJEXCI6IFwiJFwiXG4sIFwiQllSXCI6IFwicC5cIlxuLCBcIkJaRFwiOiBcIkJaJFwiXG4sIFwiQk1EXCI6IFwiJFwiXG4sIFwiQk9CXCI6IFwiQnMuXCJcbiwgXCJCQU1cIjogXCJLTVwiXG4sIFwiQldQXCI6IFwiUFwiXG4sIFwiQkdOXCI6IFwi0LvQslwiXG4sIFwiQlJMXCI6IFwiUiRcIlxuLCBcIkJORFwiOiBcIiRcIlxuLCBcIktIUlwiOiBcIuGfm1wiXG4sIFwiQ0FEXCI6IFwiJFwiXG4sIFwiS1lEXCI6IFwiJFwiXG4sIFwiQ0xQXCI6IFwiJFwiXG4sIFwiQ05ZXCI6IFwiwqVcIlxuLCBcIkNPUFwiOiBcIiRcIlxuLCBcIkNSQ1wiOiBcIuKCoVwiXG4sIFwiSFJLXCI6IFwia25cIlxuLCBcIkNVUFwiOiBcIuKCsVwiXG4sIFwiQ1pLXCI6IFwiS8SNXCJcbiwgXCJES0tcIjogXCJrclwiXG4sIFwiRE9QXCI6IFwiUkQkXCJcbiwgXCJYQ0RcIjogXCIkXCJcbiwgXCJFR1BcIjogXCLCo1wiXG4sIFwiU1ZDXCI6IFwiJFwiXG4sIFwiRUVLXCI6IFwia3JcIlxuLCBcIkVVUlwiOiBcIuKCrFwiXG4sIFwiRktQXCI6IFwiwqNcIlxuLCBcIkZKRFwiOiBcIiRcIlxuLCBcIkdIQ1wiOiBcIsKiXCJcbiwgXCJHSVBcIjogXCLCo1wiXG4sIFwiR1RRXCI6IFwiUVwiXG4sIFwiR0dQXCI6IFwiwqNcIlxuLCBcIkdZRFwiOiBcIiRcIlxuLCBcIkhOTFwiOiBcIkxcIlxuLCBcIkhLRFwiOiBcIiRcIlxuLCBcIkhVRlwiOiBcIkZ0XCJcbiwgXCJJU0tcIjogXCJrclwiXG4sIFwiSU5SXCI6IFwi4oK5XCJcbiwgXCJJRFJcIjogXCJScFwiXG4sIFwiSVJSXCI6IFwi77e8XCJcbiwgXCJJTVBcIjogXCLCo1wiXG4sIFwiSUxTXCI6IFwi4oKqXCJcbiwgXCJKTURcIjogXCJKJFwiXG4sIFwiSlBZXCI6IFwiwqVcIlxuLCBcIkpFUFwiOiBcIsKjXCJcbiwgXCJLRVNcIjogXCJLU2hcIlxuLCBcIktaVFwiOiBcItC70LJcIlxuLCBcIktQV1wiOiBcIuKCqVwiXG4sIFwiS1JXXCI6IFwi4oKpXCJcbiwgXCJLR1NcIjogXCLQu9CyXCJcbiwgXCJMQUtcIjogXCLigq1cIlxuLCBcIkxWTFwiOiBcIkxzXCJcbiwgXCJMQlBcIjogXCLCo1wiXG4sIFwiTFJEXCI6IFwiJFwiXG4sIFwiTFRMXCI6IFwiTHRcIlxuLCBcIk1LRFwiOiBcItC00LXQvVwiXG4sIFwiTVlSXCI6IFwiUk1cIlxuLCBcIk1VUlwiOiBcIuKCqFwiXG4sIFwiTVhOXCI6IFwiJFwiXG4sIFwiTU5UXCI6IFwi4oKuXCJcbiwgXCJNWk5cIjogXCJNVFwiXG4sIFwiTkFEXCI6IFwiJFwiXG4sIFwiTlBSXCI6IFwi4oKoXCJcbiwgXCJBTkdcIjogXCLGklwiXG4sIFwiTlpEXCI6IFwiJFwiXG4sIFwiTklPXCI6IFwiQyRcIlxuLCBcIk5HTlwiOiBcIuKCplwiXG4sIFwiTk9LXCI6IFwia3JcIlxuLCBcIk9NUlwiOiBcIu+3vFwiXG4sIFwiUEtSXCI6IFwi4oKoXCJcbiwgXCJQQUJcIjogXCJCLy5cIlxuLCBcIlBZR1wiOiBcIkdzXCJcbiwgXCJQRU5cIjogXCJTLy5cIlxuLCBcIlBIUFwiOiBcIuKCsVwiXG4sIFwiUExOXCI6IFwiesWCXCJcbiwgXCJRQVJcIjogXCLvt7xcIlxuLCBcIlJPTlwiOiBcImxlaVwiXG4sIFwiUlVCXCI6IFwi4oK9XCJcbiwgXCJTSFBcIjogXCLCo1wiXG4sIFwiU0FSXCI6IFwi77e8XCJcbiwgXCJSU0RcIjogXCLQlNC40L0uXCJcbiwgXCJTQ1JcIjogXCLigqhcIlxuLCBcIlNHRFwiOiBcIiRcIlxuLCBcIlNCRFwiOiBcIiRcIlxuLCBcIlNPU1wiOiBcIlNcIlxuLCBcIlpBUlwiOiBcIlJcIlxuLCBcIkxLUlwiOiBcIuKCqFwiXG4sIFwiU0VLXCI6IFwia3JcIlxuLCBcIkNIRlwiOiBcIkNIRlwiXG4sIFwiU1JEXCI6IFwiJFwiXG4sIFwiU1lQXCI6IFwiwqNcIlxuLCBcIlRaU1wiOiBcIlRTaFwiXG4sIFwiVFdEXCI6IFwiTlQkXCJcbiwgXCJUSEJcIjogXCLguL9cIlxuLCBcIlRURFwiOiBcIlRUJFwiXG4sIFwiVFJZXCI6IFwiXCJcbiwgXCJUUkxcIjogXCLigqRcIlxuLCBcIlRWRFwiOiBcIiRcIlxuLCBcIlVHWFwiOiBcIlVTaFwiXG4sIFwiVUFIXCI6IFwi4oK0XCJcbiwgXCJHQlBcIjogXCLCo1wiXG4sIFwiVVNEXCI6IFwiJFwiXG4sIFwiVVlVXCI6IFwiJFVcIlxuLCBcIlVaU1wiOiBcItC70LJcIlxuLCBcIlZFRlwiOiBcIkJzXCJcbiwgXCJWTkRcIjogXCLigqtcIlxuLCBcIllFUlwiOiBcIu+3vFwiXG4sIFwiWldEXCI6IFwiWiRcIlxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFuSEEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/currency-symbol-map/map.js\n");

/***/ })

}]);