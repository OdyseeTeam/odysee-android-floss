{"version":3,"file":"1031-2a7f1466929efc04cec6.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/common/card.jsx","webpack://odysee.com/../ui/effects/use-is-visibility-restricted.js","webpack://odysee.com/../ui/hocs/withResolvedClaimRender/view.jsx","webpack://odysee.com/../ui/hocs/withResolvedClaimRender/index.js"],"sourcesContent":["// @flow\nimport type { Node } from 'react';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Icon from 'component/common/icon';\nimport Button from 'component/button';\nimport * as ICONS from 'constants/icons';\n// import twemoji from 'twemoji';\nimport Tooltip from 'component/common/tooltip';\n\ntype Props = {\n  title?: string | Node,\n  subtitle?: string | Node,\n  titleActions?: string | Node,\n  id?: string,\n  body?: string | Node,\n  actions?: string | Node,\n  icon?: string,\n  className?: string,\n  isPageTitle?: boolean,\n  noTitleWrap?: boolean,\n  isBodyList?: boolean,\n  defaultExpand?: boolean,\n  nag?: Node,\n  smallTitle?: boolean,\n  onClick?: () => void,\n  children?: Node,\n  secondPane?: Node,\n  slimHeader?: boolean,\n  background?: boolean,\n  backgroundImage?: string,\n  singlePane?: boolean,\n  headerActions?: Node,\n  gridHeader?: boolean,\n  accessStatus?: string,\n};\n\nfunction Card(props: Props) {\n  const {\n    title,\n    subtitle,\n    titleActions,\n    id,\n    body,\n    actions,\n    icon,\n    className,\n    isPageTitle = false,\n    isBodyList = false,\n    // noTitleWrap = false,\n    smallTitle = false,\n    defaultExpand,\n    nag,\n    onClick,\n    children,\n    secondPane,\n    slimHeader,\n    background,\n    backgroundImage,\n    singlePane,\n    headerActions,\n    accessStatus,\n    gridHeader,\n  } = props;\n\n  const [expanded, setExpanded] = useState(defaultExpand);\n  const expandable = defaultExpand !== undefined;\n\n  return (\n    <section\n      role={onClick ? 'button' : undefined}\n      className={classnames(className, 'card', {\n        'card__multi-pane': Boolean(secondPane),\n        'card--background': background,\n      })}\n      id={id}\n      onClick={(e) => {\n        if (onClick) {\n          onClick();\n          e.stopPropagation();\n        }\n      }}\n    >\n      {backgroundImage && (\n        <div\n          className=\"background\"\n          style={{\n            backgroundImage:\n              'url(https://thumbnails.odycdn.com/optimize/s:390:0/quality:85/plain/' + backgroundImage + ')',\n          }}\n        />\n      )}\n      <FirstPaneWrapper singlePane={singlePane}>\n        {(title || subtitle) && (\n          <div\n            className={classnames('card__header--between', {\n              'card__header--slim': slimHeader,\n              'card__header--grid': gridHeader,\n            })}\n          >\n            <div className={classnames('card__title-section', { 'card__title-section--body-list': isBodyList })}>\n              {icon && <Icon sectionIcon icon={icon} />}\n\n              <div className=\"card__title-text\">\n                <TitleWrapper isPageTitle={isPageTitle} smallTitle={smallTitle} accessStatus={accessStatus}>\n                  {title}\n                </TitleWrapper>\n\n                {subtitle && (\n                  <div className={classnames('card__subtitle', { 'card__subtitle--small': smallTitle })}>\n                    {subtitle}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {(titleActions || expandable) && (\n              <div className=\"card__title-actions-container\">\n                {titleActions && (\n                  <div\n                    className={classnames('card__title-actions', {\n                      'card__title-actions--small': smallTitle,\n                    })}\n                  >\n                    {titleActions}\n                  </div>\n                )}\n                {expandable && (\n                  <div className=\"card__title-actions\">\n                    <Button\n                      button=\"alt\"\n                      aria-expanded={expanded}\n                      aria-label={expanded ? __('Less') : __('More')}\n                      icon={expanded ? ICONS.SUBTRACT : ICONS.ADD}\n                      onClick={() => setExpanded(!expanded)}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n\n            {headerActions}\n          </div>\n        )}\n\n        {(!expandable || (expandable && expanded)) && (\n          <>\n            {body && (\n              <div\n                className={classnames('card__body', {\n                  'card__body--no-title': !title && !subtitle,\n                  'card__body--list': isBodyList,\n                })}\n              >\n                {body}\n              </div>\n            )}\n            {actions && <div className=\"card__main-actions\">{actions}</div>}\n            {children && <div className=\"card__main-actions\">{children}</div>}\n          </>\n        )}\n\n        {nag}\n      </FirstPaneWrapper>\n\n      {secondPane && <div className=\"card__second-pane\">{secondPane}</div>}\n    </section>\n  );\n}\n\ntype FirstPaneProps = {\n  singlePane?: boolean,\n  children: any,\n};\n\nconst FirstPaneWrapper = (props: FirstPaneProps) => {\n  const { singlePane, children } = props;\n\n  return singlePane ? children : <div className=\"card__first-pane\">{children}</div>;\n};\n\ntype TitleProps = {\n  isPageTitle?: boolean,\n  smallTitle?: boolean,\n  children?: any,\n  emoji?: any,\n  accessStatus?: string,\n};\n\nconst TitleWrapper = (props: TitleProps) => {\n  const { isPageTitle, smallTitle, children, accessStatus } = props;\n\n  /*\n  const Twemoji = ({ emoji }) => (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: twemoji.parse(emoji, {\n          folder: 'svg',\n          ext: '.svg',\n        }),\n      }}\n    />\n  );\n  */\n\n  const AccessIndicator = (par: any) => {\n    return (\n      <Tooltip title={__('This is a members-only content')}>\n        <div\n          className={classnames('content-access-indicator', {\n            locked: par.status === 'locked',\n            unlocked: par.status === 'unlocked',\n            purchased: par.status === 'purchased',\n          })}\n        >\n          <Icon icon={par.status === 'locked' ? ICONS.LOCK : ICONS.UNLOCK} />\n        </div>\n      </Tooltip>\n    );\n  };\n\n  /*\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return <Twemoji emoji={children?.props?.children[child]} />;\n      }\n    }\n    return children;\n  }\n  */\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return children?.props?.children[child];\n      }\n    }\n    return children;\n  }\n\n  return isPageTitle ? (\n    <h1 className=\"card__title\">\n      {accessStatus && <AccessIndicator status={accessStatus} />}\n      <font dangerouslySetInnerHTML={{ __html: transformer(children) }} />\n    </h1>\n  ) : (\n    <h2 className={classnames('card__title', { 'card__title--small': smallTitle })}>{children}</h2>\n  );\n};\n\nexport default Card;\n","// @flow\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { VISIBILITY_TAGS } from 'constants/tags';\nimport { getChannelIdFromClaim, getClaimTags } from 'util/claim';\n\n/**\n * Checks is there are any visibility restrictions for the given claim.\n *\n * -- Blocker #1: lack of an access key for an unlisted uri. --\n * The key can be provided 2 ways:\n * 1. From 'signature,signature_ts' URLParams.\n * 2. From a cached valid key (from previous verification).\n *\n * @param claim The stream claim being inspected.fdf\n * @param claimIsMine\n * @param isGlobalMod\n * @param uriAccessKey Cached key to evaluate (will skip the verification call).\n * @param verifyClaimSignature Service call to make the verification.\n * @returns {undefined|boolean} undefined = still pending; boolean = true if we need to restrict, false otherwise.\n */\nexport default function useIsVisibilityRestricted(\n  claim: ?Claim,\n  claimIsMine: ?boolean,\n  isGlobalMod: boolean,\n  uriAccessKey: ?UriAccessKey,\n  verifyClaimSignature: (params: VerifyClaimSignatureParams) => Promise<VerifyClaimSignatureResponse>\n) {\n  const [isRestricted, setIsRestricted] = React.useState(undefined);\n\n  const location = useLocation();\n\n  let accessKey: ?UriAccessKey;\n  if (uriAccessKey) {\n    accessKey = uriAccessKey;\n  } else {\n    const searchParams = new URLSearchParams(location.search);\n    if (searchParams && searchParams.get('signature') && searchParams.get('signature_ts')) {\n      accessKey = {\n        // $FlowIgnore (already filtered null)\n        signature: searchParams.get('signature'),\n        // $FlowIgnore (already filtered null)\n        signature_ts: searchParams.get('signature_ts'),\n      };\n    }\n  }\n\n  React.useEffect(() => {\n    const verify = async () => {\n      if (claim) {\n        const tags = getClaimTags(claim);\n        if (tags && tags.includes(VISIBILITY_TAGS.UNLISTED)) {\n          if (accessKey) {\n            return verifyClaimSignature({\n              channel_id: getChannelIdFromClaim(claim) || claim.claim_id,\n              claim_id: claim.claim_id,\n              signature: accessKey.signature,\n              signing_ts: accessKey.signature_ts,\n            })\n              .then((res: VerifyClaimSignatureResponse) => !res.is_valid) // Verification done\n              .catch(() => true); // Verification process failed, have to block\n          } else {\n            return true; // Signature missing\n          }\n        } else {\n          return false; // No tags found (not an unlisted claim)\n        }\n      } else {\n        return claim === null ? false : undefined; // Invalid claim state\n      }\n    };\n\n    if (claimIsMine || uriAccessKey || isGlobalMod) {\n      setIsRestricted(false);\n    } else {\n      verify().then((res) => setIsRestricted(res));\n    }\n  }, [accessKey, claim, claimIsMine, isGlobalMod, uriAccessKey, verifyClaimSignature]);\n\n  return isRestricted;\n}\n","// @flow\nimport React from 'react';\n\nimport Spinner from 'component/spinner';\nimport Button from 'component/button';\nimport Card from 'component/common/card';\nimport Yrbl from 'component/yrbl';\nimport { parseURI } from 'util/lbryURI';\nimport * as MODALS from 'constants/modal_types';\nimport * as PUBLISH_TYPES from 'constants/publish_types';\nimport useIsVisibilityRestricted from 'effects/use-is-visibility-restricted';\n\ntype Props = {\n  uri: string,\n  delayed?: boolean,\n  Wrapper?: any,\n  ClaimRenderWrapper?: any,\n  // -- redux --\n  claim: ?StreamClaim,\n  hasClaim: ?boolean,\n  isClaimBlackListed: boolean,\n  isClaimFiltered: boolean,\n  claimIsMine: ?boolean,\n  isUnlisted: boolean,\n  isAuthenticated: boolean,\n  isGlobalMod: boolean,\n  uriAccessKey: ?UriAccessKey,\n  geoRestriction: ?GeoRestriction,\n  gblAvailable: boolean,\n  preferEmbed: boolean,\n  verifyClaimSignature: (params: VerifyClaimSignatureParams) => Promise<VerifyClaimSignatureResponse>,\n  doResolveUri: (uri: string, returnCached?: boolean, resolveReposts?: boolean, options?: any) => void,\n  doBeginPublish: (type: PublishType, name: ?string) => void,\n  doOpenModal: (string, {}) => void,\n};\n\n/**\n * HigherOrderComponent to resolve a claim and return the correct states for render, such as loading, failed, restricted, etc\n *\n * @param Component: FunctionalComponentParam\n * @returns {FunctionalComponent}\n */\nconst withResolvedClaimRender = (ClaimRenderComponent: FunctionalComponentParam) => {\n  const ClaimRenderWrapper = (props: Props) => {\n    const {\n      uri,\n      delayed,\n      Wrapper = React.Fragment,\n      ClaimRenderWrapper = React.Fragment,\n      // -- redux --\n      claim,\n      hasClaim,\n      isClaimBlackListed,\n      isClaimFiltered,\n      claimIsMine,\n      isUnlisted,\n      isGlobalMod,\n      isAuthenticated,\n      uriAccessKey,\n      geoRestriction,\n      gblAvailable,\n      preferEmbed,\n      verifyClaimSignature,\n      doResolveUri,\n      doBeginPublish,\n      doOpenModal,\n\n      ...otherProps\n    } = props;\n\n    const { streamName, /* channelName, */ isChannel } = parseURI(uri);\n\n    const claimIsRestricted =\n      !claimIsMine && (geoRestriction !== null || isClaimBlackListed || (isClaimFiltered && !preferEmbed));\n\n    const isVisibilityRestricted = useIsVisibilityRestricted(\n      claim,\n      claimIsMine,\n      isGlobalMod,\n      uriAccessKey,\n      verifyClaimSignature\n    );\n\n    const LoadingSpinner = React.useMemo(\n      () =>\n        ({ text }: { text: string }) =>\n          (\n            <Wrapper>\n              <div className=\"main--empty\">\n                <Spinner delayed={delayed} text={text} />\n              </div>\n            </Wrapper>\n          ),\n      [delayed]\n    );\n\n    const resolveClaim = React.useCallback(\n      () =>\n        doResolveUri(\n          uri,\n          false,\n          true,\n          isAuthenticated ? { include_is_my_output: true, include_purchase_receipt: true } : {}\n        ),\n      [doResolveUri, isAuthenticated, uri]\n    );\n\n    React.useEffect(() => {\n      if (hasClaim === undefined) {\n        resolveClaim();\n      }\n    }, [hasClaim, resolveClaim]);\n\n    if (!hasClaim) {\n      if (hasClaim === undefined) {\n        return <LoadingSpinner text={__('Resolving...')} />;\n      }\n\n      return (\n        <Wrapper>\n          <div className=\"main--empty\">\n            <Yrbl\n              title={isChannel ? __('Channel Not Found') : __('No Content Found')}\n              subtitle={\n                <div className=\"section__actions\">\n                  {!isChannel && (\n                    <Button\n                      button=\"primary\"\n                      // label={__(isChannel ? 'Claim this handle' : 'Publish Something')} -- only support non-channels for now\n                      label={__('Publish Something')}\n                      onClick={() => doBeginPublish(PUBLISH_TYPES.FILE, streamName)}\n                    />\n                  )}\n\n                  {!isChannel && (\n                    <Button\n                      button=\"secondary\"\n                      label={__('Repost Something')}\n                      onClick={() => doOpenModal(MODALS.REPOST, { streamName })}\n                    />\n                  )}\n                </div>\n              }\n            />\n          </div>\n        </Wrapper>\n      );\n    }\n\n    if (claimIsRestricted && geoRestriction === undefined) {\n      if (!gblAvailable) {\n        return (\n          <Wrapper>\n            <div className=\"main--empty\">\n              <Yrbl\n                title={__('Oops! Something went wrong.')}\n                subtitle={\n                  <>\n                    <p>{__(HELP.GBL_NA_LINE_1)}</p>\n                    <p>{__(HELP.GBL_NA_LINE_2)}</p>\n                  </>\n                }\n                type=\"sad\"\n                alwaysShow\n              />\n            </div>\n          </Wrapper>\n        );\n      } else {\n        return <LoadingSpinner text={__('Resolving...')} />;\n      }\n    }\n\n    if (isVisibilityRestricted !== false) {\n      if (isVisibilityRestricted === undefined) {\n        return <LoadingSpinner text={__('Resolving...')} />;\n      }\n\n      return (\n        <Wrapper>\n          <div className=\"main--empty\">\n            <Yrbl\n              title={__(isChannel ? 'Channel unavailable' : 'Content unavailable')}\n              subtitle={__('Reach out to the creator to obtain the full URL for access.')}\n              type=\"sad\"\n              alwaysShow\n            />\n          </div>\n        </Wrapper>\n      );\n    }\n\n    if (claimIsRestricted && isChannel) {\n      if (geoRestriction) {\n        return (\n          <Wrapper>\n            <div className=\"main--empty\">\n              <Yrbl\n                title={__(isChannel ? 'Channel unavailable' : 'Content unavailable')}\n                subtitle={geoRestriction.message ? __(geoRestriction.message) : ''}\n                type=\"sad\"\n                alwaysShow\n              />\n            </div>\n          </Wrapper>\n        );\n      }\n    }\n\n    // -- Channels are handled differently than content\n    if (claimIsRestricted && !isChannel) {\n      if (geoRestriction) {\n        return (\n          <Wrapper>\n            <div className=\"main--empty\">\n              <Yrbl\n                title={__(isChannel ? 'Channel unavailable' : 'Content unavailable')}\n                subtitle={geoRestriction.message ? __(geoRestriction.message) : ''}\n                type=\"sad\"\n                alwaysShow\n              />\n            </div>\n          </Wrapper>\n        );\n      }\n\n      if (isClaimBlackListed) {\n        return (\n          <Wrapper>\n            <div className=\"main--empty\">\n              <Card\n                title={uri}\n                subtitle={__(\n                  'In response to a complaint we received under the US Digital Millennium Copyright Act, we have blocked access to this content from our applications.'\n                )}\n                actions={\n                  <div className=\"section__actions\">\n                    <Button button=\"link\" href=\"https://help.odysee.tv/copyright/\" label={__('Read More')} />\n                  </div>\n                }\n              />\n            </div>\n          </Wrapper>\n        );\n      }\n\n      if (isClaimFiltered && !preferEmbed) {\n        return (\n          <Wrapper>\n            <div className=\"main--empty\">\n              <Card\n                title={uri}\n                subtitle={__('This content violates the terms and conditions of Odysee and has been filtered.')}\n              />\n            </div>\n          </Wrapper>\n        );\n      }\n    }\n\n    return (\n      <React.Suspense fallback={<LoadingSpinner text={__('Loading...')} />}>\n        <ClaimRenderWrapper>\n          <ClaimRenderComponent uri={uri} {...otherProps} />\n        </ClaimRenderWrapper>\n      </React.Suspense>\n    );\n  };\n\n  return ClaimRenderWrapper;\n};\n\n// prettier-ignore\nconst HELP = {\n  GBL_NA_LINE_1: 'It looks like there was a problem with the network connection or one of your extensions is blocking the request.',\n  GBL_NA_LINE_2: 'Please check your internet connection and try again. If the problem persists, email help@odysee.com.',\n};\n\nexport default withResolvedClaimRender;\n","import { connect } from 'react-redux';\nimport Comments from 'comments';\nimport withResolvedClaimRender from './view';\n\nimport { PREFERENCE_EMBED } from 'constants/tags';\nimport { selectIsClaimBlackListedForUri, selectIsClaimFilteredForUri } from 'lbryinc';\n\nimport { selectGblAvailable } from 'redux/selectors/blocked';\nimport {\n  selectClaimForUri,\n  selectHasClaimForUri,\n  selectClaimIsMine,\n  selectGeoRestrictionForUri,\n  selectIsUriUnlisted,\n  makeSelectTagInClaimOrChannelForUri,\n} from 'redux/selectors/claims';\nimport { selectContentStates } from 'redux/selectors/content';\nimport { selectUser, selectUserVerifiedEmail } from 'redux/selectors/user';\n\nimport { doResolveUri } from 'redux/actions/claims';\nimport { doBeginPublish } from 'redux/actions/publish';\nimport { doOpenModal } from 'redux/actions/app';\n\nconst select = (state, props) => {\n  const { uri } = props;\n\n  const claim = selectClaimForUri(state, uri);\n\n  const preferEmbed = makeSelectTagInClaimOrChannelForUri(uri, PREFERENCE_EMBED)(state);\n\n  return {\n    uri,\n    claim,\n    hasClaim: selectHasClaimForUri(state, uri),\n    isClaimBlackListed: selectIsClaimBlackListedForUri(state, uri),\n    isClaimFiltered: selectIsClaimFilteredForUri(state, uri),\n    claimIsMine: selectClaimIsMine(state, claim),\n    isUnlisted: selectIsUriUnlisted(state, uri),\n    isAuthenticated: selectUserVerifiedEmail(state),\n    isGlobalMod: Boolean(selectUser(state)?.global_mod),\n    uriAccessKey: selectContentStates(state).uriAccessKeys[uri],\n    geoRestriction: selectGeoRestrictionForUri(state, uri),\n    gblAvailable: selectGblAvailable(state),\n    preferEmbed,\n    verifyClaimSignature: Comments.verify_claim_signature,\n  };\n};\n\nconst perform = {\n  doResolveUri,\n  doBeginPublish,\n  doOpenModal,\n};\n\nexport default (Component) => connect(select, perform)(withResolvedClaimRender(Component));\n"],"names":["FirstPaneWrapper","props","singlePane","children","React","className","TitleWrapper","isPageTitle","smallTitle","accessStatus","AccessIndicator","par","Tooltip","title","__","classnames","locked","status","unlocked","purchased","Icon","icon","ICONS","dangerouslySetInnerHTML","__html","child","_children$props","_children$props2","_children$props3","transformer","subtitle","titleActions","id","body","actions","_props$isPageTitle","_props$isBodyList","isBodyList","_props$smallTitle","defaultExpand","nag","_onClick","onClick","secondPane","slimHeader","background","backgroundImage","headerActions","gridHeader","_useState2","_slicedToArray","useState","expanded","setExpanded","expandable","undefined","role","Boolean","e","stopPropagation","style","sectionIcon","Button","button","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","arr","Array","isArray","_arrayWithHoles","_i","_s","_e","_x","_r","_arr","_n","_d","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","n","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","len","arr2","useIsVisibilityRestricted","claim","claimIsMine","isGlobalMod","uriAccessKey","verifyClaimSignature","accessKey","_React$useState2","isRestricted","setIsRestricted","location","useLocation","searchParams","URLSearchParams","search","get","signature","signature_ts","verify","_ref","_callee","tags","_context","getClaimTags","includes","VISIBILITY_TAGS","channel_id","getChannelIdFromClaim","claim_id","signing_ts","res","is_valid","args","arguments","apply","HELP","GBL_NA_LINE_1","GBL_NA_LINE_2","ClaimRenderComponent","uri","delayed","_props$Wrapper","Wrapper","_props$ClaimRenderWra","ClaimRenderWrapper","hasClaim","isClaimBlackListed","isClaimFiltered","isUnlisted","isAuthenticated","geoRestriction","gblAvailable","preferEmbed","doResolveUri","doBeginPublish","doOpenModal","otherProps","_objectWithoutProperties","_excluded","_parseURI","parseURI","streamName","isChannel","claimIsRestricted","isVisibilityRestricted","LoadingSpinner","text","Spinner","resolveClaim","include_is_my_output","include_purchase_receipt","Yrbl","label","PUBLISH_TYPES","MODALS","alwaysShow","message","Card","href","fallback","_extends","select","_selectUser","selectClaimForUri","makeSelectTagInClaimOrChannelForUri","PREFERENCE_EMBED","selectHasClaimForUri","selectIsClaimBlackListedForUri","selectIsClaimFilteredForUri","selectClaimIsMine","selectIsUriUnlisted","selectUserVerifiedEmail","selectUser","global_mod","selectContentStates","uriAccessKeys","selectGeoRestrictionForUri","selectGblAvailable","Comments","perform","Component","connect","withResolvedClaimRender"],"sourceRoot":""}