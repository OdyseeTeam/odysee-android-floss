{"version":3,"file":"6148-77519d6e88af2fed95b3.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/claimAuthor/index.js","webpack://odysee.com/../ui/component/claimAuthor/view.jsx","webpack://odysee.com/../ui/component/claimShareButton/view.jsx","webpack://odysee.com/../ui/component/claimShareButton/index.js","webpack://odysee.com/../ui/component/common/help-link.jsx","webpack://odysee.com/../ui/util/format-bytes.js","webpack://odysee.com/../ui/component/fileDetails/view.jsx","webpack://odysee.com/../ui/component/fileDetails/index.js","webpack://odysee.com/../ui/redux/selectors/reactions.js","webpack://odysee.com/../ui/redux/actions/reactions.js","webpack://odysee.com/../ui/component/ratioBar/view.jsx","webpack://odysee.com/../ui/component/ratioBar/index.js","webpack://odysee.com/../ui/component/fileReactions/view.jsx","webpack://odysee.com/../ui/component/fileReactions/index.js","webpack://odysee.com/../ui/component/fileValues/view.jsx","webpack://odysee.com/../ui/component/fileValues/index.js","webpack://odysee.com/../ui/util/number.js"],"sourcesContent":["// @flow\nimport { connect } from 'react-redux';\nimport { selectChannelForClaimUri } from 'redux/selectors/claims';\nimport type { Props } from './view';\nimport ClaimAuthor from './view';\n\nconst select = (state, props) => {\n  const { uri } = props;\n\n  return {\n    channelUri: selectChannelForClaimUri(state, uri),\n  };\n};\n\nexport default connect<_, Props, _, _, _, _>(select, {})(ClaimAuthor);\n","// @flow\nimport * as React from 'react';\nimport ClaimPreview from 'component/claimPreview';\n\nexport type Props = {|\n  uri: ?string,\n  hideActions?: boolean,\n  channelSubCount?: number,\n|};\n\ntype StateProps = {|\n  channelUri: ?string,\n|};\n\ntype DispatchProps = {||};\n\nexport default function ClaimAuthor(props: Props & StateProps & DispatchProps) {\n  const { channelUri, hideActions, channelSubCount } = props;\n\n  return channelUri ? (\n    <ClaimPreview\n      uri={channelUri}\n      type=\"inline\"\n      properties={false}\n      hideMenu\n      hideActions={hideActions}\n      channelSubCount={channelSubCount}\n    />\n  ) : (\n    <span className=\"claim-preview--inline claim-preview__title\">{__('Anonymous')}</span>\n  );\n}\n","// @flow\nimport * as MODALS from 'constants/modal_types';\nimport * as ICONS from 'constants/icons';\nimport React from 'react';\nimport FileActionButton from 'component/common/file-action-button';\nimport Tooltip from 'component/common/tooltip';\nimport { platform } from 'util/platform';\n\n// ****************************************************************************\n// withUnlisted\n// ****************************************************************************\n\nfunction withUnlisted(Component: (props: any) => React$Element<any>) {\n  return function UnlistedShare(props: any) {\n    const { isClaimMine, isUnlisted } = props;\n\n    const [showHint, setShowHint] = React.useState(false);\n\n    const state = React.useMemo(() => {\n      return {\n        open: showHint,\n        onClose: () => setShowHint(false),\n      };\n    }, [showHint]);\n\n    React.useEffect(() => {\n      if (!platform.isMobile() && isUnlisted && isClaimMine) {\n        // Delay to get the anchor positioning right\n        const t = setTimeout(() => setShowHint(true), 1000);\n        return () => clearTimeout(t);\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps -- on mount\n    }, []);\n\n    if (isUnlisted && !isClaimMine) {\n      // The viewer obtains the short URL from the creator. That gets expanded\n      // when viewer, so there's no way to retrieve the short URL unless we\n      // stash it. Limit the button to just creators for now.\n      return null;\n    }\n\n    if (showHint) {\n      return (\n        <Tooltip arrow state={state} title={__('Get a sharable link for your unlisted content.')}>\n          <div onMouseEnter={() => setShowHint(false)}>\n            <Component {...props} />\n          </div>\n        </Tooltip>\n      );\n    }\n\n    return <Component {...props} />;\n  };\n}\n\n// ****************************************************************************\n// ClaimShareButton\n// ****************************************************************************\n\ntype Props = {\n  uri: string,\n  fileAction?: boolean,\n  webShareable: boolean,\n  collectionId?: string,\n  // redux\n  isUnlisted: ?boolean,\n  doOpenModal: (id: string, {}) => void,\n};\n\nfunction ClaimShareButton(props: Props) {\n  const { uri, fileAction, collectionId, webShareable, isUnlisted, doOpenModal } = props;\n\n  const title = isUnlisted ? 'Get a sharable link for your unlisted content.' : 'Share this content';\n\n  return (\n    <FileActionButton\n      title={__(title)}\n      label={__('Share')}\n      icon={ICONS.SHARE}\n      onClick={() => doOpenModal(MODALS.SOCIAL_SHARE, { uri, webShareable, collectionId })}\n      noStyle={!fileAction}\n    />\n  );\n}\n\nexport default withUnlisted(ClaimShareButton);\n","import { connect } from 'react-redux';\nimport ClaimShareButton from './view';\n\nimport { doOpenModal } from 'redux/actions/app';\nimport { selectClaimIsMineForUri, selectIsUriUnlisted } from 'redux/selectors/claims';\n\nconst select = (state, props) => {\n  return {\n    isClaimMine: selectClaimIsMineForUri(state, props.uri),\n    isUnlisted: selectIsUriUnlisted(state, props.uri),\n  };\n};\n\nconst perform = {\n  doOpenModal,\n};\n\nexport default connect(select, perform)(ClaimShareButton);\n","// @flow\nimport * as ICONS from 'constants/icons';\nimport React from 'react';\nimport Button from 'component/button';\n\ntype Props = {\n  href?: string,\n  navigate?: string,\n  icon?: string,\n  iconSize?: number,\n  description?: string,\n};\n\nexport default function HelpLink(props: Props) {\n  const { href, navigate, icon, iconSize, description } = props;\n  return (\n    <Button\n      onClick={(e) => {\n        if (href) {\n          e.stopPropagation();\n        }\n      }}\n      className=\"icon--help\"\n      icon={icon || ICONS.HELP}\n      iconSize={iconSize || 14}\n      title={description || __('Help')}\n      description={description || __('Help')}\n      href={href}\n      navigate={navigate}\n    />\n  );\n}\n","// @flow\nexport function formatBytes(bytes: number, decimals?: number = 2) {\n  if (bytes === 0) return __('0 Bytes');\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = [__('Bytes'), __('KB'), __('MB'), __('GB'), __('TB'), __('PB'), __('EB'), __('ZB'), __('YB')];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n","// @flow\nimport { SIMPLE_SITE } from 'config';\nimport React, { PureComponent } from 'react';\nimport Button from 'component/button';\nimport path from 'path';\nimport { formatBytes } from 'util/format-bytes';\n\ntype Props = {\n  claim: StreamClaim,\n  fileInfo: FileListItem,\n  metadata: StreamMetadata,\n  openFolder: (string) => void,\n  contentType: string,\n  user: ?any,\n};\n\nclass FileDetails extends PureComponent<Props> {\n  render() {\n    const { claim, contentType, fileInfo, metadata, openFolder } = this.props;\n\n    if (!claim || !metadata) {\n      return <span className=\"empty\">{__('Empty claim or metadata info.')}</span>;\n    }\n\n    const { languages, license, license_url } = metadata;\n\n    const mediaType = contentType || 'unknown';\n    const fileSize =\n      metadata.source && metadata.source.size\n        ? formatBytes(metadata.source.size)\n        : fileInfo && fileInfo.download_path && formatBytes(fileInfo.written_bytes);\n    let downloadPath = fileInfo && fileInfo.download_path ? path.normalize(fileInfo.download_path) : null;\n    let downloadNote;\n    // If the path is blank, file is not available. Streamed files won't have any blobs saved\n    // Create path from name so the folder opens on click.\n    if (fileInfo && fileInfo.blobs_completed >= 1 && fileInfo.download_path === null) {\n      downloadPath = `${fileInfo.download_directory}/${fileInfo.file_name}`;\n      downloadNote = __('This file may have been streamed, moved or deleted');\n    }\n\n    return (\n      <>\n        {!SIMPLE_SITE && (\n          <>\n            {languages && (\n              <div className=\"media__details\">\n                <span>{__('Languages')}</span>\n                <span>{languages.join(' ')}</span>\n              </div>\n            )}\n\n            {mediaType && (\n              <div className=\"media__details\">\n                <span>{__('Media Type')}</span>\n                <span>{mediaType}</span>\n              </div>\n            )}\n\n            <div className=\"media__details\">\n              <span>{__('License')}</span>\n              <span>{license}</span>\n            </div>\n\n            {downloadPath && (\n              <div className=\"media__details\">\n                <span>{__('Downloaded to')}</span>\n                <span>\n                  <Button\n                    button=\"link\"\n                    className=\"button--download-link\"\n                    onClick={() => {\n                      if (downloadPath) {\n                        openFolder(downloadPath);\n                      }\n                    }}\n                    label={downloadNote || downloadPath.replace(/(.{10})/g, '$1\\u200b')}\n                  />\n                </span>\n              </div>\n            )}\n          </>\n        )}\n\n        {SIMPLE_SITE && (\n          <>\n            {license !== 'None' && (\n              <div className=\"file-detail\">\n                <span className=\"file-detail__label\">{__('License')}</span>\n                <span className=\"file-detail__value\">{license}</span>\n                {license_url && <span className=\"file-detail__value\">{license_url}</span>}\n              </div>\n            )}\n\n            {fileSize && (\n              <div className=\"file-detail\">\n                <span className=\"file-detail__label\">{__('File size')}</span>\n                <span className=\"file-detail__value\">{fileSize}</span>\n              </div>\n            )}\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default FileDetails;\n","import { connect } from 'react-redux';\nimport { makeSelectContentTypeForUri, makeSelectMetadataForUri, selectClaimForUri } from 'redux/selectors/claims';\nimport { makeSelectFileInfoForUri } from 'redux/selectors/file_info';\nimport { selectUser } from 'redux/selectors/user';\nimport { doOpenFileInFolder } from 'redux/actions/file';\nimport FileDetails from './view';\n\nconst select = (state, props) => ({\n  claim: selectClaimForUri(state, props.uri),\n  contentType: makeSelectContentTypeForUri(props.uri)(state),\n  fileInfo: makeSelectFileInfoForUri(props.uri)(state),\n  metadata: makeSelectMetadataForUri(props.uri)(state),\n  user: selectUser(state),\n});\n\nconst perform = (dispatch) => ({\n  openFolder: (path) => dispatch(doOpenFileInFolder(path)),\n});\n\nexport default connect(select, perform)(FileDetails);\n","import * as REACTION_TYPES from 'constants/reactions';\nimport { selectClaimForUri } from 'redux/selectors/claims';\n\nconst selectState = (state) => state.reactions || {};\n\nexport const selectReactionsById = (state) => selectState(state).reactionsById;\nexport const selectFetchingReactions = (state) => selectState(state).fetchingReactions;\n\nexport const selectReactionsForUri = (state, uri) => {\n  const claim = selectClaimForUri(state, uri);\n  const reactionsById = selectReactionsById(state);\n  return claim ? reactionsById[claim.claim_id] : {};\n};\n\nexport const selectMyReactionForUri = (state, uri) => {\n  const claim = selectClaimForUri(state, uri);\n  const reactions = selectReactionsForUri(state, uri);\n\n  if (!claim || !reactions || !reactions.my_reactions) {\n    return undefined;\n  }\n  const claimId = claim.claim_id;\n\n  const myReactions = reactions.my_reactions[claimId];\n  if (myReactions[REACTION_TYPES.LIKE]) {\n    return REACTION_TYPES.LIKE;\n  } else if (myReactions[REACTION_TYPES.DISLIKE]) {\n    return REACTION_TYPES.DISLIKE;\n  } else {\n    // Ignore other types of reactions for now\n    return undefined;\n  }\n};\n\nexport const selectLikeCountForUri = (state, uri) => {\n  const claim = selectClaimForUri(state, uri);\n  const reactions = selectReactionsForUri(state, uri);\n\n  if (!claim || !reactions || !reactions.my_reactions || !reactions.others_reactions) {\n    return undefined;\n  }\n\n  const claimId = claim.claim_id;\n  let count = 0;\n\n  if (reactions.others_reactions) {\n    const likeCount = reactions.others_reactions[claimId][REACTION_TYPES.LIKE] || 0;\n    count += likeCount;\n  }\n  if (reactions.my_reactions) {\n    const likeCount = reactions.my_reactions[claimId][REACTION_TYPES.LIKE] || 0;\n    count += likeCount;\n  }\n\n  return count;\n};\n\nexport const selectDislikeCountForUri = (state, uri) => {\n  const claim = selectClaimForUri(state, uri);\n  const reactions = selectReactionsForUri(state, uri);\n\n  if (!claim || !reactions || !reactions.my_reactions || !reactions.others_reactions) {\n    return undefined;\n  }\n\n  const claimId = claim.claim_id;\n  let count = 0;\n\n  if (reactions.others_reactions) {\n    const dislikeCount = reactions.others_reactions[claimId][REACTION_TYPES.DISLIKE] || 0;\n    count += dislikeCount;\n  }\n  if (reactions.my_reactions) {\n    const dislikeCount = reactions.my_reactions[claimId][REACTION_TYPES.DISLIKE] || 0;\n    count += dislikeCount;\n  }\n\n  return count;\n};\n","// @flow\nimport { Lbryio } from 'lbryinc';\nimport * as ACTIONS from 'constants/action_types';\nimport * as REACTION_TYPES from 'constants/reactions';\nimport { selectMyReactionForUri } from 'redux/selectors/reactions';\nimport { makeSelectClaimForUri } from 'redux/selectors/claims';\n\nexport const doFetchReactions = (claimId: string) => (dispatch: Dispatch) => {\n  dispatch({ type: ACTIONS.REACTIONS_LIST_STARTED });\n\n  return Lbryio.call('reaction', 'list', { claim_ids: claimId }, 'post')\n    .then((reactions: Array<number>) => {\n      dispatch({ type: ACTIONS.REACTIONS_LIST_COMPLETED, data: { claimId, reactions } });\n    })\n    .catch((error) => {\n      dispatch({ type: ACTIONS.REACTIONS_LIST_FAILED, data: error });\n    });\n};\n\nexport const doReactionLike = (uri: string) => (dispatch: Dispatch, getState: GetState) => {\n  const state = getState();\n  const myReaction = selectMyReactionForUri(state, uri);\n  const claim = makeSelectClaimForUri(uri)(state);\n  const claimId = claim.claim_id;\n  const shouldRemove = myReaction === REACTION_TYPES.LIKE;\n\n  return Lbryio.call(\n    'reaction',\n    'react',\n    {\n      claim_ids: claimId,\n      type: REACTION_TYPES.LIKE,\n      clear_types: REACTION_TYPES.DISLIKE,\n      ...(shouldRemove ? { remove: true } : {}),\n    },\n    'post'\n  )\n    .then(() => {\n      dispatch({ type: ACTIONS.REACTIONS_LIKE_COMPLETED, data: { claimId, shouldRemove } });\n    })\n    .catch((error) => {\n      dispatch({ type: ACTIONS.REACTIONS_NEW_FAILED, data: error });\n    });\n};\n\nexport const doReactionDislike = (uri: string) => (dispatch: Dispatch, getState: GetState) => {\n  const state = getState();\n  const myReaction = selectMyReactionForUri(state, uri);\n  const claim = makeSelectClaimForUri(uri)(state);\n  const claimId = claim.claim_id;\n  const shouldRemove = myReaction === REACTION_TYPES.DISLIKE;\n\n  return Lbryio.call(\n    'reaction',\n    'react',\n    {\n      claim_ids: claimId,\n      type: REACTION_TYPES.DISLIKE,\n      clear_types: REACTION_TYPES.LIKE,\n      ...(shouldRemove ? { remove: true } : {}),\n    },\n    'post'\n  )\n    .then(() => {\n      dispatch({ type: ACTIONS.REACTIONS_DISLIKE_COMPLETED, data: { claimId, shouldRemove } });\n    })\n    .catch((error) => {\n      dispatch({ type: ACTIONS.REACTIONS_NEW_FAILED, data: error });\n    });\n};\n","// @flow\nimport React from 'react';\n\ntype Props = {\n  likeCount: number,\n  dislikeCount: number,\n};\n\nconst RatioBar = (props: Props) => {\n  const { likeCount, dislikeCount } = props;\n\n  const like = (1 / (likeCount + dislikeCount)) * likeCount;\n  if (like || dislikeCount) {\n    return (\n      <div className={'ratio-bar'}>\n        <div className={'ratio-bar-like'} style={{ flex: like }} />\n        <div className={'ratio-bar-dislike'} style={{ flex: 1 - like }} />\n      </div>\n    );\n  } else {\n    return <div className={'ratio-bar'} />;\n  }\n};\n\nexport default RatioBar;\n","import { connect } from 'react-redux';\nimport RatioBar from './view';\n\nconst select = (state, props) => ({});\n\nexport default connect(select)(RatioBar);\n","// @flow\nimport React from 'react';\nimport Skeleton from '@mui/material/Skeleton';\nimport classnames from 'classnames';\nimport * as REACTION_TYPES from 'constants/reactions';\nimport * as ICONS from 'constants/icons';\nimport RatioBar from 'component/ratioBar';\nimport { formatNumberWithCommas } from 'util/number';\nimport FileActionButton from 'component/common/file-action-button';\n\nconst LIVE_REACTION_FETCH_MS = 1000 * 45;\n\ntype Props = {\n  uri: string,\n  // redux\n  claimId?: string,\n  likeCount: number,\n  dislikeCount: number,\n  myReaction: ?string,\n  isLivestreamClaim?: boolean,\n  scheduledState: ClaimScheduledState,\n  doFetchReactions: (claimId: ?string) => void,\n  doReactionLike: (uri: string) => void,\n  doReactionDislike: (uri: string) => void,\n};\n\nexport default function FileReactions(props: Props) {\n  const {\n    uri,\n    claimId,\n    myReaction,\n    likeCount,\n    dislikeCount,\n    isLivestreamClaim,\n    scheduledState,\n    doFetchReactions,\n    doReactionLike,\n    doReactionDislike,\n  } = props;\n\n  React.useEffect(() => {\n    function fetchReactions() {\n      doFetchReactions(claimId);\n    }\n\n    let fetchInterval;\n    if (claimId) {\n      fetchReactions();\n\n      if (isLivestreamClaim) {\n        fetchInterval = setInterval(fetchReactions, LIVE_REACTION_FETCH_MS);\n      }\n    }\n\n    return () => {\n      if (fetchInterval) {\n        clearInterval(fetchInterval);\n      }\n    };\n  }, [claimId, doFetchReactions, isLivestreamClaim]);\n\n  return (\n    <div\n      className={classnames('ratio-wrapper', {\n        'ratio-wrapper--disabled': scheduledState === 'scheduled',\n      })}\n    >\n      <LikeButton myReaction={myReaction} reactionCount={likeCount} onClick={() => doReactionLike(uri)} />\n      <DislikeButton myReaction={myReaction} reactionCount={dislikeCount} onClick={() => doReactionDislike(uri)} />\n      <RatioBar likeCount={likeCount} dislikeCount={dislikeCount} />\n    </div>\n  );\n}\n\nconst Placeholder = <Skeleton variant=\"text\" animation=\"wave\" className=\"reaction-count-placeholder\" />;\n\ntype ButtonProps = {\n  myReaction: ?string,\n  reactionCount: number,\n  onClick: () => void,\n};\n\nconst LikeButton = (props: ButtonProps) => {\n  const { myReaction, reactionCount, onClick } = props;\n\n  return (\n    <FileActionButton\n      title={__('I like this')}\n      requiresAuth\n      authSrc=\"filereaction_like\"\n      className={classnames('button--file-action button-like', {\n        'button--fire': myReaction === REACTION_TYPES.LIKE,\n      })}\n      label={\n        <>\n          {myReaction === REACTION_TYPES.LIKE && (\n            <>\n              <div className=\"button__fire-glow\" />\n              <div className=\"button__fire-particle1\" />\n              <div className=\"button__fire-particle2\" />\n              <div className=\"button__fire-particle3\" />\n              <div className=\"button__fire-particle4\" />\n              <div className=\"button__fire-particle5\" />\n              <div className=\"button__fire-particle6\" />\n            </>\n          )}\n          {Number.isInteger(reactionCount) ? <span>{formatNumberWithCommas(reactionCount, 0)}</span> : Placeholder}\n        </>\n      }\n      iconSize={18}\n      icon={myReaction === REACTION_TYPES.LIKE ? ICONS.FIRE_ACTIVE : ICONS.FIRE}\n      onClick={onClick}\n    />\n  );\n};\n\nconst DislikeButton = (props: ButtonProps) => {\n  const { myReaction, reactionCount, onClick } = props;\n\n  return (\n    <FileActionButton\n      requiresAuth\n      authSrc={'filereaction_dislike'}\n      title={__('I dislike this')}\n      className={classnames('button--file-action button-dislike', {\n        'button--slime': myReaction === REACTION_TYPES.DISLIKE,\n      })}\n      label={\n        <>\n          {myReaction === REACTION_TYPES.DISLIKE && (\n            <>\n              <div className=\"button__slime-stain\" />\n              <div className=\"button__slime-drop1\" />\n              <div className=\"button__slime-drop2\" />\n            </>\n          )}\n          {Number.isInteger(reactionCount) ? <span>{formatNumberWithCommas(reactionCount, 0)}</span> : Placeholder}\n        </>\n      }\n      iconSize={18}\n      icon={myReaction === REACTION_TYPES.DISLIKE ? ICONS.SLIME_ACTIVE : ICONS.SLIME}\n      onClick={onClick}\n    />\n  );\n};\n","import { connect } from 'react-redux';\nimport { selectMyReactionForUri, selectLikeCountForUri, selectDislikeCountForUri } from 'redux/selectors/reactions';\nimport { doFetchReactions, doReactionLike, doReactionDislike } from 'redux/actions/reactions';\nimport FileReactions from './view';\nimport {\n  selectClaimForUri,\n  selectIsStreamPlaceholderForUri,\n  selectClaimIsMine,\n  selectScheduledStateForUri,\n} from 'redux/selectors/claims';\n\nconst select = (state, props) => {\n  const { uri } = props;\n\n  const claim = selectClaimForUri(state, uri);\n\n  const { claim_id: claimId } = claim || {};\n\n  return {\n    myReaction: selectMyReactionForUri(state, uri),\n    likeCount: selectLikeCountForUri(state, uri),\n    dislikeCount: selectDislikeCountForUri(state, uri),\n    isLivestreamClaim: selectIsStreamPlaceholderForUri(state, uri),\n    claimId,\n    claimIsMine: selectClaimIsMine(state, claim),\n    scheduledState: selectScheduledStateForUri(state, uri),\n  };\n};\n\nconst perform = {\n  doFetchReactions,\n  doReactionLike,\n  doReactionDislike,\n};\n\nexport default connect(select, perform)(FileReactions);\n","// @flow\nimport * as ICONS from 'constants/icons';\nimport * as MODALS from 'constants/modal_types';\nimport * as PAGES from 'constants/pages';\nimport React, { PureComponent } from 'react';\nimport Button from 'component/button';\nimport Spinner from 'component/spinner';\nimport HelpLink from 'component/common/help-link';\nimport CreditAmount from 'component/common/credit-amount';\n\ntype Props = {\n  uri: string,\n  claim: StreamClaim,\n  fileInfo: FileListItem,\n  metadata: StreamMetadata,\n  openFolder: (string) => void,\n  contentType: string,\n  user: ?any,\n  pendingAmount: string,\n  openModal: (id: string, { uri: string }) => void,\n  claimIsMine: boolean,\n};\n\nclass FileValues extends PureComponent<Props> {\n  render() {\n    const { uri, claim, metadata, openModal, pendingAmount, claimIsMine } = this.props;\n    if (!claim || !metadata) {\n      return <span className=\"empty\">{__('Empty claim or metadata info.')}</span>;\n    }\n    const supportsAmount = claim && claim.meta && claim.meta.support_amount && Number(claim.meta.support_amount);\n    const purchaseReceipt = claim && claim.purchase_receipt;\n\n    return (\n      <table className=\"table table--condensed table--fixed table--lbc-details\">\n        <tbody>\n          <tr>\n            <td>{__('LBRY URL')}</td>\n            <td>{claim.canonical_url}</td>\n          </tr>\n          <tr>\n            <td>{__('Claim ID')}</td>\n            <td>{claim.claim_id}</td>\n          </tr>\n          {purchaseReceipt && (\n            <tr>\n              <td> {__('Purchase Amount')}</td>\n              <td>\n                <Button\n                  button=\"link\"\n                  href={`https://explorer.lbry.com/tx/${purchaseReceipt.txid}`}\n                  label={<CreditAmount amount={Number(purchaseReceipt.amount)} precision={2} />}\n                />\n              </td>\n            </tr>\n          )}\n          <tr>\n            <td> {__('Original Publish Amount')}</td>\n            <td>{claim && claim.amount ? <CreditAmount amount={Number(claim.amount)} precision={2} /> : <p>...</p>}</td>\n          </tr>\n          <tr>\n            <td>\n              {__('Supports and Tips')}\n              <HelpLink href=\"https://help.odysee.tv/category-monetization/\" />\n            </td>\n            <td>\n              {claimIsMine && !pendingAmount && Boolean(supportsAmount) && (\n                <>\n                  <Button\n                    button=\"link\"\n                    className=\"expandable__button\"\n                    icon={ICONS.UNLOCK}\n                    label={<CreditAmount amount={Number(supportsAmount)} precision={2} />}\n                    aria-label={__('Unlock tips')}\n                    onClick={() => {\n                      openModal(MODALS.LIQUIDATE_SUPPORTS, { uri });\n                    }}\n                  />{' '}\n                </>\n              )}\n              {(!claimIsMine || (claimIsMine && !pendingAmount && supportsAmount === 0)) && (\n                <CreditAmount amount={Number(supportsAmount)} precision={2} />\n              )}\n\n              {claimIsMine && pendingAmount && <Spinner type={'small'} />}\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div>\n                {__('Total Staked Amount')}\n                <HelpLink href=\"https://help.odysee.tv/category-blockchain/category-staking/increase/\" />\n              </div>\n            </td>\n            <td>\n              <CreditAmount amount={Number(claim.meta.effective_amount) || 0} precision={2} />\n            </td>\n          </tr>\n          <tr>\n            <td>\n              {__('Community Choice?')}\n              <HelpLink href=\"https://help.odysee.tv/category-blockchain/category-staking/naming/\" />\n            </td>\n            <td>\n              <Button\n                button=\"link\"\n                label={claim.meta.is_controlling ? __('Yes') : __('No')}\n                navigate={`/$/${PAGES.TOP}?name=${claim.name}`}\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default FileValues;\n","import { connect } from 'react-redux';\nimport {\n  selectClaimForUri,\n  makeSelectContentTypeForUri,\n  makeSelectMetadataForUri,\n  selectClaimIsMine,\n} from 'redux/selectors/claims';\nimport { makeSelectPendingAmountByUri } from 'redux/selectors/wallet';\nimport { makeSelectFileInfoForUri } from 'redux/selectors/file_info';\nimport { selectUser } from 'redux/selectors/user';\nimport { doOpenModal } from 'redux/actions/app';\n\nimport FileValues from './view';\n\nconst select = (state, props) => {\n  const claim = selectClaimForUri(state, props.uri);\n\n  return {\n    claim,\n    contentType: makeSelectContentTypeForUri(props.uri)(state),\n    fileInfo: makeSelectFileInfoForUri(props.uri)(state),\n    metadata: makeSelectMetadataForUri(props.uri)(state),\n    user: selectUser(state),\n    pendingAmount: makeSelectPendingAmountByUri(props.uri)(state),\n    claimIsMine: selectClaimIsMine(state, claim),\n  };\n};\n\nconst perform = (dispatch) => ({\n  openModal: (modal, props) => dispatch(doOpenModal(modal, props)),\n});\n\nexport default connect(select, perform)(FileValues);\n","// @flow\n\nexport function formatNumberWithCommas(num: number, numberOfDigits?: number): string {\n  return num.toLocaleString('en', { minimumFractionDigits: numberOfDigits !== undefined ? numberOfDigits : 8 });\n}\n"],"names":["connect","state","props","uri","channelUri","selectChannelForClaimUri","hideActions","channelSubCount","React","ClaimPreview","type","properties","hideMenu","className","__","Component","fileAction","collectionId","webShareable","isUnlisted","doOpenModal","title","FileActionButton","label","icon","ICONS","onClick","MODALS","noStyle","isClaimMine","_React$useState2","_slicedToArray","showHint","setShowHint","open","onClose","platform","t","setTimeout","clearTimeout","Tooltip","arrow","onMouseEnter","perform","selectClaimIsMineForUri","selectIsUriUnlisted","ClaimShareButton","HelpLink","href","navigate","iconSize","description","Button","e","stopPropagation","formatBytes","bytes","decimals","arguments","length","undefined","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","_PureComponent","_inherits","FileDetails","_super","_createSuper","_classCallCheck","apply","key","value","_this$props","this","claim","contentType","fileInfo","metadata","openFolder","downloadNote","languages","license","license_url","mediaType","fileSize","source","size","download_path","written_bytes","downloadPath","path","blobs_completed","concat","download_directory","file_name","SIMPLE_SITE","join","button","replace","PureComponent","selectClaimForUri","makeSelectContentTypeForUri","makeSelectFileInfoForUri","makeSelectMetadataForUri","user","selectUser","dispatch","doOpenFileInFolder","selectState","reactions","selectReactionsForUri","reactionsById","selectReactionsById","claim_id","selectMyReactionForUri","my_reactions","claimId","myReactions","REACTION_TYPES","selectLikeCountForUri","others_reactions","count","selectDislikeCountForUri","likeCount","dislikeCount","like","style","flex","RatioBar","LIVE_REACTION_FETCH_MS","Placeholder","Skeleton","variant","animation","LikeButton","myReaction","reactionCount","requiresAuth","authSrc","classnames","Number","isInteger","formatNumberWithCommas","DislikeButton","doFetchReactions","ACTIONS","Lbryio","claim_ids","then","data","error","doReactionLike","getState","makeSelectClaimForUri","shouldRemove","_objectSpread","clear_types","remove","doReactionDislike","isLivestreamClaim","selectIsStreamPlaceholderForUri","claimIsMine","selectClaimIsMine","scheduledState","selectScheduledStateForUri","fetchReactions","fetchInterval","setInterval","clearInterval","FileValues","openModal","pendingAmount","supportsAmount","meta","support_amount","purchaseReceipt","purchase_receipt","canonical_url","txid","CreditAmount","amount","precision","Boolean","Spinner","effective_amount","is_controlling","PAGES","name","makeSelectPendingAmountByUri","modal","num","numberOfDigits","toLocaleString","minimumFractionDigits"],"sourceRoot":""}