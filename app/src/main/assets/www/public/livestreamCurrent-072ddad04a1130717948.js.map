{"version":3,"file":"livestreamCurrent-072ddad04a1130717948.js","mappings":"mOAUMA,EAAU,CACdC,oCAAAA,EAAAA,IAGF,SAAeC,EAAAA,EAAAA,KATA,SAACC,GAAK,MAAM,CACzBC,sBAAsBC,EAAAA,EAAAA,IAAmCF,GACzDG,2BAA2BC,EAAAA,EAAAA,IAAkCJ,GAC9D,GAM8BH,EAA/B,ECFe,SAAwBQ,GACrC,IAAQJ,EAAyFI,EAAzFJ,qBAAsBE,EAAmEE,EAAnEF,0BAA2BL,EAAwCO,EAAxCP,oCAmBzD,OAjBAQ,EAAAA,WAAgB,WACdR,IAMA,IAAMS,EAAgBC,YACpBV,EACAW,EAAAA,GAA2C,IAE7C,OAAO,WACLC,cAAcH,EAChB,CAEF,GAAG,IAECJ,EAEAG,EAAAA,cAAA,OAAKK,UAAU,eACbL,EAAAA,cAACM,EAAAA,EAAO,CAACC,SAAO,KAKfP,EAAAA,cAACQ,EAAAA,EAAS,CAACC,KAAMd,EAAsBe,oBAAkB,EAACC,YAAU,GAC7E,I,kDCjCA,SAAelB,EAAAA,EAAAA,KAJA,SAACC,GAAK,MAAM,CACzBkB,MAAMC,EAAAA,EAAAA,IAAWnB,GAClB,GAED,ECGe,SAA+BK,GAC5C,IAAQa,EAASb,EAATa,KACFE,EAAUC,kBAAYC,qBAAwBJ,GAAQA,EAAKK,WAEjE,OACEjB,EAAAA,cAACkB,EAAAA,EAAI,KACFJ,EACCd,EAAAA,cAACmB,EAAc,MAEfnB,EAAAA,cAACoB,EAAAA,EAAI,CACHC,KAAK,MACLC,MAAOC,EAAG,+BACVC,SAAUD,EAAG,qBACbE,QACEzB,EAAAA,cAAA,OAAKK,UAAU,oBACbL,EAAAA,cAAC0B,EAAAA,QAAM,CAACC,OAAO,UAAUC,SAAS,IAAIC,MAAON,EAAG,gBAO9D,G","sources":["webpack://odysee.com/../ui/component/livestreamList/index.js","webpack://odysee.com/../ui/component/livestreamList/view.jsx","webpack://odysee.com/../ui/page/livestreamCurrent/index.js","webpack://odysee.com/../ui/page/livestreamCurrent/view.jsx"],"sourcesContent":["import LivestreamList from './view';\nimport { connect } from 'react-redux';\nimport { doFetchAllActiveLivestreamsForQuery } from 'redux/actions/livestream';\nimport { selectFilteredActiveLivestreamUris, selectIsFetchingActiveLivestreams } from 'redux/selectors/livestream';\n\nconst select = (state) => ({\n  activeLivestreamUris: selectFilteredActiveLivestreamUris(state),\n  fetchingActiveLivestreams: selectIsFetchingActiveLivestreams(state),\n});\n\nconst perform = {\n  doFetchAllActiveLivestreamsForQuery,\n};\n\nexport default connect(select, perform)(LivestreamList);\n","// @flow\nimport React from 'react';\nimport ClaimList from 'component/claimList';\nimport Spinner from 'component/spinner';\nimport { FETCH_ACTIVE_LIVESTREAMS_MIN_INTERVAL_MS } from 'constants/livestream';\n\ntype Props = {\n  activeLivestreamUris: ?Array<string>,\n  fetchingActiveLivestreams: boolean,\n  doFetchAllActiveLivestreamsForQuery: () => void,\n};\n\nexport default function LivestreamList(props: Props) {\n  const { activeLivestreamUris, fetchingActiveLivestreams, doFetchAllActiveLivestreamsForQuery } = props;\n\n  React.useEffect(() => {\n    doFetchAllActiveLivestreamsForQuery();\n\n    // doFetchAllActiveLivestreamsForQuery is currently limited to 5 minutes per fetch as\n    // a global default. If we want more frequent updates (say, to update the\n    // view count), we can either change that limit, or add a 'force' parameter\n    // to doFetchAllActiveLivestreamsForQuery to override selectively.\n    const fetchInterval = setInterval(\n      doFetchAllActiveLivestreamsForQuery,\n      FETCH_ACTIVE_LIVESTREAMS_MIN_INTERVAL_MS + 50\n    );\n    return () => {\n      clearInterval(fetchInterval);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- on mount only\n  }, []);\n\n  if (fetchingActiveLivestreams) {\n    return (\n      <div className=\"main--empty\">\n        <Spinner delayed />\n      </div>\n    );\n  }\n\n  return <ClaimList uris={activeLivestreamUris} showNoSourceClaims tileLayout />;\n}\n","import { connect } from 'react-redux';\nimport { selectUser } from 'redux/selectors/user';\nimport LivestreamCurrent from './view';\n\nconst select = (state) => ({\n  user: selectUser(state),\n});\n\nexport default connect(select)(LivestreamCurrent);\n","// @flow\nimport React from 'react';\nimport LivestreamList from 'component/livestreamList';\nimport Button from 'component/button';\nimport Page from 'component/page';\nimport Yrbl from 'component/yrbl';\n\ntype Props = {\n  user: ?User,\n};\n\nexport default function LivestreamCurrentPage(props: Props) {\n  const { user } = props;\n  const canView = process.env.ENABLE_WIP_FEATURES || (user && user.global_mod);\n\n  return (\n    <Page>\n      {canView ? (\n        <LivestreamList />\n      ) : (\n        <Yrbl\n          type=\"sad\"\n          title={__(\"This page isn't quite ready\")}\n          subtitle={__('Check back later.')}\n          actions={\n            <div className=\"section__actions\">\n              <Button button=\"primary\" navigate=\"/\" label={__('Go Home')} />\n            </div>\n          }\n        />\n      )}\n    </Page>\n  );\n}\n"],"names":["perform","doFetchAllActiveLivestreamsForQuery","connect","state","activeLivestreamUris","selectFilteredActiveLivestreamUris","fetchingActiveLivestreams","selectIsFetchingActiveLivestreams","props","React","fetchInterval","setInterval","FETCH_ACTIVE_LIVESTREAMS_MIN_INTERVAL_MS","clearInterval","className","Spinner","delayed","ClaimList","uris","showNoSourceClaims","tileLayout","user","selectUser","canView","process","ENABLE_WIP_FEATURES","global_mod","Page","LivestreamList","Yrbl","type","title","__","subtitle","actions","Button","button","navigate","label"],"sourceRoot":""}