{"version":3,"file":"receive-26ff35f9b3b420d6c648.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/common/card.jsx","webpack://odysee.com/../ui/component/common/qr-code.jsx","webpack://odysee.com/../ui/component/copyableText/index.js","webpack://odysee.com/../ui/component/copyableText/view.jsx","webpack://odysee.com/../ui/component/walletAddress/view.jsx","webpack://odysee.com/../ui/component/walletAddress/index.js","webpack://odysee.com/../ui/page/receive/index.js","webpack://odysee.com/../ui/page/receive/view.jsx"],"sourcesContent":["// @flow\nimport type { Node } from 'react';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Icon from 'component/common/icon';\nimport Button from 'component/button';\nimport * as ICONS from 'constants/icons';\n// import twemoji from 'twemoji';\nimport Tooltip from 'component/common/tooltip';\n\ntype Props = {\n  title?: string | Node,\n  subtitle?: string | Node,\n  titleActions?: string | Node,\n  id?: string,\n  body?: string | Node,\n  actions?: string | Node,\n  icon?: string,\n  className?: string,\n  isPageTitle?: boolean,\n  noTitleWrap?: boolean,\n  isBodyList?: boolean,\n  defaultExpand?: boolean,\n  nag?: Node,\n  smallTitle?: boolean,\n  onClick?: () => void,\n  children?: Node,\n  secondPane?: Node,\n  slimHeader?: boolean,\n  background?: boolean,\n  backgroundImage?: string,\n  singlePane?: boolean,\n  headerActions?: Node,\n  gridHeader?: boolean,\n  accessStatus?: string,\n};\n\nfunction Card(props: Props) {\n  const {\n    title,\n    subtitle,\n    titleActions,\n    id,\n    body,\n    actions,\n    icon,\n    className,\n    isPageTitle = false,\n    isBodyList = false,\n    // noTitleWrap = false,\n    smallTitle = false,\n    defaultExpand,\n    nag,\n    onClick,\n    children,\n    secondPane,\n    slimHeader,\n    background,\n    backgroundImage,\n    singlePane,\n    headerActions,\n    accessStatus,\n    gridHeader,\n  } = props;\n\n  const [expanded, setExpanded] = useState(defaultExpand);\n  const expandable = defaultExpand !== undefined;\n\n  return (\n    <section\n      role={onClick ? 'button' : undefined}\n      className={classnames(className, 'card', {\n        'card__multi-pane': Boolean(secondPane),\n        'card--background': background,\n      })}\n      id={id}\n      onClick={(e) => {\n        if (onClick) {\n          onClick();\n          e.stopPropagation();\n        }\n      }}\n    >\n      {backgroundImage && (\n        <div\n          className=\"background\"\n          style={{\n            backgroundImage:\n              'url(https://thumbnails.odycdn.com/optimize/s:390:0/quality:85/plain/' + backgroundImage + ')',\n          }}\n        />\n      )}\n      <FirstPaneWrapper singlePane={singlePane}>\n        {(title || subtitle) && (\n          <div\n            className={classnames('card__header--between', {\n              'card__header--slim': slimHeader,\n              'card__header--grid': gridHeader,\n            })}\n          >\n            <div className={classnames('card__title-section', { 'card__title-section--body-list': isBodyList })}>\n              {icon && <Icon sectionIcon icon={icon} />}\n\n              <div className=\"card__title-text\">\n                <TitleWrapper isPageTitle={isPageTitle} smallTitle={smallTitle} accessStatus={accessStatus}>\n                  {title}\n                </TitleWrapper>\n\n                {subtitle && (\n                  <div className={classnames('card__subtitle', { 'card__subtitle--small': smallTitle })}>\n                    {subtitle}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {(titleActions || expandable) && (\n              <div className=\"card__title-actions-container\">\n                {titleActions && (\n                  <div\n                    className={classnames('card__title-actions', {\n                      'card__title-actions--small': smallTitle,\n                    })}\n                  >\n                    {titleActions}\n                  </div>\n                )}\n                {expandable && (\n                  <div className=\"card__title-actions\">\n                    <Button\n                      button=\"alt\"\n                      aria-expanded={expanded}\n                      aria-label={expanded ? __('Less') : __('More')}\n                      icon={expanded ? ICONS.SUBTRACT : ICONS.ADD}\n                      onClick={() => setExpanded(!expanded)}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n\n            {headerActions}\n          </div>\n        )}\n\n        {(!expandable || (expandable && expanded)) && (\n          <>\n            {body && (\n              <div\n                className={classnames('card__body', {\n                  'card__body--no-title': !title && !subtitle,\n                  'card__body--list': isBodyList,\n                })}\n              >\n                {body}\n              </div>\n            )}\n            {actions && <div className=\"card__main-actions\">{actions}</div>}\n            {children && <div className=\"card__main-actions\">{children}</div>}\n          </>\n        )}\n\n        {nag}\n      </FirstPaneWrapper>\n\n      {secondPane && <div className=\"card__second-pane\">{secondPane}</div>}\n    </section>\n  );\n}\n\ntype FirstPaneProps = {\n  singlePane?: boolean,\n  children: any,\n};\n\nconst FirstPaneWrapper = (props: FirstPaneProps) => {\n  const { singlePane, children } = props;\n\n  return singlePane ? children : <div className=\"card__first-pane\">{children}</div>;\n};\n\ntype TitleProps = {\n  isPageTitle?: boolean,\n  smallTitle?: boolean,\n  children?: any,\n  emoji?: any,\n  accessStatus?: string,\n};\n\nconst TitleWrapper = (props: TitleProps) => {\n  const { isPageTitle, smallTitle, children, accessStatus } = props;\n\n  /*\n  const Twemoji = ({ emoji }) => (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: twemoji.parse(emoji, {\n          folder: 'svg',\n          ext: '.svg',\n        }),\n      }}\n    />\n  );\n  */\n\n  const AccessIndicator = (par: any) => {\n    return (\n      <Tooltip title={__('This is a members-only content')}>\n        <div\n          className={classnames('content-access-indicator', {\n            locked: par.status === 'locked',\n            unlocked: par.status === 'unlocked',\n            purchased: par.status === 'purchased',\n          })}\n        >\n          <Icon icon={par.status === 'locked' ? ICONS.LOCK : ICONS.UNLOCK} />\n        </div>\n      </Tooltip>\n    );\n  };\n\n  /*\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return <Twemoji emoji={children?.props?.children[child]} />;\n      }\n    }\n    return children;\n  }\n  */\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return children?.props?.children[child];\n      }\n    }\n    return children;\n  }\n\n  return isPageTitle ? (\n    <h1 className=\"card__title\">\n      {accessStatus && <AccessIndicator status={accessStatus} />}\n      <font dangerouslySetInnerHTML={{ __html: transformer(children) }} />\n    </h1>\n  ) : (\n    <h2 className={classnames('card__title', { 'card__title--small': smallTitle })}>{children}</h2>\n  );\n};\n\nexport default Card;\n","// @flow\nimport React from 'react';\nimport classnames from 'classnames';\nimport ReactQrCode from 'qrcode.react';\n\ntype Props = {\n  value: string,\n  paddingRight?: boolean,\n  paddingTop?: boolean,\n};\n\nclass QRCode extends React.Component<Props> {\n  static defaultProps = {\n    paddingRight: false,\n    paddingTop: false,\n  };\n\n  render() {\n    const { value, paddingRight, paddingTop } = this.props;\n    return (\n      <div\n        className={classnames('qr-code', {\n          'qr-code--right-padding': paddingRight,\n          'qr-code--top-padding': paddingTop,\n        })}\n      >\n        <ReactQrCode value={value} />\n      </div>\n    );\n  }\n}\n\nexport default QRCode;\n","import { connect } from 'react-redux';\nimport { doToast } from 'redux/actions/notifications';\nimport CopyableText from './view';\n\nexport default connect(null, {\n  doToast,\n})(CopyableText);\n","// @flow\nimport * as ICONS from 'constants/icons';\nimport { FormField } from 'component/common/form';\nimport Button from 'component/button';\nimport React, { useRef } from 'react';\n\ntype Props = {\n  copyable: string,\n  onlyCopy: boolean,\n  snackMessage: ?string,\n  doToast: ({ message: string }) => void,\n  label?: string,\n  primaryButton?: boolean,\n  name?: string,\n  onCopy?: (string) => string,\n  enableInputMask?: boolean,\n};\n\nexport default function CopyableText(props: Props) {\n  const {\n    copyable,\n    onlyCopy,\n    doToast,\n    snackMessage,\n    label,\n    primaryButton = false,\n    name,\n    onCopy,\n    enableInputMask,\n  } = props;\n  const [maskInput, setMaskInput] = React.useState(enableInputMask);\n\n  const input = useRef();\n\n  function handleCopyText() {\n    if (enableInputMask || onlyCopy) {\n      navigator.clipboard\n        .writeText(copyable)\n        .then(() => {\n          doToast({ message: snackMessage || __('Text copied') });\n        })\n        .catch(() => {\n          doToast({ message: __('Failed to copy.'), isError: true });\n        });\n    } else {\n      const topRef = input.current;\n      if (topRef && topRef.input && topRef.input.current) {\n        topRef.input.current.select();\n        if (onCopy) {\n          // Allow clients to change the selection before making the copy.\n          onCopy(topRef.input.current);\n        }\n      }\n\n      document.execCommand('copy');\n      doToast({ message: snackMessage || __('Text copied') });\n    }\n  }\n\n  function onFocus() {\n    // We have to go a layer deep since the input is inside the form component\n    const topRef = input.current;\n    if (topRef && topRef.input && topRef.input.current) {\n      topRef.input.current.select();\n    }\n  }\n\n  return (\n    <FormField\n      type={maskInput ? 'password' : 'text'}\n      className=\"form-field--copyable\"\n      readOnly\n      name={name}\n      label={label}\n      value={copyable || ''}\n      ref={input}\n      onFocus={onFocus}\n      inputButton={\n        <Button button={primaryButton ? 'primary' : 'secondary'} icon={ICONS.COPY} onClick={handleCopyText} />\n      }\n      helper={\n        enableInputMask && (\n          <Button button=\"link\" onClick={() => setMaskInput(!maskInput)} label={maskInput ? __('Show') : __('Hide')} />\n        )\n      }\n    />\n  );\n}\n","// @flow\nimport React from 'react';\nimport Button from 'component/button';\nimport CopyableText from 'component/copyableText';\nimport QRCode from 'component/common/qr-code';\nimport Card from 'component/common/card';\n\ntype Props = {\n  checkAddressIsMine: (string) => void,\n  receiveAddress: string,\n  getNewAddress: () => void,\n  gettingNewAddress: boolean,\n};\n\ntype State = {\n  showQR: boolean,\n};\n\nclass WalletAddress extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      showQR: false,\n    };\n\n    (this: any).toggleQR = this.toggleQR.bind(this);\n  }\n\n  componentDidMount() {\n    const { checkAddressIsMine, receiveAddress, getNewAddress } = this.props;\n    if (!receiveAddress) {\n      getNewAddress();\n    } else {\n      checkAddressIsMine(receiveAddress);\n    }\n  }\n\n  toggleQR() {\n    this.setState({\n      showQR: !this.state.showQR,\n    });\n  }\n\n  render() {\n    const { receiveAddress, getNewAddress, gettingNewAddress } = this.props;\n    const { showQR } = this.state;\n\n    return (\n      <Card\n        title={__('Receive Credits')}\n        subtitle={__('Use this address to receive LBRY Credits.')}\n        actions={\n          <React.Fragment>\n            <CopyableText\n              primaryButton\n              label={__('Your Address')}\n              copyable={receiveAddress}\n              snackMessage={__('Address copied.')}\n            />\n\n            <div className=\"card__actions\">\n              {!IS_WEB && (\n                <Button\n                  button=\"secondary\"\n                  label={__('Get New Address')}\n                  onClick={getNewAddress}\n                  disabled={gettingNewAddress}\n                />\n              )}\n              <Button button=\"link\" label={showQR ? __('Hide QR code') : __('Show QR code')} onClick={this.toggleQR} />\n            </div>\n            <p className=\"help\">\n              {!IS_WEB &&\n                __('You can generate a new address at any time, and any previous addresses will continue to work.')}\n            </p>\n\n            {showQR && <QRCode value={receiveAddress} paddingTop />}\n          </React.Fragment>\n        }\n      />\n    );\n  }\n}\n\nexport default WalletAddress;\n","import { connect } from 'react-redux';\nimport { selectReceiveAddress, selectGettingNewAddress } from 'redux/selectors/wallet';\nimport { doCheckAddressIsMine, doGetNewAddress } from 'redux/actions/wallet';\nimport WalletAddress from './view';\nimport { withRouter } from 'react-router';\n\nconst select = (state) => ({\n  receiveAddress: selectReceiveAddress(state),\n  gettingNewAddress: selectGettingNewAddress(state),\n});\n\nconst perform = (dispatch) => ({\n  checkAddressIsMine: (address) => dispatch(doCheckAddressIsMine(address)),\n  getNewAddress: () => dispatch(doGetNewAddress()),\n});\n\nexport default withRouter(connect(select, perform)(WalletAddress));\n","import ReceivePage from './view';\n\nexport default ReceivePage;\n","// @flow\nimport React from 'react';\nimport Page from 'component/page';\nimport LbcSymbol from 'component/common/lbc-symbol';\nimport WalletAddress from 'component/walletAddress';\n\ntype Props = {};\n\nexport default function ReceivePage(props: Props) {\n  return (\n    <Page\n      noSideNavigation\n      className=\"main--buy\"\n      backout={{\n        backoutLabel: __('Done'),\n        title: (\n          <>\n            <LbcSymbol prefix={__('Receive')} size={28} />\n          </>\n        ),\n      }}\n    >\n      <WalletAddress />\n    </Page>\n  );\n}\n"],"names":["FirstPaneWrapper","props","singlePane","children","React","className","TitleWrapper","isPageTitle","smallTitle","accessStatus","AccessIndicator","par","Tooltip","title","__","classnames","locked","status","unlocked","purchased","Icon","icon","ICONS","dangerouslySetInnerHTML","__html","child","_children$props","_children$props2","_children$props3","transformer","subtitle","titleActions","id","body","actions","_props$isPageTitle","_props$isBodyList","isBodyList","_props$smallTitle","defaultExpand","nag","_onClick","onClick","secondPane","slimHeader","background","backgroundImage","headerActions","gridHeader","_useState2","_slicedToArray","useState","expanded","setExpanded","expandable","undefined","role","Boolean","e","stopPropagation","style","sectionIcon","Button","button","QRCode","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","key","value","_this$props","this","paddingRight","paddingTop","ReactQrCode","connect","doToast","copyable","onlyCopy","snackMessage","label","_props$primaryButton","primaryButton","name","onCopy","enableInputMask","_React$useState2","maskInput","setMaskInput","input","useRef","FormField","type","readOnly","ref","onFocus","topRef","current","select","inputButton","navigator","clipboard","writeText","then","message","isError","document","execCommand","helper","_React$PureComponent","WalletAddress","_this","call","state","showQR","_assertThisInitialized","toggleQR","bind","checkAddressIsMine","receiveAddress","getNewAddress","setState","_this$props2","gettingNewAddress","Card","CopyableText","withRouter","selectReceiveAddress","selectGettingNewAddress","dispatch","address","doCheckAddressIsMine","doGetNewAddress","Page","noSideNavigation","backout","backoutLabel","LbcSymbol","prefix","size"],"sourceRoot":""}