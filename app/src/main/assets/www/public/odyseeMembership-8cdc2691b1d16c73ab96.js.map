{"version":3,"file":"odyseeMembership-8cdc2691b1d16c73ab96.js","mappings":"6KAoCA,QAtBkC,SAACA,GACuBA,EAAhDC,qBAAgDD,EAA1BE,sBAE9B,OAXYC,KA4Bd,EC7BA,IAAMC,EAAU,CACdF,sBAAAA,EAAAA,IAGF,SAAeG,EAAAA,EAAAA,IAAQ,KAAMD,EAA7B,CAAsCE,E,+pCCsKtC,IAAMC,EAAmB,SAACP,GACxB,IAAQQ,EAAyBR,EAAzBQ,WAAYC,EAAaT,EAAbS,SAEpB,OAAOD,EAAaC,EAAWC,EAAAA,cAAA,OAAKC,UAAU,oBAAoBF,EACpE,EAUMG,EAAe,SAACZ,GACpB,IAAQa,EAAoDb,EAApDa,YAAaC,EAAuCd,EAAvCc,WAAYL,EAA2BT,EAA3BS,SAAUM,EAAiBf,EAAjBe,aAerCC,EAAkB,SAACC,GACvB,OACEP,EAAAA,cAACQ,EAAAA,EAAO,CAACC,MAAOC,EAAG,mCACjBV,EAAAA,cAAA,OACEC,UAAWU,IAAW,2BAA4B,CAChDC,OAAuB,WAAfL,EAAIM,OACZC,SAAyB,aAAfP,EAAIM,OACdE,UAA0B,cAAfR,EAAIM,UAGjBb,EAAAA,cAACgB,EAAAA,QAAI,CAACC,KAAqB,WAAfV,EAAIM,OAAsBK,EAAAA,KAAaA,EAAAA,UAI3D,EAqBA,OAAOf,EACLH,EAAAA,cAAA,MAAIC,UAAU,eACXI,GAAgBL,EAAAA,cAACM,EAAe,CAACO,OAAQR,IAC1CL,EAAAA,cAAA,QAAMmB,wBAAyB,CAAEC,OAZrC,SAAqBrB,GACnB,IAAK,IAAIsB,KAAStB,SAAe,QAAPuB,EAARvB,EAAUT,aAAK,IAAAgC,OAAP,EAARA,EAAiBvB,SAAU,KAAAuB,EAAAC,EACeC,EAA1D,GAAgD,iBAArCzB,SAAe,QAAPwB,EAARxB,EAAUT,aAAK,IAAAiC,OAAP,EAARA,EAAiBxB,SAASsB,IACnC,OAAOtB,SAAe,QAAPyB,EAARzB,EAAUT,aAAK,IAAAkC,OAAP,EAARA,EAAiBzB,SAASsB,EAErC,CACA,OAAOtB,CACT,CAK6C0B,CAAY1B,OAGvDC,EAAAA,cAAA,MAAIC,UAAWU,IAAW,cAAe,CAAE,qBAAsBP,KAAgBL,EAErF,EAEA,QArNA,SAAcT,GACZ,IACEmB,EAwBEnB,EAxBFmB,MACAiB,EAuBEpC,EAvBFoC,SACAC,EAsBErC,EAtBFqC,aACAC,EAqBEtC,EArBFsC,GACAC,EAoBEvC,EApBFuC,KACAC,EAmBExC,EAnBFwC,QACAb,EAkBE3B,EAlBF2B,KACAhB,EAiBEX,EAjBFW,UAAS8B,EAiBPzC,EAhBFa,YAAAA,OAAW,IAAA4B,GAAQA,EAAAC,EAgBjB1C,EAfF2C,WAAAA,OAAU,IAAAD,GAAQA,EAAAE,EAehB5C,EAbFc,WAAAA,OAAU,IAAA8B,GAAQA,EAClBC,EAYE7C,EAZF6C,cACAC,EAWE9C,EAXF8C,IACAC,EAUE/C,EAVFgD,QACAvC,EASET,EATFS,SACAwC,EAQEjD,EARFiD,WACAC,EAOElD,EAPFkD,WACAC,EAMEnD,EANFmD,WACAC,EAKEpD,EALFoD,gBACA5C,EAIER,EAJFQ,WACA6C,EAGErD,EAHFqD,cACAtC,EAEEf,EAFFe,aACAuC,EACEtD,EADFsD,WAGqDC,EAAAC,GAAvBC,EAAAA,EAAAA,UAASZ,GAAc,GAAhDa,EAAQH,EAAA,GAAEI,EAAWJ,EAAA,GACtBK,OAA+BC,IAAlBhB,EAEnB,OACEnC,EAAAA,cAAA,WACEoD,KAAMf,EAAU,cAAWc,EAC3BlD,UAAWU,IAAWV,EAAW,OAAQ,CACvC,mBAAoBoD,QAAQd,GAC5B,mBAAoBE,IAEtBb,GAAIA,EACJU,QAAS,SAACgB,GACJjB,IACFA,IACAiB,EAAEC,kBAEN,GAECb,GACC1C,EAAAA,cAAA,OACEC,UAAU,aACVuD,MAAO,CACLd,gBACE,uEAAyEA,EAAkB,OAInG1C,EAAAA,cAACH,EAAgB,CAACC,WAAYA,IAC1BW,GAASiB,IACT1B,EAAAA,cAAA,OACEC,UAAWU,IAAW,wBAAyB,CAC7C,qBAAsB6B,EACtB,qBAAsBI,KAGxB5C,EAAAA,cAAA,OAAKC,UAAWU,IAAW,sBAAuB,CAAE,iCAAkCsB,KACnFhB,GAAQjB,EAAAA,cAACgB,EAAAA,QAAI,CAACyC,aAAW,EAACxC,KAAMA,IAEjCjB,EAAAA,cAAA,OAAKC,UAAU,oBACbD,EAAAA,cAACE,EAAY,CAACC,YAAaA,EAAaC,WAAYA,EAAYC,aAAcA,GAC3EI,GAGFiB,GACC1B,EAAAA,cAAA,OAAKC,UAAWU,IAAW,iBAAkB,CAAE,wBAAyBP,KACrEsB,MAMPC,GAAgBuB,IAChBlD,EAAAA,cAAA,OAAKC,UAAU,iCACZ0B,GACC3B,EAAAA,cAAA,OACEC,UAAWU,IAAW,sBAAuB,CAC3C,6BAA8BP,KAG/BuB,GAGJuB,GACClD,EAAAA,cAAA,OAAKC,UAAU,uBACbD,EAAAA,cAAC0D,EAAAA,QAAM,CACLC,OAAO,MACP,gBAAeX,EACf,aAAuBtC,EAAXsC,EAAc,OAAa,QACvC/B,KAAM+B,EAAW9B,EAAAA,SAAiBA,EAAAA,IAClCoB,QAAS,kBAAMW,GAAaD,EAAS,MAO9CL,KAIFO,GAAeA,GAAcF,IAC9BhD,EAAAA,cAAAA,EAAAA,SAAA,KACG6B,GACC7B,EAAAA,cAAA,OACEC,UAAWU,IAAW,aAAc,CAClC,wBAAyBF,IAAUiB,EACnC,mBAAoBO,KAGrBJ,GAGJC,GAAW9B,EAAAA,cAAA,OAAKC,UAAU,sBAAsB6B,GAChD/B,GAAYC,EAAAA,cAAA,OAAKC,UAAU,sBAAsBF,IAIrDqC,GAGFG,GAAcvC,EAAAA,cAAA,OAAKC,UAAU,qBAAqBsC,GAGzD,C,uRC9IA,SAAeqB,EAAAA,EAAAA,IAZI,SAACtE,GAClB,IAAQuE,EAAiCvE,EAAjCuE,aAAcC,EAAmBxE,EAAnBwE,SAAUC,EAASzE,EAATyE,KAEhC,OACE/D,EAAAA,cAAC0D,EAAAA,QAAM,CACLC,OAAO,UACPK,MAAOtD,EAAG,QACVuD,SAAQ,MAAAC,OAAQC,EAAAA,kBAAuB,cAAAD,OAAaJ,EAAQ,UAAAI,OAASH,EAAI,kBAAAG,OAAiBL,EAAY,MAG5G,I,kBCwGMO,EAAiB,WAAH,OAClBpE,EAAAA,cAAA,OAAKC,UAAU,mCACbD,EAAAA,cAACgB,EAAAA,QAAI,CAACC,KAAMC,EAAAA,eACZlB,EAAAA,cAAA,MAAIC,UAAU,gBAAgBS,EAAG,2CAC7B,EAGF2D,EAAY,WAAH,OACbrE,EAAAA,cAAA,OAAKC,UAAU,mCACbD,EAAAA,cAACgB,EAAAA,QAAI,CAACC,KAAMC,EAAAA,eACZlB,EAAAA,cAAA,MAAIC,UAAU,gBAAgBS,EAAG,qBAC7B,EAGF4D,EAAY,WAAH,OACbtE,EAAAA,cAAA,OAAKC,UAAU,mCACbD,EAAAA,cAACgB,EAAAA,QAAI,CAACC,KAAMC,EAAAA,SACZlB,EAAAA,cAAA,MAAIC,UAAU,gBAAgBS,EAAG,WAC7B,EAGR,QA/HyB,SAACpB,GACxB,IAAQuE,EAAoCvE,EAApCuE,aAAcU,EAAsBjF,EAAtBiF,kBAMtB,OACEvE,EAAAA,cAAA,OAAKC,UAAU,qBACbD,EAAAA,cAAA,OAAKC,UAAU,6BACbD,EAAAA,cAAA,OAAKwE,MAAM,OAAOC,OAAO,MAAMC,IAAKC,IAEpC3E,EAAAA,cAAA,WAASC,UAAU,4BACjBD,EAAAA,cAAA,eACEA,EAAAA,cAAA,OAAKwE,MAAM,OAAOC,OAAO,MAAMC,IAAKE,KAGtC5E,EAAAA,cAAA,eACEA,EAAAA,cAAC6E,EAAAA,EAAW,CACVC,OAAQ,CAAEC,aAAc/E,EAAAA,cAAA,SAAIU,EAAG,iBAAsBsE,gBAAiBhF,EAAAA,cAAA,SAAIU,EAAG,sBAC9E,0DAOPV,EAAAA,cAAA,OAAKC,UAAU,mCACbD,EAAAA,cAAA,OAAKC,UAAU,2BACbD,EAAAA,cAAA,MAAIC,UAAU,gBACZD,EAAAA,cAAC6E,EAAAA,EAAW,KAAC,iWASjB7E,EAAAA,cAAA,OAAKC,UAAU,2BACbD,EAAAA,cAAA,WAASC,UAAU,kCACjBD,EAAAA,cAAA,OAAKC,UAAU,iCACbD,EAAAA,cAAA,OAAKwE,MAAM,MAAMC,OAAO,MAAMC,IAAKO,IAEnCjF,EAAAA,cAAA,eACEA,EAAAA,cAAC6E,EAAAA,EAAW,CACVC,OAAQ,CACNI,mBAAoBlF,EAAAA,cAAA,OAAKC,UAAU,iCAAiCS,EAAG,YACvEyE,cACEC,EAAAA,GAAyBA,EAAAA,GAAAA,SAA6Cb,KAE3E,wEAOPvE,EAAAA,cAACqE,EAAS,MAEVrE,EAAAA,cAACoE,EAAc,MAEfpE,EAAAA,cAAA,OAAKC,UAAU,kCACbD,EAAAA,cAAC0D,EAAAA,QAAM,CACLC,OAAO,UACPK,MAAOtD,EAAG,QAEV4B,QAAS,kBAhEG+C,EAiEK,MAADnB,OAAOC,EAAAA,kBAAuB,6CAAAD,OAA4CL,QAhEhGyB,OAAOC,SAASD,OAAOE,OAAOC,UAAUC,QAAQC,KAAKN,IAD3D,IAAwBA,CAiE6F,MAM/GrF,EAAAA,cAAA,OAAKC,UAAU,2BACbD,EAAAA,cAAA,WAASC,UAAU,kCACjBD,EAAAA,cAAA,OAAKC,UAAU,iCACbD,EAAAA,cAAA,OAAKwE,MAAM,MAAMC,OAAO,MAAMC,IAAKkB,IAEnC5F,EAAAA,cAAA,eACEA,EAAAA,cAAC6E,EAAAA,EAAW,CACVC,OAAQ,CACNI,mBAAoBlF,EAAAA,cAAA,OAAKC,UAAU,iCAAiCS,EAAG,YACvEyE,cACEC,EAAAA,GAAyBA,EAAAA,GAAAA,cAAkDb,KAEhF,wEAOPvE,EAAAA,cAACqE,EAAS,MACVrE,EAAAA,cAACoE,EAAc,MACfpE,EAAAA,cAACsE,EAAS,MAEVtE,EAAAA,cAAA,OAAKC,UAAU,kCACbD,EAAAA,cAAC6F,EAAU,CAAChC,aAAcA,EAAcC,SAAS,OAAOC,KAAK,aAAa+B,aAAW,OAMjG,ECrHA,SAAenG,EAAAA,EAAAA,KAJA,SAACoG,GAAK,MAAM,CACzBxB,mBAAmByB,EAAAA,EAAAA,IAAwBD,GAC5C,GAED,CAA+BE,E,k1DCqD/B,QArCuB,SAACC,GAkCtB,OAjCyB,SAAC5G,GAAiB,IAAA6G,EAEjCC,EAAmG9G,EAAnG8G,aAAcC,EAAqF/G,EAArF+G,gBAAiBP,EAAoExG,EAApEwG,YAAaQ,EAAuDhH,EAAvDgH,oBAAqBC,EAAkCjH,EAAlCiH,WAAeC,EAAcC,EAAKnH,EAAKoH,GAE1GC,EAAeN,QAAoClD,IAAjBiD,EAClCQ,EAAsC,QAAjCT,EAAGnG,EAAAA,WAAiB6G,EAAAA,UAAa,IAAAV,OAAA,EAA9BA,EAAgCS,MAQ9C,GANA5G,EAAAA,WAAgB,WACV2G,GACFL,GAEJ,GAAG,CAACA,EAAqBK,KAEpBP,EAAc,CAMjB,OACEpG,EAAAA,cAAC0D,EAAAA,QAAM,CACLoD,SAAUH,EACVI,cAAY,EACZpD,OAAO,UACPK,MAAO2C,EAAe3G,EAAAA,cAACgH,EAAAA,EAAO,CAACC,KAAK,UAAavG,EAAG,qBACpD4B,QAX2B,WAAH,OAC1BwD,EAAYoB,EAAAA,GAAeC,EAAA,GACrBP,EAAQ,CAAEQ,cAAeR,EAAMhF,GAAIyF,cAAaF,EAAAA,EAAA,GAAOP,EAAMU,YAAef,IAAiB,CAAC,GAClG,GAWN,CAEA,OAAOvG,EAAAA,cAACkG,EAAcM,EACxB,CAGF,EClDA,IAAMe,EAAS,SAACxB,EAAOzG,GAAK,MAAM,CAChC8G,cAAcoB,EAAAA,EAAAA,IAAmBzB,GACjCM,iBAAiBoB,EAAAA,EAAAA,IAAwB1B,GAC1C,EAEKrG,EAAU,CACdoG,YAAAA,EAAAA,GACAQ,oBAAAA,EAAAA,IAGF,iBAAgBJ,GAAS,OAAKvG,EAAAA,EAAAA,IAAQ4H,EAAQ7H,EAAhBC,CAAyBiE,EAAesC,GAAW,C,8MCmBjF,QApCiB,WAAH,OACZlG,EAAAA,cAAA,OAAKC,UAAU,qBACbD,EAAAA,cAAA,KAAGC,UAAU,gBACVS,EACC,+HAGJV,EAAAA,cAAA,SACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAIC,UAAU,gBACXS,EACC,8MAGJV,EAAAA,cAAA,MAAIC,UAAU,gBACXS,EACC,6GAGJV,EAAAA,cAAA,MAAIC,UAAU,gBAAgBS,EAAG,mDACjCV,EAAAA,cAAA,UACGU,EACC,4GAGJV,EAAAA,cAAA,UACGU,EAAG,uGAENV,EAAAA,cAAA,UACGU,EAAG,uGAIN,E,8UCdR,IAkEMgH,EAAU,SAACpI,GACf,IAAQqI,EAAmBrI,EAAnBqI,KAAM5H,EAAaT,EAAbS,SAEd,OACEC,EAAAA,cAAA,OAAKC,UAAU,iBAAiB2H,IAAKD,GACnC3H,EAAAA,cAAA,MAAIC,UAAU,oBACX0H,EACD3H,EAAAA,cAAC6H,EAAAA,EAAe,CAACC,eAAgBH,KAGnC3H,EAAAA,cAAA,MAAIC,UAAU,uBAAuBS,EAAG0E,EAAAA,GAA+BuC,KAEtE5H,EAGP,EASMgI,EAAiB,SAACzI,GACtB,IAAQiF,EAA4DjF,EAA5DiF,kBAAmByD,EAAyC1I,EAAzC0I,WAAYC,EAA6B3I,EAA7B2I,YAAanC,EAAgBxG,EAAhBwG,YAGxCoC,EAGRD,EAHFE,SACaC,EAEXH,EAFFI,YACavE,EACXmE,EADFK,UAAaxE,SAETqE,EAAWD,EAAcK,cAE/B,OACEJ,IAAa5D,GACXvE,EAAAA,cAACA,EAAAA,SAAc,CAAC4H,IAAKI,EAAWQ,WAAW5G,IACzC5B,EAAAA,cAAA,MAAIC,UAAU,mBACZD,EAAAA,cAAA,SAAIU,EAAG,YAAY,KAAK,IAAEA,EAAG0E,EAAAA,GAA4BtB,KAG3D9D,EAAAA,cAAA,MAAIC,UAAU,mBACZD,EAAAA,cAAA,SAAIU,EAAG,SAAS,KAAK,IAAEyH,EAAW,IAAMM,EAAAA,GAAgBN,GAAUO,OACjEN,EAAS,IAAI,MAAI1H,EAAG0E,EAAAA,GAA4BtB,KAGnD9D,EAAAA,cAAC0D,EAAAA,QAAM,CACLC,OAAO,UACPrB,QAAS,kBAAMwD,EAAYoB,EAAAA,GAAkC,CAAEc,WAAAA,EAAYW,MAAOV,GAAc,EAChGhI,UAAU,oBACV+D,MAAOtD,EAAG,iCAAkC,CAAEoD,SAAUpD,EAAGoD,KAC3D7C,KAAMC,EAAAA,UAKhB,EAEA,QA5HsB,SAAC5B,GACrB,IAAQsJ,EACNtJ,EADMsJ,mBAAoBC,EAC1BvJ,EAD0BuJ,eAAgBtE,EAC1CjF,EAD0CiF,kBAAmBuB,EAC7DxG,EAD6DwG,YAAagD,EAC1ExJ,EAD0EwJ,oCAG5E,GAAIF,EAAoB,CACtB,IAAMG,EAAaH,EACXJ,EAA0BO,EAA1BP,WAAYQ,EAAcD,EAAdC,UAEdC,EAAsB,CAAE1E,kBAAAA,EAAmByD,WAAAe,EAAYjD,YAAAA,GAE7D,OACE9F,EAAAA,cAAC0H,EAAO,CAACC,KAAMa,EAAWb,MACvBqB,EAAUE,KAAI,SAAAC,GAAQA,EAALC,MAAH,IAAUC,EAAWF,EAAXE,YAAW,OAClCrJ,EAAAA,cAAC+H,EAAcuB,EAAA,CAAC1B,IAAKY,EAAW5G,IAAQqH,EAAmB,CAAEhB,YAAaoB,IAAe,IAIjG,CAEA,GAAIR,EAAgB,CAClB,IAAMU,EAAaV,EACXW,EAAgDD,EAAhDf,WAAYiB,EAAoCF,EAApCE,kBAAmBC,EAAiBH,EAAjBG,aAEjCC,EAAsC,aAAxBD,EAAa7I,OAC3B+I,EAAuBD,GAAiD,IAAlCD,EAAaG,mBAA4BC,KAAKC,MAE1F,OACE/J,EAAAA,cAAC0H,EAAO,CAACC,KAAM8B,EAAkB9B,MAC/B3H,EAAAA,cAAA,MAAIC,UAAU,mBACZD,EAAAA,cAAA,SAAIU,EAAG,iBAAiB,KAAK,KAAEsJ,EAAAA,EAAAA,IAA4BR,EAAWS,aAGxEjK,EAAAA,cAAA,MAAIC,UAAU,mBACZD,EAAAA,cAAA,SAAIU,EAAGiJ,EAAc,cAAgB,kBAAkB,KAAM,KAC5DK,EAAAA,EAAAA,IAC8E,KAA5EL,EAAcD,EAAaQ,YAAcR,EAAaG,sBAI3D7J,EAAAA,cAAA,MAAIC,UAAU,mBACZD,EAAAA,cAAA,SAAIU,EAAGkJ,EAAuB,oBAAsB,YAAY,KAAM,KACrEI,EAAAA,EAAAA,IAA8D,IAAlCN,EAAaG,sBAGzCF,GAAgDC,EAAL,IAA7BF,EAAaQ,cAC5BlK,EAAAA,cAAC0D,EAAAA,QAAM,CACLC,OAAO,MACP,gBAAe6F,EAAWW,cAC1B7H,QAAS,kBAAMwG,EAAoCS,EAAW,EAC9DtJ,UAAU,2BACV+D,MAAOtD,EAAG,qBACVO,KAAMC,EAAAA,UAKhB,CAEA,OAAO,IACT,EC1EA,IAIMxB,EAAU,CACdoG,YAAAA,EAAAA,GACAgD,oCAAAA,EAAAA,IAGF,SAAenJ,EAAAA,EAAAA,KATA,SAACoG,EAAOzG,GAAK,MAAM,CAChCiF,mBAAmByB,EAAAA,EAAAA,IAAwBD,GAC5C,GAO8BrG,EAA/B,CAAwC0K,G,sICLpCC,EAAU,CAAC,EAEfA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKJ,KAAW,YAAiB,W,ijCC+HlD,QA9H6B,SAAC/K,GAC5B,IAEEqL,EAOErL,EAPFqL,YACAC,EAMEtL,EANFsL,iBACAC,EAKEvL,EALFuL,kBACAtL,EAIED,EAJFC,qBACAuL,EAGExL,EAHFwL,oBACAC,EAEEzL,EAFFyL,kBACAC,EACE1L,EADF0L,iBAG6DC,EAAAnI,EAArB9C,EAAAA,UAAe,GAAM,GAAxDkL,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACsCG,EAAAtI,GAA5CuI,EAAAA,EAAAA,GAAkB,qBAAqB,GAAK,GAArEC,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAE5BpL,EAAAA,WAAgB,WACdgL,EAAiB,CAAEQ,aAAcC,EAAAA,EAAAA,KAAqBC,WAAYD,EAAAA,EAAAA,IACpE,GAAG,CAACT,IAGJ,IAAMW,OAAgDxI,IAAtB4H,IAAoCJ,EAE9DiB,EAAkB,IAAIC,gBAAgBvG,OAAOwG,SAASC,QACtDjI,EAAW8H,EAAgBI,IAAI,kBAAe7I,EAC9C8I,EAAYL,EAAgBI,IAAI,cAAW7I,EAuBjD,OAjBAnD,EAAAA,WAAgB,WACd,IAAK2L,GAA2BM,EAAW,CACzC,IAAMC,EAAeC,YAAW,WAE9B7G,OAAOI,QAAQ0G,aAAa,KAAM,KAAM9G,OAAOwG,SAASO,UAExDlB,GAAiB,GAIjBmB,SAASC,cAAc,UAAYN,EAAY,gBAAkBnI,EAAW,MAAM0I,OACpF,GAdiB,KAgBjB,OAAO,kBAAMC,aAAaP,EAAa,CACzC,CACF,GAAG,CAACP,EAAyBM,EAAWnI,IAEpC6H,EAEA3L,EAAAA,cAAC0M,EAAAA,EAAI,CAACzM,UAAU,mBACdD,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAAA,OAAKC,UAAU,eACbD,EAAAA,cAACgH,EAAAA,EAAO,SAOmB,KAAjCzH,aAAoB,EAApBA,EAAsBoN,SAAiBV,GAAcf,EAmBvDlL,EAAAA,cAAC0M,EAAAA,EAAI,CAACzM,UAAU,8BACdD,EAAAA,cAAC4M,EAAAA,EAAI,CAACnM,MAAOC,EAAG,kBAAmBgB,SAAU1B,EAAAA,cAAC6M,EAAAA,EAAe,OAC3D7M,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAAC4M,EAAAA,EAAI,CACH3M,UAAU,2BACVQ,MAAOC,EAAG,wBACViB,aACE3B,EAAAA,cAAC0D,EAAAA,QAAM,CAACC,OAAO,QAAQ1C,KAAMqK,EAAWpK,EAAAA,GAAWA,EAAAA,KAAYoB,QAAS,kBAAMiJ,GAAaD,EAAS,IAEtG5J,SAAUhB,EAAG,uDACbmB,KAAMyJ,GAAYtL,EAAAA,cAAC8M,EAAQ,QAG5B/B,KAAuBH,GAAgD,IAA5BA,EAAiB+B,SAC3D3M,EAAAA,cAAC4M,EAAAA,EAAI,CAACnM,MAAOC,EAAG,0BACbqK,EAAkB7B,KAAI,SAAClB,GAAU,OAChChI,EAAAA,cAACoK,EAAa,CAACxC,IAAKI,EAAWQ,WAAWb,KAAMiB,mBAAoBZ,GAAc,KAKvF6C,GAAqBA,EAAkB8B,OAAS,GAC/C3M,EAAAA,cAAC4M,EAAAA,EAAI,CAACnM,MAAOC,EAAG,4BACbmK,EAAkB3B,KAAI,SAAClB,GAAU,OAChChI,EAAAA,cAACoK,EAAa,CAACxC,IAAKI,EAAWyB,kBAAkB9B,KAAMkB,eAAgBb,GAAc,KAK1F8C,GACC9K,EAAAA,cAAC4M,EAAAA,EAAI,CAACnM,MAAOC,EAAG,yBACkB,IAA/BoK,EAAoB6B,OACnB3M,EAAAA,cAAA,UAAKU,EAAG,+CAERoK,EAAoB5B,KAAI,SAAClB,GAAU,OACjChI,EAAAA,cAACoK,EAAa,CAACxC,IAAKI,EAAWyB,kBAAkB9B,KAAMkB,eAAgBb,GAAc,OAQjGhI,EAAAA,cAACJ,EAAAA,EAAyB,CAACL,qBAAsBA,KA5DjDS,EAAAA,cAAC0M,EAAAA,EAAI,CAACzM,UAAU,mBACdD,EAAAA,cAACiG,EAAAA,EAAgB,CAACpC,aAAa,gBA8DvC,ECzIA,IASMnE,EAAU,CACdsL,iBAAAA,EAAAA,IAGF,SAAerL,EAAAA,EAAAA,KAbA,SAACoG,GAAK,MAAM,CACzB4E,aAAaoC,EAAAA,EAAAA,IAA4BhH,GACzC6E,kBAAkBoC,EAAAA,EAAAA,IAAqCjH,EAAO0F,EAAAA,EAAAA,IAC9DZ,mBAAmBoC,EAAAA,EAAAA,IAAsClH,EAAO0F,EAAAA,EAAAA,IAChElM,sBAAsB2N,EAAAA,EAAAA,IAA8CnH,EAAO0F,EAAAA,EAAAA,IAC3EX,qBAAqBqC,EAAAA,EAAAA,IAA6CpH,EAAO0F,EAAAA,EAAAA,IACzEV,mBAAmBqC,EAAAA,EAAAA,IAA4BrH,GAChD,GAM8BrG,EAA/B,CAAwC2N,E,sECxBpCC,E,MAA0B,GAA4B,KAE1DA,EAAwB3H,KAAK,CAAC4H,EAAO3L,GAAI,m0CAAo0C,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,sDAAsD,MAAQ,GAAG,SAAW,4SAA4S,eAAiB,CAAC,+jCAA+jC,WAAa,MAE91F,S","sources":["webpack://odysee.com/../ui/component/clearMembershipData/view.jsx","webpack://odysee.com/../ui/component/clearMembershipData/index.js","webpack://odysee.com/../ui/component/common/card.jsx","webpack://odysee.com/../ui/component/membershipSplash/internal/joinPlanButton/index.jsx","webpack://odysee.com/../ui/component/membershipSplash/view.jsx","webpack://odysee.com/../ui/component/membershipSplash/index.js","webpack://odysee.com/../ui/hocs/withCreditCard/view.jsx","webpack://odysee.com/../ui/hocs/withCreditCard/index.js","webpack://odysee.com/../ui/page/odyseeMembership/internal/help-text.jsx","webpack://odysee.com/../ui/page/odyseeMembership/internal/premiumOption/view.jsx","webpack://odysee.com/../ui/page/odyseeMembership/internal/premiumOption/index.js","webpack://odysee.com/../ui/page/odyseeMembership/style.scss?b284","webpack://odysee.com/../ui/page/odyseeMembership/view.jsx","webpack://odysee.com/../ui/page/odyseeMembership/index.js","webpack://odysee.com/../ui/page/odyseeMembership/style.scss"],"sourcesContent":["// @flow\nimport React from 'react';\n\nimport * as ICONS from 'constants/icons';\nimport Button from 'component/button';\n\nconst isDev = process.env.NODE_ENV !== 'production';\n\ntype Props = {\n  purchasedMemberships?: ?MembershipTiers,\n  // -- redux --\n  doMembershipClearData: () => void,\n};\n\nconst ClearMembershipDataButton = (props: Props) => {\n  const { purchasedMemberships, doMembershipClearData } = props;\n\n  return (\n    isDev &&\n    (!purchasedMemberships || purchasedMemberships?.length > 0) && (\n      <>\n        <h1 style={{ marginTop: '30px', fontSize: '20px' }}>Clear Membership Data (Only Available On Dev)</h1>\n        <div>\n          <Button\n            button=\"primary\"\n            label=\"Clear Membership Data\"\n            icon={ICONS.SETTINGS}\n            className=\"membership_button\"\n            onClick={doMembershipClearData}\n          />\n        </div>\n      </>\n    )\n  );\n};\n\nexport default ClearMembershipDataButton;\n","import { connect } from 'react-redux';\nimport { doMembershipClearData } from 'redux/actions/memberships';\n\nimport ClearMembershipDataButton from './view';\n\nconst perform = {\n  doMembershipClearData,\n};\n\nexport default connect(null, perform)(ClearMembershipDataButton);\n","// @flow\nimport type { Node } from 'react';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Icon from 'component/common/icon';\nimport Button from 'component/button';\nimport * as ICONS from 'constants/icons';\n// import twemoji from 'twemoji';\nimport Tooltip from 'component/common/tooltip';\n\ntype Props = {\n  title?: string | Node,\n  subtitle?: string | Node,\n  titleActions?: string | Node,\n  id?: string,\n  body?: string | Node,\n  actions?: string | Node,\n  icon?: string,\n  className?: string,\n  isPageTitle?: boolean,\n  noTitleWrap?: boolean,\n  isBodyList?: boolean,\n  defaultExpand?: boolean,\n  nag?: Node,\n  smallTitle?: boolean,\n  onClick?: () => void,\n  children?: Node,\n  secondPane?: Node,\n  slimHeader?: boolean,\n  background?: boolean,\n  backgroundImage?: string,\n  singlePane?: boolean,\n  headerActions?: Node,\n  gridHeader?: boolean,\n  accessStatus?: string,\n};\n\nfunction Card(props: Props) {\n  const {\n    title,\n    subtitle,\n    titleActions,\n    id,\n    body,\n    actions,\n    icon,\n    className,\n    isPageTitle = false,\n    isBodyList = false,\n    // noTitleWrap = false,\n    smallTitle = false,\n    defaultExpand,\n    nag,\n    onClick,\n    children,\n    secondPane,\n    slimHeader,\n    background,\n    backgroundImage,\n    singlePane,\n    headerActions,\n    accessStatus,\n    gridHeader,\n  } = props;\n\n  const [expanded, setExpanded] = useState(defaultExpand);\n  const expandable = defaultExpand !== undefined;\n\n  return (\n    <section\n      role={onClick ? 'button' : undefined}\n      className={classnames(className, 'card', {\n        'card__multi-pane': Boolean(secondPane),\n        'card--background': background,\n      })}\n      id={id}\n      onClick={(e) => {\n        if (onClick) {\n          onClick();\n          e.stopPropagation();\n        }\n      }}\n    >\n      {backgroundImage && (\n        <div\n          className=\"background\"\n          style={{\n            backgroundImage:\n              'url(https://thumbnails.odycdn.com/optimize/s:390:0/quality:85/plain/' + backgroundImage + ')',\n          }}\n        />\n      )}\n      <FirstPaneWrapper singlePane={singlePane}>\n        {(title || subtitle) && (\n          <div\n            className={classnames('card__header--between', {\n              'card__header--slim': slimHeader,\n              'card__header--grid': gridHeader,\n            })}\n          >\n            <div className={classnames('card__title-section', { 'card__title-section--body-list': isBodyList })}>\n              {icon && <Icon sectionIcon icon={icon} />}\n\n              <div className=\"card__title-text\">\n                <TitleWrapper isPageTitle={isPageTitle} smallTitle={smallTitle} accessStatus={accessStatus}>\n                  {title}\n                </TitleWrapper>\n\n                {subtitle && (\n                  <div className={classnames('card__subtitle', { 'card__subtitle--small': smallTitle })}>\n                    {subtitle}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {(titleActions || expandable) && (\n              <div className=\"card__title-actions-container\">\n                {titleActions && (\n                  <div\n                    className={classnames('card__title-actions', {\n                      'card__title-actions--small': smallTitle,\n                    })}\n                  >\n                    {titleActions}\n                  </div>\n                )}\n                {expandable && (\n                  <div className=\"card__title-actions\">\n                    <Button\n                      button=\"alt\"\n                      aria-expanded={expanded}\n                      aria-label={expanded ? __('Less') : __('More')}\n                      icon={expanded ? ICONS.SUBTRACT : ICONS.ADD}\n                      onClick={() => setExpanded(!expanded)}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n\n            {headerActions}\n          </div>\n        )}\n\n        {(!expandable || (expandable && expanded)) && (\n          <>\n            {body && (\n              <div\n                className={classnames('card__body', {\n                  'card__body--no-title': !title && !subtitle,\n                  'card__body--list': isBodyList,\n                })}\n              >\n                {body}\n              </div>\n            )}\n            {actions && <div className=\"card__main-actions\">{actions}</div>}\n            {children && <div className=\"card__main-actions\">{children}</div>}\n          </>\n        )}\n\n        {nag}\n      </FirstPaneWrapper>\n\n      {secondPane && <div className=\"card__second-pane\">{secondPane}</div>}\n    </section>\n  );\n}\n\ntype FirstPaneProps = {\n  singlePane?: boolean,\n  children: any,\n};\n\nconst FirstPaneWrapper = (props: FirstPaneProps) => {\n  const { singlePane, children } = props;\n\n  return singlePane ? children : <div className=\"card__first-pane\">{children}</div>;\n};\n\ntype TitleProps = {\n  isPageTitle?: boolean,\n  smallTitle?: boolean,\n  children?: any,\n  emoji?: any,\n  accessStatus?: string,\n};\n\nconst TitleWrapper = (props: TitleProps) => {\n  const { isPageTitle, smallTitle, children, accessStatus } = props;\n\n  /*\n  const Twemoji = ({ emoji }) => (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: twemoji.parse(emoji, {\n          folder: 'svg',\n          ext: '.svg',\n        }),\n      }}\n    />\n  );\n  */\n\n  const AccessIndicator = (par: any) => {\n    return (\n      <Tooltip title={__('This is a members-only content')}>\n        <div\n          className={classnames('content-access-indicator', {\n            locked: par.status === 'locked',\n            unlocked: par.status === 'unlocked',\n            purchased: par.status === 'purchased',\n          })}\n        >\n          <Icon icon={par.status === 'locked' ? ICONS.LOCK : ICONS.UNLOCK} />\n        </div>\n      </Tooltip>\n    );\n  };\n\n  /*\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return <Twemoji emoji={children?.props?.children[child]} />;\n      }\n    }\n    return children;\n  }\n  */\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return children?.props?.children[child];\n      }\n    }\n    return children;\n  }\n\n  return isPageTitle ? (\n    <h1 className=\"card__title\">\n      {accessStatus && <AccessIndicator status={accessStatus} />}\n      <font dangerouslySetInnerHTML={{ __html: transformer(children) }} />\n    </h1>\n  ) : (\n    <h2 className={classnames('card__title', { 'card__title--small': smallTitle })}>{children}</h2>\n  );\n};\n\nexport default Card;\n","// @flow\nimport React from 'react';\n\nimport * as PAGES from 'constants/pages';\n\nimport Button from 'component/button';\nimport withCreditCard from 'hocs/withCreditCard';\n\ntype Props = {\n  pageLocation: string,\n  interval: string,\n  plan: string,\n};\n\nconst JoinButton = (props: Props) => {\n  const { pageLocation, interval, plan } = props;\n\n  return (\n    <Button\n      button=\"primary\"\n      label={__('Join')}\n      navigate={`/$/${PAGES.ODYSEE_MEMBERSHIP}?interval=${interval}&plan=${plan}&pageLocation=${pageLocation}&`}\n    />\n  );\n};\n\nexport default withCreditCard(JoinButton);\n","// @flow\nimport React from 'react';\nimport * as PAGES from 'constants/pages';\n\nimport * as ICONS from 'constants/icons';\nimport * as MEMBERSHIP_CONSTS from 'constants/memberships';\nimport Button from 'component/button';\nimport Icon from 'component/common/icon';\nimport I18nMessage from 'component/i18nMessage';\n\nimport AstronautAndFriends from './internal/assets/astronaut_n_friends.png';\nimport BadgePremium from './internal/assets/badge_premium.png';\nimport BadgePremiumPlus from './internal/assets/badge_premium-plus.png';\nimport OdyseePremium from './internal/assets/odysee_premium.png';\nimport JoinButton from './internal/joinPlanButton';\n\ntype Props = {\n  pageLocation: string,\n  // -- redux --\n  preferredCurrency: string,\n};\n\nconst MembershipSplash = (props: Props) => {\n  const { pageLocation, preferredCurrency } = props;\n\n  function onClickCordova(url) {\n    if (window.cordova) window.odysee.functions.history.push(url);\n  }\n\n  return (\n    <div className=\"membership-splash\">\n      <div className=\"membership-splash__banner\">\n        <img width=\"1000\" height=\"740\" src={AstronautAndFriends} />\n\n        <section className=\"membership-splash__title\">\n          <section>\n            <img width=\"1000\" height=\"174\" src={OdyseePremium} />\n          </section>\n\n          <section>\n            <I18nMessage\n              tokens={{ early_access: <b>{__('early access')}</b>, site_wide_badge: <b>{__('site-wide badge')}</b> }}\n            >\n              Get %early_access% features and a %site_wide_badge%\n            </I18nMessage>\n          </section>\n        </section>\n      </div>\n\n      <div className=\"membership-splash__info-wrapper\">\n        <div className=\"membership-splash__info\">\n          <h1 className=\"balance-text\">\n            <I18nMessage>\n              \"Creating a revolutionary video platform for everyone is something we're proud to be doing, but it isn't\n              something that can happen without support. If you believe in Odysee's mission, please consider becoming a\n              Premium member. As a Premium member, you'll be helping us build the best platform in the universe and\n              we'll give you some cool perks!\"\n            </I18nMessage>\n          </h1>\n        </div>\n\n        <div className=\"membership-splash__info\">\n          <section className=\"membership-splash__info-header\">\n            <div className=\"membership-splash__info-price\">\n              <img width=\"500\" height=\"500\" src={BadgePremium} />\n\n              <section>\n                <I18nMessage\n                  tokens={{\n                    premium_recurrence: <div className=\"membership-splash__info-range\">{__('A MONTH')}</div>,\n                    premium_price:\n                      MEMBERSHIP_CONSTS.PRICES[MEMBERSHIP_CONSTS.ODYSEE_TIER_NAMES.PREMIUM][preferredCurrency],\n                  }}\n                >\n                  %premium_price% %premium_recurrence% --[context: '99¢ A MONTH']--\n                </I18nMessage>\n              </section>\n            </div>\n          </section>\n\n          <BadgeInfo />\n\n          <EarlyAcessInfo />\n\n          <div className=\"membership-splash__info-button\">\n            <Button\n              button=\"primary\"\n              label={__('Join')}\n              // onClick={() => window.odysee.functions.history.push(`/$/${PAGES.ODYSEE_MEMBERSHIP}?interval=year&plan=Premium&pageLocation=${pageLocation}`)}\n              onClick={() =>\n                onClickCordova(`/$/${PAGES.ODYSEE_MEMBERSHIP}?interval=year&plan=Premium&pageLocation=${pageLocation}`)\n              }\n            />\n          </div>\n        </div>\n\n        <div className=\"membership-splash__info\">\n          <section className=\"membership-splash__info-header\">\n            <div className=\"membership-splash__info-price\">\n              <img width=\"500\" height=\"500\" src={BadgePremiumPlus} />\n\n              <section>\n                <I18nMessage\n                  tokens={{\n                    premium_recurrence: <div className=\"membership-splash__info-range\">{__('A MONTH')}</div>,\n                    premium_price:\n                      MEMBERSHIP_CONSTS.PRICES[MEMBERSHIP_CONSTS.ODYSEE_TIER_NAMES.PREMIUM_PLUS][preferredCurrency],\n                  }}\n                >\n                  %premium_price% %premium_recurrence% --[context: '99¢ A MONTH']--\n                </I18nMessage>\n              </section>\n            </div>\n          </section>\n\n          <BadgeInfo />\n          <EarlyAcessInfo />\n          <NoAdsInfo />\n\n          <div className=\"membership-splash__info-button\">\n            <JoinButton pageLocation={pageLocation} interval=\"year\" plan=\"Premium%2b\" doOpenModal />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst EarlyAcessInfo = () => (\n  <div className=\"membership-splash__info-content\">\n    <Icon icon={ICONS.EARLY_ACCESS} />\n    <h1 className=\"balance-text\">{__('Exclusive and early access to features')}</h1>\n  </div>\n);\n\nconst BadgeInfo = () => (\n  <div className=\"membership-splash__info-content\">\n    <Icon icon={ICONS.MEMBER_BADGE} />\n    <h1 className=\"balance-text\">{__('Badge on profile')}</h1>\n  </div>\n);\n\nconst NoAdsInfo = () => (\n  <div className=\"membership-splash__info-content\">\n    <Icon icon={ICONS.NO_ADS} />\n    <h1 className=\"balance-text\">{__('No ads')}</h1>\n  </div>\n);\n\nexport default MembershipSplash;\n","import { connect } from 'react-redux';\nimport { selectPreferredCurrency } from 'redux/selectors/settings';\n\nimport MembershipSplash from './view';\n\nconst select = (state) => ({\n  preferredCurrency: selectPreferredCurrency(state),\n});\n\nexport default connect(select)(MembershipSplash);\n","// @flow\nimport React from 'react';\n\nimport * as MODALS from 'constants/modal_types';\nimport Button from 'component/button';\nimport Spinner from 'component/spinner';\n\nimport { ModalContext } from 'contexts/modal';\n\ntype Props = {\n  modalState: any,\n  // -- redux --\n  hasSavedCard: ?boolean,\n  isAuthenticated: ?boolean,\n  doOpenModal: (modalId: string, modalProps: {}) => void,\n  doGetCustomerStatus: () => void,\n};\n\n/**\n * HigherOrderComponent to condition a button to become a \"add card\" prompt every time it is needed for a purchase,\n * and also prompts back to the previous modal in case it came from one.\n *\n * @param Component: FunctionalComponentParam\n * @returns {FunctionalComponent}\n */\nconst withCreditCard = (Component: FunctionalComponentParam) => {\n  const CreditCardPrompt = (props: Props) => {\n    // eslint-disable-next-line react/prop-types\n    const { hasSavedCard, isAuthenticated, doOpenModal, doGetCustomerStatus, modalState, ...componentProps } = props;\n\n    const fetchPending = isAuthenticated && hasSavedCard === undefined;\n    const modal = React.useContext(ModalContext)?.modal;\n\n    React.useEffect(() => {\n      if (fetchPending) {\n        doGetCustomerStatus();\n      }\n    }, [doGetCustomerStatus, fetchPending]);\n\n    if (!hasSavedCard) {\n      const handleOpenAddCardModal = () =>\n        doOpenModal(MODALS.ADD_CARD, {\n          ...(modal ? { previousModal: modal.id, previousProps: { ...modal.modalProps, ...modalState } } : {}),\n        });\n\n      return (\n        <Button\n          disabled={fetchPending}\n          requiresAuth\n          button=\"primary\"\n          label={fetchPending ? <Spinner type=\"small\" /> : __('Add a Credit Card')}\n          onClick={handleOpenAddCardModal}\n        />\n      );\n    }\n\n    return <Component {...componentProps} />;\n  };\n\n  return CreditCardPrompt;\n};\n\nexport default withCreditCard;\n","import { connect } from 'react-redux';\n\nimport { selectHasSavedCard } from 'redux/selectors/stripe';\nimport { selectUserVerifiedEmail } from 'redux/selectors/user';\n\nimport { doOpenModal } from 'redux/actions/app';\nimport { doGetCustomerStatus } from 'redux/actions/stripe';\n\nimport withCreditCard from './view';\n\nconst select = (state, props) => ({\n  hasSavedCard: selectHasSavedCard(state),\n  isAuthenticated: selectUserVerifiedEmail(state),\n});\n\nconst perform = {\n  doOpenModal,\n  doGetCustomerStatus,\n};\n\nexport default (Component) => connect(select, perform)(withCreditCard(Component));\n","// @flow\nimport React from 'react';\n\nconst HelpText = () => (\n  <div className=\"section__subtitle\">\n    <p className=\"balance-text\">\n      {__(\n        'First of all, thank you for considering or purchasing a membership, it means a ton to us! A few important details to know:'\n      )}\n    </p>\n    <p>\n      <ul>\n        <li className=\"balance-text\">\n          {__(\n            'Exclusive and early access features include: recommended content, the ability to post Odysee hyperlinks + images in comments, and account is also automatically eligible for Rewards. More to come later.'\n          )}\n        </li>\n        <li className=\"balance-text\">\n          {__(\n            'The yearly Premium+ membership has a discount compared to monthly, and Premium is only available yearly.'\n          )}\n        </li>\n        <li className=\"balance-text\">{__('These are limited time rates, so get in early!')}</li>\n        <li>\n          {__(\n            'There may be higher tiers available in the future for creators and anyone else who wants to support us.'\n          )}\n        </li>\n        <li>\n          {__('Badges will be displayed on a single channel to start, with an option to add on two more later on.')}\n        </li>\n        <li>\n          {__('Cannot upgrade or downgrade a membership at this time. Refunds are not available. Choose wisely.')}\n        </li>\n      </ul>\n    </p>\n  </div>\n);\n\nexport default HelpText;\n","// @flow\nimport React from 'react';\n\nimport { formatDateToMonthDayAndYear } from 'util/time';\n\nimport * as MEMBERSHIP_CONSTS from 'constants/memberships';\nimport * as ICONS from 'constants/icons';\nimport * as MODALS from 'constants/modal_types';\nimport * as STRIPE from 'constants/stripe';\n\nimport Button from 'component/button';\nimport MembershipBadge from 'component/membershipBadge';\n\ntype Props = {\n  membershipPurchase?: CreatorMembership,\n  membershipView?: MembershipTier,\n  // -- redux --\n  preferredCurrency: CurrencyOption,\n  doOpenModal: (modalId: string, {}) => void,\n  doOpenCancelationModalForMembership: (membership: MembershipTier) => void,\n};\n\nconst PremiumOption = (props: Props) => {\n  const { membershipPurchase, membershipView, preferredCurrency, doOpenModal, doOpenCancelationModalForMembership } =\n    props;\n\n  if (membershipPurchase) {\n    const membership = membershipPurchase;\n    const { Membership, NewPrices } = membership;\n\n    const purchaseFieldsProps = { preferredCurrency, membership, doOpenModal };\n\n    return (\n      <Wrapper name={Membership.name}>\n        {NewPrices.map(({ Price, StripePrice }: MembershipNewStripePriceDetails) => (\n          <PurchaseFields key={Membership.id} {...purchaseFieldsProps} stripePrice={StripePrice} />\n        ))}\n      </Wrapper>\n    );\n  }\n\n  if (membershipView) {\n    const membership = membershipView;\n    const { Membership, MembershipDetails, Subscription } = membership;\n\n    const isCancelled = Subscription.status === 'canceled';\n    const membershipStillValid = isCancelled && Subscription.current_period_end * 1000 > Date.now();\n\n    return (\n      <Wrapper name={MembershipDetails.name}>\n        <h4 className=\"membership_info\">\n          <b>{__('Registered On')}:</b> {formatDateToMonthDayAndYear(Membership.created_at)}\n        </h4>\n\n        <h4 className=\"membership_info\">\n          <b>{__(isCancelled ? 'Canceled On' : 'Auto-Renews On')}:</b>{' '}\n          {formatDateToMonthDayAndYear(\n            (isCancelled ? Subscription.canceled_at : Subscription.current_period_end) * 1000\n          )}\n        </h4>\n\n        <h4 className=\"membership_info\">\n          <b>{__(membershipStillValid ? 'Still Valid Until' : 'Ended on')}:</b>{' '}\n          {formatDateToMonthDayAndYear(Subscription.current_period_end * 1000)}\n        </h4>\n\n        {(!isCancelled ? Subscription.canceled_at === 0 : !membershipStillValid) && (\n          <Button\n            button=\"alt\"\n            membership-id={Membership.membership_id}\n            onClick={() => doOpenCancelationModalForMembership(membership)}\n            className=\"cancel-membership-button\"\n            label={__('Cancel membership')}\n            icon={ICONS.FINANCE}\n          />\n        )}\n      </Wrapper>\n    );\n  }\n\n  return null;\n};\n\ntype WrapperProps = {\n  name: string,\n  children: any,\n};\n\nconst Wrapper = (props: WrapperProps) => {\n  const { name, children } = props;\n\n  return (\n    <div className=\"premium-option\" key={name}>\n      <h4 className=\"membership_title\">\n        {name}\n        <MembershipBadge membershipName={name} />\n      </h4>\n\n      <h4 className=\"membership_subtitle\">{__(MEMBERSHIP_CONSTS.DESCRIPTIONS[name])}</h4>\n\n      {children}\n    </div>\n  );\n};\n\ntype PurchaseProps = {\n  preferredCurrency: string,\n  membership: CreatorMembership,\n  stripePrice: StripePriceDetails,\n  doOpenModal: (modalId: string, {}) => void,\n};\n\nconst PurchaseFields = (props: PurchaseProps) => {\n  const { preferredCurrency, membership, stripePrice, doOpenModal } = props;\n\n  const {\n    currency: priceCurrency,\n    unit_amount: amount,\n    recurring: { interval },\n  } = stripePrice;\n  const currency = priceCurrency.toUpperCase();\n\n  return (\n    currency === preferredCurrency && (\n      <React.Fragment key={membership.Membership.id}>\n        <h4 className=\"membership_info\">\n          <b>{__('Interval')}:</b> {__(MEMBERSHIP_CONSTS.INTERVALS[interval])}\n        </h4>\n\n        <h4 className=\"membership_info\">\n          <b>{__('Price')}:</b> {currency + ' ' + STRIPE.CURRENCY[currency].symbol}\n          {amount / 100} / {__(MEMBERSHIP_CONSTS.INTERVALS[interval])}\n        </h4>\n\n        <Button\n          button=\"primary\"\n          onClick={() => doOpenModal(MODALS.CONFIRM_ODYSEE_MEMBERSHIP, { membership, price: stripePrice })}\n          className=\"membership_button\"\n          label={__('Join via %interval% membership', { interval: __(interval) })}\n          icon={ICONS.FINANCE}\n        />\n      </React.Fragment>\n    )\n  );\n};\n\nexport default PremiumOption;\n","import { connect } from 'react-redux';\nimport { doOpenModal } from 'redux/actions/app';\nimport { selectPreferredCurrency } from 'redux/selectors/settings';\nimport { doOpenCancelationModalForMembership } from 'redux/actions/memberships';\n\nimport PremiumOption from './view';\n\nconst select = (state, props) => ({\n  preferredCurrency: selectPreferredCurrency(state),\n});\n\nconst perform = {\n  doOpenModal,\n  doOpenCancelationModalForMembership,\n};\n\nexport default connect(select, perform)(PremiumOption);\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","// @flow\nimport React from 'react';\nimport { ODYSEE_CHANNEL } from 'constants/channels';\nimport * as ICONS from 'constants/icons';\nimport usePersistedState from 'effects/use-persisted-state';\nimport Page from 'component/page';\nimport Spinner from 'component/spinner';\nimport Card from 'component/common/card';\nimport MembershipSplash from 'component/membershipSplash';\nimport Button from 'component/button';\nimport ChannelSelector from 'component/channelSelector';\nimport HelpText from './internal/help-text';\nimport ClearMembershipDataButton from 'component/clearMembershipData';\nimport PremiumOption from './internal/premiumOption';\nimport './style.scss';\n\ntype Props = {\n  // -- redux --\n  mineFetched: boolean,\n  validMemberships: ?MembershipTiers,\n  activeMemberships: ?MembershipTiers,\n  purchasedMemberships: ?MembershipTiers,\n  canceledMemberships: ?MembershipTiers,\n  membershipOptions: ?CreatorMemberships,\n  doMembershipList: (params: MembershipListParams) => Promise<CreatorMemberships>,\n};\n\nconst OdyseeMembershipPage = (props: Props) => {\n  const {\n    // -- redux --\n    mineFetched,\n    validMemberships,\n    activeMemberships,\n    purchasedMemberships,\n    canceledMemberships,\n    membershipOptions,\n    doMembershipList,\n  } = props;\n\n  const [hasShownModal, setHasShownModal] = React.useState(false);\n  const [showHelp, setShowHelp] = usePersistedState('premium-help-seen', true);\n\n  React.useEffect(() => {\n    doMembershipList({ channel_name: ODYSEE_CHANNEL.NAME, channel_id: ODYSEE_CHANNEL.ID });\n  }, [doMembershipList]);\n\n  // we are still waiting from the backend if any of these are undefined\n  const stillWaitingFromBackend = membershipOptions === undefined || !mineFetched;\n\n  const urlSearchParams = new URLSearchParams(window.location.search);\n  const interval = urlSearchParams.get('interval') || undefined;\n  const planValue = urlSearchParams.get('plan') || undefined;\n\n  // add a bit of a delay otherwise it's a bit jarring\n  const timeoutValue = 300;\n\n  // if user already selected plan, wait a bit (so it's not jarring) and open modal\n  React.useEffect(() => {\n    if (!stillWaitingFromBackend && planValue) {\n      const delayTimeout = setTimeout(() => {\n        // clear query params\n        window.history.replaceState(null, null, window.location.pathname);\n\n        setHasShownModal(true);\n\n        // open confirm purchase\n        // $FlowFixMe\n        document.querySelector('[plan=\"' + planValue + '\"][interval=\"' + interval + '\"]').click();\n      }, timeoutValue);\n\n      return () => clearTimeout(delayTimeout);\n    }\n  }, [stillWaitingFromBackend, planValue, interval]);\n\n  if (stillWaitingFromBackend) {\n    return (\n      <Page className=\"premium-wrapper\">\n        <div className=\"card-stack\">\n          <div className=\"main--empty\">\n            <Spinner />\n          </div>\n        </div>\n      </Page>\n    );\n  }\n\n  if (purchasedMemberships?.length === 0 && !planValue && !hasShownModal) {\n    return (\n      <Page className=\"premium-wrapper\">\n        <MembershipSplash pageLocation=\"confirmPage\" />\n      </Page>\n    );\n  }\n\n  /*\n  function openExternal(uri) {\n    if (!window.odysee.build.googlePlay) {\n      window.odysee.functions.history.push(uri);\n    } else {\n      window.odysee.functions.initBrowser(uri, 'external');\n    }\n  }\n  */\n\n  return (\n    <Page className=\"premium-wrapper card-stack\">\n      <Card title={__('Odysee Premium')} subtitle={<ChannelSelector />}>\n        <div className=\"card-stack\">\n          <Card\n            className=\"premium-explanation-text\"\n            title={__('Get More Information')}\n            titleActions={\n              <Button button=\"close\" icon={showHelp ? ICONS.UP : ICONS.DOWN} onClick={() => setShowHelp(!showHelp)} />\n            }\n            subtitle={__('Expand to learn more about how Odysee Premium works')}\n            body={showHelp && <HelpText />}\n          />\n\n          {membershipOptions && (!validMemberships || validMemberships.length === 0) && (\n            <Card title={__('Available Memberships')}>\n              {membershipOptions.map((membership) => (\n                <PremiumOption key={membership.Membership.name} membershipPurchase={membership} />\n              ))}\n            </Card>\n          )}\n\n          {activeMemberships && activeMemberships.length > 0 && (\n            <Card title={__('Your Active Memberships')}>\n              {activeMemberships.map((membership) => (\n                <PremiumOption key={membership.MembershipDetails.name} membershipView={membership} />\n              ))}\n            </Card>\n          )}\n\n          {canceledMemberships && (\n            <Card title={__('Canceled Memberships')}>\n              {canceledMemberships.length === 0 ? (\n                <h4>{__('You currently have no canceled memberships')}</h4>\n              ) : (\n                canceledMemberships.map((membership) => (\n                  <PremiumOption key={membership.MembershipDetails.name} membershipView={membership} />\n                ))\n              )}\n            </Card>\n          )}\n        </div>\n      </Card>\n\n      <ClearMembershipDataButton purchasedMemberships={purchasedMemberships} />\n    </Page>\n  );\n};\n\nexport default OdyseeMembershipPage;\n","import { connect } from 'react-redux';\nimport { doMembershipList } from 'redux/actions/memberships';\nimport {\n  selectMembershipMineFetched,\n  selectMyActiveMembershipsForCreatorId,\n  selectMyValidMembershipsForCreatorId,\n  selectMyPurchasedMembershipsForChannelClaimId,\n  selectMyCanceledMembershipsForChannelClaimId,\n  selectOdyseeMembershipTiers,\n} from 'redux/selectors/memberships';\nimport { ODYSEE_CHANNEL } from 'constants/channels';\n\nimport OdyseeMembership from './view';\n\nconst select = (state) => ({\n  mineFetched: selectMembershipMineFetched(state),\n  validMemberships: selectMyValidMembershipsForCreatorId(state, ODYSEE_CHANNEL.ID),\n  activeMemberships: selectMyActiveMembershipsForCreatorId(state, ODYSEE_CHANNEL.ID),\n  purchasedMemberships: selectMyPurchasedMembershipsForChannelClaimId(state, ODYSEE_CHANNEL.ID),\n  canceledMemberships: selectMyCanceledMembershipsForChannelClaimId(state, ODYSEE_CHANNEL.ID),\n  membershipOptions: selectOdyseeMembershipTiers(state),\n});\n\nconst perform = {\n  doMembershipList,\n};\n\nexport default connect(select, perform)(OdyseeMembership);\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"[dir] .premium-wrapper .membership_title .comment__badge .icon{margin-bottom:-6px}[dir] .premium-wrapper .premium-option{background-color:rgba(var(--color-header-button-base),.6);border-radius:var(--border-radius);margin-bottom:var(--spacing-m);padding:var(--spacing-m)}.premium-wrapper .premium-option .button{max-width:100%}[dir] .premium-wrapper .premium-explanation-text{margin-bottom:21px}.premium-wrapper .premium-explanation-text .icon--ChevronDown,.premium-wrapper .premium-explanation-text .icon--ChevronUp{height:24px;width:24px}[dir] .premium-wrapper .premium-explanation-text .icon--ChevronUp{margin-bottom:2px;margin-top:-2px}[dir] .premium-wrapper .premium-explanation-text .card__main-actions{margin-bottom:15px}.premium-wrapper .premium-explanation-text .button--close{width:34px}[dir] .premium-wrapper .premium-explanation-text .button--close{margin-top:3px}[dir] .premium-wrapper .premium-explanation-text .section__subtitle{margin-bottom:25px}[dir=ltr] .premium-wrapper .premium-explanation-text li{margin-left:var(--spacing-l)}[dir=rtl] .premium-wrapper .premium-explanation-text li{margin-right:var(--spacing-l)}[dir] .premium-wrapper .cancel-membership-button{background-color:var(--color-background);margin-top:var(--spacing-s)}[dir] .premium-wrapper .cancel-membership-button:hover{background-color:var(--color-primary)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../ui/page/odyseeMembership/style.scss\"],\"names\":[],\"mappings\":\"AAGM,+DACE,kBAAA,CAIN,uCACE,yDAAA,CACA,kCAAA,CAEA,8BAAA,CADA,wBACA,CAEA,yCACE,cAAA,CAIJ,iDACE,kBAAA,CAEA,0HAEE,WAAA,CACA,UAAA,CAEF,kEAEE,iBAAA,CADA,eACA,CAGF,qEACE,kBAAA,CAGF,0DAEE,UAAA,CAFF,gEACE,cACA,CAGF,oEACE,kBAAA,CAGF,wDACE,4BAAA,CADF,wDACE,6BAAA,CAIJ,iDACE,wCAAA,CACA,2BAAA,CACA,uDACE,qCAAA\",\"sourcesContent\":[\".premium-wrapper {\\n  .membership_title {\\n    .comment__badge {\\n      .icon {\\n        margin-bottom: -6px;\\n      }\\n    }\\n  }\\n  .premium-option {\\n    background-color: rgba(var(--color-header-button-base), 0.6);\\n    border-radius: var(--border-radius);\\n    padding: var(--spacing-m);\\n    margin-bottom: var(--spacing-m);\\n\\n    .button {\\n      max-width: 100%;\\n    }\\n  }\\n\\n  .premium-explanation-text {\\n    margin-bottom: 21px;\\n\\n    .icon--ChevronDown,\\n    .icon--ChevronUp {\\n      height: 24px;\\n      width: 24px;\\n    }\\n    .icon--ChevronUp {\\n      margin-top: -2px;\\n      margin-bottom: 2px;\\n    }\\n\\n    .card__main-actions {\\n      margin-bottom: 15px;\\n    }\\n\\n    .button--close {\\n      margin-top: 3px;\\n      width: 34px;\\n    }\\n\\n    .section__subtitle {\\n      margin-bottom: 25px;\\n    }\\n\\n    li {\\n      margin-left: var(--spacing-l);\\n    }\\n  }\\n\\n  .cancel-membership-button {\\n    background-color: var(--color-background);\\n    margin-top: var(--spacing-s);\\n    &:hover {\\n      background-color: var(--color-primary);\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["props","purchasedMemberships","doMembershipClearData","process","perform","connect","ClearMembershipDataButton","FirstPaneWrapper","singlePane","children","React","className","TitleWrapper","isPageTitle","smallTitle","accessStatus","AccessIndicator","par","Tooltip","title","__","classnames","locked","status","unlocked","purchased","Icon","icon","ICONS","dangerouslySetInnerHTML","__html","child","_children$props","_children$props2","_children$props3","transformer","subtitle","titleActions","id","body","actions","_props$isPageTitle","_props$isBodyList","isBodyList","_props$smallTitle","defaultExpand","nag","_onClick","onClick","secondPane","slimHeader","background","backgroundImage","headerActions","gridHeader","_useState2","_slicedToArray","useState","expanded","setExpanded","expandable","undefined","role","Boolean","e","stopPropagation","style","sectionIcon","Button","button","withCreditCard","pageLocation","interval","plan","label","navigate","concat","PAGES","EarlyAcessInfo","BadgeInfo","NoAdsInfo","preferredCurrency","width","height","src","AstronautAndFriends","OdyseePremium","I18nMessage","tokens","early_access","site_wide_badge","BadgePremium","premium_recurrence","premium_price","MEMBERSHIP_CONSTS","url","window","cordova","odysee","functions","history","push","BadgePremiumPlus","JoinButton","doOpenModal","state","selectPreferredCurrency","MembershipSplash","Component","_React$useContext","hasSavedCard","isAuthenticated","doGetCustomerStatus","modalState","componentProps","_objectWithoutProperties","_excluded","fetchPending","modal","ModalContext","disabled","requiresAuth","Spinner","type","MODALS","_objectSpread","previousModal","previousProps","modalProps","select","selectHasSavedCard","selectUserVerifiedEmail","Wrapper","name","key","MembershipBadge","membershipName","PurchaseFields","membership","stripePrice","priceCurrency","currency","amount","unit_amount","recurring","toUpperCase","Membership","STRIPE","symbol","price","membershipPurchase","membershipView","doOpenCancelationModalForMembership","_membership","NewPrices","purchaseFieldsProps","map","_ref","Price","StripePrice","_extends","_membership2","_Membership","MembershipDetails","Subscription","isCancelled","membershipStillValid","current_period_end","Date","now","formatDateToMonthDayAndYear","created_at","canceled_at","membership_id","PremiumOption","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","mineFetched","validMemberships","activeMemberships","canceledMemberships","membershipOptions","doMembershipList","_React$useState2","hasShownModal","setHasShownModal","_usePersistedState2","usePersistedState","showHelp","setShowHelp","channel_name","ODYSEE_CHANNEL","channel_id","stillWaitingFromBackend","urlSearchParams","URLSearchParams","location","search","get","planValue","delayTimeout","setTimeout","replaceState","pathname","document","querySelector","click","clearTimeout","Page","length","Card","ChannelSelector","HelpText","selectMembershipMineFetched","selectMyValidMembershipsForCreatorId","selectMyActiveMembershipsForCreatorId","selectMyPurchasedMembershipsForChannelClaimId","selectMyCanceledMembershipsForChannelClaimId","selectOdyseeMembershipTiers","OdyseeMembership","___CSS_LOADER_EXPORT___","module"],"sourceRoot":""}