{"version":3,"file":"modalStripeCard-7232bc7872d929f2f3a6.js","mappings":"yxCAyEA,QArDwB,SAACA,GACvB,IAAQC,EAAyED,EAAzEC,cAAeC,EAA0DF,EAA1DE,cAAeC,EAA2CH,EAA3CG,aAAcC,EAA6BJ,EAA7BI,YAAaC,EAAgBL,EAAhBK,YAErBC,EAAAC,EAAhBC,EAAAA,WAAgB,GAArCC,EAAMH,EAAA,GAAEI,EAASJ,EAAA,GAgBxB,OACEE,EAAAA,cAACG,EAAAA,GAAK,CAACC,UAAWH,OAASI,EAAYT,EAAaU,QAAM,EAACC,KAAK,OAAOC,UAAU,mBAC/ER,EAAAA,cAACS,EAAAA,QAAM,CAACC,OAAO,OAAOF,UAAU,gBAAgBG,MAAOC,EAAG,WAAYC,KAAMC,EAAAA,KAAYC,QAhB5F,WACEnB,IAGIH,GAAeI,EAAYJ,EAAeC,EAChD,IAaIM,EAAAA,cAACgB,EAAAA,EAAI,CACHC,MACEtB,EACIiB,EAAG,gBACHM,OAAOC,UAAYD,OAAOE,OAAOC,MAAMC,WACvCV,EAAG,iBACHA,EAAG,eAETW,KACEL,OAAOC,UAAYD,OAAOE,OAAOC,MAAMC,WACrCtB,EAAAA,cAACwB,EAAAA,EAAU,CAACtB,UAAWA,EAAWuB,SAAO,IAEzCb,EACE,yOAINc,QACE1B,EAAAA,cAAA,OAAKQ,UAAU,oBACZU,OAAOC,UAAYD,OAAOE,OAAOC,MAAMC,YACtCtB,EAAAA,cAACS,EAAAA,QAAM,CAACC,OAAO,UAAUC,MAAOC,EAAG,MAAOG,QA/BtD,WACEnB,IAGIH,GAAeI,EAAYJ,EAAeC,EAChD,EA0B8EiC,SAAU1B,IAAWN,IAEzFK,EAAAA,cAACS,EAAAA,QAAM,CAACC,OAAO,OAAOC,MAAOC,EAAG,UAAWG,QAASnB,EAAa+B,SAAU1B,OAMvF,ECjEA,IAIM2B,EAAU,CACd/B,YAAAA,EAAAA,GACAD,YAAAA,EAAAA,IAGF,SAAeiC,EAAAA,EAAAA,KATA,SAACC,GAAK,MAAM,CACzBnC,cAAcoC,EAAAA,EAAAA,IAAmBD,GAClC,GAO8BF,EAA/B,CAAwCI,E","sources":["webpack://odysee.com/../ui/modal/modalStripeCard/view.jsx","webpack://odysee.com/../ui/modal/modalStripeCard/index.js"],"sourcesContent":["// @flow\nimport React from 'react';\n\nimport * as ICONS from 'constants/icons';\n\nimport { Modal } from 'modal/modal';\n\nimport Card from 'component/common/card';\nimport Button from 'component/button';\nimport StripeCard from 'component/settingsStripeCard';\n\ntype Props = {\n  previousModal?: string, // in case this modal was called from another modal\n  previousProps?: any,\n  // -- redux --\n  hasSavedCard: boolean,\n  doHideModal: () => void,\n  doOpenModal: (modalType: string, props?: any) => void,\n};\n\nconst ModalStripeCard = (props: Props) => {\n  const { previousModal, previousProps, hasSavedCard, doHideModal, doOpenModal } = props;\n\n  const [isBusy, setIsBusy] = React.useState();\n\n  function handleGoBack() {\n    doHideModal();\n    // makes sense to open previous and continue only on confirm,\n    // in case I give up, close/cancel will just abort\n    if (previousModal) doOpenModal(previousModal, previousProps);\n  }\n\n  function handleConfirm() {\n    doHideModal();\n    // makes sense to open previous and continue only on confirm,\n    // in case I give up, close/cancel will just abort\n    if (previousModal) doOpenModal(previousModal, previousProps);\n  }\n\n  return (\n    <Modal onAborted={isBusy ? undefined : doHideModal} isOpen type=\"card\" className=\"modal--add-card\">\n      <Button button=\"link\" className=\"padding-small\" label={__('Go Back')} icon={ICONS.BACK} onClick={handleGoBack} />\n\n      <Card\n        title={\n          hasSavedCard\n            ? __('Card Details')\n            : window.cordova && !window.odysee.build.googlePlay\n            ? __('Add your Card')\n            : __(\"We're sorry\")\n        }\n        body={\n          window.cordova && !window.odysee.build.googlePlay ? (\n            <StripeCard setIsBusy={setIsBusy} isModal />\n          ) : (\n            __(\n              'Unfortunately Google does not allow us to process payments in this version of the app. You can get a more open version of the app at https://apk.odysee.tv or F-Droid. Alternatively you can also just visit Odysee.com in a browser.'\n            )\n          )\n        }\n        actions={\n          <div className=\"section__actions\">\n            {window.cordova && !window.odysee.build.googlePlay && (\n              <Button button=\"primary\" label={__('OK')} onClick={handleConfirm} disabled={isBusy || !hasSavedCard} />\n            )}\n            <Button button=\"link\" label={__('Cancel')} onClick={doHideModal} disabled={isBusy} />\n          </div>\n        }\n      />\n    </Modal>\n  );\n};\n\nexport default ModalStripeCard;\n","import { connect } from 'react-redux';\nimport { doOpenModal, doHideModal } from 'redux/actions/app';\nimport { selectHasSavedCard } from 'redux/selectors/stripe';\n\nimport ModalStripeCard from './view';\n\nconst select = (state) => ({\n  hasSavedCard: selectHasSavedCard(state),\n});\n\nconst perform = {\n  doOpenModal,\n  doHideModal,\n};\n\nexport default connect(select, perform)(ModalStripeCard);\n"],"names":["props","previousModal","previousProps","hasSavedCard","doHideModal","doOpenModal","_React$useState2","_slicedToArray","React","isBusy","setIsBusy","Modal","onAborted","undefined","isOpen","type","className","Button","button","label","__","icon","ICONS","onClick","Card","title","window","cordova","odysee","build","googlePlay","body","StripeCard","isModal","actions","disabled","perform","connect","state","selectHasSavedCard","ModalStripeCard"],"sourceRoot":""}