{"version":3,"file":"modalWalletUnlock-70959e4b450ed7c73e76.js","mappings":"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","sources":["webpack://odysee.com/../ui/modal/modalWalletUnlock/view.jsx","webpack://odysee.com/../ui/modal/modalWalletUnlock/index.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { Form, FormField } from 'component/common/form';\nimport { Modal } from 'modal/modal';\nimport Button from 'component/button';\nimport { getSavedPassword, setSavedPassword } from 'util/saved-passwords';\n\ntype Props = {\n  quit: () => void,\n  closeModal: () => void,\n  unlockWallet: (?string) => void,\n  walletUnlockSucceded: boolean,\n  shouldTryWithBlankPassword: boolean,\n};\n\ntype State = {\n  password: string,\n  rememberPassword: boolean,\n};\n\nclass ModalWalletUnlock extends React.PureComponent<Props, State> {\n  state = {\n    password: '',\n    rememberPassword: false,\n  };\n\n  componentDidMount() {\n    const { unlockWallet, shouldTryWithBlankPassword } = this.props;\n\n    getSavedPassword().then(p => {\n      if (p !== null) {\n        this.setState({ password: p, rememberPassword: true });\n        unlockWallet(p);\n      } else if (shouldTryWithBlankPassword) {\n        unlockWallet('');\n      }\n    });\n  }\n  componentDidUpdate() {\n    const { props } = this;\n\n    if (props.walletUnlockSucceded === true) {\n      setSavedPassword(this.state.password, this.state.rememberPassword);\n      props.closeModal();\n    }\n  }\n\n  onChangePassword(event: SyntheticInputEvent<*>) {\n    this.setState({ password: event.target.value });\n  }\n\n  onChangeRememberPassword(event: SyntheticInputEvent<>) {\n    this.setState({ rememberPassword: event.target.checked });\n  }\n\n  render() {\n    const { quit, unlockWallet, walletUnlockSucceded } = this.props;\n\n    const { password, rememberPassword } = this.state;\n    return (\n      <Modal\n        isOpen\n        title={__('Unlock wallet')}\n        contentLabel={__('Unlock wallet')}\n        type=\"confirm\"\n        shouldCloseOnOverlayClick={false}\n        confirmButtonLabel={__('Unlock')}\n        abortButtonLabel={__('Exit')}\n        onConfirmed={() => unlockWallet(password)}\n        onAborted={quit}\n      >\n        <p>\n          {__('Your wallet has been encrypted with a local password. Please enter your wallet password to proceed.')}{' '}\n          <Button button=\"link\" label={__('Learn more')} href=\"https://lbry.com/faq/wallet-encryption\" />.\n        </p>\n        <Form className=\"section\" onSubmit={() => unlockWallet(password)}>\n          <FormField\n            autoFocus\n            error={walletUnlockSucceded === false ? 'Incorrect Password' : false}\n            label={__('Wallet Password')}\n            type=\"password\"\n            name=\"wallet-password\"\n            onChange={event => this.onChangePassword(event)}\n            value={password || ''}\n          />\n          <fieldset-section>\n            <FormField\n              label={__('Remember Password')}\n              type=\"checkbox\"\n              name=\"wallet-remember-password\"\n              onChange={event => this.onChangeRememberPassword(event)}\n              checked={rememberPassword}\n            />\n          </fieldset-section>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default ModalWalletUnlock;\n","import { connect } from 'react-redux';\nimport { doWalletUnlock } from 'redux/actions/wallet';\nimport { selectWalletUnlockSucceeded } from 'redux/selectors/wallet';\nimport { doQuit, doHideModal } from 'redux/actions/app';\nimport ModalWalletUnlock from './view';\n\nconst select = (state) => ({\n  walletUnlockSucceded: selectWalletUnlockSucceeded(state),\n});\n\nconst perform = (dispatch) => ({\n  closeModal: () => dispatch(doHideModal()),\n  quit: () => dispatch(doQuit()),\n  unlockWallet: (password) => dispatch(doWalletUnlock(password)),\n});\n\nexport default connect(select, perform)(ModalWalletUnlock);\n"],"names":["_React$PureComponent","_inherits","ModalWalletUnlock","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_assertThisInitialized","password","rememberPassword","key","value","_this2","_this$props","this","props","unlockWallet","shouldTryWithBlankPassword","getSavedPassword","then","p","setState","walletUnlockSucceded","setSavedPassword","state","closeModal","event","target","checked","_this3","_this$props2","quit","_this$state","React","Modal","isOpen","title","__","contentLabel","type","shouldCloseOnOverlayClick","confirmButtonLabel","abortButtonLabel","onConfirmed","onAborted","Button","button","label","href","Form","className","onSubmit","FormField","autoFocus","error","name","onChange","onChangePassword","onChangeRememberPassword","connect","selectWalletUnlockSucceeded","dispatch","doHideModal","doQuit","doWalletUnlock"],"sourceRoot":""}