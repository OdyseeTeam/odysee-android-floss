{"version":3,"file":"modalSupportsLiquidate-81c27f21843af53efc53.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/common/card.jsx","webpack://odysee.com/../ui/component/supportsLiquidate/view.jsx","webpack://odysee.com/../ui/component/supportsLiquidate/index.js","webpack://odysee.com/../ui/modal/modalSupportsLiquidate/index.js","webpack://odysee.com/../ui/modal/modalSupportsLiquidate/view.jsx"],"sourcesContent":["// @flow\nimport type { Node } from 'react';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Icon from 'component/common/icon';\nimport Button from 'component/button';\nimport * as ICONS from 'constants/icons';\n// import twemoji from 'twemoji';\nimport Tooltip from 'component/common/tooltip';\n\ntype Props = {\n  title?: string | Node,\n  subtitle?: string | Node,\n  titleActions?: string | Node,\n  id?: string,\n  body?: string | Node,\n  actions?: string | Node,\n  icon?: string,\n  className?: string,\n  isPageTitle?: boolean,\n  noTitleWrap?: boolean,\n  isBodyList?: boolean,\n  defaultExpand?: boolean,\n  nag?: Node,\n  smallTitle?: boolean,\n  onClick?: () => void,\n  children?: Node,\n  secondPane?: Node,\n  slimHeader?: boolean,\n  background?: boolean,\n  backgroundImage?: string,\n  singlePane?: boolean,\n  headerActions?: Node,\n  gridHeader?: boolean,\n  accessStatus?: string,\n};\n\nfunction Card(props: Props) {\n  const {\n    title,\n    subtitle,\n    titleActions,\n    id,\n    body,\n    actions,\n    icon,\n    className,\n    isPageTitle = false,\n    isBodyList = false,\n    // noTitleWrap = false,\n    smallTitle = false,\n    defaultExpand,\n    nag,\n    onClick,\n    children,\n    secondPane,\n    slimHeader,\n    background,\n    backgroundImage,\n    singlePane,\n    headerActions,\n    accessStatus,\n    gridHeader,\n  } = props;\n\n  const [expanded, setExpanded] = useState(defaultExpand);\n  const expandable = defaultExpand !== undefined;\n\n  return (\n    <section\n      role={onClick ? 'button' : undefined}\n      className={classnames(className, 'card', {\n        'card__multi-pane': Boolean(secondPane),\n        'card--background': background,\n      })}\n      id={id}\n      onClick={(e) => {\n        if (onClick) {\n          onClick();\n          e.stopPropagation();\n        }\n      }}\n    >\n      {backgroundImage && (\n        <div\n          className=\"background\"\n          style={{\n            backgroundImage:\n              'url(https://thumbnails.odycdn.com/optimize/s:390:0/quality:85/plain/' + backgroundImage + ')',\n          }}\n        />\n      )}\n      <FirstPaneWrapper singlePane={singlePane}>\n        {(title || subtitle) && (\n          <div\n            className={classnames('card__header--between', {\n              'card__header--slim': slimHeader,\n              'card__header--grid': gridHeader,\n            })}\n          >\n            <div className={classnames('card__title-section', { 'card__title-section--body-list': isBodyList })}>\n              {icon && <Icon sectionIcon icon={icon} />}\n\n              <div className=\"card__title-text\">\n                <TitleWrapper isPageTitle={isPageTitle} smallTitle={smallTitle} accessStatus={accessStatus}>\n                  {title}\n                </TitleWrapper>\n\n                {subtitle && (\n                  <div className={classnames('card__subtitle', { 'card__subtitle--small': smallTitle })}>\n                    {subtitle}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {(titleActions || expandable) && (\n              <div className=\"card__title-actions-container\">\n                {titleActions && (\n                  <div\n                    className={classnames('card__title-actions', {\n                      'card__title-actions--small': smallTitle,\n                    })}\n                  >\n                    {titleActions}\n                  </div>\n                )}\n                {expandable && (\n                  <div className=\"card__title-actions\">\n                    <Button\n                      button=\"alt\"\n                      aria-expanded={expanded}\n                      aria-label={expanded ? __('Less') : __('More')}\n                      icon={expanded ? ICONS.SUBTRACT : ICONS.ADD}\n                      onClick={() => setExpanded(!expanded)}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n\n            {headerActions}\n          </div>\n        )}\n\n        {(!expandable || (expandable && expanded)) && (\n          <>\n            {body && (\n              <div\n                className={classnames('card__body', {\n                  'card__body--no-title': !title && !subtitle,\n                  'card__body--list': isBodyList,\n                })}\n              >\n                {body}\n              </div>\n            )}\n            {actions && <div className=\"card__main-actions\">{actions}</div>}\n            {children && <div className=\"card__main-actions\">{children}</div>}\n          </>\n        )}\n\n        {nag}\n      </FirstPaneWrapper>\n\n      {secondPane && <div className=\"card__second-pane\">{secondPane}</div>}\n    </section>\n  );\n}\n\ntype FirstPaneProps = {\n  singlePane?: boolean,\n  children: any,\n};\n\nconst FirstPaneWrapper = (props: FirstPaneProps) => {\n  const { singlePane, children } = props;\n\n  return singlePane ? children : <div className=\"card__first-pane\">{children}</div>;\n};\n\ntype TitleProps = {\n  isPageTitle?: boolean,\n  smallTitle?: boolean,\n  children?: any,\n  emoji?: any,\n  accessStatus?: string,\n};\n\nconst TitleWrapper = (props: TitleProps) => {\n  const { isPageTitle, smallTitle, children, accessStatus } = props;\n\n  /*\n  const Twemoji = ({ emoji }) => (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: twemoji.parse(emoji, {\n          folder: 'svg',\n          ext: '.svg',\n        }),\n      }}\n    />\n  );\n  */\n\n  const AccessIndicator = (par: any) => {\n    return (\n      <Tooltip title={__('This is a members-only content')}>\n        <div\n          className={classnames('content-access-indicator', {\n            locked: par.status === 'locked',\n            unlocked: par.status === 'unlocked',\n            purchased: par.status === 'purchased',\n          })}\n        >\n          <Icon icon={par.status === 'locked' ? ICONS.LOCK : ICONS.UNLOCK} />\n        </div>\n      </Tooltip>\n    );\n  };\n\n  /*\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return <Twemoji emoji={children?.props?.children[child]} />;\n      }\n    }\n    return children;\n  }\n  */\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return children?.props?.children[child];\n      }\n    }\n    return children;\n  }\n\n  return isPageTitle ? (\n    <h1 className=\"card__title\">\n      {accessStatus && <AccessIndicator status={accessStatus} />}\n      <font dangerouslySetInnerHTML={{ __html: transformer(children) }} />\n    </h1>\n  ) : (\n    <h2 className={classnames('card__title', { 'card__title--small': smallTitle })}>{children}</h2>\n  );\n};\n\nexport default Card;\n","// @flow\nimport * as ICONS from 'constants/icons';\nimport React, { useEffect, useState } from 'react';\nimport CreditAmount from 'component/common/credit-amount';\nimport Button from 'component/button';\nimport { Form, FormField } from 'component/common/form';\nimport Card from 'component/common/card';\nimport I18nMessage from 'component/i18nMessage';\nimport ErrorText from 'component/common/error-text';\n\ntype Props = {\n  balance: number,\n  totalBalance: number,\n  claimsBalance: number,\n  supportsBalance: number,\n  tipsBalance: number,\n  claim: any,\n  handleClose: () => void,\n  abandonSupportForClaim: (string, string, boolean | string, boolean) => any,\n  abandonClaimError: ?string,\n};\n\nconst SupportsLiquidate = (props: Props) => {\n  const { claim, abandonSupportForClaim, handleClose, abandonClaimError } = props;\n  const [previewBalance, setPreviewBalance] = useState(undefined);\n  const [amount, setAmount] = useState(-1);\n  const [error, setError] = useState(false);\n  const initialMessage = __('How much would you like to unlock?');\n  const [message, setMessage] = useState(initialMessage);\n  const keep =\n    amount >= 0\n      ? Boolean(previewBalance) && Number.parseFloat(String(Number(previewBalance) - Number(amount))).toFixed(8)\n      : Boolean(previewBalance) && Number.parseFloat(String((Number(previewBalance) / 4) * 3)).toFixed(8); // default unlock 25%\n  const claimId = claim && claim.claim_id;\n  const type = claim.value_type;\n\n  useEffect(() => {\n    if (claimId && abandonSupportForClaim) {\n      abandonSupportForClaim(claimId, type, false, true).then((r) => {\n        setPreviewBalance(r.total_input);\n      });\n    }\n  }, [abandonSupportForClaim, claimId, type, setPreviewBalance]);\n\n  function handleSubmit() {\n    abandonSupportForClaim(claimId, type, keep, false).then((r) => {\n      if (r) {\n        handleClose();\n      }\n    });\n  }\n\n  function handleChange(a) {\n    if (a === undefined || isNaN(Number(a))) {\n      setMessage(__('Amount must be a number'));\n      setError(true);\n      setAmount(0);\n    } else if (a === '') {\n      setAmount(0);\n      setError(true);\n      setMessage(__('Amount cannot be blank'));\n    } else if (Number(a) > Number(previewBalance)) {\n      setMessage(__('Amount cannot be more than available'));\n      setError(false);\n    } else if (Number(a) === Number(previewBalance)) {\n      setMessage(__(`She's about to close up the library!`));\n      setAmount(a);\n      setError(false);\n    } else if (Number(a) > Number(previewBalance) / 2) {\n      setMessage(__('Your content will do better with more staked on it'));\n      setAmount(a);\n      setError(false);\n    } else if (Number(a) === 0) {\n      setMessage(__('Amount cannot be zero'));\n      setAmount(0);\n      setError(true);\n    } else if (Number(a) <= Number(previewBalance) / 2) {\n      setMessage(__('A prudent choice'));\n      setAmount(Number(a));\n      setError(false);\n    } else {\n      setMessage(initialMessage);\n      setAmount(a);\n      setError(false);\n    }\n  }\n\n  return (\n    <Card\n      icon={ICONS.UNLOCK}\n      title={__('Unlock tips')}\n      subtitle={\n        <>\n          <p>\n            {__('You can unlock all or some of these LBRY Credits at any time.')}{' '}\n            {__('Keeping it locked improves the trust and discoverability of your content.')}\n          </p>\n          <p>\n            <I18nMessage\n              tokens={{\n                learn_more: (\n                  <Button\n                    button=\"link\"\n                    label={__('Learn More')}\n                    href=\"https://help.odysee.tv/category-blockchain/category-staking/increase/\"\n                  />\n                ),\n              }}\n            >\n              It's usually only worth unlocking what you intend to use immediately. %learn_more%\n            </I18nMessage>\n          </p>\n        </>\n      }\n      actions={\n        <React.Fragment>\n          {abandonClaimError ? (\n            <div className=\"error__wrapper--no-overflow\">\n              <ErrorText>{abandonClaimError}</ErrorText>\n            </div>\n          ) : (\n            <>\n              <div className=\"section\">\n                <I18nMessage\n                  tokens={{\n                    amount: (\n                      <strong>\n                        <CreditAmount amount={Number(previewBalance)} precision={8} />\n                      </strong>\n                    ),\n                  }}\n                >\n                  %amount% available to unlock\n                </I18nMessage>\n              </div>\n              <div className=\"section\">\n                {previewBalance === 0 && <p>{__('No unlockable tips available')}</p>}\n                {previewBalance === undefined && <p>{__('Loading...')}</p>}\n                {previewBalance && (\n                  <Form onSubmit={handleSubmit}>\n                    <label htmlFor=\"supports_liquidate_range\">{__('Amount to unlock')}</label>\n                    <FormField\n                      name=\"supports_liquidate_range\"\n                      type={'range'}\n                      min={0}\n                      step={0.01}\n                      max={previewBalance}\n                      value={Number(amount) >= 0 ? amount : previewBalance / 4} // by default, set it to 25% of available\n                      onChange={(e) => handleChange(e.target.value)}\n                    />\n                    <label className=\"range__label\">\n                      <span>0</span>\n                      <span>{previewBalance / 2}</span>\n                      <span>{previewBalance}</span>\n                    </label>\n                    <FormField\n                      type=\"text\"\n                      value={amount >= 0 ? amount || '' : previewBalance && previewBalance / 4}\n                      helper={message}\n                      onChange={(e) => handleChange(e.target.value)}\n                    />\n                  </Form>\n                )}\n              </div>\n            </>\n          )}\n          <div className=\"section__actions\">\n            <Button\n              disabled={error}\n              button=\"primary\"\n              onClick={abandonClaimError ? handleClose : handleSubmit}\n              label={abandonClaimError ? __('Done') : __('Unlock')}\n            />\n          </div>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default SupportsLiquidate;\n","import { connect } from 'react-redux';\nimport {\n  selectBalance,\n  selectTotalBalance,\n  selectClaimsBalance,\n  selectSupportsBalance,\n  selectTipsBalance,\n  selectAbandonClaimSupportError,\n} from 'redux/selectors/wallet';\n\nimport { makeSelectClaimForUri } from 'redux/selectors/claims';\nimport { doSupportAbandonForClaim } from 'redux/actions/wallet';\nimport SupportsLiquidate from './view';\n\nconst select = (state, props) => ({\n  balance: selectBalance(state),\n  totalBalance: selectTotalBalance(state),\n  claimsBalance: selectClaimsBalance(state) || undefined,\n  supportsBalance: selectSupportsBalance(state) || undefined,\n  tipsBalance: selectTipsBalance(state) || undefined,\n  claim: makeSelectClaimForUri(props.uri)(state),\n  abandonClaimError: selectAbandonClaimSupportError(state),\n});\n\nconst perform = (dispatch) => ({\n  abandonSupportForClaim: (claimId, type, keep, preview) =>\n    dispatch(doSupportAbandonForClaim(claimId, type, keep, preview)),\n});\n\nexport default connect(select, perform)(SupportsLiquidate);\n","import { connect } from 'react-redux';\nimport { doHideModal } from 'redux/actions/app';\nimport { selectTransactionItems } from 'redux/selectors/wallet';\nimport ModalSupportsLiquidate from './view';\n\nconst select = (state) => ({\n  transactionItems: selectTransactionItems(state),\n});\n\nconst perform = (dispatch) => ({\n  closeModal: () => dispatch(doHideModal()),\n});\n\nexport default connect(select, perform)(ModalSupportsLiquidate);\n","// @flow\nimport React from 'react';\nimport { Modal } from 'modal/modal';\nimport SupportsLiquidate from 'component/supportsLiquidate';\n\ntype Props = {\n  closeModal: () => void,\n  uri: string,\n};\n\nexport default function ModalSupportsLiquidate(props: Props) {\n  const { closeModal, uri } = props;\n\n  return (\n    <Modal isOpen contentLabel={'Unlock tips'} type=\"card\" confirmButtonLabel=\"done\" onAborted={closeModal}>\n      <SupportsLiquidate uri={uri} handleClose={closeModal} />\n    </Modal>\n  );\n}\n"],"names":["FirstPaneWrapper","props","singlePane","children","React","className","TitleWrapper","isPageTitle","smallTitle","accessStatus","AccessIndicator","par","Tooltip","title","__","classnames","locked","status","unlocked","purchased","Icon","icon","ICONS","dangerouslySetInnerHTML","__html","child","_children$props","_children$props2","_children$props3","transformer","subtitle","titleActions","id","body","actions","_props$isPageTitle","_props$isBodyList","isBodyList","_props$smallTitle","defaultExpand","nag","_onClick","onClick","secondPane","slimHeader","background","backgroundImage","headerActions","gridHeader","_useState2","_slicedToArray","useState","expanded","setExpanded","expandable","undefined","role","Boolean","e","stopPropagation","style","sectionIcon","Button","button","claim","abandonSupportForClaim","handleClose","abandonClaimError","previewBalance","setPreviewBalance","_useState4","amount","setAmount","_useState6","error","setError","initialMessage","_useState8","message","setMessage","keep","Number","parseFloat","String","toFixed","claimId","claim_id","type","value_type","handleSubmit","then","r","handleChange","a","isNaN","useEffect","total_input","Card","I18nMessage","tokens","learn_more","label","href","ErrorText","CreditAmount","precision","Form","onSubmit","htmlFor","FormField","name","min","step","max","value","onChange","target","helper","disabled","connect","state","balance","selectBalance","totalBalance","selectTotalBalance","claimsBalance","selectClaimsBalance","supportsBalance","selectSupportsBalance","tipsBalance","selectTipsBalance","makeSelectClaimForUri","uri","selectAbandonClaimSupportError","dispatch","preview","doSupportAbandonForClaim","SupportsLiquidate","transactionItems","selectTransactionItems","closeModal","doHideModal","Modal","isOpen","contentLabel","confirmButtonLabel","onAborted"],"sourceRoot":""}