{"version":3,"file":"1749-c18c29e5b7db23e70c03.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/claimAbandonButton/index.js","webpack://odysee.com/../ui/component/claimAbandonButton/view.jsx","webpack://odysee.com/../ui/component/channelEdit/view.jsx","webpack://odysee.com/../ui/component/channelEdit/index.js","webpack://odysee.com/../ui/util/set-operations.js","webpack://odysee.com/../ui/component/tagsSearch/view.jsx","webpack://odysee.com/../ui/component/tagsSearch/index.js","webpack://odysee.com/../ui/component/walletSpendableBalanceHelp/view.jsx","webpack://odysee.com/../ui/component/walletSpendableBalanceHelp/index.js","webpack://odysee.com/../ui/redux/actions/tags.js"],"sourcesContent":["import { connect } from 'react-redux';\nimport { doOpenModal } from 'redux/actions/app';\nimport ClaimAbandonButton from './view';\n\nimport { makeSelectClaimForUri } from 'redux/selectors/claims';\n\nconst select = (state, props) => ({\n  claim: props.uri && makeSelectClaimForUri(props.uri)(state),\n});\n\nexport default connect(select, {\n  doOpenModal,\n})(ClaimAbandonButton);\n","// @flow\nimport * as MODALS from 'constants/modal_types';\nimport * as ICONS from 'constants/icons';\nimport React from 'react';\nimport Button from 'component/button';\n\ntype Props = {\n  doOpenModal: (string, {}) => void,\n  claim: Claim,\n  abandonActionCallback: (any) => void,\n  iconSize: number,\n};\n\nexport default function ClaimAbandonButton(props: Props) {\n  const { doOpenModal, claim, abandonActionCallback } = props;\n  const { value_type } = claim || {};\n  let buttonLabel;\n  if (value_type === 'channel') {\n    buttonLabel = __('Delete Channel');\n  } else if (value_type === 'collection') {\n    buttonLabel = __('Delete List');\n  } else if (value_type === 'stream') {\n    buttonLabel = __('Delete Publish');\n  }\n\n  function abandonClaim() {\n    doOpenModal(MODALS.CONFIRM_CLAIM_REVOKE, { claim: claim, cb: abandonActionCallback });\n  }\n\n  return <Button disabled={!claim} label={buttonLabel} button=\"secondary\" icon={ICONS.DELETE} onClick={abandonClaim} />;\n}\n","// @flow\nimport * as MODALS from 'constants/modal_types';\nimport * as ICONS from 'constants/icons';\nimport React from 'react';\nimport classnames from 'classnames';\nimport { FormField } from 'component/common/form';\nimport Button from 'component/button';\nimport TagsSearch from 'component/tagsSearch';\nimport { FF_MAX_CHARS_IN_DESCRIPTION } from 'constants/form-field';\nimport ErrorText from 'component/common/error-text';\nimport ChannelThumbnail from 'component/channelThumbnail';\nimport { isNameValid, parseURI } from 'util/lbryURI';\nimport ClaimAbandonButton from 'component/claimAbandonButton';\nimport { useHistory } from 'react-router-dom';\nimport { MINIMUM_PUBLISH_BID, INVALID_NAME_ERROR, ESTIMATED_FEE } from 'constants/claim';\nimport { Tabs, TabList, Tab, TabPanels, TabPanel } from 'component/common/tabs';\nimport Card from 'component/common/card';\nimport * as PAGES from 'constants/pages';\nimport * as PUBLISH from 'constants/publish';\nimport analytics from 'analytics';\nimport LbcSymbol from 'component/common/lbc-symbol';\nimport SUPPORTED_LANGUAGES from 'constants/supported_languages';\nimport WalletSpendableBalanceHelp from 'component/walletSpendableBalanceHelp';\nimport { SIMPLE_SITE, THUMBNAIL_CDN_SIZE_LIMIT_BYTES } from 'config';\nimport { sortLanguageMap } from 'util/default-languages';\nimport ThumbnailBrokenImage from 'component/selectThumbnail/thumbnail-broken.png';\nimport Gerbil from 'component/channelThumbnail/gerbil.png';\nimport Icon from 'component/common/icon';\n\nconst MAX_TAG_SELECT = 5;\n\ntype Props = {\n  uri: string,\n  onDone: () => void,\n  disabled: boolean,\n  openModal: (\n    id: string,\n    { onUpdate: (string, boolean) => void, assetName: string, helpText: string, currentValue: string, title: string }\n  ) => void,\n  // --- redux ---\n  claim: ChannelClaim,\n  title: string,\n  amount: number,\n  coverUrl: string,\n  thumbnailUrl: string,\n  description: string,\n  website: string,\n  email: string,\n  balance: number,\n  tags: Array<string>,\n  locations: Array<string>,\n  languages: Array<string>,\n  updateChannel: (any) => Promise<any>,\n  updatingChannel: boolean,\n  updateError: string,\n  createChannel: (any) => Promise<any>,\n  createError: string,\n  creatingChannel: boolean,\n  clearChannelErrors: () => void,\n  claimInitialRewards: () => void,\n  isClaimingInitialRewards: boolean,\n  hasClaimedInitialRewards: boolean,\n};\n\nfunction ChannelForm(props: Props) {\n  const {\n    uri,\n    claim,\n    amount,\n    title,\n    description,\n    website,\n    email,\n    thumbnailUrl,\n    coverUrl,\n    tags,\n    locations,\n    languages = [],\n    onDone,\n    updateChannel,\n    updateError,\n    updatingChannel,\n    createChannel,\n    creatingChannel,\n    createError,\n    clearChannelErrors,\n    claimInitialRewards,\n    openModal,\n    disabled,\n    isClaimingInitialRewards,\n    hasClaimedInitialRewards,\n  } = props;\n\n  const [nameError, setNameError] = React.useState(undefined);\n  const [bidError, setBidError] = React.useState('');\n  const [isUpload, setIsUpload] = React.useState({ cover: false, thumbnail: false });\n  const [coverError, setCoverError] = React.useState(false);\n  const [thumbError, setThumbError] = React.useState(false);\n\n  const { claim_id: claimId } = claim || {};\n  const [params, setParams]: [any, (any) => void] = React.useState(getChannelParams());\n  const { channelName } = parseURI(uri);\n  const name = params.name;\n  const isNewChannel = !uri;\n  const { replace } = useHistory();\n\n  const languageParam = params.languages;\n  const primaryLanguage = Array.isArray(languageParam) && languageParam.length && languageParam[0];\n  const secondaryLanguage = Array.isArray(languageParam) && languageParam.length >= 2 && languageParam[1];\n  const submitLabel = React.useMemo(() => {\n    if (isClaimingInitialRewards) {\n      return __('Claiming credits...');\n    }\n    return creatingChannel || updatingChannel ? __('Saving...') : __('Save');\n  }, [isClaimingInitialRewards, creatingChannel, updatingChannel]);\n\n  const submitDisabled = React.useMemo(() => {\n    return (\n      isClaimingInitialRewards ||\n      creatingChannel ||\n      updatingChannel ||\n      coverError ||\n      bidError ||\n      (isNewChannel && !params.name)\n    );\n  }, [isClaimingInitialRewards, creatingChannel, updatingChannel, bidError, isNewChannel, coverError, params.name]);\n\n  const errorMsg = resolveErrorMsg();\n  const coverSrc = coverError ? ThumbnailBrokenImage : params.coverUrl;\n  const thumbnailPreview = resolveThumbnailPreview();\n\n  const [scrollPast, setScrollPast] = React.useState(0);\n  const onScroll = () => {\n    if (window.pageYOffset > 240) {\n      setScrollPast(true);\n    } else {\n      setScrollPast(false);\n    }\n  };\n  React.useEffect(() => {\n    window.addEventListener('scroll', onScroll, {\n      passive: true,\n    });\n    return () => window.removeEventListener('scroll', onScroll);\n  }, []);\n\n  function getChannelParams() {\n    // fill this in with sdk data\n    const channelParams: {\n      website: string,\n      email: string,\n      coverUrl: string,\n      thumbnailUrl: string,\n      description: string,\n      title: string,\n      amount: number,\n      languages: ?Array<string>,\n      locations: ?Array<string>,\n      tags: ?Array<{ name: string }>,\n      claim_id?: string,\n    } = {\n      website,\n      email,\n      coverUrl,\n      thumbnailUrl,\n      description,\n      title,\n      amount: amount || 0.001,\n      languages: languages || [],\n      locations: locations || [],\n      tags: tags\n        ? tags.map((tag) => {\n            return { name: tag };\n          })\n        : [],\n    };\n\n    if (claimId) {\n      channelParams['claim_id'] = claimId;\n    }\n\n    return channelParams;\n  }\n\n  function handleBidChange(bid: number) {\n    const { balance, amount } = props;\n    const totalAvailableBidAmount = (parseFloat(amount) || 0.0) + (parseFloat(balance) || 0.0);\n\n    setParams({ ...params, amount: bid });\n\n    if (bid <= 0.0 || isNaN(bid)) {\n      setBidError(__('Deposit cannot be 0'));\n    } else if (totalAvailableBidAmount < bid) {\n      setBidError(\n        __('Deposit cannot be higher than your available balance: %balance%', { balance: totalAvailableBidAmount })\n      );\n    } else if (totalAvailableBidAmount - bid < ESTIMATED_FEE) {\n      setBidError(__('Please decrease your deposit to account for transaction fees'));\n    } else if (bid < MINIMUM_PUBLISH_BID) {\n      setBidError(__('Your deposit must be higher'));\n    } else {\n      setBidError('');\n    }\n  }\n\n  function handleLanguageChange(index, code) {\n    let langs = [...languageParam];\n    if (index === 0) {\n      if (code === PUBLISH.LANG_NONE) {\n        // clear all\n        langs = [];\n      } else {\n        langs[0] = code;\n      }\n    } else {\n      if (code === PUBLISH.LANG_NONE || code === langs[0]) {\n        langs.splice(1, 1);\n      } else {\n        langs[index] = code;\n      }\n    }\n    setParams({ ...params, languages: langs });\n  }\n\n  function handleThumbnailChange(thumbnailUrl: string, uploadSelected: boolean) {\n    setParams({ ...params, thumbnailUrl });\n    setIsUpload({ ...isUpload, thumbnail: uploadSelected });\n    setThumbError(false);\n  }\n\n  function handleCoverChange(coverUrl: string, uploadSelected: boolean) {\n    setParams({ ...params, coverUrl });\n    setIsUpload({ ...isUpload, cover: uploadSelected });\n    setCoverError(false);\n  }\n\n  function handleSubmit() {\n    if (uri) {\n      updateChannel(params).then((success) => {\n        if (success) {\n          onDone();\n        }\n      });\n    } else {\n      createChannel(params).then((success) => {\n        if (success) {\n          analytics.apiLog.publish(success);\n          onDone();\n        }\n      });\n    }\n  }\n\n  function resolveErrorMsg() {\n    const LIMIT_ERR_PARTIAL_MSG = 'bad-txns-claimscriptsize-toolarge (code 16)';\n    let errorMsg = updateError || createError;\n    if (errorMsg && errorMsg.includes(LIMIT_ERR_PARTIAL_MSG)) {\n      errorMsg = __('Transaction limit reached. Try reducing the Description length.');\n    }\n    if ((!isUpload.thumbnail && thumbError) || (!isUpload.cover && coverError)) {\n      errorMsg = __('Invalid %error_type%', {\n        error_type: (thumbError && 'thumbnail') || (coverError && 'cover image'),\n      });\n    }\n    return errorMsg;\n  }\n\n  function resolveThumbnailPreview() {\n    if (!params.thumbnailUrl) {\n      return Gerbil;\n    } else if (thumbError) {\n      return ThumbnailBrokenImage;\n    } else {\n      return params.thumbnailUrl;\n    }\n  }\n\n  React.useEffect(() => {\n    let nameError;\n    if (!name && name !== undefined) {\n      nameError = __('A name is required for your url');\n    } else if (!isNameValid(name)) {\n      nameError = INVALID_NAME_ERROR;\n    }\n\n    setNameError(nameError);\n  }, [name]);\n\n  React.useEffect(() => {\n    clearChannelErrors();\n  }, [clearChannelErrors]);\n\n  React.useEffect(() => {\n    if (!hasClaimedInitialRewards) {\n      claimInitialRewards();\n    }\n  }, [hasClaimedInitialRewards, claimInitialRewards]);\n\n  const [tabIndex, setTabIndex] = React.useState(0);\n  function onTabChange(index) {\n    setTabIndex(index);\n  }\n\n  // TODO clear and bail after submit\n  return (\n    <>\n      <div className={classnames({ 'card--disabled': disabled })}>\n        <header className=\"channel-cover\" style={{ backgroundImage: 'url(' + coverSrc + ')' }}>\n          <div className=\"channel-header-content\">\n            <div className=\"channel__quick-actions\">\n              <Button\n                button=\"alt\"\n                title={__('Cover')}\n                onClick={() =>\n                  openModal(MODALS.IMAGE_UPLOAD, {\n                    onUpdate: (coverUrl, isUpload) => handleCoverChange(coverUrl, isUpload),\n                    title: __('Edit Cover Image'),\n                    helpText: __('(Recommmended: 2048x320 px)'),\n                    assetName: __('Cover Image'),\n                    currentValue: params.coverUrl,\n                    otherValue: params.thumbnailUrl,\n                  })\n                }\n                icon={ICONS.CAMERA}\n                iconSize={18}\n              />\n            </div>\n            {params.coverUrl && coverError && isUpload.cover && (\n              <div className=\"channel-cover__custom--waiting\">\n                <p>{__('Uploaded image will be visible in a few minutes after you submit this form.')}</p>\n              </div>\n            )}\n            <div className=\"channel__primary-info\">\n              <h1 className=\"channel__title\">\n                {params.title || (channelName && '@' + channelName) || (params.name && '@' + params.name)}\n              </h1>\n            </div>\n          </div>\n        </header>\n\n        <Tabs index={tabIndex}>\n          <div className={classnames('tab__wrapper', { 'tab__wrapper--fixed': scrollPast })}>\n            <div onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}>\n              <ChannelThumbnail\n                className={classnames('channel__thumbnail--channel-page', {\n                  'channel__thumbnail--channel-page-fixed': scrollPast,\n                })}\n                uri={uri}\n                thumbnailPreview={thumbnailPreview}\n                allowGifs\n                setThumbUploadError={setThumbError}\n                thumbUploadError={thumbError}\n              />\n              <div className=\"channel__edit-thumb\">\n                <Button\n                  button=\"alt\"\n                  title={__('Edit')}\n                  onClick={() =>\n                    openModal(MODALS.IMAGE_UPLOAD, {\n                      onUpdate: (thumbnailUrl, isUpload) => handleThumbnailChange(thumbnailUrl, isUpload),\n                      title: __('Edit Thumbnail Image'),\n                      helpText: __('(1:1 ratio)', {\n                        max_size: THUMBNAIL_CDN_SIZE_LIMIT_BYTES / (1024 * 1024),\n                      }),\n                      assetName: __('Thumbnail'),\n                      currentValue: params.thumbnailUrl,\n                      otherValue: params.coverUrl,\n                    })\n                  }\n                  icon={ICONS.CAMERA}\n                  iconSize={18}\n                />\n              </div>\n            </div>\n\n            <TabList className=\"tabs__list--channel-page\">\n              <Tab aria-selected={tabIndex === 0} onClick={() => onTabChange(0)}>\n                {__('About')}\n              </Tab>\n              <Tab aria-selected={tabIndex === 1} onClick={() => onTabChange(1)}>\n                {!isNewChannel && __('Other')}\n              </Tab>\n            </TabList>\n          </div>\n          <TabPanels>\n            <TabPanel>\n              <Card\n                background\n                title={__('General')}\n                body={\n                  <div className=\"publish-row publish-row--no-margin\">\n                    {isNewChannel && (\n                      <Button\n                        button=\"primary\"\n                        label={__('Sync YouTube Channel')}\n                        icon={ICONS.YOUTUBE}\n                        navigate={`/$/${PAGES.YOUTUBE_SYNC}`}\n                      />\n                    )}\n\n                    {isNewChannel && (\n                      <fieldset-group\n                        class=\"fieldset-group--smushed fieldset-group--disabled-prefix\"\n                        style={{ marginTop: 'var(--spacing-m)' }}\n                      >\n                        <fieldset-section>\n                          <label htmlFor=\"channel_name\">{__('Name')}</label>\n                          <div className=\"form-field__prefix\">@</div>\n                        </fieldset-section>\n\n                        <FormField\n                          autoFocus={isNewChannel}\n                          type=\"text\"\n                          name=\"channel_name\"\n                          placeholder={__('MyAwesomeChannel')}\n                          value={params.name || channelName}\n                          error={nameError}\n                          disabled={!isNewChannel}\n                          onChange={(e) => setParams({ ...params, name: e.target.value })}\n                        />\n                      </fieldset-group>\n                    )}\n\n                    <fieldset-section style={{ marginTop: 'var(--spacing-m)' }}>\n                      <FormField\n                        type=\"text\"\n                        name=\"channel_title2\"\n                        label={__('Title')}\n                        placeholder={__('My Awesome Channel')}\n                        value={params.title}\n                        onChange={(e) => setParams({ ...params, title: e.target.value })}\n                      />\n                    </fieldset-section>\n                    <FormField\n                      type=\"markdown\"\n                      name=\"content_description2\"\n                      label={__('Description')}\n                      placeholder={__('Description of your content')}\n                      value={params.description}\n                      onChange={(text) => setParams({ ...params, description: text })}\n                      textAreaMaxLength={FF_MAX_CHARS_IN_DESCRIPTION}\n                    />\n                  </div>\n                }\n              />\n\n              <Card\n                background\n                title={__('Contact')}\n                body={\n                  <div className=\"publish-row publish-row--no-margin\">\n                    <FormField\n                      type=\"text\"\n                      name=\"content_email2\"\n                      label={__('Email')}\n                      placeholder={__('yourstruly@example.com')}\n                      disabled={false}\n                      value={params.email}\n                      onChange={(e) => setParams({ ...params, email: e.target.value })}\n                    />\n                    <FormField\n                      type=\"text\"\n                      name=\"channel_website2\"\n                      label={__('Website')}\n                      placeholder={__('aprettygoodsite.com')}\n                      disabled={false}\n                      value={params.website}\n                      onChange={(e) => setParams({ ...params, website: e.target.value })}\n                    />\n                  </div>\n                }\n              />\n\n              <Card\n                background\n                title={__('Tags')}\n                className=\"card--tags\"\n                body={\n                  <div className=\"publish-row\">\n                    <TagsSearch\n                      suggestMature={!SIMPLE_SITE}\n                      disableAutoFocus\n                      disableControlTags\n                      limitSelect={MAX_TAG_SELECT}\n                      tagsPassedIn={params.tags || []}\n                      label={__('Selected Tags')}\n                      onRemove={(clickedTag) => {\n                        const newTags = params.tags.slice().filter((tag) => tag.name !== clickedTag.name);\n                        setParams({ ...params, tags: newTags });\n                      }}\n                      onSelect={(newTags) => {\n                        newTags.forEach((newTag) => {\n                          if (!params.tags.map((savedTag) => savedTag.name).includes(newTag.name)) {\n                            setParams({ ...params, tags: [...params.tags, newTag] });\n                          } else {\n                            // If it already exists and the user types it in, remove it\n                            setParams({ ...params, tags: params.tags.filter((tag) => tag.name !== newTag.name) });\n                          }\n                        });\n                      }}\n                    />\n                  </div>\n                }\n              />\n\n              <Card\n                background\n                title={__('Languages')}\n                body={\n                  <div className=\"publish-row\">\n                    <fieldset-section style={{ marginTop: 'calc(var(--spacing-m) * -1)' }}>\n                      <FormField\n                        name=\"language_select\"\n                        type=\"select\"\n                        label={__('Primary Language')}\n                        onChange={(event) => handleLanguageChange(0, event.target.value)}\n                        value={primaryLanguage}\n                        helper={__('Your main content language')}\n                      >\n                        <option key={'pri-langNone'} value={PUBLISH.LANG_NONE}>\n                          {__('None selected')}\n                        </option>\n                        {sortLanguageMap(SUPPORTED_LANGUAGES).map(([langKey, langName]) => (\n                          <option key={langKey} value={langKey}>\n                            {langName}\n                          </option>\n                        ))}\n                      </FormField>\n                    </fieldset-section>\n                    <FormField\n                      name=\"language_select2\"\n                      type=\"select\"\n                      label={__('Secondary Language')}\n                      onChange={(event) => handleLanguageChange(1, event.target.value)}\n                      value={secondaryLanguage}\n                      disabled={!languageParam[0]}\n                      helper={__('Your other content language')}\n                    >\n                      <option key={'sec-langNone'} value={PUBLISH.LANG_NONE}>\n                        {__('None selected')}\n                      </option>\n                      {sortLanguageMap(SUPPORTED_LANGUAGES).map(([langKey, langName]) => (\n                        <option key={langKey} value={langKey} disabled={langKey === languageParam[0]}>\n                          {langName}\n                        </option>\n                      ))}\n                    </FormField>\n                  </div>\n                }\n              />\n            </TabPanel>\n            <TabPanel>\n              <Card\n                background\n                title={__('Credit Details')}\n                body={\n                  <div className=\"publish-row publish-row--no-margin\">\n                    <FormField\n                      className=\"form-field--price-amount\"\n                      type=\"number\"\n                      name=\"content_bid2\"\n                      step=\"any\"\n                      label={<LbcSymbol postfix={__('Deposit')} size={14} />}\n                      value={params.amount}\n                      error={bidError}\n                      min=\"0.0\"\n                      disabled={false}\n                      onChange={(event) => handleBidChange(parseFloat(event.target.value))}\n                      placeholder={0.1}\n                      helper={\n                        <>\n                          {__('Increasing your deposit can help your channel be discovered more easily.')}\n                          <WalletSpendableBalanceHelp inline />\n                        </>\n                      }\n                    />\n                  </div>\n                }\n              />\n              {!isNewChannel && (\n                <>\n                  <Card\n                    background\n                    title={__('Delete Channel')}\n                    body={\n                      <div className=\"publish-row\">\n                        <ClaimAbandonButton uri={uri} abandonActionCallback={() => replace(`/$/${PAGES.CHANNELS}`)} />\n                      </div>\n                    }\n                  />\n                </>\n              )}\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n\n        <div className=\"card-fixed-bottom\">\n          <Card\n            className=\"card--after-tabs tab__panel\"\n            actions={\n              <>\n                <div className=\"section__actions\">\n                  <Button button=\"primary\" disabled={submitDisabled} label={submitLabel} onClick={handleSubmit} />\n                  <Button button=\"link\" label={__('Cancel')} onClick={onDone} />\n                  {errorMsg ? (\n                    <ErrorText>{errorMsg}</ErrorText>\n                  ) : (\n                    <p className=\"help\">\n                      <Icon icon={ICONS.INFO} />\n                      {__('After submitting, it will take a few minutes for your changes to be live for everyone.')}\n                    </p>\n                  )}\n                </div>\n              </>\n            }\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ChannelForm;\n","import { connect } from 'react-redux';\nimport {\n  selectTitleForUri,\n  selectThumbnailForUri,\n  makeSelectCoverForUri,\n  makeSelectMetadataItemForUri,\n  makeSelectAmountForUri,\n  makeSelectClaimForUri,\n  selectUpdateChannelError,\n  selectUpdatingChannel,\n  selectCreateChannelError,\n  selectCreatingChannel,\n} from 'redux/selectors/claims';\nimport { selectBalance } from 'redux/selectors/wallet';\nimport { doUpdateChannel, doCreateChannel, doClearChannelErrors } from 'redux/actions/claims';\nimport { doOpenModal } from 'redux/actions/app';\nimport { doUpdateBlockListForPublishedChannel } from 'redux/actions/comments';\nimport { doClaimInitialRewards } from 'redux/actions/rewards';\nimport { selectIsClaimingInitialRewards, selectHasClaimedInitialRewards } from 'redux/selectors/rewards';\nimport ChannelForm from './view';\n\nconst select = (state, props) => ({\n  claim: makeSelectClaimForUri(props.uri)(state),\n  title: selectTitleForUri(state, props.uri),\n  thumbnailUrl: selectThumbnailForUri(state, props.uri),\n  coverUrl: makeSelectCoverForUri(props.uri)(state),\n  description: makeSelectMetadataItemForUri(props.uri, 'description')(state),\n  website: makeSelectMetadataItemForUri(props.uri, 'website_url')(state),\n  email: makeSelectMetadataItemForUri(props.uri, 'email')(state),\n  tags: makeSelectMetadataItemForUri(props.uri, 'tags')(state),\n  locations: makeSelectMetadataItemForUri(props.uri, 'locations')(state),\n  languages: makeSelectMetadataItemForUri(props.uri, 'languages')(state),\n  amount: makeSelectAmountForUri(props.uri)(state),\n  updateError: selectUpdateChannelError(state),\n  updatingChannel: selectUpdatingChannel(state),\n  createError: selectCreateChannelError(state),\n  creatingChannel: selectCreatingChannel(state),\n  balance: selectBalance(state),\n  isClaimingInitialRewards: selectIsClaimingInitialRewards(state),\n  hasClaimedInitialRewards: selectHasClaimedInitialRewards(state),\n});\n\nconst perform = (dispatch) => ({\n  openModal: (modal, props) => dispatch(doOpenModal(modal, props)),\n  updateChannel: (params) => dispatch(doUpdateChannel(params)),\n  createChannel: (params) => {\n    const { name, amount, ...optionalParams } = params;\n    return dispatch(\n      doCreateChannel('@' + name, amount, optionalParams, (channelClaim) => {\n        dispatch(doUpdateBlockListForPublishedChannel(channelClaim));\n      })\n    );\n  },\n  clearChannelErrors: () => dispatch(doClearChannelErrors()),\n  claimInitialRewards: () => dispatch(doClaimInitialRewards()),\n});\n\nexport default connect(select, perform)(ChannelForm);\n","export const setDifference = (setA, setB) => {\n  let _difference = new Set(setA);\n  for (let el of setB) {\n    _difference.delete(el);\n  }\n  return _difference;\n};\n\nexport const setUnion = (setA, setB) => {\n  let _union = new Set(setA);\n  for (let el of setB) {\n    _union.add(el);\n  }\n  return _union;\n};\n","// @flow\nimport React, { useState } from 'react';\nimport { Form, FormField } from 'component/common/form';\nimport Tag from 'component/tag';\nimport { setUnion, setDifference } from 'util/set-operations';\nimport I18nMessage from 'component/i18nMessage';\nimport analytics from 'analytics';\nimport {\n  CONTROL_TAGS,\n  INTERNAL_TAGS,\n  INTERNAL_TAG_PREFIX,\n  PURCHASE_TAG,\n  RENTAL_TAG,\n  RENTAL_TAG_OLD,\n  PURCHASE_TAG_OLD,\n} from 'constants/tags';\nimport { removeInternalTags } from 'util/tags';\n\ntype Props = {\n  tagsPassedIn: Array<Tag>,\n  unfollowedTags: Array<Tag>,\n  followedTags: Array<Tag>,\n  doToggleTagFollowDesktop: (string) => void,\n  doAddTag: (string) => void,\n  onSelect?: (Tag) => void,\n  hideSuggestions?: boolean,\n  hideInputField?: boolean,\n  suggestMature?: boolean,\n  disableAutoFocus?: boolean,\n  onRemove: (Tag) => void,\n  placeholder?: string,\n  label?: string,\n  labelAddNew?: string,\n  labelSuggestions?: string,\n  disabled?: boolean,\n  limitSelect?: number,\n  limitShow?: number,\n  user: User,\n  disableControlTags?: boolean,\n  help?: string,\n};\n\nconst UNALLOWED_TAGS = ['lbry-first'];\n\n/*\n We display tagsPassedIn\n onClick gets the tag when a tag is clicked\n onSubmit gets an array of tags in object form\n We suggest tags based on followed, unfollowed, and passedIn\n */\n\nexport default function TagsSearch(props: Props) {\n  const TAG_FOLLOW_MAX = 1000;\n  const {\n    tagsPassedIn = [],\n    unfollowedTags = [],\n    followedTags = [],\n    doToggleTagFollowDesktop,\n    doAddTag,\n    onSelect,\n    onRemove,\n    hideSuggestions,\n    hideInputField,\n    suggestMature,\n    disableAutoFocus,\n    placeholder,\n    label,\n    labelAddNew,\n    labelSuggestions,\n    disabled,\n    limitSelect = TAG_FOLLOW_MAX,\n    limitShow = 5,\n    user,\n    disableControlTags,\n    help,\n  } = props;\n  const [newTag, setNewTag] = useState('');\n  const doesTagMatch = (name) => {\n    const nextTag = newTag.substr(newTag.lastIndexOf(',') + 1, newTag.length).trim();\n    return newTag ? name.toLowerCase().includes(nextTag.toLowerCase()) : true;\n  };\n\n  // Make sure there are no duplicates, then trim\n  // suggestedTags = (followedTags - tagsPassedIn) + unfollowedTags\n  const experimentalFeature = user && user.experimental_ui;\n  const followedTagsSet = new Set(followedTags.map((tag) => tag.name));\n  const selectedTagsSet = new Set(tagsPassedIn.map((tag) => tag.name));\n  const unfollowedTagsSet = new Set(unfollowedTags.map((tag) => tag.name));\n  const remainingFollowedTagsSet = setDifference(followedTagsSet, selectedTagsSet);\n  const remainingUnfollowedTagsSet = setDifference(unfollowedTagsSet, selectedTagsSet);\n  const suggestedTagsSet = setUnion(remainingFollowedTagsSet, remainingUnfollowedTagsSet);\n\n  let countWithoutSpecialTags = selectedTagsSet.size;\n\n  const SPECIAL_TAGS = [...INTERNAL_TAGS, 'mature'];\n  SPECIAL_TAGS.forEach((t) => {\n    if (selectedTagsSet.has(t)) {\n      countWithoutSpecialTags--;\n    }\n  });\n\n  const INTERNAL_PREFIXES = [PURCHASE_TAG, PURCHASE_TAG_OLD, RENTAL_TAG, RENTAL_TAG_OLD];\n  for (const tag of selectedTagsSet) {\n    INTERNAL_PREFIXES.forEach((prefix) => {\n      if (tag.startsWith(prefix)) {\n        --countWithoutSpecialTags;\n      }\n    });\n  }\n\n  // const countWithoutLbryFirst = selectedTagsSet.has('lbry-first') ? selectedTagsSet.size - 1 : selectedTagsSet.size;\n  const maxed = Boolean(limitSelect && countWithoutSpecialTags >= limitSelect);\n  const suggestedTags = Array.from(suggestedTagsSet).filter(doesTagMatch).slice(0, limitShow);\n\n  // tack 'mature' onto the end if it's not already in the list\n  if (!newTag && suggestMature && !suggestedTags.some((tag) => tag === 'mature')) {\n    suggestedTags.push('mature');\n  }\n\n  function onChange(e) {\n    setNewTag(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    let tags = newTag.trim();\n\n    if (tags.length === 0) {\n      return;\n    }\n\n    setNewTag('');\n\n    const newTagsArr = Array.from(\n      new Set(\n        tags\n          .split(',')\n          .slice(0, limitSelect - countWithoutSpecialTags)\n          .map((newTag) => newTag.trim().toLowerCase())\n          .filter((newTag) => !UNALLOWED_TAGS.includes(newTag))\n      )\n    );\n\n    // Split into individual tags, normalize the tags, and remove duplicates with a set.\n    if (onSelect) {\n      const arrOfObjectTags = newTagsArr.map((tag) => {\n        return { name: tag };\n      });\n      onSelect(arrOfObjectTags);\n    } else {\n      newTagsArr.forEach((tag) => {\n        if (!unfollowedTags.some(({ name }) => name === tag)) {\n          doAddTag(tag);\n        }\n\n        if (!followedTags.some(({ name }) => name === tag)) {\n          doToggleTagFollowDesktop(tag);\n        }\n      });\n    }\n  }\n\n  function handleTagClick(tag: string) {\n    if (onSelect) {\n      onSelect([{ name: tag }]);\n    } else {\n      const wasFollowing = followedTags.map((t) => t.name).includes(tag);\n      doToggleTagFollowDesktop(tag);\n      analytics.event.tagFollow(tag, !wasFollowing);\n    }\n  }\n  function handleUtilityTagCheckbox(tag: string) {\n    const selectedTag = tagsPassedIn.find((te) => te.name === tag);\n    if (selectedTag) {\n      onRemove(selectedTag);\n    } else if (onSelect) {\n      onSelect([{ name: tag }]);\n    }\n  }\n  return (\n    <React.Fragment>\n      <Form className=\"tags__input-wrapper\" onSubmit={handleSubmit}>\n        <fieldset-section>\n          <label style={{ marginTop: 0 }}>\n            {limitSelect < TAG_FOLLOW_MAX ? (\n              <I18nMessage\n                tokens={{\n                  number: limitSelect - countWithoutSpecialTags,\n                  selectTagsLabel: label,\n                }}\n              >\n                %selectTagsLabel% (%number% left)\n              </I18nMessage>\n            ) : (\n              label || __('Following --[button label indicating a channel has been followed]--')\n            )}\n          </label>\n          <ul className=\"tags--remove\">\n            {countWithoutSpecialTags === 0 && <Tag key={`placeholder-tag`} name={'example'} disabled type={'remove'} />}\n            {Boolean(tagsPassedIn.length) &&\n              removeInternalTags(tagsPassedIn).map((tag) => (\n                <Tag\n                  key={`passed${tag.name}`}\n                  name={tag.name}\n                  type=\"remove\"\n                  onClick={() => {\n                    onRemove(tag);\n                  }}\n                />\n              ))}\n          </ul>\n          {!hideInputField && (\n            <FormField\n              autoFocus={!disableAutoFocus}\n              className=\"tag__input\"\n              onChange={onChange}\n              placeholder={placeholder || __('gaming, crypto')}\n              type=\"text\"\n              value={newTag}\n              disabled={disabled}\n              label={labelAddNew || __('Add Tags')}\n            />\n          )}\n          {!hideSuggestions && (\n            <section>\n              <label>{labelSuggestions || (newTag.length ? __('Matching') : __('Known Tags'))}</label>\n              <ul className=\"tags\">\n                {Boolean(newTag.length) && !suggestedTags.includes(newTag) && (\n                  <Tag\n                    disabled={newTag !== 'mature' && maxed}\n                    key={`entered${newTag}`}\n                    name={newTag}\n                    type=\"add\"\n                    onClick={newTag.includes('') ? (e) => handleSubmit(e) : (e) => handleTagClick(newTag)}\n                  />\n                )}\n                {suggestedTags.map((tag) => (\n                  <Tag\n                    disabled={tag !== 'mature' && maxed}\n                    key={`suggested${tag}`}\n                    name={tag}\n                    type=\"add\"\n                    onClick={() => handleTagClick(tag)}\n                  />\n                ))}\n              </ul>\n              <div className=\"form-field__hint mt-m\">{help}</div>\n            </section>\n          )}\n        </fieldset-section>\n        {experimentalFeature &&\n          !disableControlTags &&\n          onSelect && ( // onSelect ensures this does not appear on TagFollow\n            <fieldset-section>\n              <label>{__('Control Tags')}</label>\n              {CONTROL_TAGS.map((t) => (\n                <FormField\n                  key={t}\n                  name={t}\n                  type=\"checkbox\"\n                  blockWrap={false}\n                  label={__(\n                    t\n                      .replace(INTERNAL_TAG_PREFIX, '')\n                      .split('-')\n                      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                      .join(' ')\n                  )}\n                  checked={tagsPassedIn.some((te) => te.name === t)}\n                  onChange={() => handleUtilityTagCheckbox(t)}\n                />\n              ))}\n            </fieldset-section>\n          )}\n      </Form>\n    </React.Fragment>\n  );\n}\n","import { connect } from 'react-redux';\nimport { selectUnfollowedTags, selectFollowedTags } from 'redux/selectors/tags';\nimport { doToggleTagFollowDesktop, doAddTag, doDeleteTag } from 'redux/actions/tags';\nimport { selectUser } from 'redux/selectors/user';\nimport DiscoveryFirstRun from './view';\n\nconst select = (state, props) => ({\n  unfollowedTags: props.unfollowedTags || selectUnfollowedTags(state),\n  followedTags: props.followedTags || selectFollowedTags(state),\n  user: selectUser(state),\n});\n\nexport default connect(select, {\n  doToggleTagFollowDesktop,\n  doAddTag,\n  doDeleteTag,\n})(DiscoveryFirstRun);\n","// @flow\nimport CreditAmount from 'component/common/credit-amount';\nimport I18nMessage from 'component/i18nMessage';\nimport React from 'react';\n\ntype Props = { balance: number, inline?: boolean };\n\nfunction WalletSpendableBalanceHelp(props: Props) {\n  const { balance, inline } = props;\n\n  const getMessage = (text: string) => (\n    <I18nMessage tokens={{ balance: <CreditAmount amount={balance} precision={4} /> }}>{text}</I18nMessage>\n  );\n\n  return !balance ? null : inline ? (\n    <span className=\"help--spendable\">{getMessage('%balance% available.')}</span>\n  ) : (\n    <div className=\"help\">{getMessage('Your immediately spendable balance is %balance%.')}</div>\n  );\n}\n\nexport default WalletSpendableBalanceHelp;\n","import { connect } from 'react-redux';\nimport { selectBalance } from 'redux/selectors/wallet';\nimport WalletSpendableBalanceHelp from './view';\n\nconst select = (state) => ({ balance: selectBalance(state) });\n\nexport default connect(select)(WalletSpendableBalanceHelp);\n","// @flow\nimport { selectPrefsReady } from 'redux/selectors/sync';\nimport * as ACTIONS from 'constants/action_types';\n\nimport { doAlertWaitingForSync } from 'redux/actions/app';\n\nexport const doToggleTagFollowDesktop = (name: string) => (dispatch: Dispatch, getState: GetState) => {\n  const state = getState();\n  const ready = selectPrefsReady(state);\n  if (!ready) {\n    return dispatch(doAlertWaitingForSync());\n  }\n\n  dispatch({\n    type: ACTIONS.TOGGLE_TAG_FOLLOW,\n    data: {\n      name,\n    },\n  });\n};\n\nexport const doAddTag = (name: string) => ({\n  type: ACTIONS.TAG_ADD,\n  data: {\n    name,\n  },\n});\n\nexport const doDeleteTag = (name: string) => ({\n  type: ACTIONS.TAG_DELETE,\n  data: {\n    name,\n  },\n});\n"],"names":["connect","state","props","claim","uri","makeSelectClaimForUri","doOpenModal","buttonLabel","abandonActionCallback","value_type","__","React","Button","disabled","label","button","icon","ICONS","onClick","MODALS","cb","MAX_TAG_SELECT","amount","title","description","website","email","thumbnailUrl","coverUrl","tags","locations","_props$languages","languages","onDone","updateChannel","updateError","updatingChannel","createChannel","creatingChannel","createError","clearChannelErrors","claimInitialRewards","openModal","isClaimingInitialRewards","hasClaimedInitialRewards","_React$useState2","_slicedToArray","undefined","nameError","setNameError","_React$useState4","bidError","setBidError","_React$useState6","cover","thumbnail","isUpload","setIsUpload","_React$useState8","coverError","setCoverError","_React$useState10","thumbError","setThumbError","claimId","claim_id","_React$useState12","channelParams","map","tag","name","getChannelParams","params","setParams","channelName","parseURI","isNewChannel","replace","useHistory","languageParam","primaryLanguage","Array","isArray","length","secondaryLanguage","submitLabel","submitDisabled","errorMsg","includes","error_type","resolveErrorMsg","coverSrc","ThumbnailBrokenImage","thumbnailPreview","Gerbil","_React$useState14","scrollPast","setScrollPast","onScroll","window","pageYOffset","handleLanguageChange","index","code","langs","_toConsumableArray","PUBLISH","splice","_objectSpread","handleThumbnailChange","uploadSelected","handleCoverChange","addEventListener","passive","removeEventListener","isNameValid","INVALID_NAME_ERROR","_React$useState16","tabIndex","setTabIndex","onTabChange","className","classnames","style","backgroundImage","onUpdate","helpText","assetName","currentValue","otherValue","iconSize","Tabs","scrollTo","top","behavior","ChannelThumbnail","allowGifs","setThumbUploadError","thumbUploadError","max_size","THUMBNAIL_CDN_SIZE_LIMIT_BYTES","TabList","Tab","TabPanels","TabPanel","Card","background","body","navigate","concat","PAGES","class","marginTop","htmlFor","FormField","autoFocus","type","placeholder","value","error","onChange","e","target","text","textAreaMaxLength","FF_MAX_CHARS_IN_DESCRIPTION","TagsSearch","suggestMature","SIMPLE_SITE","disableAutoFocus","disableControlTags","limitSelect","tagsPassedIn","onRemove","clickedTag","newTags","slice","filter","onSelect","forEach","newTag","savedTag","event","helper","key","sortLanguageMap","SUPPORTED_LANGUAGES","_ref2","_ref3","langKey","langName","_ref4","_ref5","step","LbcSymbol","postfix","size","min","bid","balance","totalAvailableBidAmount","parseFloat","isNaN","ESTIMATED_FEE","MINIMUM_PUBLISH_BID","handleBidChange","WalletSpendableBalanceHelp","inline","ClaimAbandonButton","actions","then","success","analytics","ErrorText","Icon","selectTitleForUri","selectThumbnailForUri","makeSelectCoverForUri","makeSelectMetadataItemForUri","makeSelectAmountForUri","selectUpdateChannelError","selectUpdatingChannel","selectCreateChannelError","selectCreatingChannel","selectBalance","selectIsClaimingInitialRewards","selectHasClaimedInitialRewards","dispatch","modal","doUpdateChannel","optionalParams","_objectWithoutProperties","_excluded","doCreateChannel","channelClaim","doUpdateBlockListForPublishedChannel","doClearChannelErrors","doClaimInitialRewards","ChannelForm","setDifference","setA","setB","_step","_difference","Set","_iterator","_createForOfIteratorHelper","s","n","done","el","err","f","setUnion","_step2","_union","_iterator2","add","UNALLOWED_TAGS","unfollowedTags","selectUnfollowedTags","followedTags","selectFollowedTags","user","selectUser","doToggleTagFollowDesktop","doAddTag","doDeleteTag","_props$tagsPassedIn","_props$unfollowedTags","_props$followedTags","hideSuggestions","hideInputField","labelAddNew","labelSuggestions","_props$limitSelect","_props$limitShow","limitShow","help","_useState2","useState","setNewTag","experimentalFeature","experimental_ui","followedTagsSet","selectedTagsSet","unfollowedTagsSet","remainingFollowedTagsSet","remainingUnfollowedTagsSet","suggestedTagsSet","countWithoutSpecialTags","INTERNAL_TAGS","t","has","INTERNAL_PREFIXES","PURCHASE_TAG","PURCHASE_TAG_OLD","RENTAL_TAG","RENTAL_TAG_OLD","_loop","prefix","startsWith","maxed","Boolean","suggestedTags","from","nextTag","substr","lastIndexOf","trim","toLowerCase","handleSubmit","preventDefault","newTagsArr","split","arrOfObjectTags","some","_ref","handleTagClick","wasFollowing","push","Form","onSubmit","I18nMessage","tokens","number","selectTagsLabel","Tag","removeInternalTags","CONTROL_TAGS","blockWrap","INTERNAL_TAG_PREFIX","word","charAt","toUpperCase","join","checked","te","selectedTag","find","getMessage","CreditAmount","precision","getState","selectPrefsReady","doAlertWaitingForSync","ACTIONS","data"],"sourceRoot":""}