{"version":3,"file":"modalRemoveComment-736261d401ee695d611a.js","mappings":"oOA+EA,QA3DA,SAA4BA,GAC1B,IACEC,EASED,EATFC,UACAC,EAQEF,EARFE,aACAC,EAOEH,EAPFG,oBACAC,EAMEJ,EANFI,aACAC,EAKEL,EALFK,cACAC,EAIEN,EAJFM,cACAC,EAGEP,EAHFO,QACAC,EAEER,EAFFQ,YACAC,EACET,EADFS,iBAWF,OACEC,EAAAA,cAACC,EAAAA,GAAK,CAACC,QAAM,EAACC,aAAcC,EAAG,4BAA6BC,KAAK,OAAOC,UAAWR,GACjFE,EAAAA,cAACO,EAAAA,EAAI,CACHC,MAAOJ,EAAG,kBACVK,KACET,EAAAA,cAACA,EAAAA,SAAc,KACbA,EAAAA,cAAA,SAAII,EAAG,kDACNM,QAAQf,IACPK,EAAAA,cAAA,KAAGW,UAAU,oBACVP,EAAG,wEAGRJ,EAAAA,cAAA,WApBV,SAA2BH,GACzB,OAAOA,EACLG,EAAAA,cAAA,OAAKW,UAAU,yCACbX,EAAAA,cAACY,EAAAA,EAAW,CAACf,QAASA,EAASgB,YAAU,EAACC,aAAW,EAACC,iBAAe,EAACC,yBAAuB,KAE7F,IACN,CAcgBC,CAAkBpB,KAG5BqB,QACElB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKW,UAAU,oBACbX,EAAAA,cAACmB,EAAAA,QAAM,CACLC,OAAO,UACPC,MAAOjB,EAAG,UACVkB,QAAS,WACPxB,IACAC,EAAiBR,EAAWC,EAAcC,EAAqBC,GAC3DE,GACFA,OAAc2B,EAElB,IAEFvB,EAAAA,cAACmB,EAAAA,QAAM,CAACC,OAAO,OAAOC,MAAOjB,EAAG,UAAWkB,QAASxB,QAOlE,E,0BCnEM0B,EAAU,CACd1B,YAAAA,EAAAA,GACAC,iBAAAA,EAAAA,IAGF,SAAe0B,EAAAA,EAAAA,KATA,SAACC,EAAOpC,GAAK,MAAM,CAChCO,SAAS8B,EAAAA,EAAAA,IAA0BD,EAAOpC,EAAMC,WACjD,GAO8BiC,EAA/B,CAAwCI,E","sources":["webpack://odysee.com/../ui/modal/modalRemoveComment/view.jsx","webpack://odysee.com/../ui/modal/modalRemoveComment/index.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { Modal } from 'modal/modal';\nimport Button from 'component/button';\nimport CommentView from 'component/comment';\nimport Card from 'component/common/card';\n\ntype Props = {\n  commentId: string, // sha256 digest identifying the comment\n  deleterClaim: Claim,\n  deleterIsModOrAdmin?: boolean,\n  creatorClaim?: Claim,\n  supportAmount?: any,\n  setQuickReply: (any) => void,\n  // --- redux ---\n  comment?: Comment,\n  doHideModal: () => void,\n  doCommentAbandon: (string, Claim, ?boolean, ?Claim) => void,\n};\n\nfunction ModalRemoveComment(props: Props) {\n  const {\n    commentId,\n    deleterClaim,\n    deleterIsModOrAdmin,\n    creatorClaim,\n    supportAmount,\n    setQuickReply,\n    comment,\n    doHideModal,\n    doCommentAbandon,\n  } = props;\n\n  function getCommentPreview(comment: ?Comment) {\n    return comment ? (\n      <div className=\"section comment-preview non-clickable\">\n        <CommentView comment={comment} isTopLevel hideActions hideContextMenu forceDisplayDeadComment />\n      </div>\n    ) : null;\n  }\n\n  return (\n    <Modal isOpen contentLabel={__('Confirm Comment Deletion')} type=\"card\" onAborted={doHideModal}>\n      <Card\n        title={__('Remove Comment')}\n        body={\n          <React.Fragment>\n            <p>{__('Are you sure you want to remove this comment?')}</p>\n            {Boolean(supportAmount) && (\n              <p className=\"help error__text\">\n                {__('This comment has a tip associated with it which cannot be reverted.')}\n              </p>\n            )}\n            <div>{getCommentPreview(comment)}</div>\n          </React.Fragment>\n        }\n        actions={\n          <>\n            <div className=\"section__actions\">\n              <Button\n                button=\"primary\"\n                label={__('Remove')}\n                onClick={() => {\n                  doHideModal();\n                  doCommentAbandon(commentId, deleterClaim, deleterIsModOrAdmin, creatorClaim);\n                  if (setQuickReply) {\n                    setQuickReply(undefined);\n                  }\n                }}\n              />\n              <Button button=\"link\" label={__('Cancel')} onClick={doHideModal} />\n            </div>\n          </>\n        }\n      />\n    </Modal>\n  );\n}\n\nexport default ModalRemoveComment;\n","import { connect } from 'react-redux';\nimport { doHideModal } from 'redux/actions/app';\nimport ModalRemoveComment from './view';\nimport { doCommentAbandon } from 'redux/actions/comments';\nimport { selectCommentForCommentId } from 'redux/selectors/comments';\n\nconst select = (state, props) => ({\n  comment: selectCommentForCommentId(state, props.commentId),\n});\n\nconst perform = {\n  doHideModal,\n  doCommentAbandon,\n};\n\nexport default connect(select, perform)(ModalRemoveComment);\n"],"names":["props","commentId","deleterClaim","deleterIsModOrAdmin","creatorClaim","supportAmount","setQuickReply","comment","doHideModal","doCommentAbandon","React","Modal","isOpen","contentLabel","__","type","onAborted","Card","title","body","Boolean","className","CommentView","isTopLevel","hideActions","hideContextMenu","forceDisplayDeadComment","getCommentPreview","actions","Button","button","label","onClick","undefined","perform","connect","state","selectCommentForCommentId","ModalRemoveComment"],"sourceRoot":""}