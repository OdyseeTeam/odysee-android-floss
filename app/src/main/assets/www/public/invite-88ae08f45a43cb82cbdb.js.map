{"version":3,"file":"invite-88ae08f45a43cb82cbdb.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/common/busy-indicator.jsx","webpack://odysee.com/../ui/component/common/card.jsx","webpack://odysee.com/../ui/component/copyableText/index.js","webpack://odysee.com/../ui/component/copyableText/view.jsx","webpack://odysee.com/../ui/component/rewardAuthIntro/view.jsx","webpack://odysee.com/../ui/component/rewardAuthIntro/index.js","webpack://odysee.com/../ui/component/rewardLink/view.jsx","webpack://odysee.com/../ui/component/rewardLink/index.js","webpack://odysee.com/../ui/component/inviteNew/view.jsx","webpack://odysee.com/../ui/component/inviteNew/index.js","webpack://odysee.com/../ui/component/inviteList/view.jsx","webpack://odysee.com/../ui/component/inviteList/index.js","webpack://odysee.com/../ui/page/invite/style.scss?457a","webpack://odysee.com/../ui/page/invite/view.jsx","webpack://odysee.com/../ui/page/invite/index.js","webpack://odysee.com/../ui/page/invite/style.scss"],"sourcesContent":["// @flow\nimport React from 'react';\n\ntype Props = {\n  message: ?string,\n};\n\nclass BusyIndicator extends React.PureComponent<Props> {\n  static defaultProps = {\n    message: '',\n  };\n\n  render() {\n    const { message } = this.props;\n\n    return (\n      <span className=\"busy-indicator\">\n        {message} <span className=\"busy-indicator__loader\" />\n      </span>\n    );\n  }\n}\n\nexport default BusyIndicator;\n","// @flow\nimport type { Node } from 'react';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Icon from 'component/common/icon';\nimport Button from 'component/button';\nimport * as ICONS from 'constants/icons';\n// import twemoji from 'twemoji';\nimport Tooltip from 'component/common/tooltip';\n\ntype Props = {\n  title?: string | Node,\n  subtitle?: string | Node,\n  titleActions?: string | Node,\n  id?: string,\n  body?: string | Node,\n  actions?: string | Node,\n  icon?: string,\n  className?: string,\n  isPageTitle?: boolean,\n  noTitleWrap?: boolean,\n  isBodyList?: boolean,\n  defaultExpand?: boolean,\n  nag?: Node,\n  smallTitle?: boolean,\n  onClick?: () => void,\n  children?: Node,\n  secondPane?: Node,\n  slimHeader?: boolean,\n  background?: boolean,\n  backgroundImage?: string,\n  singlePane?: boolean,\n  headerActions?: Node,\n  gridHeader?: boolean,\n  accessStatus?: string,\n};\n\nfunction Card(props: Props) {\n  const {\n    title,\n    subtitle,\n    titleActions,\n    id,\n    body,\n    actions,\n    icon,\n    className,\n    isPageTitle = false,\n    isBodyList = false,\n    // noTitleWrap = false,\n    smallTitle = false,\n    defaultExpand,\n    nag,\n    onClick,\n    children,\n    secondPane,\n    slimHeader,\n    background,\n    backgroundImage,\n    singlePane,\n    headerActions,\n    accessStatus,\n    gridHeader,\n  } = props;\n\n  const [expanded, setExpanded] = useState(defaultExpand);\n  const expandable = defaultExpand !== undefined;\n\n  return (\n    <section\n      role={onClick ? 'button' : undefined}\n      className={classnames(className, 'card', {\n        'card__multi-pane': Boolean(secondPane),\n        'card--background': background,\n      })}\n      id={id}\n      onClick={(e) => {\n        if (onClick) {\n          onClick();\n          e.stopPropagation();\n        }\n      }}\n    >\n      {backgroundImage && (\n        <div\n          className=\"background\"\n          style={{\n            backgroundImage:\n              'url(https://thumbnails.odycdn.com/optimize/s:390:0/quality:85/plain/' + backgroundImage + ')',\n          }}\n        />\n      )}\n      <FirstPaneWrapper singlePane={singlePane}>\n        {(title || subtitle) && (\n          <div\n            className={classnames('card__header--between', {\n              'card__header--slim': slimHeader,\n              'card__header--grid': gridHeader,\n            })}\n          >\n            <div className={classnames('card__title-section', { 'card__title-section--body-list': isBodyList })}>\n              {icon && <Icon sectionIcon icon={icon} />}\n\n              <div className=\"card__title-text\">\n                <TitleWrapper isPageTitle={isPageTitle} smallTitle={smallTitle} accessStatus={accessStatus}>\n                  {title}\n                </TitleWrapper>\n\n                {subtitle && (\n                  <div className={classnames('card__subtitle', { 'card__subtitle--small': smallTitle })}>\n                    {subtitle}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {(titleActions || expandable) && (\n              <div className=\"card__title-actions-container\">\n                {titleActions && (\n                  <div\n                    className={classnames('card__title-actions', {\n                      'card__title-actions--small': smallTitle,\n                    })}\n                  >\n                    {titleActions}\n                  </div>\n                )}\n                {expandable && (\n                  <div className=\"card__title-actions\">\n                    <Button\n                      button=\"alt\"\n                      aria-expanded={expanded}\n                      aria-label={expanded ? __('Less') : __('More')}\n                      icon={expanded ? ICONS.SUBTRACT : ICONS.ADD}\n                      onClick={() => setExpanded(!expanded)}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n\n            {headerActions}\n          </div>\n        )}\n\n        {(!expandable || (expandable && expanded)) && (\n          <>\n            {body && (\n              <div\n                className={classnames('card__body', {\n                  'card__body--no-title': !title && !subtitle,\n                  'card__body--list': isBodyList,\n                })}\n              >\n                {body}\n              </div>\n            )}\n            {actions && <div className=\"card__main-actions\">{actions}</div>}\n            {children && <div className=\"card__main-actions\">{children}</div>}\n          </>\n        )}\n\n        {nag}\n      </FirstPaneWrapper>\n\n      {secondPane && <div className=\"card__second-pane\">{secondPane}</div>}\n    </section>\n  );\n}\n\ntype FirstPaneProps = {\n  singlePane?: boolean,\n  children: any,\n};\n\nconst FirstPaneWrapper = (props: FirstPaneProps) => {\n  const { singlePane, children } = props;\n\n  return singlePane ? children : <div className=\"card__first-pane\">{children}</div>;\n};\n\ntype TitleProps = {\n  isPageTitle?: boolean,\n  smallTitle?: boolean,\n  children?: any,\n  emoji?: any,\n  accessStatus?: string,\n};\n\nconst TitleWrapper = (props: TitleProps) => {\n  const { isPageTitle, smallTitle, children, accessStatus } = props;\n\n  /*\n  const Twemoji = ({ emoji }) => (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: twemoji.parse(emoji, {\n          folder: 'svg',\n          ext: '.svg',\n        }),\n      }}\n    />\n  );\n  */\n\n  const AccessIndicator = (par: any) => {\n    return (\n      <Tooltip title={__('This is a members-only content')}>\n        <div\n          className={classnames('content-access-indicator', {\n            locked: par.status === 'locked',\n            unlocked: par.status === 'unlocked',\n            purchased: par.status === 'purchased',\n          })}\n        >\n          <Icon icon={par.status === 'locked' ? ICONS.LOCK : ICONS.UNLOCK} />\n        </div>\n      </Tooltip>\n    );\n  };\n\n  /*\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return <Twemoji emoji={children?.props?.children[child]} />;\n      }\n    }\n    return children;\n  }\n  */\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return children?.props?.children[child];\n      }\n    }\n    return children;\n  }\n\n  return isPageTitle ? (\n    <h1 className=\"card__title\">\n      {accessStatus && <AccessIndicator status={accessStatus} />}\n      <font dangerouslySetInnerHTML={{ __html: transformer(children) }} />\n    </h1>\n  ) : (\n    <h2 className={classnames('card__title', { 'card__title--small': smallTitle })}>{children}</h2>\n  );\n};\n\nexport default Card;\n","import { connect } from 'react-redux';\nimport { doToast } from 'redux/actions/notifications';\nimport CopyableText from './view';\n\nexport default connect(null, {\n  doToast,\n})(CopyableText);\n","// @flow\nimport * as ICONS from 'constants/icons';\nimport { FormField } from 'component/common/form';\nimport Button from 'component/button';\nimport React, { useRef } from 'react';\n\ntype Props = {\n  copyable: string,\n  onlyCopy: boolean,\n  snackMessage: ?string,\n  doToast: ({ message: string }) => void,\n  label?: string,\n  primaryButton?: boolean,\n  name?: string,\n  onCopy?: (string) => string,\n  enableInputMask?: boolean,\n};\n\nexport default function CopyableText(props: Props) {\n  const {\n    copyable,\n    onlyCopy,\n    doToast,\n    snackMessage,\n    label,\n    primaryButton = false,\n    name,\n    onCopy,\n    enableInputMask,\n  } = props;\n  const [maskInput, setMaskInput] = React.useState(enableInputMask);\n\n  const input = useRef();\n\n  function handleCopyText() {\n    if (enableInputMask || onlyCopy) {\n      navigator.clipboard\n        .writeText(copyable)\n        .then(() => {\n          doToast({ message: snackMessage || __('Text copied') });\n        })\n        .catch(() => {\n          doToast({ message: __('Failed to copy.'), isError: true });\n        });\n    } else {\n      const topRef = input.current;\n      if (topRef && topRef.input && topRef.input.current) {\n        topRef.input.current.select();\n        if (onCopy) {\n          // Allow clients to change the selection before making the copy.\n          onCopy(topRef.input.current);\n        }\n      }\n\n      document.execCommand('copy');\n      doToast({ message: snackMessage || __('Text copied') });\n    }\n  }\n\n  function onFocus() {\n    // We have to go a layer deep since the input is inside the form component\n    const topRef = input.current;\n    if (topRef && topRef.input && topRef.input.current) {\n      topRef.input.current.select();\n    }\n  }\n\n  return (\n    <FormField\n      type={maskInput ? 'password' : 'text'}\n      className=\"form-field--copyable\"\n      readOnly\n      name={name}\n      label={label}\n      value={copyable || ''}\n      ref={input}\n      onFocus={onFocus}\n      inputButton={\n        <Button button={primaryButton ? 'primary' : 'secondary'} icon={ICONS.COPY} onClick={handleCopyText} />\n      }\n      helper={\n        enableInputMask && (\n          <Button button=\"link\" onClick={() => setMaskInput(!maskInput)} label={maskInput ? __('Show') : __('Hide')} />\n        )\n      }\n    />\n  );\n}\n","// @flow\nimport { SITE_NAME } from 'config';\nimport * as PAGES from 'constants/pages';\nimport React from 'react';\nimport CreditAmount from 'component/common/credit-amount';\nimport Button from 'component/button';\nimport Card from 'component/common/card';\nimport I18nMessage from 'component/i18nMessage';\n\ntype Props = {\n  balance: number,\n  totalRewardValue: number,\n  title?: string,\n};\n\nfunction RewardAuthIntro(props: Props) {\n  const { totalRewardValue, title } = props;\n  const totalRewardRounded = Math.floor(totalRewardValue / 10) * 10;\n\n  return (\n    <Card\n      title={title || __('Unlock %SITE_NAME% rewards to earn Credits', { SITE_NAME })}\n      subtitle={\n        <I18nMessage\n          tokens={{\n            credit_amount: <CreditAmount inheritStyle amount={totalRewardRounded} />,\n            site_name: SITE_NAME,\n          }}\n        >\n          Unlocking %site_name% rewards allows you to earn more than %credit_amount% in rewards.\n        </I18nMessage>\n      }\n      actions={\n        <Button\n          requiresAuth\n          button=\"primary\"\n          navigate={`/$/${PAGES.REWARDS_VERIFY}?redirect=/$/${PAGES.REWARDS}`}\n          label={__('Unlock Rewards')}\n        />\n      }\n    />\n  );\n}\n\nexport default RewardAuthIntro;\n","import { connect } from 'react-redux';\nimport { selectUnclaimedRewardValue } from 'redux/selectors/rewards';\nimport RewardAuthIntro from './view';\n\nconst select = state => ({\n  totalRewardValue: selectUnclaimedRewardValue(state),\n});\n\nexport default connect(select, null)(RewardAuthIntro);\n","// @flow\nimport React from 'react';\nimport Button from 'component/button';\nimport LbcMessage from 'component/common/lbc-message';\n\ntype Reward = {\n  reward_amount: number,\n  reward_range: string,\n};\n\ntype Props = {\n  isPending: boolean,\n  label: ?string,\n  reward: Reward,\n  button: ?boolean,\n  disabled: boolean,\n  claimReward: (Reward) => void,\n};\n\nconst RewardLink = (props: Props) => {\n  const { reward, claimReward, label, isPending, button, disabled = false } = props;\n  let displayLabel = label;\n  if (isPending) {\n    displayLabel = __('Claiming...');\n  } else if (label) {\n    displayLabel = label;\n  } else if (reward && reward.reward_range && reward.reward_range.includes('-')) {\n    displayLabel = __('Claim %range% LBC', { range: reward.reward_range });\n  } else if (reward && reward.reward_amount > 0) {\n    displayLabel = __('Claim %amount% LBC', { amount: reward.reward_amount });\n  } else {\n    displayLabel = __('Claim ??? LBC');\n  }\n\n  return !reward ? null : (\n    <Button\n      button={button ? 'primary' : 'link'}\n      disabled={disabled || isPending}\n      label={<LbcMessage>{displayLabel}</LbcMessage>}\n      aria-label={displayLabel}\n      onClick={() => {\n        claimReward(reward);\n      }}\n    />\n  );\n};\n\nexport default RewardLink;\n","import { connect } from 'react-redux';\nimport { makeSelectRewardByClaimCode, makeSelectIsRewardClaimPending } from 'redux/selectors/rewards';\nimport { doClaimRewardType } from 'redux/actions/rewards';\n\nimport RewardLink from './view';\n\nconst select = (state, props) => ({\n  isPending: makeSelectIsRewardClaimPending()(state, props),\n  reward: makeSelectRewardByClaimCode()(state, props.claim_code),\n});\n\nconst perform = dispatch => ({\n  claimReward: reward =>\n    dispatch(doClaimRewardType(reward.reward_type, { notifyError: true, params: { claim_code: reward.claim_code } })),\n});\n\nexport default connect(select, perform)(RewardLink);\n","// @flow\nimport { URL, SITE_NAME } from 'config';\nimport React, { useEffect, useState } from 'react';\nimport Button from 'component/button';\nimport { Form, FormField } from 'component/common/form';\nimport CopyableText from 'component/copyableText';\nimport Card from 'component/common/card';\nimport analytics from 'analytics';\nimport I18nMessage from 'component/i18nMessage';\nimport LbcSymbol from 'component/common/lbc-symbol';\n\ntype Props = {\n  errorMessage: ?string,\n  inviteNew: (string) => void,\n  isPending: boolean,\n  referralCode: string,\n  channels: ?Array<ChannelClaim>,\n};\n\nfunction InviteNew(props: Props) {\n  const { inviteNew, errorMessage, isPending, referralCode = '', channels } = props;\n\n  // Email\n  const [email, setEmail] = useState('');\n  function handleSubmit() {\n    inviteNew(email);\n  }\n\n  function handleEmailChanged(event: any) {\n    setEmail(event.target.value);\n  }\n\n  // Referral link\n  const [referralSource, setReferralSource] = useState(referralCode);\n\n  const handleReferralChange = React.useCallback(\n    (code) => {\n      setReferralSource(code);\n      // TODO: keep track of this in an array?\n      const matchingChannel = channels && channels.find((ch) => ch.name === code);\n      if (matchingChannel) {\n        analytics.apiLog.publish(matchingChannel);\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- @see TODO_NEED_VERIFICATION\n    [setReferralSource]\n  );\n\n  const topChannel =\n    channels &&\n    channels.length > 0 &&\n    channels.reduce((top, channel) => {\n      const topClaimCount = (top && top.meta && top.meta.claims_in_channel) || 0;\n      const currentClaimCount = (channel && channel.meta && channel.meta.claims_in_channel) || 0;\n      return topClaimCount >= currentClaimCount ? top : channel;\n    });\n  const referralString =\n    channels && channels.length && referralSource !== referralCode\n      ? lookupUrlByClaimName(referralSource, channels)\n      : referralSource;\n\n  const referral = `${URL}/$/invite/${referralString.replace('#', ':')}`;\n\n  useEffect(() => {\n    // set default channel\n    if (topChannel) {\n      handleReferralChange(topChannel.name);\n    }\n  }, [topChannel, handleReferralChange]);\n\n  function lookupUrlByClaimName(name, channels) {\n    const claim = channels.find((channel) => channel.name === name);\n    return claim && claim.canonical_url ? claim.canonical_url.replace('lbry://', '') : name;\n  }\n\n  return (\n    <div className={'columns'}>\n      <div className=\"column\">\n        <Card\n          title={__('Invites')}\n          subtitle={\n            <I18nMessage tokens={{ SITE_NAME, lbc: <LbcSymbol /> }}>\n              Earn %lbc% for inviting subscribers, followers, fans, friends, etc. to join and follow you on %SITE_NAME%.\n              You can use invites just like affiliate links.\n            </I18nMessage>\n          }\n          actions={\n            <React.Fragment>\n              <CopyableText label={__('Your invite link')} copyable={referral} />\n              {channels && channels.length > 0 && (\n                <FormField\n                  type=\"select\"\n                  label={__('Customize link')}\n                  value={referralSource}\n                  onChange={(e) => handleReferralChange(e.target.value)}\n                >\n                  {channels.map((channel) => (\n                    <option key={channel.claim_id} value={channel.name}>\n                      {channel.name}\n                    </option>\n                  ))}\n                  <option value={referralCode}>{referralCode}</option>\n                </FormField>\n              )}\n            </React.Fragment>\n          }\n        />\n      </div>\n      <div className=\"column\">\n        <Card\n          title={__('Invite by email')}\n          subtitle={\n            <I18nMessage tokens={{ SITE_NAME, lbc: <LbcSymbol /> }}>\n              Invite someone you know by email and earn %lbc% when they join %SITE_NAME%.\n            </I18nMessage>\n          }\n          actions={\n            <React.Fragment>\n              <Form onSubmit={handleSubmit}>\n                <FormField\n                  type=\"text\"\n                  label={__('Email')}\n                  placeholder=\"youremail@example.org\"\n                  name=\"email\"\n                  value={email}\n                  error={errorMessage}\n                  inputButton={\n                    <Button button=\"secondary\" type=\"submit\" label={__('Invite')} disabled={isPending || !email} />\n                  }\n                  onChange={(event) => {\n                    handleEmailChanged(event);\n                  }}\n                />\n                <p className=\"help\">\n                  <I18nMessage\n                    tokens={{\n                      rewards_link: <Button button=\"link\" navigate=\"/$/rewards\" label={__('rewards')} />,\n                      referral_faq_link: (\n                        <Button button=\"link\" label={__('FAQ')} href=\"https://help.odysee.tv/\" target=\"_blank\" />\n                      ),\n                    }}\n                  >\n                    Read our %referral_faq_link% to learn more about rewards.\n                  </I18nMessage>\n                </p>\n              </Form>\n            </React.Fragment>\n          }\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default InviteNew;\n","import { connect } from 'react-redux';\nimport {\n  selectUserInviteNewIsPending,\n  selectUserInviteNewErrorMessage,\n  selectUserInviteReferralCode,\n} from 'redux/selectors/user';\nimport { doUserInviteNew } from 'redux/actions/user';\nimport { selectMyChannelClaims } from 'redux/selectors/claims';\nimport InviteNew from './view';\n\nconst select = (state) => ({\n  errorMessage: selectUserInviteNewErrorMessage(state),\n  referralCode: selectUserInviteReferralCode(state),\n  isPending: selectUserInviteNewIsPending(state),\n  channels: selectMyChannelClaims(state),\n});\n\nconst perform = (dispatch) => ({\n  inviteNew: (email) => dispatch(doUserInviteNew(email)),\n});\n\nexport default connect(select, perform)(InviteNew);\n","// @flow\nimport React from 'react';\nimport RewardLink from 'component/rewardLink';\nimport Icon from 'component/common/icon';\nimport * as ICONS from 'constants/icons';\nimport Card from 'component/common/card';\nimport LbcMessage from 'component/common/lbc-message';\n\ntype Props = {\n  invitees: ?Array<{\n    email: string,\n    invite_accepted: boolean,\n    invite_reward_claimed: boolean,\n    invite_reward_claimable: boolean,\n  }>,\n  referralReward: ?Reward,\n};\n\nclass InviteList extends React.PureComponent<Props> {\n  render() {\n    const { invitees, referralReward } = this.props;\n\n    if (!invitees || !invitees.length) {\n      return null;\n    }\n\n    let rewardAmount = 0;\n    let rewardHelp = __(\n      \"Woah, you have a lot of friends! You've claimed the maximum amount of invite rewards. Email %email% if you'd like to be whitelisted for more invites.\",\n      { email: 'hello@odysee.com' }\n    );\n\n    if (referralReward) {\n      rewardAmount = referralReward.reward_amount;\n      rewardHelp = referralReward.reward_description;\n    }\n    const showClaimable = invitees.some((invite) => invite.invite_reward_claimable && !invite.invite_reward_claimed);\n\n    return (\n      <Card\n        title={<div className=\"table__header-text\">{__('Invite History')}</div>}\n        subtitle={\n          <div className=\"table__header-text\">\n            <LbcMessage>{rewardHelp}</LbcMessage>\n          </div>\n        }\n        titleActions={\n          referralReward &&\n          showClaimable && (\n            <div className=\"card__actions--inline\">\n              <RewardLink\n                button\n                label={__(`Claim Your %reward_amount% Credit Invite Reward`, { reward_amount: rewardAmount })}\n                claim_code={referralReward.claim_code}\n              />\n            </div>\n          )\n        }\n        isBodyList\n        body={\n          <div className=\"table__wrapper\">\n            <table className=\"table section\">\n              <thead>\n                <tr>\n                  <th>{__('Invitee Email')}</th>\n                  <th>{__('Invite Status')}</th>\n                  <th>{__('Reward')}</th>\n                </tr>\n              </thead>\n              <tbody>\n                {invitees.map((invitee) => (\n                  <tr key={invitee.email}>\n                    <td>{invitee.email}</td>\n                    <td>\n                      <span>{invitee.invite_accepted ? __('Accepted') : __('Not Accepted')}</span>\n                    </td>\n                    <td>\n                      {invitee.invite_reward_claimed && (\n                        <React.Fragment>\n                          <span>{__('Claimed')}</span>\n                          <Icon icon={ICONS.COMPLETE} />\n                        </React.Fragment>\n                      )}\n\n                      {!invitee.invite_reward_claimed &&\n                        (invitee.invite_reward_claimable ? <span>{__('Claimable')}</span> : __('Unclaimable'))}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        }\n      />\n    );\n  }\n}\n\nexport default InviteList;\n","import { connect } from 'react-redux';\nimport { selectReferralReward } from 'redux/selectors/rewards';\nimport { selectUserInvitees, selectUserInviteStatusIsPending } from 'redux/selectors/user';\nimport InviteList from './view';\n\nconst select = state => ({\n  invitees: selectUserInvitees(state),\n  isPending: selectUserInviteStatusIsPending(state),\n  referralReward: selectReferralReward(state),\n});\n\nconst perform = () => ({});\n\nexport default connect(select, perform)(InviteList);\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","// @flow\nimport { SITE_NAME } from 'config';\nimport React from 'react';\nimport BusyIndicator from 'component/common/busy-indicator';\nimport InviteNew from 'component/inviteNew';\nimport InviteList from 'component/inviteList';\nimport Page from 'component/page';\nimport RewardAuthIntro from 'component/rewardAuthIntro';\nimport './style.scss';\n\ntype Props = {\n  isPending: boolean,\n  isFailed: boolean,\n  inviteAcknowledged: boolean,\n  authenticated: boolean,\n  acknowledgeInivte: () => void,\n  fetchInviteStatus: (boolean) => void,\n};\n\nclass InvitePage extends React.PureComponent<Props> {\n  componentDidMount() {\n    const { fetchInviteStatus, inviteAcknowledged, acknowledgeInivte } = this.props;\n    fetchInviteStatus(false);\n\n    if (!inviteAcknowledged) {\n      acknowledgeInivte();\n    }\n  }\n\n  render() {\n    const { isPending, isFailed, authenticated } = this.props;\n\n    return (\n      <Page className=\"invite-page__wrapper\">\n        {!authenticated ? (\n          <RewardAuthIntro\n            title={__('Log in to %SITE_NAME% to earn rewards From Inviting Your Friends', { SITE_NAME })}\n          />\n        ) : (\n          <React.Fragment>\n            {isPending && <BusyIndicator message={__('Checking your invite status')} />}\n            {!isPending && isFailed && <span className=\"empty\">{__('Failed to retrieve invite status.')}</span>}\n            {!isPending && !isFailed && (\n              <React.Fragment>\n                <InviteNew />\n                <InviteList />\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        )}\n      </Page>\n    );\n  }\n}\n\nexport default InvitePage;\n","import * as SETTINGS from 'constants/settings';\nimport { connect } from 'react-redux';\nimport {\n  selectUserInviteStatusFailed,\n  selectUserInviteStatusIsPending,\n  selectUserVerifiedEmail,\n} from 'redux/selectors/user';\nimport { doFetchInviteStatus } from 'redux/actions/user';\nimport { selectClientSetting } from 'redux/selectors/settings';\nimport { doSetClientSetting } from 'redux/actions/settings';\nimport InvitePage from './view';\n\nconst select = (state) => ({\n  isFailed: selectUserInviteStatusFailed(state),\n  isPending: selectUserInviteStatusIsPending(state),\n  inviteAcknowledged: selectClientSetting(state, SETTINGS.INVITE_ACKNOWLEDGED),\n  authenticated: selectUserVerifiedEmail(state),\n});\n\nconst perform = (dispatch) => ({\n  fetchInviteStatus: (callRewardList) => dispatch(doFetchInviteStatus(callRewardList)),\n  acknowledgeInivte: () => dispatch(doSetClientSetting(SETTINGS.INVITE_ACKNOWLEDGED, true)),\n});\n\nexport default connect(select, perform)(InvitePage);\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".invite-page__wrapper .card__subtitle{min-height:50px}[dir] .invite-page__wrapper .card__first-pane{margin-top:var(--spacing-l)}.invite-page__wrapper .column{flex:1}.invite-page__wrapper .column .card{width:100%}.invite-page__wrapper label{font-size:var(--font-body)}[dir] .invite-page__wrapper label{margin-top:var(--spacing-m)}[dir] .invite-page__wrapper input-submit button{background:var(--color-primary)}.invite-page__wrapper input-submit button .icon{stroke:var(--color-primary-contrast)}.invite-page__wrapper .credit-amount{font-size:var(--font-body)}[dir] .invite-page__wrapper thead th{border-bottom:unset}.invite-page__wrapper tbody{overflow:hidden}[dir] .invite-page__wrapper tbody{background-color:var(--color-header-button);border-radius:var(--border-radius);padding:var(--spacing-s)}[dir=ltr] .invite-page__wrapper tbody tr:first-of-type td:first-child{border-radius:var(--border-radius) 0 0 0}[dir=ltr] .invite-page__wrapper tbody tr:first-of-type td:last-child,[dir=rtl] .invite-page__wrapper tbody tr:first-of-type td:first-child{border-radius:0 var(--border-radius) 0 0}[dir=rtl] .invite-page__wrapper tbody tr:first-of-type td:last-child{border-radius:var(--border-radius) 0 0 0}[dir=ltr] .invite-page__wrapper tbody tr:last-of-type td:first-child{border-radius:0 0 0 var(--border-radius)}[dir=ltr] .invite-page__wrapper tbody tr:last-of-type td:last-child,[dir=rtl] .invite-page__wrapper tbody tr:last-of-type td:first-child{border-radius:0 0 var(--border-radius) 0}[dir=rtl] .invite-page__wrapper tbody tr:last-of-type td:last-child{border-radius:0 0 0 var(--border-radius)}[dir] .invite-page__wrapper tbody tr:hover{background-color:var(--color-header-button)}.invite-page__wrapper tbody td svg{color:var(--color-text-inverse)}[dir] .invite-page__wrapper tbody td svg{background-color:var(--color-text);border-radius:50%;margin-bottom:-2px}[dir=ltr] .invite-page__wrapper tbody td svg{margin-left:var(--spacing-xs)}[dir=rtl] .invite-page__wrapper tbody td svg{margin-right:var(--spacing-xs)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../ui/page/invite/style.scss\"],\"names\":[],\"mappings\":\"AACE,sCACE,eAAA,CAEF,8CACE,2BAAA,CAGF,8BACE,MAAA,CACA,oCACE,UAAA,CAIJ,4BACE,0BACA,CAFF,kCAEE,2BAAA,CAGA,gDACE,+BAAA,CACA,gDACE,oCAAA,CAKN,qCACE,0BAAA,CAIA,qCACE,mBAAA,CAIJ,4BAGE,eACA,CAJF,kCACE,2CAAA,CACA,kCAAA,CAEA,wBAAA,CAEE,sEACE,wCAAA,CAEF,2IACE,wCAAA,CADF,qEACE,wCAAA,CAIF,qEACE,wCAAA,CAEF,yIACE,wCAAA,CADF,oEACE,wCAAA,CAGJ,2CACE,2CAAA,CAGA,mCAKE,+BAAA,CALF,yCAGE,kCAAA,CACA,iBAAA,CAFA,kBAGA,CALF,6CACE,6BAIA,CALF,6CACE,8BAIA\",\"sourcesContent\":[\".invite-page__wrapper {\\n  .card__subtitle {\\n    min-height: 50px;\\n  }\\n  .card__first-pane {\\n    margin-top: var(--spacing-l);\\n  }\\n\\n  .column {\\n    flex: 1;\\n    .card {\\n      width: 100%;\\n    }\\n  }\\n\\n  label {\\n    font-size: var(--font-body);\\n    margin-top: var(--spacing-m);\\n  }\\n  input-submit {\\n    button {\\n      background: var(--color-primary);\\n      .icon {\\n        stroke: var(--color-primary-contrast);\\n      }\\n    }\\n  }\\n\\n  .credit-amount {\\n    font-size: var(--font-body);\\n  }\\n\\n  thead {\\n    th {\\n      border-bottom: unset;\\n    }\\n  }\\n\\n  tbody {\\n    background-color: var(--color-header-button);\\n    border-radius: var(--border-radius);\\n    overflow: hidden;\\n    padding: var(--spacing-s);\\n    tr:first-of-type {\\n      td:first-child {\\n        border-radius: var(--border-radius) 0 0 0;\\n      }\\n      td:last-child {\\n        border-radius: 0 var(--border-radius) 0 0;\\n      }\\n    }\\n    tr:last-of-type {\\n      td:first-child {\\n        border-radius: 0 0 0 var(--border-radius);\\n      }\\n      td:last-child {\\n        border-radius: 0 0 var(--border-radius) 0;\\n      }\\n    }\\n    tr:hover {\\n      background-color: var(--color-header-button);\\n    }\\n    td {\\n      svg {\\n        margin-left: var(--spacing-xs);\\n        margin-bottom: -2px;\\n        background-color: var(--color-text);\\n        border-radius: 50%;\\n        color: var(--color-text-inverse);\\n      }\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["BusyIndicator","_React$PureComponent","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","key","value","message","this","props","React","className","FirstPaneWrapper","singlePane","children","TitleWrapper","isPageTitle","smallTitle","accessStatus","AccessIndicator","par","Tooltip","title","__","classnames","locked","status","unlocked","purchased","Icon","icon","ICONS","dangerouslySetInnerHTML","__html","child","_children$props","_children$props2","_children$props3","transformer","subtitle","titleActions","id","body","actions","_props$isPageTitle","_props$isBodyList","isBodyList","_props$smallTitle","defaultExpand","nag","_onClick","onClick","secondPane","slimHeader","background","backgroundImage","headerActions","gridHeader","_useState2","_slicedToArray","useState","expanded","setExpanded","expandable","undefined","role","Boolean","e","stopPropagation","style","sectionIcon","Button","button","connect","doToast","copyable","onlyCopy","snackMessage","label","_props$primaryButton","primaryButton","name","onCopy","enableInputMask","_React$useState2","maskInput","setMaskInput","input","useRef","FormField","type","readOnly","ref","onFocus","topRef","current","select","inputButton","navigator","clipboard","writeText","then","isError","document","execCommand","helper","totalRewardValue","totalRewardRounded","Math","floor","Card","SITE_NAME","I18nMessage","tokens","credit_amount","CreditAmount","inheritStyle","amount","site_name","requiresAuth","navigate","concat","PAGES","state","selectUnclaimedRewardValue","RewardAuthIntro","reward","claimReward","isPending","_props$disabled","disabled","displayLabel","reward_range","includes","range","reward_amount","LbcMessage","makeSelectIsRewardClaimPending","makeSelectRewardByClaimCode","claim_code","dispatch","doClaimRewardType","reward_type","notifyError","params","RewardLink","inviteNew","errorMessage","_props$referralCode","referralCode","channels","email","setEmail","_useState4","referralSource","setReferralSource","handleReferralChange","code","matchingChannel","find","ch","analytics","topChannel","length","reduce","top","channel","meta","claims_in_channel","referralString","claim","canonical_url","replace","lookupUrlByClaimName","referral","URL","useEffect","lbc","LbcSymbol","CopyableText","onChange","target","map","claim_id","Form","onSubmit","placeholder","error","event","handleEmailChanged","rewards_link","referral_faq_link","href","selectUserInviteNewErrorMessage","selectUserInviteReferralCode","selectUserInviteNewIsPending","selectMyChannelClaims","doUserInviteNew","InviteNew","InviteList","_this$props","invitees","referralReward","rewardAmount","rewardHelp","reward_description","showClaimable","some","invite","invite_reward_claimable","invite_reward_claimed","invitee","invite_accepted","selectUserInvitees","selectUserInviteStatusIsPending","selectReferralReward","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","InvitePage","fetchInviteStatus","inviteAcknowledged","acknowledgeInivte","_this$props2","isFailed","authenticated","Page","selectUserInviteStatusFailed","selectClientSetting","SETTINGS","selectUserVerifiedEmail","callRewardList","doFetchInviteStatus","doSetClientSetting","___CSS_LOADER_EXPORT___","push","module"],"sourceRoot":""}