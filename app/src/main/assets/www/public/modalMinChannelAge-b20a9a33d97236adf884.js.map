{"version":3,"file":"modalMinChannelAge-b20a9a33d97236adf884.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/common/card.jsx","webpack://odysee.com/../node_modules/parse-duration/index.mjs","webpack://odysee.com/../ui/component/formFieldDuration/view.jsx","webpack://odysee.com/../ui/component/formFieldDuration/index.js","webpack://odysee.com/../ui/modal/modalMinChannelAge/view.jsx","webpack://odysee.com/../ui/modal/modalMinChannelAge/index.js"],"sourcesContent":["// @flow\nimport type { Node } from 'react';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Icon from 'component/common/icon';\nimport Button from 'component/button';\nimport * as ICONS from 'constants/icons';\n// import twemoji from 'twemoji';\nimport Tooltip from 'component/common/tooltip';\n\ntype Props = {\n  title?: string | Node,\n  subtitle?: string | Node,\n  titleActions?: string | Node,\n  id?: string,\n  body?: string | Node,\n  actions?: string | Node,\n  icon?: string,\n  className?: string,\n  isPageTitle?: boolean,\n  noTitleWrap?: boolean,\n  isBodyList?: boolean,\n  defaultExpand?: boolean,\n  nag?: Node,\n  smallTitle?: boolean,\n  onClick?: () => void,\n  children?: Node,\n  secondPane?: Node,\n  slimHeader?: boolean,\n  background?: boolean,\n  backgroundImage?: string,\n  singlePane?: boolean,\n  headerActions?: Node,\n  gridHeader?: boolean,\n  accessStatus?: string,\n};\n\nfunction Card(props: Props) {\n  const {\n    title,\n    subtitle,\n    titleActions,\n    id,\n    body,\n    actions,\n    icon,\n    className,\n    isPageTitle = false,\n    isBodyList = false,\n    // noTitleWrap = false,\n    smallTitle = false,\n    defaultExpand,\n    nag,\n    onClick,\n    children,\n    secondPane,\n    slimHeader,\n    background,\n    backgroundImage,\n    singlePane,\n    headerActions,\n    accessStatus,\n    gridHeader,\n  } = props;\n\n  const [expanded, setExpanded] = useState(defaultExpand);\n  const expandable = defaultExpand !== undefined;\n\n  return (\n    <section\n      role={onClick ? 'button' : undefined}\n      className={classnames(className, 'card', {\n        'card__multi-pane': Boolean(secondPane),\n        'card--background': background,\n      })}\n      id={id}\n      onClick={(e) => {\n        if (onClick) {\n          onClick();\n          e.stopPropagation();\n        }\n      }}\n    >\n      {backgroundImage && (\n        <div\n          className=\"background\"\n          style={{\n            backgroundImage:\n              'url(https://thumbnails.odycdn.com/optimize/s:390:0/quality:85/plain/' + backgroundImage + ')',\n          }}\n        />\n      )}\n      <FirstPaneWrapper singlePane={singlePane}>\n        {(title || subtitle) && (\n          <div\n            className={classnames('card__header--between', {\n              'card__header--slim': slimHeader,\n              'card__header--grid': gridHeader,\n            })}\n          >\n            <div className={classnames('card__title-section', { 'card__title-section--body-list': isBodyList })}>\n              {icon && <Icon sectionIcon icon={icon} />}\n\n              <div className=\"card__title-text\">\n                <TitleWrapper isPageTitle={isPageTitle} smallTitle={smallTitle} accessStatus={accessStatus}>\n                  {title}\n                </TitleWrapper>\n\n                {subtitle && (\n                  <div className={classnames('card__subtitle', { 'card__subtitle--small': smallTitle })}>\n                    {subtitle}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {(titleActions || expandable) && (\n              <div className=\"card__title-actions-container\">\n                {titleActions && (\n                  <div\n                    className={classnames('card__title-actions', {\n                      'card__title-actions--small': smallTitle,\n                    })}\n                  >\n                    {titleActions}\n                  </div>\n                )}\n                {expandable && (\n                  <div className=\"card__title-actions\">\n                    <Button\n                      button=\"alt\"\n                      aria-expanded={expanded}\n                      aria-label={expanded ? __('Less') : __('More')}\n                      icon={expanded ? ICONS.SUBTRACT : ICONS.ADD}\n                      onClick={() => setExpanded(!expanded)}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n\n            {headerActions}\n          </div>\n        )}\n\n        {(!expandable || (expandable && expanded)) && (\n          <>\n            {body && (\n              <div\n                className={classnames('card__body', {\n                  'card__body--no-title': !title && !subtitle,\n                  'card__body--list': isBodyList,\n                })}\n              >\n                {body}\n              </div>\n            )}\n            {actions && <div className=\"card__main-actions\">{actions}</div>}\n            {children && <div className=\"card__main-actions\">{children}</div>}\n          </>\n        )}\n\n        {nag}\n      </FirstPaneWrapper>\n\n      {secondPane && <div className=\"card__second-pane\">{secondPane}</div>}\n    </section>\n  );\n}\n\ntype FirstPaneProps = {\n  singlePane?: boolean,\n  children: any,\n};\n\nconst FirstPaneWrapper = (props: FirstPaneProps) => {\n  const { singlePane, children } = props;\n\n  return singlePane ? children : <div className=\"card__first-pane\">{children}</div>;\n};\n\ntype TitleProps = {\n  isPageTitle?: boolean,\n  smallTitle?: boolean,\n  children?: any,\n  emoji?: any,\n  accessStatus?: string,\n};\n\nconst TitleWrapper = (props: TitleProps) => {\n  const { isPageTitle, smallTitle, children, accessStatus } = props;\n\n  /*\n  const Twemoji = ({ emoji }) => (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: twemoji.parse(emoji, {\n          folder: 'svg',\n          ext: '.svg',\n        }),\n      }}\n    />\n  );\n  */\n\n  const AccessIndicator = (par: any) => {\n    return (\n      <Tooltip title={__('This is a members-only content')}>\n        <div\n          className={classnames('content-access-indicator', {\n            locked: par.status === 'locked',\n            unlocked: par.status === 'unlocked',\n            purchased: par.status === 'purchased',\n          })}\n        >\n          <Icon icon={par.status === 'locked' ? ICONS.LOCK : ICONS.UNLOCK} />\n        </div>\n      </Tooltip>\n    );\n  };\n\n  /*\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return <Twemoji emoji={children?.props?.children[child]} />;\n      }\n    }\n    return children;\n  }\n  */\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return children?.props?.children[child];\n      }\n    }\n    return children;\n  }\n\n  return isPageTitle ? (\n    <h1 className=\"card__title\">\n      {accessStatus && <AccessIndicator status={accessStatus} />}\n      <font dangerouslySetInnerHTML={{ __html: transformer(children) }} />\n    </h1>\n  ) : (\n    <h2 className={classnames('card__title', { 'card__title--small': smallTitle })}>{children}</h2>\n  );\n};\n\nexport default Card;\n","let durationRE = /(-?(?:\\d+\\.?\\d*|\\d*\\.?\\d+)(?:e[-+]?\\d+)?)\\s*([\\p{L}]*)/uig\r\n\r\n\r\n/**\r\n * conversion ratios\r\n */\r\n\r\nparse.nanosecond =\r\nparse.ns = 1 / 1e6\r\n\r\nparse['µs'] =\r\nparse['μs'] =\r\nparse.us =\r\nparse.microsecond = 1 / 1e3\r\n\r\nparse.millisecond =\r\nparse.ms =\r\nparse[''] = 1\r\n\r\nparse.second =\r\nparse.sec =\r\nparse.s = parse.ms * 1000\r\n\r\nparse.minute =\r\nparse.min =\r\nparse.m = parse.s * 60\r\n\r\nparse.hour =\r\nparse.hr =\r\nparse.h = parse.m * 60\r\n\r\nparse.day =\r\nparse.d = parse.h * 24\r\n\r\nparse.week =\r\nparse.wk =\r\nparse.w = parse.d * 7\r\n\r\nparse.month =\r\nparse.b =\r\nparse.d * (365.25 / 12)\r\n\r\nparse.year =\r\nparse.yr =\r\nparse.y = parse.d * 365.25\r\n\r\n/**\r\n * convert `str` to ms\r\n *\r\n * @param {String} str\r\n * @param {String} format\r\n * @return {Number}\r\n */\r\n\r\nfunction parse(str='', format='ms'){\r\n  var result = null\r\n  // ignore commas/placeholders\r\n  str = (str+'').replace(/(\\d)[,_](\\d)/g, '$1$2')\r\n  str.replace(durationRE, function(_, n, units){\r\n    units = unitRatio(units)\r\n    if (units) result = (result || 0) + parseFloat(n, 10) * units\r\n  })\r\n\r\n  return result && (result / (unitRatio(format) || 1))\r\n}\r\n\r\nfunction unitRatio(str) {\r\n  return parse[str] || parse[str.toLowerCase().replace(/s$/, '')]\r\n}\r\n\r\nexport default parse\r\n","// @flow\nimport type { Node } from 'react';\nimport React from 'react';\nimport parseDuration from 'parse-duration';\nimport { FormField } from 'component/common/form';\nimport Icon from 'component/common/icon';\nimport * as ICONS from 'constants/icons';\n\n// prettier-ignore\nconst TOOLTIP = 'Units:\\n • s:  seconds\\n • m:  minutes \\n • h:  hours\\n • d:  days\\n • month:  months\\n • y:  years';\nconst ONE_HUNDRED_YEARS_IN_SECONDS = 3154000000;\n\ntype Props = {\n  name: string,\n  label?: string | Node,\n  placeholder?: string | number,\n  disabled?: boolean,\n  value: string | number,\n  onChange: (any) => void,\n  onResolve: (valueInSeconds: number) => void, // Returns parsed/resolved value in seconds; \"-1\" for invalid input.\n  maxDurationInSeconds?: number,\n};\n\nexport default function FormFieldDuration(props: Props) {\n  const { name, label, placeholder, disabled, value, onChange, onResolve, maxDurationInSeconds } = props;\n  const [valueSec, setValueSec] = React.useState(-1);\n  const [valueErr, setValueErr] = React.useState('');\n\n  React.useEffect(() => {\n    const handleInvalidInput = (errMsg: string) => {\n      if (valueSec !== -1) {\n        setValueSec(-1);\n      }\n      if (valueErr !== errMsg) {\n        setValueErr(errMsg);\n      }\n      onResolve(-1);\n    };\n\n    const handleValidInput = (seconds) => {\n      if (seconds !== valueSec) {\n        setValueSec(seconds);\n        onResolve(seconds);\n      }\n      if (valueErr) {\n        setValueErr('');\n      }\n    };\n\n    if (!value) {\n      handleValidInput(-1); // Reset\n      return;\n    }\n\n    const seconds = parseDuration(value, 's');\n    if (Number.isInteger(seconds) && seconds > 0) {\n      const max = maxDurationInSeconds || ONE_HUNDRED_YEARS_IN_SECONDS;\n      if (seconds > max) {\n        handleInvalidInput(__('Value exceeded maximum.'));\n      } else {\n        handleValidInput(seconds);\n      }\n    } else {\n      handleInvalidInput(__('Invalid duration.'));\n    }\n  }, [value, valueSec, valueErr, maxDurationInSeconds, onResolve]);\n\n  return (\n    <FormField\n      name={name}\n      type=\"text\"\n      disabled={disabled}\n      label={\n        <>\n          {label || __('Duration --[period e.g. ban duration]--')}\n          <Icon customTooltipText={__(TOOLTIP)} className=\"icon--help\" icon={ICONS.HELP} tooltip size={16} />\n        </>\n      }\n      placeholder={placeholder || '30s, 10m, 1h, 2d, 3month, 1y'}\n      value={value}\n      onChange={onChange}\n      error={valueErr}\n    />\n  );\n}\n","import FormFieldDuration from './view';\n\nexport default FormFieldDuration;\n","// @flow\nimport React from 'react';\nimport moment from 'moment';\nimport Button from 'component/button';\nimport Card from 'component/common/card';\nimport { FormField } from 'component/common/form-components/form-field';\nimport FormFieldDuration from 'component/formFieldDuration';\nimport { Modal } from 'modal/modal';\n\nconst CHANNEL_AGE_LIMIT_MIN_DATE = new Date('February 8, 2022 00:00:00');\nconst LIMITATION_WARNING = 'The minimum duration must not exceed Feb 8th, 2022.';\n\ntype Props = {\n  onConfirm: (limitInMinutes: number, closeModal: () => void) => void,\n  doHideModal: () => void,\n};\n\nexport default function ModalMinChannelAge(props: Props) {\n  const { onConfirm, doHideModal } = props;\n\n  const [showLimitationWarning, setShowLimitationWarning] = React.useState('');\n  const [limitDisabled, setLimitDisabled] = React.useState(false);\n  const [minChannelAgeInput, setMinChannelAgeInput] = React.useState('');\n  const [minChannelAgeMinutes, setMinChannelAgeMinutes] = React.useState(-1);\n  const inputOk = limitDisabled || (minChannelAgeMinutes > 0 && !showLimitationWarning);\n\n  function handleOnClick() {\n    if (onConfirm) {\n      onConfirm(limitDisabled ? 0 : minChannelAgeMinutes, doHideModal);\n    }\n  }\n\n  function handleOnInputResolved(valueInSeconds) {\n    if (valueInSeconds > 0) {\n      const minCreationDate = moment().subtract(valueInSeconds, 'seconds').toDate();\n      setShowLimitationWarning(minCreationDate.getTime() < CHANNEL_AGE_LIMIT_MIN_DATE.getTime());\n      setMinChannelAgeMinutes(Math.ceil(valueInSeconds / 60));\n    } else {\n      setShowLimitationWarning(false);\n      setMinChannelAgeMinutes(-1);\n    }\n  }\n\n  return (\n    <Modal isOpen type=\"card\" onAborted={doHideModal}>\n      <Card\n        title={__('Set minimum channel age')}\n        body={\n          <>\n            <FormFieldDuration\n              name=\"time_since_first_comment\"\n              value={minChannelAgeInput}\n              disabled={limitDisabled}\n              onChange={(e) => setMinChannelAgeInput(e.target.value)}\n              onResolve={handleOnInputResolved}\n            />\n            {showLimitationWarning && !limitDisabled && <p className=\"help--warning\">{__(LIMITATION_WARNING)}</p>}\n            <FormField\n              type=\"checkbox\"\n              name=\"no_limit\"\n              label={__('No limit')}\n              checked={limitDisabled}\n              onChange={() => setLimitDisabled(!limitDisabled)}\n            />\n          </>\n        }\n        actions={\n          <div className=\"section__actions\">\n            <Button button=\"primary\" label={__('OK')} onClick={handleOnClick} disabled={!inputOk} />\n            <Button button=\"link\" label={__('Cancel')} onClick={doHideModal} />\n          </div>\n        }\n      />\n    </Modal>\n  );\n}\n","import { connect } from 'react-redux';\nimport ModalMinChannelAge from './view';\nimport { doHideModal } from 'redux/actions/app';\n\nconst perform = {\n  doHideModal,\n};\n\nexport default connect(null, perform)(ModalMinChannelAge);\n"],"names":["FirstPaneWrapper","props","singlePane","children","React","className","TitleWrapper","isPageTitle","smallTitle","accessStatus","AccessIndicator","par","Tooltip","title","__","classnames","locked","status","unlocked","purchased","Icon","icon","ICONS","dangerouslySetInnerHTML","__html","child","_children$props","_children$props2","_children$props3","transformer","subtitle","titleActions","id","body","actions","_props$isPageTitle","_props$isBodyList","isBodyList","_props$smallTitle","defaultExpand","nag","_onClick","onClick","secondPane","slimHeader","background","backgroundImage","headerActions","gridHeader","_useState2","_slicedToArray","useState","expanded","setExpanded","expandable","undefined","role","Boolean","e","stopPropagation","style","sectionIcon","Button","button","durationRE","parse","str","format","result","replace","_","n","units","unitRatio","parseFloat","toLowerCase","nanosecond","ns","us","microsecond","millisecond","ms","second","sec","s","minute","min","m","hour","hr","h","day","d","week","wk","w","month","b","year","yr","y","TOOLTIP","ONE_HUNDRED_YEARS_IN_SECONDS","name","label","placeholder","disabled","value","onChange","onResolve","maxDurationInSeconds","_React$useState2","valueSec","setValueSec","_React$useState4","valueErr","setValueErr","handleInvalidInput","errMsg","handleValidInput","seconds","parseDuration","Number","isInteger","FormField","type","customTooltipText","tooltip","size","error","CHANNEL_AGE_LIMIT_MIN_DATE","Date","LIMITATION_WARNING","perform","doHideModal","connect","onConfirm","showLimitationWarning","setShowLimitationWarning","limitDisabled","setLimitDisabled","_React$useState6","minChannelAgeInput","setMinChannelAgeInput","_React$useState8","minChannelAgeMinutes","setMinChannelAgeMinutes","inputOk","Modal","isOpen","onAborted","Card","FormFieldDuration","target","valueInSeconds","minCreationDate","moment","subtract","toDate","getTime","Math","ceil","checked"],"sourceRoot":""}