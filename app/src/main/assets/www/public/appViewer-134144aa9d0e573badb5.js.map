{"version":3,"file":"appViewer-134144aa9d0e573badb5.js","mappings":"mMAyEA,QAxDA,SAAmBA,GAuBjB,OACEC,EAAAA,cAAA,OAAKC,UAAU,wBACbD,EAAAA,cAACE,EAAAA,EAAI,CACHC,MAAOC,EAAG,SACVC,SAAUD,EAAG,+EA2BrB,EC5DA,SAAeE,EAAAA,EAAAA,KAPA,SAACC,EAAOR,GAAK,MAAM,CAChCS,OAAOC,EAAAA,EAAAA,IAAsBV,EAAMW,IAA5BD,CAAiCF,GACxCI,aAAaC,EAAAA,EAAAA,IAA4Bb,EAAMW,IAAlCE,CAAuCL,GACrD,IAEe,SAACM,GAAQ,MAAM,CAAC,CAAC,GAEjC,CAAwCC,E","sources":["webpack://odysee.com/../ui/component/viewers/appViewer/view.jsx","webpack://odysee.com/../ui/component/viewers/appViewer/index.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport Yrbl from 'component/yrbl';\n// import LoadingScreen from 'component/common/loading-screen';\n\ntype Props = {\n  source: string,\n  claim: StreamClaim,\n  contentType: string,\n};\n\n// const SANDBOX_TYPES = ['application/x-lbry', 'application/x-ext-lbry'];\n\n// This server exists in src/platforms/electron/startSandBox.js\n// const SANDBOX_SET_BASE_URL = 'http://localhost:5278/set/';\n// const SANDBOX_CONTENT_BASE_URL = 'http://localhost:5278';\n\nfunction AppViewer(props: Props) {\n  // const { claim, contentType } = props;\n  // const [loading, setLoading] = useState(true);\n  // const [appUrl, setAppUrl] = useState(false);\n\n  // const outpoint = `${claim.txid}:${claim.nout}`;\n  // useEffect(() => {\n  //   if (SANDBOX_TYPES.indexOf(contentType) > -1) {\n  //     fetch(`${SANDBOX_SET_BASE_URL}${outpoint}`)\n  //       .then(res => res.text())\n  //       .then(url => {\n  //         const appUrl = `${SANDBOX_CONTENT_BASE_URL}${url}`;\n  //         setAppUrl(appUrl);\n  //         setLoading(false);\n  //       })\n  //       .catch(err => {\n  //         setLoading(false);\n  //       });\n  //   } else {\n  //     setLoading(false);\n  //   }\n  // }, [outpoint, contentType, setAppUrl, setLoading]);\n\n  return (\n    <div className=\"content__cover--none\">\n      <Yrbl\n        title={__('Sorry')}\n        subtitle={__('Games and apps are currently disabled due to potential security concerns.')}\n      />\n    </div>\n  );\n\n  // return (\n  //   <div className=\"file-viewer\">\n  //     {!appUrl && (\n  //       <LoadingScreen\n  //         status={loading ? __('Almost there') : __('Unable to view this file in the app')}\n  //         spinner={loading}\n  //       />\n  //     )}\n  //      {appUrl && (\n  //       <webview\n  //         title=\"\"\n  //         sandbox=\"allow-scripts allow-forms allow-pointer-lock\"\n  //         src={appUrl}\n  //         autosize=\"on\"\n  //         style={{ border: 0, width: '100%', height: '100%' }}\n  //         useragent=\"Mozilla/5.0 AppleWebKit/537 Chrome/60 Safari/537\"\n  //         enableremotemodule=\"false\"\n  //         webpreferences=\"sandbox=true,contextIsolation=true,webviewTag=false,enableRemoteModule=false,devTools=false\"\n  //       />\n  //     )}\n  //   </div>\n  // );\n}\n\nexport default AppViewer;\n","import { connect } from 'react-redux';\nimport { makeSelectClaimForUri, makeSelectContentTypeForUri } from 'redux/selectors/claims';\nimport AppViewer from './view';\n\nconst select = (state, props) => ({\n  claim: makeSelectClaimForUri(props.uri)(state),\n  contentType: makeSelectContentTypeForUri(props.uri)(state),\n});\n\nconst perform = (dispatch) => ({});\n\nexport default connect(select, perform)(AppViewer);\n"],"names":["props","React","className","Yrbl","title","__","subtitle","connect","state","claim","makeSelectClaimForUri","uri","contentType","makeSelectContentTypeForUri","dispatch","AppViewer"],"sourceRoot":""}