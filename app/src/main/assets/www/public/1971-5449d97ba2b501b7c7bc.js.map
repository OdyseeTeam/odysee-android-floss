{"version":3,"file":"1971-5449d97ba2b501b7c7bc.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/common/card.jsx","webpack://odysee.com/../ui/component/common/help-link.jsx","webpack://odysee.com/../ui/component/publish/shared/publishBid/bid-help-text.jsx","webpack://odysee.com/../ui/component/repostCreate/style.scss?7fe7","webpack://odysee.com/../ui/component/repostCreate/view.jsx","webpack://odysee.com/../ui/component/repostCreate/index.js","webpack://odysee.com/../ui/component/walletSpendableBalanceHelp/view.jsx","webpack://odysee.com/../ui/component/walletSpendableBalanceHelp/index.js","webpack://odysee.com/../ui/component/yrblWalletEmpty/index.js","webpack://odysee.com/../ui/component/yrblWalletEmpty/view.jsx","webpack://odysee.com/../ui/effects/use-throttle.js","webpack://odysee.com/../ui/page/repost/view.jsx","webpack://odysee.com/../ui/component/repostCreate/style.scss"],"sourcesContent":["// @flow\nimport type { Node } from 'react';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Icon from 'component/common/icon';\nimport Button from 'component/button';\nimport * as ICONS from 'constants/icons';\n// import twemoji from 'twemoji';\nimport Tooltip from 'component/common/tooltip';\n\ntype Props = {\n  title?: string | Node,\n  subtitle?: string | Node,\n  titleActions?: string | Node,\n  id?: string,\n  body?: string | Node,\n  actions?: string | Node,\n  icon?: string,\n  className?: string,\n  isPageTitle?: boolean,\n  noTitleWrap?: boolean,\n  isBodyList?: boolean,\n  defaultExpand?: boolean,\n  nag?: Node,\n  smallTitle?: boolean,\n  onClick?: () => void,\n  children?: Node,\n  secondPane?: Node,\n  slimHeader?: boolean,\n  background?: boolean,\n  backgroundImage?: string,\n  singlePane?: boolean,\n  headerActions?: Node,\n  gridHeader?: boolean,\n  accessStatus?: string,\n};\n\nfunction Card(props: Props) {\n  const {\n    title,\n    subtitle,\n    titleActions,\n    id,\n    body,\n    actions,\n    icon,\n    className,\n    isPageTitle = false,\n    isBodyList = false,\n    // noTitleWrap = false,\n    smallTitle = false,\n    defaultExpand,\n    nag,\n    onClick,\n    children,\n    secondPane,\n    slimHeader,\n    background,\n    backgroundImage,\n    singlePane,\n    headerActions,\n    accessStatus,\n    gridHeader,\n  } = props;\n\n  const [expanded, setExpanded] = useState(defaultExpand);\n  const expandable = defaultExpand !== undefined;\n\n  return (\n    <section\n      role={onClick ? 'button' : undefined}\n      className={classnames(className, 'card', {\n        'card__multi-pane': Boolean(secondPane),\n        'card--background': background,\n      })}\n      id={id}\n      onClick={(e) => {\n        if (onClick) {\n          onClick();\n          e.stopPropagation();\n        }\n      }}\n    >\n      {backgroundImage && (\n        <div\n          className=\"background\"\n          style={{\n            backgroundImage:\n              'url(https://thumbnails.odycdn.com/optimize/s:390:0/quality:85/plain/' + backgroundImage + ')',\n          }}\n        />\n      )}\n      <FirstPaneWrapper singlePane={singlePane}>\n        {(title || subtitle) && (\n          <div\n            className={classnames('card__header--between', {\n              'card__header--slim': slimHeader,\n              'card__header--grid': gridHeader,\n            })}\n          >\n            <div className={classnames('card__title-section', { 'card__title-section--body-list': isBodyList })}>\n              {icon && <Icon sectionIcon icon={icon} />}\n\n              <div className=\"card__title-text\">\n                <TitleWrapper isPageTitle={isPageTitle} smallTitle={smallTitle} accessStatus={accessStatus}>\n                  {title}\n                </TitleWrapper>\n\n                {subtitle && (\n                  <div className={classnames('card__subtitle', { 'card__subtitle--small': smallTitle })}>\n                    {subtitle}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {(titleActions || expandable) && (\n              <div className=\"card__title-actions-container\">\n                {titleActions && (\n                  <div\n                    className={classnames('card__title-actions', {\n                      'card__title-actions--small': smallTitle,\n                    })}\n                  >\n                    {titleActions}\n                  </div>\n                )}\n                {expandable && (\n                  <div className=\"card__title-actions\">\n                    <Button\n                      button=\"alt\"\n                      aria-expanded={expanded}\n                      aria-label={expanded ? __('Less') : __('More')}\n                      icon={expanded ? ICONS.SUBTRACT : ICONS.ADD}\n                      onClick={() => setExpanded(!expanded)}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n\n            {headerActions}\n          </div>\n        )}\n\n        {(!expandable || (expandable && expanded)) && (\n          <>\n            {body && (\n              <div\n                className={classnames('card__body', {\n                  'card__body--no-title': !title && !subtitle,\n                  'card__body--list': isBodyList,\n                })}\n              >\n                {body}\n              </div>\n            )}\n            {actions && <div className=\"card__main-actions\">{actions}</div>}\n            {children && <div className=\"card__main-actions\">{children}</div>}\n          </>\n        )}\n\n        {nag}\n      </FirstPaneWrapper>\n\n      {secondPane && <div className=\"card__second-pane\">{secondPane}</div>}\n    </section>\n  );\n}\n\ntype FirstPaneProps = {\n  singlePane?: boolean,\n  children: any,\n};\n\nconst FirstPaneWrapper = (props: FirstPaneProps) => {\n  const { singlePane, children } = props;\n\n  return singlePane ? children : <div className=\"card__first-pane\">{children}</div>;\n};\n\ntype TitleProps = {\n  isPageTitle?: boolean,\n  smallTitle?: boolean,\n  children?: any,\n  emoji?: any,\n  accessStatus?: string,\n};\n\nconst TitleWrapper = (props: TitleProps) => {\n  const { isPageTitle, smallTitle, children, accessStatus } = props;\n\n  /*\n  const Twemoji = ({ emoji }) => (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: twemoji.parse(emoji, {\n          folder: 'svg',\n          ext: '.svg',\n        }),\n      }}\n    />\n  );\n  */\n\n  const AccessIndicator = (par: any) => {\n    return (\n      <Tooltip title={__('This is a members-only content')}>\n        <div\n          className={classnames('content-access-indicator', {\n            locked: par.status === 'locked',\n            unlocked: par.status === 'unlocked',\n            purchased: par.status === 'purchased',\n          })}\n        >\n          <Icon icon={par.status === 'locked' ? ICONS.LOCK : ICONS.UNLOCK} />\n        </div>\n      </Tooltip>\n    );\n  };\n\n  /*\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return <Twemoji emoji={children?.props?.children[child]} />;\n      }\n    }\n    return children;\n  }\n  */\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return children?.props?.children[child];\n      }\n    }\n    return children;\n  }\n\n  return isPageTitle ? (\n    <h1 className=\"card__title\">\n      {accessStatus && <AccessIndicator status={accessStatus} />}\n      <font dangerouslySetInnerHTML={{ __html: transformer(children) }} />\n    </h1>\n  ) : (\n    <h2 className={classnames('card__title', { 'card__title--small': smallTitle })}>{children}</h2>\n  );\n};\n\nexport default Card;\n","// @flow\nimport * as ICONS from 'constants/icons';\nimport React from 'react';\nimport Button from 'component/button';\n\ntype Props = {\n  href?: string,\n  navigate?: string,\n  icon?: string,\n  iconSize?: number,\n  description?: string,\n};\n\nexport default function HelpLink(props: Props) {\n  const { href, navigate, icon, iconSize, description } = props;\n  return (\n    <Button\n      onClick={(e) => {\n        if (href) {\n          e.stopPropagation();\n        }\n      }}\n      className=\"icon--help\"\n      icon={icon || ICONS.HELP}\n      iconSize={iconSize || 14}\n      title={description || __('Help')}\n      description={description || __('Help')}\n      href={href}\n      navigate={navigate}\n    />\n  );\n}\n","// @flow\ntype Props = {\n  uri: ?string,\n  isResolvingUri: boolean,\n  amountNeededForTakeover: number,\n};\n\nfunction BidHelpText(props: Props) {\n  const { uri, isResolvingUri, amountNeededForTakeover } = props;\n\n  let bidHelpText;\n\n  if (uri) {\n    if (isResolvingUri) {\n      bidHelpText = __('Checking the winning claim amount...');\n    } else if (amountNeededForTakeover === 0) {\n      bidHelpText = __('You currently have the highest bid for this name.');\n    } else if (!amountNeededForTakeover) {\n      bidHelpText = __(\n        'Any amount will give you the highest bid, but larger amounts help your content be trusted and discovered.'\n      );\n    } else {\n      bidHelpText = __(\n        'If you bid more than %amount% LBRY Credits, when someone navigates to %uri%, it will load your published content. However, you can get a longer version of this URL for any bid.',\n        {\n          amount: amountNeededForTakeover,\n          uri: uri,\n        }\n      );\n    }\n  } else {\n    bidHelpText = __('These LBRY Credits remain yours and the deposit can be undone at any time.');\n  }\n\n  return bidHelpText;\n}\n\nexport default BidHelpText;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","// @flow\nimport * as ICONS from 'constants/icons';\nimport * as PAGES from 'constants/pages';\nimport { MINIMUM_PUBLISH_BID, INVALID_NAME_ERROR } from 'constants/claim';\nimport React from 'react';\nimport Card from 'component/common/card';\nimport Button from 'component/button';\nimport ChannelSelector from 'component/channelSelector';\nimport { FormField } from 'component/common/form';\nimport { parseURI, isNameValid, isURIValid, normalizeURI } from 'util/lbryURI';\nimport { creditsToString } from 'util/format-credits';\nimport analytics from 'analytics';\nimport LbcSymbol from 'component/common/lbc-symbol';\nimport ClaimPreview from 'component/claimPreview';\nimport { URL as SITE_URL, URL_LOCAL, URL_DEV } from 'config';\nimport HelpLink from 'component/common/help-link';\nimport WalletSpendableBalanceHelp from 'component/walletSpendableBalanceHelp';\nimport BidHelpText from 'component/publish/shared/publishBid/bid-help-text';\nimport Spinner from 'component/spinner';\nimport { REPOST_PARAMS } from 'page/repost/view';\nimport './style.scss';\n\ntype Props = {\n  doToast: ({ message: string }) => void,\n  doClearRepostError: () => void,\n  doRepost: (StreamRepostOptions) => Promise<*>,\n  doHideModal: () => void,\n  title: string,\n  claim?: StreamClaim,\n  enteredContentClaim?: StreamClaim,\n  balance: number,\n  doCheckPublishNameAvailability: (string) => Promise<*>,\n  error: ?string,\n  reposting: boolean,\n  uri: string,\n  name: string,\n  contentUri: string,\n  setRepostUri: (string) => void,\n  setContentUri: (string) => void,\n  doCheckPendingClaims: () => void,\n  passedRepostAmount: number,\n  enteredRepostAmount: number,\n  isResolvingPassedRepost: boolean,\n  isResolvingEnteredRepost: boolean,\n  activeChannelClaim: ?ChannelClaim,\n  fetchingMyChannels: boolean,\n  incognito: boolean,\n  isRepostPage?: boolean,\n};\n\nfunction RepostCreate(props: Props) {\n  const {\n    doToast,\n    doClearRepostError,\n    doRepost,\n    doHideModal,\n    claim,\n    enteredContentClaim,\n    balance,\n    reposting,\n    doCheckPublishNameAvailability,\n    uri, // ?from\n    name, // ?to\n    contentUri,\n    setRepostUri,\n    setContentUri,\n    doCheckPendingClaims,\n    enteredRepostAmount,\n    passedRepostAmount,\n    isResolvingPassedRepost,\n    isResolvingEnteredRepost,\n    activeChannelClaim,\n    fetchingMyChannels,\n    incognito,\n    isRepostPage,\n  } = props;\n\n  const defaultName = name || (claim && claim.name) || '';\n  const contentClaimId = claim && claim.claim_id;\n  const enteredClaimId = enteredContentClaim && enteredContentClaim.claim_id;\n\n  const [repostBid, setRepostBid] = React.useState(0.01);\n  const [repostBidError, setRepostBidError] = React.useState(undefined);\n  const [enteredRepostName, setEnteredRepostName] = React.useState(defaultName);\n  const [available, setAvailable] = React.useState(true);\n  const [enteredContent, setEnteredContentUri] = React.useState(undefined);\n  const [contentError, setContentError] = React.useState('');\n\n  const resolvingRepost = isResolvingEnteredRepost || isResolvingPassedRepost;\n  const repostUrlName = `lbry://${incognito || !activeChannelClaim ? '' : `${activeChannelClaim.name}/`}`;\n\n  const contentFirstRender = React.useRef(true);\n  const setAutoRepostBid = (amount) => {\n    if (balance && balance > 0.02) {\n      if (uri) {\n        setRepostBid(0.01);\n      } else if (balance > amount) {\n        setRepostBid(Number(amount.toFixed(2)));\n      } else {\n        setRepostBid(0.01);\n      }\n    }\n  };\n\n  function getSearchUri(value) {\n    const WEB_DEV_PREFIX = `${URL_DEV}/`;\n    const WEB_LOCAL_PREFIX = `${URL_LOCAL}/`;\n    const WEB_PROD_PREFIX = `${SITE_URL}/`;\n    const ODYSEE_PREFIX = `https://odysee.com/`;\n    const includesLbryTvProd = value.includes(WEB_PROD_PREFIX);\n    const includesOdysee = value.includes(ODYSEE_PREFIX);\n    const includesLbryTvLocal = value.includes(WEB_LOCAL_PREFIX);\n    const includesLbryTvDev = value.includes(WEB_DEV_PREFIX);\n    const wasCopiedFromWeb = includesLbryTvDev || includesLbryTvLocal || includesLbryTvProd || includesOdysee;\n    const isLbryUrl = value.startsWith('lbry://') && value !== 'lbry://';\n    const error = '';\n\n    const addLbryIfNot = (term) => {\n      return term.startsWith('lbry://') ? term : `lbry://${term}`;\n    };\n    if (wasCopiedFromWeb) {\n      let prefix = WEB_PROD_PREFIX;\n      if (includesLbryTvLocal) prefix = WEB_LOCAL_PREFIX;\n      if (includesLbryTvDev) prefix = WEB_DEV_PREFIX;\n      if (includesOdysee) prefix = ODYSEE_PREFIX;\n\n      let query = (value && value.slice(prefix.length).replace(/:/g, '#')) || '';\n      try {\n        const lbryUrl = `lbry://${query}`;\n        parseURI(lbryUrl);\n        return [lbryUrl, null];\n      } catch (e) {\n        return [query, 'error'];\n      }\n    }\n\n    if (!isLbryUrl) {\n      if (value.startsWith('@')) {\n        if (isNameValid(value.slice(1))) {\n          return [value, null];\n        } else {\n          return [value, error];\n        }\n      }\n      return [addLbryIfNot(value), null];\n    } else {\n      try {\n        const isValid = isURIValid(value);\n        if (isValid) {\n          let uri;\n          try {\n            uri = normalizeURI(value);\n          } catch (e) {\n            return [value, null];\n          }\n          return [uri, null];\n        } else {\n          return [value, null];\n        }\n      } catch (e) {\n        return [value, 'error'];\n      }\n    }\n  }\n  // repostName\n  let repostNameError;\n  if (!enteredRepostName) {\n    repostNameError = __('A name is required');\n  } else if (!isNameValid(enteredRepostName)) {\n    repostNameError = INVALID_NAME_ERROR;\n  } else if (!available) {\n    repostNameError = __('You already have a claim with this name.');\n  }\n\n  // contentName\n  let contentNameError;\n  if (!enteredContent && enteredContent !== undefined) {\n    contentNameError = __('A name is required');\n  }\n\n  React.useEffect(() => {\n    if (enteredRepostName && isNameValid(enteredRepostName)) {\n      doCheckPublishNameAvailability(enteredRepostName).then((r) => setAvailable(r));\n    }\n  }, [enteredRepostName, doCheckPublishNameAvailability]);\n\n  // takeover amount, bid suggestion\n  React.useEffect(() => {\n    const repostTakeoverAmount = Number(enteredRepostAmount)\n      ? Number(enteredRepostAmount) + 0.01\n      : Number(passedRepostAmount) + 0.01;\n\n    if (repostTakeoverAmount) {\n      setAutoRepostBid(repostTakeoverAmount);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- TODO: should include setAutoRepostBid + useCallback\n  }, [enteredRepostAmount, passedRepostAmount]);\n\n  // repost bid error\n  React.useEffect(() => {\n    let rBidError;\n    if (repostBid === 0) {\n      rBidError = __('Deposit cannot be 0');\n    } else if (balance === repostBid) {\n      rBidError = __('Please decrease your deposit to account for transaction fees');\n    } else if (balance < repostBid) {\n      rBidError = __('Deposit cannot be higher than your available balance');\n    } else if (repostBid < MINIMUM_PUBLISH_BID) {\n      rBidError = __('Your deposit must be higher');\n    }\n    setRepostBidError(rBidError);\n  }, [balance, setRepostBidError, repostBidError, repostBid]);\n\n  // setContentUri given enteredUri\n  React.useEffect(() => {\n    if (!enteredContent && !contentFirstRender.current) {\n      setContentError(__('A name is required'));\n    }\n    if (enteredContent) {\n      contentFirstRender.current = false;\n      const [searchContent, error] = getSearchUri(enteredContent);\n      if (error) {\n        setContentError(__('Something not quite right..'));\n      } else {\n        setContentError('');\n      }\n      try {\n        const { streamName, channelName, isChannel } = parseURI(searchContent);\n        if (!isChannel && streamName && isNameValid(streamName)) {\n          // contentNameValid = true;\n          setContentUri(searchContent);\n        } else if (isChannel && channelName && isNameValid(channelName)) {\n          // contentNameValid = true;\n          setContentUri(searchContent);\n        }\n      } catch (e) {\n        if (enteredContent !== '@') setContentError('');\n        setContentUri(``);\n      }\n    }\n  }, [enteredContent, setContentUri, setContentError]);\n\n  // setRepostName\n  React.useEffect(() => {\n    if (enteredRepostName) {\n      let isValid = false;\n      try {\n        parseURI(enteredRepostName);\n        isValid = true;\n      } catch (e) {\n        isValid = false;\n      }\n      if (isValid) {\n        setRepostUri(enteredRepostName);\n      }\n    }\n  }, [enteredRepostName, setRepostUri]);\n\n  const repostClaimId = contentClaimId || enteredClaimId;\n\n  function handleSubmit() {\n    if (enteredRepostName && repostBid && repostClaimId) {\n      doRepost({\n        name: enteredRepostName,\n        bid: creditsToString(repostBid),\n        channel_id: activeChannelClaim && !incognito ? activeChannelClaim.claim_id : undefined,\n        claim_id: repostClaimId,\n      }).then((repostClaim: StreamClaim) => {\n        doCheckPendingClaims();\n        analytics.apiLog.publish(repostClaim);\n        doToast({\n          message: __('Woohoo! Successfully reposted this claim.'),\n          linkText: __('Uploads'),\n          linkTarget: '/uploads',\n        });\n        doHideModal();\n      });\n    }\n  }\n\n  function cancelIt() {\n    doClearRepostError();\n    doHideModal();\n  }\n\n  if (fetchingMyChannels) {\n    return (\n      <div className=\"main--empty\">\n        <Spinner />\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Card\n        title={__('Repost')}\n        className=\"repost-wrapper\"\n        subtitle={\n          isRepostPage ? undefined : (\n            <Button\n              button=\"link\"\n              label={__('Open Repost in new tab')}\n              iconRight={ICONS.EXTERNAL}\n              href={`/$/${PAGES.REPOST_NEW}?${REPOST_PARAMS.FROM}=${encodeURIComponent(uri)}&to=${encodeURIComponent(\n                enteredRepostName\n              )}`}\n              navigateTarget=\"_blank\"\n            />\n          )\n        }\n        actions={\n          <div>\n            <ChannelSelector />\n            {uri && (\n              <fieldset-section>\n                <ClaimPreview key={uri} uri={uri} actions={''} showNullPlaceholder />\n              </fieldset-section>\n            )}\n            {!uri && name && (\n              <>\n                <FormField\n                  label={__('Content to repost')}\n                  type=\"text\"\n                  name=\"content_url\"\n                  value={enteredContent}\n                  error={contentError}\n                  onChange={(event) => setEnteredContentUri(event.target.value)}\n                  placeholder={__('Enter a name or %domain% URL', { domain: SITE_URL })}\n                />\n              </>\n            )}\n\n            {!uri && (\n              <fieldset-section>\n                <ClaimPreview key={contentUri} uri={contentUri} actions={''} type={'large'} showNullPlaceholder />\n              </fieldset-section>\n            )}\n\n            <React.Fragment>\n              <fieldset-section>\n                <fieldset-group class=\"fieldset-group--smushed fieldset-group--disabled-prefix\">\n                  <fieldset-section>\n                    <label htmlFor=\"auth_first_channel\">\n                      {repostNameError ? (\n                        <span className=\"error__text\">{repostNameError}</span>\n                      ) : (\n                        <span>\n                          {__('Repost URL')}\n                          <HelpLink href=\"https://help.odysee.tv/category-blockchain/category-staking/naming/\" />\n                        </span>\n                      )}\n                    </label>\n                    <div className=\"form-field__prefix\">{repostUrlName}</div>\n                  </fieldset-section>\n                  <FormField\n                    type=\"text\"\n                    name=\"repost_name\"\n                    value={enteredRepostName}\n                    onChange={(event) => setEnteredRepostName(event.target.value)}\n                    placeholder={__('MyFunName')}\n                  />\n                </fieldset-group>\n              </fieldset-section>\n\n              <FormField\n                type=\"number\"\n                name=\"repost_bid\"\n                min=\"0\"\n                step=\"any\"\n                placeholder=\"0.123\"\n                className=\"form-field--price-amount\"\n                label={<LbcSymbol postfix={__('Support --[button to support a claim]--')} size={14} />}\n                value={repostBid}\n                error={repostBidError}\n                helper={\n                  <>\n                    <BidHelpText\n                      uri={'lbry://' + enteredRepostName}\n                      amountNeededForTakeover={enteredRepostAmount}\n                      isResolvingUri={isResolvingEnteredRepost}\n                    />\n                    <WalletSpendableBalanceHelp inline />\n                  </>\n                }\n                disabled={!enteredRepostName || resolvingRepost}\n                onChange={(event) => setRepostBid(event.target.value)}\n                onWheel={(e) => e.stopPropagation()}\n              />\n            </React.Fragment>\n\n            <div className=\"section__actions\">\n              <Button\n                icon={ICONS.REPOST}\n                disabled={\n                  resolvingRepost ||\n                  reposting ||\n                  repostBidError ||\n                  repostNameError ||\n                  ((!uri || enteredContent) && contentNameError) ||\n                  (!uri && !enteredContentClaim)\n                }\n                button=\"primary\"\n                label={reposting ? __('Reposting') : __('Repost')}\n                onClick={handleSubmit}\n              />\n              <Button button=\"link\" label={__('Cancel')} onClick={cancelIt} />\n            </div>\n          </div>\n        }\n      />\n    </>\n  );\n}\n\nexport default RepostCreate;\n","import { connect } from 'react-redux';\nimport { doHideModal } from 'redux/actions/app';\nimport {\n  makeSelectClaimForUri,\n  selectTitleForUri,\n  selectRepostError,\n  selectRepostLoading,\n  selectMyClaimsWithoutChannels,\n  makeSelectEffectiveAmountForUri,\n  selectIsUriResolving,\n  selectFetchingMyChannels,\n} from 'redux/selectors/claims';\n\nimport { selectBalance } from 'redux/selectors/wallet';\nimport {\n  doRepost,\n  doClearRepostError,\n  doCheckPublishNameAvailability,\n  doCheckPendingClaims,\n} from 'redux/actions/claims';\nimport { doToast } from 'redux/actions/notifications';\nimport { selectActiveChannelClaim, selectIncognito } from 'redux/selectors/app';\nimport RepostCreate from './view';\n\nconst select = (state, props) => ({\n  claim: makeSelectClaimForUri(props.uri)(state),\n  passedRepostClaim: makeSelectClaimForUri(props.name, false)(state),\n  passedRepostAmount: makeSelectEffectiveAmountForUri(props.name)(state),\n  enteredContentClaim: makeSelectClaimForUri(props.contentUri)(state),\n  enteredRepostClaim: makeSelectClaimForUri(props.repostUri, false)(state),\n  enteredRepostAmount: makeSelectEffectiveAmountForUri(props.repostUri)(state),\n  title: selectTitleForUri(state, props.uri),\n  balance: selectBalance(state),\n  error: selectRepostError(state),\n  reposting: selectRepostLoading(state),\n  myClaims: selectMyClaimsWithoutChannels(state),\n  isResolvingPassedRepost: props.name && selectIsUriResolving(state, `lbry://${props.name}`),\n  isResolvingEnteredRepost: props.repostUri && selectIsUriResolving(state, `lbry://${props.repostUri}`),\n  activeChannelClaim: selectActiveChannelClaim(state),\n  fetchingMyChannels: selectFetchingMyChannels(state),\n  incognito: selectIncognito(state),\n});\n\nexport default connect(select, {\n  doHideModal,\n  doRepost,\n  doClearRepostError,\n  doToast,\n  doCheckPublishNameAvailability,\n  doCheckPendingClaims,\n})(RepostCreate);\n","// @flow\nimport CreditAmount from 'component/common/credit-amount';\nimport I18nMessage from 'component/i18nMessage';\nimport React from 'react';\n\ntype Props = { balance: number, inline?: boolean };\n\nfunction WalletSpendableBalanceHelp(props: Props) {\n  const { balance, inline } = props;\n\n  const getMessage = (text: string) => (\n    <I18nMessage tokens={{ balance: <CreditAmount amount={balance} precision={4} /> }}>{text}</I18nMessage>\n  );\n\n  return !balance ? null : inline ? (\n    <span className=\"help--spendable\">{getMessage('%balance% available.')}</span>\n  ) : (\n    <div className=\"help\">{getMessage('Your immediately spendable balance is %balance%.')}</div>\n  );\n}\n\nexport default WalletSpendableBalanceHelp;\n","import { connect } from 'react-redux';\nimport { selectBalance } from 'redux/selectors/wallet';\nimport WalletSpendableBalanceHelp from './view';\n\nconst select = (state) => ({ balance: selectBalance(state) });\n\nexport default connect(select)(WalletSpendableBalanceHelp);\n","import { connect } from 'react-redux';\nimport { selectBalance } from 'redux/selectors/wallet';\nimport YrblWalletEmpty from './view';\n\nconst select = (state) => ({\n  balance: selectBalance(state),\n});\n\nexport default connect(select)(YrblWalletEmpty);\n","// @flow\nimport type { Node } from 'react';\nimport * as ICONS from 'constants/icons';\nimport * as PAGES from 'constants/pages';\nimport React from 'react';\nimport Button from 'component/button';\nimport Yrbl from 'component/yrbl';\nimport I18nMessage from 'component/i18nMessage';\nimport LbcSymbol from 'component/common/lbc-symbol';\n\ntype Props = {\n  includeWalletLink: boolean,\n  type?: string,\n  actions?: Node,\n};\nexport default function YrblWalletEmpty(props: Props) {\n  const { includeWalletLink = false, type = 'sad' } = props;\n\n  return (\n    <div className=\"main--empty\">\n      <Yrbl\n        type={type}\n        title={__('Your wallet is empty')}\n        subtitle={\n          <div>\n            <p>\n              <I18nMessage tokens={{ lbc: <LbcSymbol /> }}>\n                You need %lbc% to create a channel and upload content.\n              </I18nMessage>\n            </p>\n            <p>\n              <I18nMessage tokens={{ lbc: <LbcSymbol /> }}>\n                Never fear though, there are tons of ways to earn %lbc%. You can earn or purchase %lbc%, or you can have\n                your friends send you some.\n              </I18nMessage>\n            </p>\n          </div>\n        }\n        actions={\n          <div className=\"section__actions\">\n            <Button button=\"primary\" icon={ICONS.REWARDS} label={__('Earn Rewards')} navigate={`/$/${PAGES.REWARDS}`} />\n            <Button button=\"secondary\" icon={ICONS.BUY} label={'Buy/Swap Credits'} navigate={`/$/${PAGES.BUY}`} />\n            {includeWalletLink && (\n              <Button\n                icon={ICONS.RECEIVE}\n                button=\"secondary\"\n                label={__('Your Address')}\n                navigate={`/$/${PAGES.RECEIVE}`}\n              />\n            )}\n          </div>\n        }\n      />\n    </div>\n  );\n}\n","// @flow\nimport React from 'react';\n\nconst useEffectOnce = (effect) => {\n  React.useEffect(effect, []);\n};\n\nfunction useUnmount(fn: () => any): void {\n  const fnRef = React.useRef(fn);\n\n  // update the ref each render so if it change the newest callback will be invoked\n  fnRef.current = fn;\n\n  useEffectOnce(() => () => fnRef.current());\n}\n\nexport default function useThrottle(value: string, ms: number = 200) {\n  const [state, setState] = React.useState(value);\n  const timeout = React.useRef();\n  const nextValue = React.useRef(null);\n  const hasNextValue = React.useRef(0);\n\n  React.useEffect(() => {\n    if (!timeout.current) {\n      setState(value);\n      const timeoutCallback = () => {\n        if (hasNextValue.current) {\n          hasNextValue.current = false;\n          setState(nextValue.current);\n          timeout.current = setTimeout(timeoutCallback, ms);\n        } else {\n          timeout.current = undefined;\n        }\n      };\n      timeout.current = setTimeout(timeoutCallback, ms);\n    } else {\n      nextValue.current = value;\n      hasNextValue.current = true;\n    }\n  }, [ms, value]);\n\n  useUnmount(() => {\n    timeout.current && clearTimeout(timeout.current);\n  });\n\n  return state;\n}\n","// @flow\nimport React from 'react';\nimport Page from 'component/page';\nimport { useHistory } from 'react-router';\nimport RepostCreate from 'component/repostCreate';\nimport YrblWalletEmpty from 'component/yrblWalletEmpty';\nimport useThrottle from 'effects/use-throttle';\n\nexport const REPOST_PARAMS = {\n  FROM: 'from',\n  TO: 'to',\n  REDIRECT: 'redirect',\n};\n\ntype Props = {\n  // --redux--\n  balance: number,\n  resolveUri: (string) => void,\n};\n\nfunction RepostPage(props: Props) {\n  const { balance, resolveUri } = props;\n\n  const {\n    location: { search },\n  } = useHistory();\n\n  const [contentUri, setContentUri] = React.useState('');\n  const [repostUri, setRepostUri] = React.useState('');\n\n  const urlParams = new URLSearchParams(search);\n  const repostFrom = urlParams.get(REPOST_PARAMS.FROM);\n  const redirectUri = urlParams.get(REPOST_PARAMS.REDIRECT);\n  const repostTo = urlParams.get(REPOST_PARAMS.TO);\n\n  const decodedFrom = repostFrom && decodeURIComponent(repostFrom);\n  const throttledContentValue = useThrottle(contentUri, 500);\n  const throttledRepostValue = useThrottle(repostUri, 500);\n\n  React.useEffect(() => {\n    if (throttledContentValue) {\n      resolveUri(throttledContentValue);\n    }\n  }, [throttledContentValue, resolveUri]);\n\n  React.useEffect(() => {\n    if (throttledRepostValue) {\n      resolveUri(throttledRepostValue);\n    }\n  }, [throttledRepostValue, resolveUri]);\n\n  React.useEffect(() => {\n    if (repostTo) {\n      resolveUri(repostTo);\n    }\n  }, [repostTo, resolveUri]);\n\n  return (\n    <Page noFooter noSideNavigation backout={{ title: __('Repost'), backLabel: __('Back') }}>\n      {balance === 0 && <YrblWalletEmpty />}\n      <div className={balance === 0 ? 'card--disabled' : undefined}>\n        <RepostCreate\n          uri={decodedFrom}\n          name={repostTo}\n          redirectUri={redirectUri}\n          repostUri={repostUri}\n          contentUri={contentUri}\n          setContentUri={setContentUri}\n          setRepostUri={setRepostUri}\n          isRepostPage\n        />\n      </div>\n    </Page>\n  );\n}\n\nexport default RepostPage;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".repost-wrapper{min-width:var(--modal-width)}@media(max-width:900px){.repost-wrapper{min-width:100%}}[dir] .repost-wrapper .claim-preview__wrapper--row{padding:var(--spacing-xs)}.repost-wrapper .claim-preview__wrapper--row .claim-preview__tags,.repost-wrapper .claim-preview__wrapper--row .description__wrapper{display:none}.repost-wrapper .claim-preview__wrapper--row .menu__button{top:var(--spacing-xs)}[dir=ltr] .repost-wrapper .claim-preview__wrapper--row .menu__button{right:var(--spacing-xs)}[dir=rtl] .repost-wrapper .claim-preview__wrapper--row .menu__button{left:var(--spacing-xs)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../ui/component/repostCreate/style.scss\"],\"names\":[],\"mappings\":\"AAEA,gBACE,4BAAA,CACA,wBAFF,gBAGI,cAAA,CAAA,CAGF,mDACE,yBAAA,CACA,qIAEE,YAAA,CAEF,2DACE,qBACA,CAFF,qEAEE,uBAAA,CAFF,qEAEE,sBAAA\",\"sourcesContent\":[\"@import '~ui/scss/init/breakpoints';\\n\\n.repost-wrapper {\\n  min-width: var(--modal-width);\\n  @media (max-width: $breakpoint-small) {\\n    min-width: 100%;\\n  }\\n\\n  .claim-preview__wrapper--row {\\n    padding: var(--spacing-xs);\\n    .description__wrapper,\\n    .claim-preview__tags {\\n      display: none;\\n    }\\n    .menu__button {\\n      top: var(--spacing-xs);\\n      right: var(--spacing-xs);\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["FirstPaneWrapper","props","singlePane","children","React","className","TitleWrapper","isPageTitle","smallTitle","accessStatus","AccessIndicator","par","Tooltip","title","__","classnames","locked","status","unlocked","purchased","Icon","icon","ICONS","dangerouslySetInnerHTML","__html","child","_children$props","_children$props2","_children$props3","transformer","subtitle","titleActions","id","body","actions","_props$isPageTitle","_props$isBodyList","isBodyList","_props$smallTitle","defaultExpand","nag","_onClick","onClick","secondPane","slimHeader","background","backgroundImage","headerActions","gridHeader","_useState2","_slicedToArray","useState","expanded","setExpanded","expandable","undefined","role","Boolean","e","stopPropagation","style","sectionIcon","Button","button","HelpLink","href","navigate","iconSize","description","uri","isResolvingUri","amountNeededForTakeover","amount","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","repostNameError","contentNameError","doToast","doClearRepostError","doRepost","doHideModal","claim","enteredContentClaim","balance","reposting","doCheckPublishNameAvailability","name","contentUri","setRepostUri","setContentUri","doCheckPendingClaims","enteredRepostAmount","passedRepostAmount","isResolvingPassedRepost","isResolvingEnteredRepost","activeChannelClaim","fetchingMyChannels","incognito","isRepostPage","defaultName","contentClaimId","claim_id","enteredClaimId","_React$useState2","repostBid","setRepostBid","_React$useState4","repostBidError","setRepostBidError","_React$useState6","enteredRepostName","setEnteredRepostName","_React$useState8","available","setAvailable","_React$useState10","enteredContent","setEnteredContentUri","_React$useState12","contentError","setContentError","resolvingRepost","repostUrlName","concat","contentFirstRender","isNameValid","INVALID_NAME_ERROR","then","r","repostTakeoverAmount","Number","toFixed","rBidError","MINIMUM_PUBLISH_BID","current","_getSearchUri2","value","term","WEB_DEV_PREFIX","URL_DEV","WEB_LOCAL_PREFIX","URL_LOCAL","WEB_PROD_PREFIX","SITE_URL","ODYSEE_PREFIX","includesLbryTvProd","includes","includesOdysee","includesLbryTvLocal","includesLbryTvDev","wasCopiedFromWeb","isLbryUrl","startsWith","prefix","query","slice","length","replace","lbryUrl","parseURI","isURIValid","_uri","normalizeURI","getSearchUri","searchContent","error","_parseURI","streamName","channelName","isChannel","isValid","repostClaimId","Spinner","Card","label","iconRight","PAGES","REPOST_PARAMS","encodeURIComponent","navigateTarget","ChannelSelector","ClaimPreview","key","showNullPlaceholder","FormField","type","onChange","event","target","placeholder","domain","class","htmlFor","min","step","LbcSymbol","postfix","size","helper","BidHelpText","WalletSpendableBalanceHelp","inline","disabled","onWheel","bid","creditsToString","channel_id","repostClaim","analytics","message","linkText","linkTarget","connect","state","makeSelectClaimForUri","passedRepostClaim","makeSelectEffectiveAmountForUri","enteredRepostClaim","repostUri","selectTitleForUri","selectBalance","selectRepostError","selectRepostLoading","myClaims","selectMyClaimsWithoutChannels","selectIsUriResolving","selectActiveChannelClaim","selectFetchingMyChannels","selectIncognito","RepostCreate","getMessage","text","I18nMessage","tokens","CreditAmount","precision","_props$includeWalletL","includeWalletLink","_props$type","Yrbl","lbc","useEffectOnce","effect","useThrottle","fn","fnRef","ms","arguments","setState","timeout","nextValue","hasNextValue","setTimeout","timeoutCallback","clearTimeout","FROM","TO","REDIRECT","resolveUri","search","useHistory","location","urlParams","URLSearchParams","repostFrom","get","redirectUri","repostTo","decodedFrom","decodeURIComponent","throttledContentValue","throttledRepostValue","Page","noFooter","noSideNavigation","backout","backLabel","YrblWalletEmpty","___CSS_LOADER_EXPORT___","push","module"],"sourceRoot":""}