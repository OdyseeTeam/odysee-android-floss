{"version":3,"file":"streamClaimPage-cd47c31dff08134dcf2e.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/claimCollectionAddButton/view.jsx","webpack://odysee.com/../ui/component/claimCollectionAddButton/index.js","webpack://odysee.com/../ui/component/claimRepostButton/view.jsx","webpack://odysee.com/../ui/component/claimRepostButton/index.js","webpack://odysee.com/../ui/component/fileActions/internal/claimPublishButton/view.jsx","webpack://odysee.com/../ui/component/fileActions/internal/claimPublishButton/index.js","webpack://odysee.com/../ui/component/fileActions/internal/claimDeleteButton/view.jsx","webpack://odysee.com/../ui/component/fileActions/internal/claimDeleteButton/index.js","webpack://odysee.com/../ui/component/fileActions/index.js","webpack://odysee.com/../ui/component/fileActions/view.jsx","webpack://odysee.com/../ui/component/claimInsufficientCredits/view.jsx","webpack://odysee.com/../ui/component/claimInsufficientCredits/index.js","webpack://odysee.com/../ui/component/fileSubtitle/view.jsx","webpack://odysee.com/../ui/component/fileSubtitle/index.js","webpack://odysee.com/../ui/component/fileDescription/index.js","webpack://odysee.com/../ui/component/fileDescription/view.jsx","webpack://odysee.com/../ui/component/fileTitleSection/view.jsx","webpack://odysee.com/../ui/component/fileTitleSection/index.js","webpack://odysee.com/../ui/component/fileViewCount/view.jsx","webpack://odysee.com/../ui/component/fileViewCount/index.js","webpack://odysee.com/../ui/component/fileVisibility/style.scss?4ea4","webpack://odysee.com/../ui/component/fileVisibility/view.jsx","webpack://odysee.com/../ui/component/fileVisibility/index.js","webpack://odysee.com/../ui/component/geoRestictionInfo/style.scss?e6f0","webpack://odysee.com/../ui/component/geoRestictionInfo/index.js","webpack://odysee.com/../ui/component/geoRestictionInfo/view.jsx","webpack://odysee.com/../ui/component/recommendedContent/view.jsx","webpack://odysee.com/../ui/component/recommendedContent/index.js","webpack://odysee.com/../ui/component/viewers/codeViewer.jsx","webpack://odysee.com/../ui/component/viewers/documentViewer.jsx","webpack://odysee.com/../ui/component/streamClaimRenderInline/view.jsx","webpack://odysee.com/../ui/component/streamClaimRenderInline/index.js","webpack://odysee.com/../ui/component/fileDownloadLink/view.jsx","webpack://odysee.com/../ui/component/fileDownloadLink/index.js","webpack://odysee.com/../ui/component/fileRenderDownload/index.js","webpack://odysee.com/../ui/component/fileRenderDownload/view.jsx","webpack://odysee.com/../ui/page/claim/internal/claimPageComponent/internal/streamClaimPage/view.jsx","webpack://odysee.com/../ui/page/claim/internal/claimPageComponent/internal/streamClaimPage/index.js","webpack://odysee.com/../ui/util/downloadClaim.js","webpack://odysee.com/../ui/util/web.js","webpack://odysee.com/../ui/component/fileVisibility/style.scss","webpack://odysee.com/../ui/component/geoRestictionInfo/style.scss"],"sourcesContent":["// @flow\nimport * as MODALS from 'constants/modal_types';\nimport * as ICONS from 'constants/icons';\nimport React from 'react';\nimport FileActionButton from 'component/common/file-action-button';\nimport { isClaimAllowedForCollection } from 'util/collections';\n\ntype Props = {\n  uri: string,\n  // --- internal ---\n  claim: ?StreamClaim,\n  isSaved: boolean,\n  doOpenModal: (id: string, {}) => void,\n};\n\nfunction ClaimCollectionAddButton(props: Props) {\n  const { uri, claim, isSaved, doOpenModal } = props;\n\n  if (!isClaimAllowedForCollection(claim)) {\n    return null;\n  }\n\n  return (\n    <FileActionButton\n      title={__('Add this video to a playlist')}\n      label={!isSaved ? __('Save') : __('Saved')}\n      icon={!isSaved ? ICONS.PLAYLIST_ADD : ICONS.PLAYLIST_FILLED}\n      iconSize={20}\n      requiresAuth\n      onClick={() => doOpenModal(MODALS.COLLECTION_ADD, { uri })}\n    />\n  );\n}\n\nexport default ClaimCollectionAddButton;\n","import { connect } from 'react-redux';\nimport { doOpenModal } from 'redux/actions/app';\nimport CollectionAddButton from './view';\nimport { selectClaimForUri } from 'redux/selectors/claims';\nimport { selectClaimSavedForUrl } from 'redux/selectors/collections';\n\nconst select = (state, props) => {\n  const { uri } = props;\n\n  const claim = selectClaimForUri(state, uri);\n  const { permanent_url: permanentUrl } = claim || {};\n\n  return {\n    claim,\n    uri: permanentUrl,\n    isSaved: permanentUrl && selectClaimSavedForUrl(state, permanentUrl),\n  };\n};\n\nconst perform = {\n  doOpenModal,\n};\n\nexport default connect(select, perform)(CollectionAddButton);\n","// @flow\nimport * as MODALS from 'constants/modal_types';\nimport * as ICONS from 'constants/icons';\nimport React from 'react';\nimport FileActionButton from 'component/common/file-action-button';\nimport { getClaimScheduledState, isClaimPrivate, isClaimUnlisted } from 'util/claim';\n\ntype Props = {\n  uri: string,\n  // --- internal ---\n  claim: ?StreamClaim,\n  repostedAmount: number,\n  doOpenModal: (id: string, {}) => void,\n};\n\nfunction ClaimRepostButton(props: Props) {\n  const { uri, claim, repostedAmount, doOpenModal } = props;\n\n  const ss: ClaimScheduledState = getClaimScheduledState(claim);\n  if (ss === 'scheduled') {\n    return null;\n  }\n\n  if (isClaimUnlisted(claim) || isClaimPrivate(claim)) {\n    return null;\n  }\n\n  return (\n    <FileActionButton\n      title={__('Repost this content')}\n      label={repostedAmount > 1 ? __(`%repost_total% Reposts`, { repost_total: repostedAmount }) : __('Repost')}\n      icon={ICONS.REPOST}\n      requiresChannel\n      onClick={() => doOpenModal(MODALS.REPOST, { uri })}\n    />\n  );\n}\n\nexport default ClaimRepostButton;\n","import { connect } from 'react-redux';\nimport { doOpenModal } from 'redux/actions/app';\nimport { selectClaimForUri, selectClaimRepostedAmountForUri } from 'redux/selectors/claims';\nimport ClaimRepostButton from './view';\n\nconst select = (state, props) => {\n  const { uri } = props;\n\n  return {\n    claim: selectClaimForUri(state, uri),\n    repostedAmount: selectClaimRepostedAmountForUri(state, uri),\n  };\n};\n\nconst perform = {\n  doOpenModal,\n};\n\nexport default connect(select, perform)(ClaimRepostButton);\n","// @flow\nimport * as ICONS from 'constants/icons';\nimport { buildURI } from 'util/lbryURI';\nimport React from 'react';\nimport FileActionButton from 'component/common/file-action-button';\n\ntype Props = {\n  claimType: string,\n  // redux\n  claim: ?Claim,\n  channelName: ?string,\n  claimIsMine: boolean,\n  doPrepareEdit: (claim: Claim, uri: string) => void,\n};\n\nfunction ClaimPublishButton(props: Props) {\n  const { claimType, claim, channelName, claimIsMine, doPrepareEdit } = props;\n\n  // We want to use the short form uri for editing\n  // This is what the user is used to seeing, they don't care about the claim id\n  // We will select the claim id before they publish\n  let editUri;\n  if (claim && claimIsMine) {\n    const { name: claimName, claim_id: claimId } = claim;\n    const uriObject: LbryUrlObj = { streamName: claimName, streamClaimId: claimId };\n\n    if (channelName) {\n      uriObject.channelName = channelName;\n    }\n\n    editUri = buildURI(uriObject);\n  }\n\n  return (\n    <FileActionButton\n      title={claimType === 'livestream' ? __('Update or Publish Replay') : __('Edit')}\n      label={claimType === 'livestream' ? __('Update or Publish Replay') : __('Edit')}\n      icon={ICONS.EDIT}\n      onClick={!claim ? undefined : () => doPrepareEdit(claim, editUri)}\n    />\n  );\n}\n\nexport default ClaimPublishButton;\n","import { connect } from 'react-redux';\nimport { doPrepareEdit } from 'redux/actions/publish';\nimport { selectClaimForUri, selectChannelNameForClaimUri, selectClaimIsMineForUri } from 'redux/selectors/claims';\nimport ClaimPublishButton from './view';\n\nconst select = (state, props) => {\n  const { uri } = props;\n\n  const claim = selectClaimForUri(state, uri);\n\n  return {\n    claim,\n    channelName: selectChannelNameForClaimUri(state, uri),\n    claimIsMine: selectClaimIsMineForUri(state, uri),\n  };\n};\n\nconst perform = {\n  doPrepareEdit,\n};\n\nexport default connect(select, perform)(ClaimPublishButton);\n","// @flow\nimport * as MODALS from 'constants/modal_types';\nimport * as ICONS from 'constants/icons';\nimport React from 'react';\nimport FileActionButton from 'component/common/file-action-button';\n\ntype Props = {\n  uri: string,\n  // redux\n  doOpenModal: (id: string, {}) => void,\n};\n\nfunction ClaimDeleteButton(props: Props) {\n  const { uri, doOpenModal } = props;\n\n  return (\n    <FileActionButton\n      title={__('Remove from your library')}\n      icon={ICONS.DELETE}\n      onClick={() => doOpenModal(MODALS.CONFIRM_FILE_REMOVE, { uri })}\n    />\n  );\n}\n\nexport default ClaimDeleteButton;\n","import { connect } from 'react-redux';\nimport { doOpenModal } from 'redux/actions/app';\nimport ClaimDeleteButton from './view';\n\nconst perform = {\n  doOpenModal,\n};\n\nexport default connect(null, perform)(ClaimDeleteButton);\n","import { connect } from 'react-redux';\nimport {\n  selectClaimIsMine,\n  selectClaimForUri,\n  selectHasChannels,\n  makeSelectTagInClaimOrChannelForUri,\n  selectClaimIsNsfwForUri,\n  selectPreorderTagForUri,\n  selectProtectedContentTagForUri,\n  selectIsFiatRequiredForUri,\n  selectIsFiatPaidForUri,\n  selectCostInfoForUri,\n  selectScheduledStateForUri,\n} from 'redux/selectors/claims';\nimport { selectStreamingUrlForUri } from 'redux/selectors/file_info';\nimport { doPrepareEdit } from 'redux/actions/publish';\nimport { doDownloadUri } from 'redux/actions/content';\nimport { doToast } from 'redux/actions/notifications';\nimport { doOpenModal } from 'redux/actions/app';\nimport FileActions from './view';\nimport { makeSelectFileRenderModeForUri, selectContentStates } from 'redux/selectors/content';\nimport { selectNoRestrictionOrUserIsMemberForContentClaimId } from 'redux/selectors/memberships';\nimport { DISABLE_DOWNLOAD_BUTTON_TAG } from 'constants/tags';\nimport { isStreamPlaceholderClaim } from 'util/claim';\nimport * as RENDER_MODES from 'constants/file_render_modes';\n\nconst select = (state, props) => {\n  const { uri } = props;\n\n  const claim = selectClaimForUri(state, uri);\n  const permanentUrl = (claim && claim.permanent_url) || '';\n  const isPostClaim = makeSelectFileRenderModeForUri(permanentUrl)(state) === RENDER_MODES.MARKDOWN;\n\n  return {\n    claim,\n    claimIsMine: selectClaimIsMine(state, claim),\n    renderMode: makeSelectFileRenderModeForUri(uri)(state),\n    costInfo: selectCostInfoForUri(state, uri),\n    hasChannels: selectHasChannels(state),\n    uriAccessKey: selectContentStates(state).uriAccessKeys[uri],\n    isLivestreamClaim: isStreamPlaceholderClaim(claim),\n    isPostClaim,\n    streamingUrl: selectStreamingUrlForUri(state, uri),\n    disableDownloadButton: makeSelectTagInClaimOrChannelForUri(uri, DISABLE_DOWNLOAD_BUTTON_TAG)(state),\n    isMature: selectClaimIsNsfwForUri(state, uri),\n    isAPreorder: Boolean(selectPreorderTagForUri(state, props.uri)),\n    isProtectedContent: Boolean(selectProtectedContentTagForUri(state, uri)),\n    isFiatRequired: selectIsFiatRequiredForUri(state, uri),\n    isFiatPaid: selectIsFiatPaidForUri(state, uri),\n    isTierUnlocked: claim && selectNoRestrictionOrUserIsMemberForContentClaimId(state, claim.claim_id),\n    scheduledState: selectScheduledStateForUri(state, uri),\n  };\n};\n\nconst perform = {\n  doOpenModal,\n  doPrepareEdit,\n  doToast,\n  doDownloadUri,\n};\n\nexport default connect(select, perform)(FileActions);\n","// @flow\nimport { useIsMobile } from 'effects/use-screensize';\nimport { SITE_NAME, ENABLE_FILE_REACTIONS } from 'config';\nimport * as PAGES from 'constants/pages';\nimport * as MODALS from 'constants/modal_types';\nimport * as ICONS from 'constants/icons';\nimport React from 'react';\nimport { isClaimPrivate, isClaimUnlisted } from 'util/claim';\nimport { buildURI } from 'util/lbryURI';\nimport * as COLLECTIONS_CONSTS from 'constants/collections';\nimport * as RENDER_MODES from 'constants/file_render_modes';\nimport ClaimSupportButton from 'component/claimSupportButton';\nimport ClaimCollectionAddButton from 'component/claimCollectionAddButton';\nimport { useHistory } from 'react-router';\nimport FileReactions from 'component/fileReactions';\nimport { Menu, MenuButton, MenuList, MenuItem } from '@reach/menu-button';\nimport Icon from 'component/common/icon';\nimport { webDownloadClaim } from 'util/downloadClaim';\nimport ClaimShareButton from 'component/claimShareButton';\nimport ClaimRepostButton from 'component/claimRepostButton';\nimport ClaimPublishButton from './internal/claimPublishButton';\nimport ClaimDeleteButton from './internal/claimDeleteButton';\n\ntype Props = {\n  uri: string,\n  hideRepost?: boolean,\n  // redux\n  claim: StreamClaim,\n  claimIsMine: boolean,\n  renderMode: string,\n  costInfo: ?{ cost: number },\n  hasChannels: boolean,\n  uriAccessKey: ?UriAccessKey,\n  isLivestreamClaim: boolean,\n  isPostClaim?: boolean,\n  streamingUrl: ?string,\n  disableDownloadButton: boolean,\n  doOpenModal: (id: string, { uri: string, claimIsMine?: boolean, isSupport?: boolean }) => void,\n  doPrepareEdit: (claim: Claim, uri: string) => void,\n  doToast: (data: { message: string }) => void,\n  doDownloadUri: (uri: string) => void,\n  isMature: boolean,\n  isAPreorder: boolean,\n  isProtectedContent: boolean,\n  isFiatRequired: boolean,\n  isFiatPaid: ?boolean,\n  isTierUnlocked: boolean,\n  scheduledState: ClaimScheduledState,\n};\n\nexport default function FileActions(props: Props) {\n  const {\n    uri,\n    claimIsMine,\n    claim,\n    costInfo,\n    renderMode,\n    hasChannels,\n    hideRepost,\n    uriAccessKey,\n    isLivestreamClaim,\n    isPostClaim,\n    streamingUrl,\n    disableDownloadButton,\n    doOpenModal,\n    doPrepareEdit,\n    doToast,\n    doDownloadUri,\n    isMature,\n    isAPreorder,\n    isProtectedContent,\n    isFiatRequired,\n    isFiatPaid,\n    isTierUnlocked,\n    scheduledState,\n  } = props;\n\n  const {\n    push,\n    location: { search },\n  } = useHistory();\n\n  const isMobile = useIsMobile();\n  const [downloadClicked, setDownloadClicked] = React.useState(false);\n\n  const { claim_id: claimId, signing_channel: signingChannel, value, meta: claimMeta } = claim;\n  const channelName = signingChannel && signingChannel.name;\n  const fileName = value && value.source && value.source.name;\n  const claimType = isLivestreamClaim ? 'livestream' : isPostClaim ? 'post' : 'upload';\n  const isUnlistedOrPrivate = isClaimUnlisted(claim) || isClaimPrivate(claim);\n\n  const webShareable = costInfo && costInfo.cost === 0 && RENDER_MODES.WEB_SHAREABLE_MODES.includes(renderMode);\n  const urlParams = new URLSearchParams(search);\n  const collectionId = urlParams.get(COLLECTIONS_CONSTS.COLLECTION_ID);\n\n  const showDownload =\n    !isLivestreamClaim &&\n    !disableDownloadButton &&\n    !isMature &&\n    !isFiatRequired &&\n    !isProtectedContent &&\n    (scheduledState === 'non-scheduled' || scheduledState === 'started') &&\n    !isUnlistedOrPrivate;\n\n  const showRepost = !hideRepost && !isLivestreamClaim;\n\n  // We want to use the short form uri for editing\n  // This is what the user is used to seeing, they don't care about the claim id\n  // We will select the claim id before they publish\n  let editUri;\n  if (claimIsMine) {\n    const uriObject: LbryUrlObj = {\n      streamName: claim.name,\n      streamClaimId: claim.claim_id,\n    };\n    if (channelName) {\n      uriObject.channelName = channelName;\n    }\n\n    editUri = buildURI(uriObject);\n  }\n\n  function isAllowedToReact() {\n    const restrictionsCleared = (!isFiatRequired || isFiatPaid) && isTierUnlocked; // should it be OR instead?\n    return claimIsMine || restrictionsCleared;\n  }\n\n  function handleWebDownload() {\n    // doDownloadUri() causes 'streamingUrl' to be populated.\n    doDownloadUri(uri);\n    setDownloadClicked(true);\n  }\n\n  React.useEffect(() => {\n    if (downloadClicked && streamingUrl) {\n      webDownloadClaim(streamingUrl, fileName, false, uriAccessKey);\n      setDownloadClicked(false);\n    }\n  }, [downloadClicked, streamingUrl, fileName, uriAccessKey]);\n\n  function handleRepostClick() {\n    if (!hasChannels) {\n      doToast({ message: __('A channel is required to repost on %SITE_NAME%', { SITE_NAME }) });\n      return;\n    }\n\n    doOpenModal(MODALS.REPOST, { uri });\n  }\n\n  return (\n    <div className=\"media__actions\">\n      {ENABLE_FILE_REACTIONS && isAllowedToReact() && <FileReactions uri={uri} />}\n\n      {!isAPreorder && !isFiatRequired && <ClaimSupportButton uri={uri} fileAction />}\n\n      <ClaimCollectionAddButton uri={uri} />\n\n      {!hideRepost && !isMobile && !isLivestreamClaim && <ClaimRepostButton uri={uri} />}\n\n      <ClaimShareButton uri={uri} fileAction webShareable={webShareable} collectionId={collectionId} />\n\n      {claimIsMine && !isMobile && (\n        <>\n          <ClaimPublishButton uri={uri} claimType={claimType} />\n          <ClaimDeleteButton uri={uri} />\n        </>\n      )}\n\n      {((isMobile && (showRepost || claimIsMine)) || showDownload || !claimIsMine) && (\n        <Menu>\n          <MenuButton\n            className=\"button--file-action--menu\"\n            onClick={(e) => {\n              e.stopPropagation();\n              e.preventDefault();\n            }}\n          >\n            <Icon size={20} icon={ICONS.MORE} />\n          </MenuButton>\n\n          <MenuList className=\"menu__list\">\n            {isMobile && (\n              <>\n                {showRepost && (\n                  <MenuItem className=\"comment__menu-option\" onSelect={handleRepostClick}>\n                    <div className=\"menu__link\">\n                      <Icon aria-hidden icon={ICONS.REPOST} />\n                      {claimMeta.reposted > 1\n                        ? __(`%repost_total% Reposts`, { repost_total: claimMeta.reposted })\n                        : __('Repost')}\n                    </div>\n                  </MenuItem>\n                )}\n\n                {claimIsMine && (\n                  <>\n                    <MenuItem\n                      className=\"comment__menu-option\"\n                      onSelect={() => {\n                        doPrepareEdit(claim, editUri);\n                      }}\n                    >\n                      <div className=\"menu__link\">\n                        <Icon aria-hidden icon={ICONS.EDIT} />\n                        {isLivestreamClaim ? __('Update or Publish Replay') : __('Edit')}\n                      </div>\n                    </MenuItem>\n\n                    <MenuItem\n                      className=\"comment__menu-option\"\n                      onSelect={() => doOpenModal(MODALS.CONFIRM_FILE_REMOVE, { uri })}\n                    >\n                      <div className=\"menu__link\">\n                        <Icon aria-hidden icon={ICONS.DELETE} />\n                        {__('Delete')}\n                      </div>\n                    </MenuItem>\n                  </>\n                )}\n              </>\n            )}\n\n            {showDownload && (\n              <MenuItem className=\"comment__menu-option\" onSelect={handleWebDownload}>\n                <div className=\"menu__link\">\n                  <Icon aria-hidden icon={ICONS.DOWNLOAD} />\n                  {__('Download')}\n                </div>\n              </MenuItem>\n            )}\n\n            {!claimIsMine && (\n              <MenuItem\n                className=\"comment__menu-option\"\n                onSelect={() => push(`/$/${PAGES.REPORT_CONTENT}?claimId=${claimId}`)}\n              >\n                <div className=\"menu__link\">\n                  <Icon aria-hidden icon={ICONS.REPORT} />\n                  {__('Report content')}\n                </div>\n              </MenuItem>\n            )}\n          </MenuList>\n        </Menu>\n      )}\n    </div>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport Button from 'component/button';\nimport I18nMessage from 'component/i18nMessage';\nimport LbcSymbol from 'component/common/lbc-symbol';\n\ntype Props = {\n  uri: string,\n  fileInfo: FileListItem,\n  isInsufficientCredits: boolean,\n  claimWasPurchased: boolean,\n};\n\nfunction ClaimInsufficientCredits(props: Props) {\n  const { isInsufficientCredits, fileInfo, claimWasPurchased } = props;\n\n  if (fileInfo || !isInsufficientCredits || claimWasPurchased) {\n    return null;\n  }\n\n  return (\n    <div className=\"media__insufficient-credits help--warning\">\n      <I18nMessage\n        tokens={{\n          reward_link: <Button button=\"link\" navigate=\"/$/rewards\" label={__('Rewards')} />,\n          buy_link: <Button button=\"link\" navigate=\"/$/buy\" label={__('buy')} />,\n          lbc: <LbcSymbol />,\n        }}\n      >\n        The publisher has chosen to charge %lbc% to view this content. Your balance is currently too low to view it.\n        Check out %reward_link% for free %lbc% or send more %lbc% to your wallet. You can also %buy_link% more %lbc%.\n      </I18nMessage>\n    </div>\n  );\n}\n\nexport default ClaimInsufficientCredits;\n","import { connect } from 'react-redux';\nimport { selectInsufficientCreditsForUri } from 'redux/selectors/content';\nimport { selectClaimWasPurchasedForUri } from 'redux/selectors/claims';\nimport ClaimInsufficientCredits from './view';\n\nconst select = (state, props) => ({\n  isInsufficientCredits: selectInsufficientCreditsForUri(state, props.uri),\n  claimWasPurchased: selectClaimWasPurchasedForUri(state, props.uri),\n});\n\nexport default connect(select)(ClaimInsufficientCredits);\n","// @flow\nimport React from 'react';\nimport DateTimeClaim from 'component/dateTimeClaim';\nimport FileViewCount from 'component/fileViewCount';\nimport FileActions from 'component/fileActions';\nimport FileVisibility from 'component/fileVisibility';\nimport ClaimPreviewReset from 'component/claimPreviewReset';\nimport LivestreamDateTime from 'component/livestreamDateTime';\nimport * as ICONS from 'constants/icons';\nimport Icon from 'component/common/icon';\n\ntype Props = {\n  uri: string,\n  isLivestreamClaim?: boolean,\n  isLive?: boolean,\n  contentUnlocked: boolean,\n};\n\nfunction FileSubtitle(props: Props) {\n  const { uri, isLivestreamClaim = false, isLive = false, contentUnlocked } = props;\n  return (\n    <>\n      <div className=\"media__subtitle--between\">\n        <div className=\"file__viewdate\">\n          <Icon icon={ICONS.TIME} />\n          {isLivestreamClaim && <LivestreamDateTime uri={uri} />}\n          {!isLivestreamClaim && <DateTimeClaim uri={uri} format=\"date-only\" disableFromNowFormat />}\n          <Icon icon={ICONS.INVITE} />\n          {contentUnlocked && <FileViewCount uri={uri} />}\n          <FileVisibility uri={uri} />\n        </div>\n\n        <FileActions uri={uri} hideRepost={isLivestreamClaim} livestream={isLivestreamClaim} />\n      </div>\n\n      {isLivestreamClaim && isLive && <ClaimPreviewReset uri={uri} />}\n    </>\n  );\n}\n\nexport default FileSubtitle;\n","import { connect } from 'react-redux';\nimport { selectClaimForUri, selectIsStreamPlaceholderForUri } from 'redux/selectors/claims';\nimport { selectShouldShowLivestreamForUri } from 'redux/selectors/livestream';\nimport { selectNoRestrictionOrUserIsMemberForContentClaimId } from 'redux/selectors/memberships';\n\nimport FileSubtitle from './view';\n\nconst select = (state, props) => {\n  const { uri } = props;\n  const claim = selectClaimForUri(state, uri);\n\n  return {\n    contentUnlocked: claim && selectNoRestrictionOrUserIsMemberForContentClaimId(state, claim.claim_id),\n    isLivestreamClaim: selectIsStreamPlaceholderForUri(state, uri),\n    isLive: selectShouldShowLivestreamForUri(state, uri),\n  };\n};\n\nexport default connect(select)(FileSubtitle);\n","import { connect } from 'react-redux';\nimport { selectClaimForUri, selectClaimIsMine, selectIsStreamPlaceholderForUri } from 'redux/selectors/claims';\nimport { makeSelectPendingAmountByUri } from 'redux/selectors/wallet';\nimport { doOpenModal } from 'redux/actions/app';\nimport FileDescription from './view';\nimport { getClaimMetadata } from 'util/claim';\n\nconst select = (state, props) => {\n  const { uri } = props;\n\n  const pendingAmount = makeSelectPendingAmountByUri(uri)(state);\n  const claim = selectClaimForUri(state, uri);\n  const metadata = getClaimMetadata(claim);\n  const description = metadata && metadata.description;\n  const amount = claim ? parseFloat(claim.amount) + parseFloat(pendingAmount || claim.meta.support_amount) : 0;\n  const hasSupport = claim && claim.meta && claim.meta.support_amount && Number(claim.meta.support_amount) > 0;\n  const isLivestreamClaim = selectIsStreamPlaceholderForUri(state, uri);\n\n  const isEmpty = !claim || !metadata;\n\n  return {\n    claimIsMine: selectClaimIsMine(state, claim),\n    description,\n    amount,\n    hasSupport,\n    isLivestreamClaim,\n    isEmpty,\n  };\n};\n\nconst perform = {\n  doOpenModal,\n};\n\nexport default connect(select, perform)(FileDescription);\n","// @flow\nimport * as ICONS from 'constants/icons';\nimport * as MODALS from 'constants/modal_types';\nimport React from 'react';\nimport classnames from 'classnames';\nimport { formatCredits } from 'util/format-credits';\nimport MarkdownPreview from 'component/common/markdown-preview';\nimport ClaimTags from 'component/claimTags';\nimport Button from 'component/button';\nimport LbcSymbol from 'component/common/lbc-symbol';\nimport FileDetails from 'component/fileDetails';\nimport FileValues from 'component/fileValues';\ntype Props = {\n  uri: string,\n  expandOverride: boolean,\n  // redux\n  description?: string,\n  amount: number,\n  hasSupport?: boolean,\n  isEmpty: boolean,\n  claimIsMine: boolean,\n  pendingAmount: number,\n  doOpenModal: (id: string, {}) => void,\n  isLivestreamClaim: boolean,\n};\n\nexport default function FileDescription(props: Props) {\n  const { uri, description, amount, hasSupport, isEmpty, doOpenModal, claimIsMine, expandOverride, isLivestreamClaim } =\n    props;\n\n  const [expanded, setExpanded] = React.useState(false);\n  const [showCreditDetails, setShowCreditDetails] = React.useState(false);\n\n  const formattedAmount = formatCredits(amount, 2, true);\n\n  if (isEmpty) {\n    return <span className=\"empty\">{__('Empty claim or metadata info.')}</span>;\n  }\n\n  return (\n    <>\n      <div\n        className={classnames({\n          'media__info-text--contracted media__info-text--fade': !expanded && !expandOverride && !isLivestreamClaim,\n          'media__info-text--expanded': expanded || isLivestreamClaim,\n        })}\n      >\n        <div className=\"mediaInfo__description\">\n          {description && (\n            <MarkdownPreview className=\"markdown-preview--description\" content={description} simpleLinks />\n          )}\n          <ClaimTags uri={uri} type=\"large\" />\n          {expanded && <FileDetails uri={uri} />}\n        </div>\n      </div>\n\n      <div className=\"card__bottom-actions\">\n        {!expandOverride && (\n          <>\n            {!isLivestreamClaim && (\n              <Button button=\"link\" label={expanded ? __('Less') : __('More')} onClick={() => setExpanded(!expanded)} />\n            )}\n            {isLivestreamClaim && <Button />}\n          </>\n        )}\n\n        <div className=\"section__actions--no-margin\">\n          {claimIsMine && hasSupport && (\n            <Button\n              button=\"link\"\n              className=\"expandable__button\"\n              icon={ICONS.UNLOCK}\n              aria-label={__('Unlock tips')}\n              onClick={() => doOpenModal(MODALS.LIQUIDATE_SUPPORTS, { uri })}\n            />\n          )}\n\n          <Button button=\"link\" onClick={() => setShowCreditDetails(!showCreditDetails)}>\n            <LbcSymbol postfix={showCreditDetails ? __('Hide') : formattedAmount} />\n          </Button>\n        </div>\n      </div>\n\n      {showCreditDetails && <FileValues uri={uri} />}\n    </>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport { normalizeURI } from 'util/lbryURI';\nimport FilePrice from 'component/filePrice';\nimport GeoRestrictionInfo from 'component/geoRestictionInfo';\nimport ClaimInsufficientCredits from 'component/claimInsufficientCredits';\nimport FileSubtitle from 'component/fileSubtitle';\nimport ClaimAuthor from 'component/claimAuthor';\nimport Card from 'component/common/card';\nimport * as ICONS from 'constants/icons';\nimport * as PAGES from 'constants/pages';\nimport Icon from 'component/common/icon';\nimport I18nMessage from 'component/i18nMessage';\nimport Button from 'component/button';\nimport FileDescription from 'component/fileDescription';\nimport { ENABLE_MATURE } from 'config';\nimport { useIsMobile } from 'effects/use-screensize';\nconst { escapeHtmlProperty } = require('util/web');\n\ntype Props = {\n  uri: string,\n  nsfw: boolean,\n  isNsfwBlocked: boolean,\n  livestream?: boolean,\n  // redux\n  channelClaimId?: string,\n  title?: string,\n  subCount: number,\n  doFetchSubCount: (claimId: string) => void,\n  accessStatus?: string,\n};\n\nexport default function FileTitleSection(props: Props) {\n  const {\n    uri,\n    nsfw,\n    isNsfwBlocked,\n    livestream = false,\n    subCount,\n    channelClaimId,\n    title,\n    doFetchSubCount,\n    accessStatus,\n  } = props;\n\n  const isMobile = useIsMobile();\n\n  React.useEffect(() => {\n    if (channelClaimId) doFetchSubCount(channelClaimId);\n  }, [channelClaimId, doFetchSubCount]);\n\n  return (\n    <Card\n      isPageTitle\n      noTitleWrap\n      title={\n        <>\n          {escapeHtmlProperty(title)}\n          {nsfw && (\n            <span className=\"media__title-badge\">\n              <span className=\"badge badge--tag-mature\">{__('Mature')}</span>\n            </span>\n          )}\n          <GeoRestrictionInfo uri={uri} />\n        </>\n      }\n      titleActions={<FilePrice uri={normalizeURI(uri)} type=\"filepage\" hideFree />}\n      body={\n        <>\n          <ClaimInsufficientCredits uri={uri} />\n          <FileSubtitle uri={uri} />\n        </>\n      }\n      actions={\n        isNsfwBlocked ? (\n          <div className=\"main--empty\">\n            <h2>\n              <>\n                <Icon className=\"icon--hidden\" icon={ICONS.EYE_OFF} />\n                {ENABLE_MATURE ? __('Mature content blocked.') : __('Mature content is not supported.')}\n              </>\n            </h2>\n            <div>\n              {ENABLE_MATURE ? (\n                <I18nMessage\n                  tokens={{\n                    content_settings: (\n                      <Button button=\"link\" label={__('content settings')} navigate={`/$/${PAGES.SETTINGS}`} />\n                    ),\n                  }}\n                >\n                  Change this in your %content_settings%.\n                </I18nMessage>\n              ) : (\n                <I18nMessage\n                  tokens={{\n                    download_url: <Button label={__('lbry.com')} button=\"link\" href=\"https://lbry.com/get\" />,\n                  }}\n                >\n                  You can download the LBRY Desktop or Android app on %download_url% and enable mature content in\n                  Settings.\n                </I18nMessage>\n              )}\n            </div>\n          </div>\n        ) : (\n          <>\n            <ClaimAuthor channelSubCount={subCount} uri={uri} />\n            <FileDescription expandOverride={isMobile && livestream} uri={uri} />\n          </>\n        )\n      }\n      accessStatus={accessStatus}\n    />\n  );\n}\n","import { connect } from 'react-redux';\nimport { doFetchSubCount, selectSubCountForUri } from 'lbryinc';\nimport { selectClaimForUri } from 'redux/selectors/claims';\nimport FileTitleSection from './view';\nimport { getClaimTitle } from 'util/claim';\n\nconst select = (state, props) => {\n  const { uri } = props;\n\n  const claim = selectClaimForUri(state, uri);\n\n  const { signing_channel: channel } = claim || {};\n  const channelUri = channel && channel.canonical_url;\n  const channelClaimId = channel && channel.claim_id;\n  const title = getClaimTitle(claim);\n\n  return {\n    subCount: channelUri && selectSubCountForUri(state, channelUri),\n    channelClaimId,\n    title,\n  };\n};\n\nconst perform = {\n  doFetchSubCount,\n};\n\nexport default connect(select, perform)(FileTitleSection);\n","// @flow\nimport React from 'react';\nimport Skeleton from '@mui/material/Skeleton';\nimport { SIMPLE_SITE } from 'config';\nimport HelpLink from 'component/common/help-link';\nimport Tooltip from 'component/common/tooltip';\nimport { toCompactNotation } from 'util/string';\n\ntype Props = {\n  // --- redux ---\n  claimId: ?string,\n  isLivestreamClaim?: boolean,\n  isLivestreamActive: ?boolean,\n  fetchViewCount: (string) => void,\n  uri: string,\n  viewCount: ?number,\n  activeViewers?: number,\n  lang: string,\n};\n\nfunction FileViewCount(props: Props) {\n  const { claimId, isLivestreamClaim, isLivestreamActive, fetchViewCount, viewCount, activeViewers, lang } = props;\n\n  const count = isLivestreamClaim ? activeViewers || 0 : viewCount;\n  // $FlowIgnore: Number.isInteger covers null case\n  const countCompact = Number.isInteger(count) ? toCompactNotation(count, lang, 10000) : null;\n  const countFullResolution = Number(count).toLocaleString();\n\n  const Placeholder = <Skeleton variant=\"text\" animation=\"wave\" className=\"file-view-count-placeholder\" />;\n\n  function getRegularViewCountElem() {\n    if (Number.isInteger(viewCount)) {\n      return viewCount !== 1 ? __('%view_count% views', { view_count: countCompact }) : __('1 view');\n    } else {\n      return Placeholder;\n    }\n  }\n\n  function getLivestreamViewCountElem() {\n    if (activeViewers === undefined) {\n      return Placeholder;\n    } else {\n      return __('%viewer_count% currently %viewer_state%', {\n        viewer_count: countCompact,\n        viewer_state: isLivestreamActive ? __('watching') : __('waiting'),\n      });\n    }\n  }\n\n  React.useEffect(() => {\n    if (claimId) {\n      fetchViewCount(claimId);\n    }\n  }, [claimId]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Tooltip title={countFullResolution} followCursor placement=\"top\">\n      <span className=\"media__subtitle--centered\">\n        {isLivestreamClaim && getLivestreamViewCountElem()}\n        {!isLivestreamClaim && activeViewers === undefined && getRegularViewCountElem()}\n        {!SIMPLE_SITE && <HelpLink href=\"https://help.odysee.tv/category-basics/\" />}\n      </span>\n    </Tooltip>\n  );\n}\n\nexport default FileViewCount;\n","import { connect } from 'react-redux';\nimport { selectClaimIdForUri, selectIsStreamPlaceholderForUri } from 'redux/selectors/claims';\nimport { selectViewersForId, selectIsActiveLivestreamForUri } from 'redux/selectors/livestream';\nimport { selectLanguage } from 'redux/selectors/settings';\nimport { doFetchViewCount, selectViewCountForUri } from 'lbryinc';\nimport FileViewCount from './view';\n\nconst select = (state, props) => {\n  const { uri } = props;\n  const claimId = selectClaimIdForUri(state, uri);\n\n  const isLivestreamClaim = selectIsStreamPlaceholderForUri(state, uri);\n\n  return {\n    claimId,\n    viewCount: selectViewCountForUri(state, uri),\n    activeViewers: isLivestreamClaim && claimId ? selectViewersForId(state, claimId) : undefined,\n    lang: selectLanguage(state),\n    isLivestreamClaim,\n    isLivestreamActive: isLivestreamClaim && selectIsActiveLivestreamForUri(state, uri),\n  };\n};\n\nconst perform = (dispatch) => ({\n  fetchViewCount: (claimId) => dispatch(doFetchViewCount(claimId)),\n});\n\nexport default connect(select, perform)(FileViewCount);\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","// @flow\nimport React from 'react';\n\nimport './style.scss';\nimport Icon from 'component/common/icon';\nimport * as ICONS from 'constants/icons';\n\ntype Props = {\n  uri: ?string,\n  // --- internal ---\n  isUnlisted: boolean,\n};\n\nfunction FileVisibility(props: Props) {\n  const { isUnlisted } = props;\n\n  if (isUnlisted) {\n    return (\n      <div className=\"file-visibility\">\n        <Icon icon={ICONS.COPY_LINK} size={9} />\n        {__('unlisted')}\n      </div>\n    );\n  }\n\n  return null;\n}\n\nexport default FileVisibility;\n","import { connect } from 'react-redux';\nimport FileVisibility from './view';\n\nimport { selectIsUriUnlisted } from 'redux/selectors/claims';\n\nconst select = (state, props) => {\n  return {\n    isUnlisted: selectIsUriUnlisted(state, props.uri),\n  };\n};\n\nexport default connect(select)(FileVisibility);\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import GeoRestrictionInfo from './view';\nimport { connect } from 'react-redux';\nimport { doOpenModal } from 'redux/actions/app';\nimport { selectGeoRestrictionForUri } from 'redux/selectors/claims';\n\nconst select = (state, props) => ({\n  geoRestriction: selectGeoRestrictionForUri(state, props.uri),\n});\n\nconst perform = {\n  doOpenModal,\n};\n\nexport default connect(select, perform)(GeoRestrictionInfo);\n","// @flow\nimport React from 'react';\nimport './style.scss';\nimport Card from 'component/common/card';\nimport Icon from 'component/common/icon';\nimport Tooltip from 'component/common/tooltip';\nimport * as ICONS from 'constants/icons';\nimport * as MODALS from 'constants/modal_types';\nimport { parseURI } from 'util/lbryURI';\n\ntype Props = {\n  uri: string,\n  geoRestriction: ?GeoRestriction,\n  doOpenModal: (string, {}) => void,\n};\n\nexport default function GeoRestrictionInfo(props: Props) {\n  const { uri, geoRestriction, doOpenModal } = props;\n\n  console.log('props_ ', props);\n  if (!geoRestriction) {\n    return null;\n  }\n\n  const { isChannel } = parseURI(uri);\n  const title = __(isChannel ? 'Channel unavailable' : 'Content unavailable');\n  const msg = <Card title={title} subtitle={__(geoRestriction.message || '')} />;\n\n  function showMsg() {\n    doOpenModal(MODALS.CONFIRM, {\n      title: title,\n      subtitle: __(geoRestriction.message || ''),\n      onConfirm: (closeModal) => closeModal(),\n      hideCancel: true,\n    });\n  }\n\n  return (\n    <Tooltip title={msg} followCursor>\n      <div className=\"geo-restriction-info\" onClick={showMsg}>\n        <div className=\"geo-restriction-info__container\">\n          <Icon icon={ICONS.EYE_OFF} size={24} />\n          <span className=\"geo-restriction-info__title\">{title}</span>\n        </div>\n      </div>\n    </Tooltip>\n  );\n}\n","// @flow\nimport { v4 as Uuidv4 } from 'uuid';\nimport React from 'react';\nimport ClaimList from 'component/claimList';\nimport ClaimListDiscover from 'component/claimListDiscover';\nimport Spinner from 'component/spinner';\nimport Card from 'component/common/card';\nimport { useIsMobile, useIsMediumScreen } from 'effects/use-screensize';\nimport Button from 'component/button';\nimport { FYP_ID } from 'constants/urlParams';\nimport classnames from 'classnames';\nimport RecSys from 'recsys';\n// import { getClaimMetadata } from 'util/claim';\nimport LangFilterIndicator from 'component/langFilterIndicator';\n\nconst VIEW_ALL_RELATED = 'view_all_related';\nconst VIEW_MORE_FROM = 'view_more_from';\n// const BLOCKED_WORDS: ?Array<string> = AD_KEYWORD_BLOCKLIST && AD_KEYWORD_BLOCKLIST.toLowerCase().split(',');\n// const CHECK_DESCRIPTION: boolean = AD_KEYWORD_BLOCKLIST_CHECK_DESCRIPTION === 'true';\n\ntype Props = {\n  uri: string,\n  recommendedContentUris: Array<string>,\n  nextRecommendedUri: string,\n  isSearching: boolean,\n  searchInLanguage: boolean,\n  doFetchRecommendedContent: (string, ?FypParam) => void,\n  claim: ?StreamClaim,\n  claimId: string,\n  metadata: any,\n  location: UrlLocation,\n};\n\nexport default React.memo<Props>(function RecommendedContent(props: Props) {\n  const {\n    uri,\n    doFetchRecommendedContent,\n    recommendedContentUris,\n    nextRecommendedUri,\n    isSearching,\n    searchInLanguage,\n    claim,\n    location,\n  } = props;\n\n  const claimId: ?string = claim && claim.claim_id;\n\n  const [viewMode, setViewMode] = React.useState(VIEW_ALL_RELATED);\n  const signingChannel = claim && claim.signing_channel;\n  const channelName = signingChannel ? signingChannel.name : null;\n  const isMobile = useIsMobile();\n  const isMedium = useIsMediumScreen();\n  const { onRecsLoaded: onRecommendationsLoaded, onClickedRecommended: onRecommendationClicked } = RecSys;\n\n  // Assume this component always resides in a page where the `uri` matches\n  // e.g. never in a floating popup. With that, we can grab the FYP ID from\n  // the search param directly. Otherwise, the parent component would need to\n  // pass it.\n  // @see https://www.notion.so/FYP-Design-Notes-727782dde2cb485290c530ae96a34285\n  const { search } = location;\n  const urlParams = new URLSearchParams(search);\n  const fypId = urlParams.get(FYP_ID);\n  const [uuid] = React.useState(fypId ? Uuidv4() : '');\n\n  React.useEffect(() => {\n    const fypParam = fypId && uuid ? { gid: fypId, uuid } : null;\n    doFetchRecommendedContent(uri, fypParam);\n  }, [uri, doFetchRecommendedContent, fypId, uuid]);\n\n  React.useEffect(() => {\n    // Right now we only want to record the recs if they actually saw them.\n    if (\n      claimId &&\n      recommendedContentUris &&\n      recommendedContentUris.length &&\n      nextRecommendedUri &&\n      viewMode === VIEW_ALL_RELATED\n    ) {\n      onRecommendationsLoaded(claimId, recommendedContentUris, uuid);\n    }\n  }, [recommendedContentUris, onRecommendationsLoaded, claimId, nextRecommendedUri, viewMode, uuid]);\n\n  function handleRecommendationClicked(e, clickedClaim) {\n    if (claim) {\n      onRecommendationClicked(claim.claim_id, clickedClaim.claim_id);\n    }\n  }\n\n  return (\n    <Card\n      isBodyList\n      smallTitle={!isMobile && !isMedium}\n      className=\"file-page__recommended\"\n      title={__('Related')}\n      titleActions={\n        signingChannel && (\n          <div className=\"recommended-content__bubble\">\n            {searchInLanguage && <LangFilterIndicator />}\n\n            <Button\n              className={classnames('button-bubble', {\n                'button-bubble--active': viewMode === VIEW_ALL_RELATED,\n              })}\n              label={__('Related')}\n              onClick={() => setViewMode(VIEW_ALL_RELATED)}\n            />\n\n            <Button\n              className={classnames('button-bubble', {\n                'button-bubble--active': viewMode === VIEW_MORE_FROM,\n              })}\n              label={__('More from %claim_name%', { claim_name: channelName })}\n              onClick={() => setViewMode(VIEW_MORE_FROM)}\n            />\n          </div>\n        )\n      }\n      body={\n        <div>\n          {isSearching && (\n            <div className=\"empty empty--centered-tight\">\n              <Spinner type=\"small\" />\n            </div>\n          )}\n          {viewMode === VIEW_ALL_RELATED && (\n            <ClaimList\n              type=\"small\"\n              loading={isSearching}\n              uris={recommendedContentUris}\n              hideMenu={isMobile}\n              empty={__('No related content found')}\n              onClick={handleRecommendationClicked}\n            />\n          )}\n          {viewMode === VIEW_MORE_FROM && signingChannel && (\n            <ClaimListDiscover\n              hideAdvancedFilter\n              tileLayout={false}\n              showHeader={false}\n              type=\"small\"\n              claimType={['stream']}\n              orderBy=\"new\"\n              pageSize={20}\n              infiniteScroll={false}\n              hideFilters\n              channelIds={[signingChannel.claim_id]}\n              loading={isSearching}\n              hideMenu={isMobile}\n              empty={__('No related content found')}\n            />\n          )}\n        </div>\n      }\n    />\n  );\n}, areEqual);\n\nfunction areEqual(prevProps: Props, nextProps: Props) {\n  const a = prevProps;\n  const b = nextProps;\n\n  if (\n    a.uri !== b.uri ||\n    a.nextRecommendedUri !== b.nextRecommendedUri ||\n    a.isSearching !== b.isSearching ||\n    (a.recommendedContentUris && !b.recommendedContentUris) ||\n    (!a.recommendedContentUris && b.recommendedContentUris) ||\n    (a.claim && !b.claim) ||\n    (!a.claim && b.claim)\n  ) {\n    return false;\n  }\n\n  if (a.claim && b.claim && a.claim.claim_id !== b.claim.claim_id) {\n    return false;\n  }\n\n  if (a.recommendedContentUris && b.recommendedContentUris) {\n    if (a.recommendedContentUris.length !== b.recommendedContentUris.length) {\n      return false;\n    }\n\n    let i = a.recommendedContentUris.length;\n    while (i--) {\n      if (a.recommendedContentUris[i] !== b.recommendedContentUris[i]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { selectClaimForUri } from 'redux/selectors/claims';\nimport { doFetchRecommendedContent } from 'redux/actions/search';\nimport { selectRecommendedContentForUri, selectIsSearching } from 'redux/selectors/search';\nimport RecommendedContent from './view';\nimport { selectClientSetting } from 'redux/selectors/settings';\nimport * as SETTINGS from 'constants/settings';\n\nconst select = (state, props) => {\n  const recommendedContentUris = selectRecommendedContentForUri(state, props.uri);\n  const nextRecommendedUri = recommendedContentUris && recommendedContentUris[0];\n\n  return {\n    claim: selectClaimForUri(state, props.uri),\n    recommendedContentUris,\n    nextRecommendedUri,\n    isSearching: selectIsSearching(state),\n    searchInLanguage: selectClientSetting(state, SETTINGS.SEARCH_IN_LANGUAGE),\n  };\n};\n\nexport default withRouter(connect(select, { doFetchRecommendedContent })(RecommendedContent));\n","// @flow\n\nimport * as React from 'react';\nimport { openSnippetMenu } from 'util/context-menu';\n\n// Addons\nimport 'codemirror/addon/selection/mark-selection';\n\n// Syntax mode\nimport 'codemirror/mode/go/go';\nimport 'codemirror/mode/jsx/jsx';\nimport 'codemirror/mode/css/css';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/php/php';\nimport 'codemirror/mode/ruby/ruby';\nimport 'codemirror/mode/clike/clike';\nimport 'codemirror/mode/shell/shell';\nimport 'codemirror/mode/python/python';\nimport 'codemirror/mode/markdown/markdown';\nimport 'codemirror/mode/javascript/javascript';\n\ntype Props = {\n  theme: string,\n  value: ?string,\n  contentType: string,\n};\n\nclass CodeViewer extends React.PureComponent<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.codeMirror = null;\n  }\n\n  componentDidUpdate(prevProps: Props): * {\n    if (prevProps.theme === this.props.theme) return;\n\n    // This code is duplicated with componentDidMount\n    const theme = this.props.theme === 'dark' ? 'monokai' : 'ttcn';\n    this.codeMirror.setOption('theme', theme);\n  }\n\n  componentDidMount() {\n    const me = this;\n    const { theme, contentType } = me.props;\n\n    // Init CodeMirror\n    import(\n      /* webpackChunkName: \"codemirror\" */\n      'codemirror/lib/codemirror'\n    ).then((CodeMirror) => {\n      const CM = CodeMirror.default || CodeMirror;\n      me.codeMirror = CM.fromTextArea(me.textarea, {\n        // Auto detect syntax with file contentType\n        mode: contentType,\n        // Adaptive theme\n        theme: theme === 'dark' ? 'monokai' : 'ttcn',\n        // Hide the cursor\n        readOnly: true,\n        // Styled text selection\n        styleSelectedText: true,\n        // Additional config opts\n        dragDrop: false,\n        lineNumbers: true,\n        lineWrapping: true,\n      });\n      // Add events\n      me.codeMirror.on('contextmenu', openSnippetMenu);\n    });\n  }\n\n  textarea: ?HTMLTextAreaElement;\n  codeMirror: any;\n\n  render() {\n    const { value } = this.props;\n    return (\n      <div className=\"file-render__content\">\n        <textarea ref={(textarea) => (this.textarea = textarea)} disabled value={value} />\n      </div>\n    );\n  }\n}\n\nexport default CodeViewer;\n","// @flow\n\nimport React from 'react';\nimport LoadingScreen from 'component/common/loading-screen';\nimport MarkdownPreview from 'component/common/markdown-preview';\nimport CodeViewer from 'component/viewers/codeViewer';\nimport * as RENDER_MODES from 'constants/file_render_modes';\nimport * as https from 'https';\n\ntype Props = {\n  theme: string,\n  renderMode: string,\n  source: {\n    stream: string,\n    contentType: string,\n  },\n};\n\nconst DocumentViewer = (props: Props) => {\n  const { source, theme, renderMode } = props;\n  const { stream, contentType } = source;\n  const [content, setContent] = React.useState();\n\n  React.useEffect(() => {\n    if (stream) {\n      https.get(stream, (res) => {\n        if (res.statusCode === 200) {\n          let data = '';\n          res.on('data', (chunk) => {\n            data += chunk;\n          });\n          res.on('end', () => {\n            setContent(data);\n          });\n        } else {\n          setContent(null);\n        }\n      });\n    }\n  }, [stream]);\n\n  const getRenderDocument = (stream, content, theme, renderMode, contentType) => {\n    return renderMode === RENDER_MODES.MARKDOWN ? (\n      <MarkdownPreview content={content} isMarkdownPost promptLinks />\n    ) : (\n      <CodeViewer value={content} contentType={contentType} theme={theme} />\n    );\n  };\n\n  if (content === undefined) {\n    return <LoadingScreen transparent />;\n  }\n\n  return (\n    <div className=\"file-viewer file-viewer--document\">\n      {content === null && <LoadingScreen transparent status={__(\"Sorry, looks like we can't load the document.\")} />}\n      {content && getRenderDocument(stream, content, theme, renderMode, contentType)}\n    </div>\n  );\n};\n\nexport default DocumentViewer;\n","// @flow\nimport { remote } from 'electron';\nimport React from 'react';\nimport { lazyImport } from 'util/lazyImport';\nimport classnames from 'classnames';\nimport * as RENDER_MODES from 'constants/file_render_modes';\nimport * as KEYCODES from 'constants/keycodes';\nimport fs from 'fs';\nimport analytics from 'analytics';\n\nimport DocumentViewer from 'component/viewers/documentViewer';\n\n\nconst AppViewer = lazyImport(() => import('component/viewers/appViewer' /* webpackChunkName: \"appViewer\" */));\nconst HtmlViewer = lazyImport(() => import('component/viewers/htmlViewer' /* webpackChunkName: \"htmlViewer\" */));\nconst ImageViewer = lazyImport(() => import('component/viewers/imageViewer' /* webpackChunkName: \"imageViewer\" */));\nconst PdfViewer = lazyImport(() => import('component/viewers/pdfViewer' /* webpackChunkName: \"pdfViewer\" */));\n\ntype Props = {\n  uri: string,\n  streamingUrl: string,\n  embedded?: boolean,\n  contentType: string,\n  claim: StreamClaim,\n  currentTheme: string,\n  downloadPath: string,\n  fileExtension: string,\n  autoplay: boolean,\n  renderMode: string,\n  thumbnail: string,\n  className?: string,\n  doAnalyticsViewForUri: (string) => any,\n  claimRewards: () => void,\n};\n\ntype State = {\n  prevUri?: string,\n};\n\nclass StreamClaimRenderInline extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    (this: any).escapeListener = this.escapeListener.bind(this);\n    this.state = { prevUri: undefined };\n  }\n\n  componentDidMount() {\n    const { renderMode, embedded, doAnalyticsViewForUri, uri, claimRewards, streamingUrl } = this.props;\n    analytics.event.playerLoaded(renderMode, embedded);\n\n    if (uri && streamingUrl) {\n      this.setState({ prevUri: uri });\n      doAnalyticsViewForUri(uri).then(claimRewards);\n    }\n  }\n\n  componentWillUnmount() {\n  }\n\n  componentDidUpdate() {\n    const { doAnalyticsViewForUri, uri, claimRewards, streamingUrl } = this.props;\n    if (uri && streamingUrl && uri !== this.state.prevUri) {\n      this.setState({ prevUri: uri });\n      doAnalyticsViewForUri(uri).then(claimRewards);\n    }\n  }\n\n  escapeListener(e: SyntheticKeyboardEvent<*>) {\n    if (e.keyCode === KEYCODES.ESCAPE) {\n      e.preventDefault();\n      this.exitFullscreen();\n      return false;\n    }\n  }\n\n  exitFullscreen() {\n    remote.getCurrentWindow().setFullScreen(false);\n  }\n\n  renderViewer() {\n    const { currentTheme, contentType, downloadPath, fileExtension, streamingUrl, uri, renderMode } = this.props;\n    const source = streamingUrl;\n\n    switch (renderMode) {\n      case RENDER_MODES.IMAGE:\n        return (\n          <React.Suspense fallback={null}>\n            <ImageViewer uri={uri} source={source} />\n          </React.Suspense>\n        );\n      case RENDER_MODES.HTML:\n        return (\n          <React.Suspense fallback={null}>\n            <HtmlViewer source={downloadPath || source} />\n          </React.Suspense>\n        );\n      case RENDER_MODES.DOCUMENT:\n      case RENDER_MODES.MARKDOWN:\n        return <DocumentViewer source={{ stream: source, contentType }} renderMode={renderMode} theme={currentTheme} />;\n      case RENDER_MODES.DOCX:\n        return <DocxViewer source={downloadPath} />;\n      case RENDER_MODES.PDF:\n        return (\n          <React.Suspense fallback={null}>\n            <PdfViewer source={downloadPath || source} />\n          </React.Suspense>\n        );\n      case RENDER_MODES.CAD:\n        return (\n          <ThreeViewer\n            source={{\n              fileType: fileExtension,\n              downloadPath,\n            }}\n            theme={currentTheme}\n          />\n        );\n      case RENDER_MODES.COMIC:\n        return (\n          <ComicBookViewer\n            source={{\n              stream: source,\n            }}\n            theme={currentTheme}\n          />\n        );\n      case RENDER_MODES.APPLICATION:\n        return (\n          <React.Suspense fallback={null}>\n            <AppViewer uri={uri} />\n          </React.Suspense>\n        );\n    }\n\n    return null;\n  }\n\n  render() {\n    const { embedded, renderMode, className } = this.props;\n\n    return (\n      <div\n        className={classnames('file-render', className, {\n          'file-render--document': RENDER_MODES.TEXT_MODES.includes(renderMode) && !embedded,\n          'file-render--embed': embedded,\n        })}\n      >\n        {this.renderViewer()}\n      </div>\n    );\n  }\n}\n\nexport default StreamClaimRenderInline;\n","import { connect } from 'react-redux';\nimport { makeSelectDownloadPathForUri, selectStreamingUrlForUri } from 'redux/selectors/file_info';\nimport { makeSelectClaimForUri, selectThumbnailForUri, makeSelectContentTypeForUri } from 'redux/selectors/claims';\nimport * as SETTINGS from 'constants/settings';\nimport { selectClientSetting } from 'redux/selectors/settings';\nimport { makeSelectFileRenderModeForUri, makeSelectFileExtensionForUri } from 'redux/selectors/content';\nimport { doAnalyticsViewForUri } from 'redux/actions/app';\nimport { doClaimEligiblePurchaseRewards } from 'redux/actions/rewards';\nimport withStreamClaimRender from 'hocs/withStreamClaimRender';\n\nimport StreamClaimRenderInline from './view';\n\nconst select = (state, props) => {\n  const autoplay = props.embedded ? false : selectClientSetting(state, SETTINGS.AUTOPLAY_MEDIA);\n  return {\n    currentTheme: selectClientSetting(state, SETTINGS.THEME),\n    claim: makeSelectClaimForUri(props.uri)(state),\n    thumbnail: selectThumbnailForUri(state, props.uri),\n    contentType: makeSelectContentTypeForUri(props.uri)(state),\n    downloadPath: makeSelectDownloadPathForUri(props.uri)(state),\n    fileExtension: makeSelectFileExtensionForUri(props.uri)(state),\n    streamingUrl: selectStreamingUrlForUri(state, props.uri),\n    renderMode: makeSelectFileRenderModeForUri(props.uri)(state),\n    autoplay: autoplay,\n  };\n};\n\nconst perform = (dispatch) => ({\n  doAnalyticsViewForUri: (uri) => dispatch(doAnalyticsViewForUri(uri)),\n  claimRewards: () => dispatch(doClaimEligiblePurchaseRewards()),\n});\n\nexport default withStreamClaimRender(connect(select, perform)(StreamClaimRenderInline));\n","// @flow\nimport * as ICONS from 'constants/icons';\nimport * as MODALS from 'constants/modal_types';\nimport React, { useState } from 'react';\nimport Button from 'component/button';\nimport { isClaimPrivate, isClaimUnlisted } from 'util/claim';\nimport { webDownloadClaim } from 'util/downloadClaim';\n\ntype Props = {\n  uri: string,\n  claim: StreamClaim,\n  claimIsMine: boolean,\n  downloading: boolean,\n  loading: boolean,\n  focusable: boolean,\n  fileInfo: ?FileListItem,\n  openModal: (id: string, { path: string }) => void,\n  pause: () => void,\n  download: (string) => void,\n  buttonType: ?string,\n  showLabel: ?boolean,\n  hideOpenButton: boolean,\n  hideDownloadStatus: boolean,\n  streamingUrl: ?string,\n  contentRestrictedFromUser: boolean,\n  isProtectedContent: boolean,\n  uriAccessKey: ?UriAccessKey,\n};\n\nfunction FileDownloadLink(props: Props) {\n  const {\n    fileInfo,\n    downloading,\n    loading,\n    openModal,\n    pause,\n    claimIsMine,\n    download,\n    uri,\n    claim,\n    buttonType,\n    focusable = true,\n    showLabel = false,\n    hideOpenButton = false,\n    hideDownloadStatus = false,\n    streamingUrl,\n    contentRestrictedFromUser,\n    isProtectedContent,\n    uriAccessKey,\n  } = props;\n\n  const [didClickDownloadButton, setDidClickDownloadButton] = useState(false);\n  const fileName = claim && claim.value && claim.value.source && claim.value.source.name;\n  const isPrivateOrUnlisted = isClaimUnlisted(claim) || isClaimPrivate(claim);\n\n  // initiate download when streamingUrl is available\n  React.useEffect(() => {\n    if (didClickDownloadButton && streamingUrl) {\n      webDownloadClaim(streamingUrl, fileName, isProtectedContent, uriAccessKey);\n      setDidClickDownloadButton(false);\n    }\n  }, [streamingUrl, didClickDownloadButton, fileName, isProtectedContent, uriAccessKey]);\n\n  function handleDownload(e) {\n    setDidClickDownloadButton(true);\n    e.preventDefault();\n    download(uri);\n  }\n\n  if (!claim) {\n    return null;\n  }\n\n\n  if (fileInfo && fileInfo.download_path && fileInfo.completed) {\n    const openLabel = __('Open file');\n    return hideOpenButton ? null : (\n      <Button\n        button={buttonType}\n        className={buttonType ? undefined : 'button--file-action'}\n        title={openLabel}\n        label={showLabel ? openLabel : null}\n        icon={ICONS.EXTERNAL}\n        onClick={() => {\n          pause();\n          openModal(MODALS.CONFIRM_EXTERNAL_RESOURCE, { path: fileInfo.download_path, isMine: claimIsMine });\n        }}\n        aria-hidden={!focusable}\n        tabIndex={focusable ? 0 : -1}\n      />\n    );\n  }\n\n  const label = __('Download');\n\n  return (\n    <>\n      {contentRestrictedFromUser && (\n        <h2 className=\"protected-download-header\">\n          {__('This download is protected content, join a membership to gain access')}\n        </h2>\n      )}\n      <Button\n        button={buttonType}\n        className={buttonType ? undefined : 'button--file-action'}\n        title={label}\n        icon={ICONS.DOWNLOAD}\n        label={showLabel ? label : null}\n        onClick={handleDownload}\n        aria-hidden={!focusable}\n        tabIndex={focusable ? 0 : -1}\n        disabled={contentRestrictedFromUser || isPrivateOrUnlisted}\n      />\n    </>\n  );\n}\n\nexport default FileDownloadLink;\n","import { connect } from 'react-redux';\nimport { selectClaimIsMine, selectClaimForUri, selectProtectedContentTagForUri } from 'redux/selectors/claims';\nimport { selectContentStates } from 'redux/selectors/content';\nimport {\n  makeSelectFileInfoForUri,\n  makeSelectDownloadingForUri,\n  makeSelectLoadingForUri,\n  selectStreamingUrlForUri,\n} from 'redux/selectors/file_info';\nimport { doOpenModal } from 'redux/actions/app';\nimport { doClearPlayingUri, doDownloadUri } from 'redux/actions/content';\nimport { selectIsProtectedContentLockedFromUserForId } from 'redux/selectors/memberships';\nimport FileDownloadLink from './view';\n\nconst select = (state, props) => {\n  const claim = selectClaimForUri(state, props.uri);\n\n  return {\n    claim,\n    claimIsMine: selectClaimIsMine(state, claim),\n    downloading: makeSelectDownloadingForUri(props.uri)(state),\n    fileInfo: makeSelectFileInfoForUri(props.uri)(state),\n    loading: makeSelectLoadingForUri(props.uri)(state),\n    streamingUrl: selectStreamingUrlForUri(state, props.uri),\n    contentRestrictedFromUser: claim && selectIsProtectedContentLockedFromUserForId(state, claim.claim_id),\n    isProtectedContent: Boolean(selectProtectedContentTagForUri(state, props.uri)),\n    uriAccessKey: selectContentStates(state).uriAccessKeys[props.uri],\n  };\n};\n\nconst perform = (dispatch) => ({\n  download: (uri) => dispatch(doDownloadUri(uri)),\n  openModal: (modal, props) => dispatch(doOpenModal(modal, props)),\n  pause: () => dispatch(doClearPlayingUri()),\n});\n\nexport default connect(select, perform)(FileDownloadLink);\n","import { connect } from 'react-redux';\nimport { makeSelectFileRenderModeForUri } from 'redux/selectors/content';\nimport { withRouter } from 'react-router';\nimport FileRenderDownload from './view';\n\nconst select = (state, props) => ({\n  renderMode: makeSelectFileRenderModeForUri(props.uri)(state),\n});\n\nexport default withRouter(connect(select)(FileRenderDownload));\n","// @flow\nimport React from 'react';\nimport FileDownloadLink from 'component/fileDownloadLink';\nimport * as RENDER_MODES from 'constants/file_render_modes';\nimport Card from 'component/common/card';\n\ntype Props = {\n  uri: string,\n  renderMode: string,\n};\n\nexport default function FileRenderDownload(props: Props) {\n  const { uri, renderMode } = props;\n\n  if (RENDER_MODES.UNSUPPORTED_IN_THIS_APP.includes(renderMode)) {\n    return (\n      <Card\n        title={__('Download')}\n        subtitle={<p>{__(\"This file type can't be viewed on Odysee.\")}</p>}\n        actions={\n          <div className=\"section__actions\">\n            <FileDownloadLink uri={uri} buttonType=\"primary\" showLabel />\n          </div>\n        }\n      />\n    );\n  }\n\n  return <Card title={__('Download')} actions={<FileDownloadLink uri={uri} buttonType=\"primary\" showLabel />} />;\n}\n","// @flow\nimport { PRIMARY_IMAGE_WRAPPER_CLASS } from 'constants/player';\nimport * as React from 'react';\nimport classnames from 'classnames';\nimport { lazyImport } from 'util/lazyImport';\nimport * as ICONS from 'constants/icons';\nimport * as DRAWERS from 'constants/drawer_types';\nimport * as RENDER_MODES from 'constants/file_render_modes';\nimport FileTitleSection from 'component/fileTitleSection';\nimport StreamClaimRenderInline from 'component/streamClaimRenderInline';\nimport FileRenderDownload from 'component/fileRenderDownload';\nimport RecommendedContent from 'component/recommendedContent';\nimport Empty from 'component/common/empty';\nimport SwipeableDrawer from 'component/swipeableDrawer';\nimport DrawerExpandButton from 'component/swipeableDrawerExpand';\nimport { useIsMobile, useIsMobileLandscape } from 'effects/use-screensize';\n\nconst CommentsList = lazyImport(() => import('component/commentsList' /* webpackChunkName: \"comments\" */));\nconst MarkdownPostPage = lazyImport(() => import('./internal/markdownPost' /* webpackChunkName: \"markdownPost\" */));\nconst VideoPlayersPage = lazyImport(() => import('./internal/videoPlayers' /* webpackChunkName: \"videoPlayersPage\" */));\nconst LivestreamPage = lazyImport(() => import('./internal/livestream' /* webpackChunkName: \"livestream\" */));\n\ntype Props = {\n  uri: string,\n  // -- redux --\n  commentsListTitle: string,\n  costInfo: ?{ includesData: boolean, cost: number },\n  isMature: boolean,\n  linkedCommentId?: string,\n  renderMode: string,\n  commentSettingDisabled: ?boolean,\n  threadCommentId?: string,\n  isProtectedContent?: boolean,\n  contentUnlocked: boolean,\n  isLivestream: boolean,\n  doSetContentHistoryItem: (uri: string) => void,\n  doSetPrimaryUri: (uri: ?string) => void,\n  doToggleAppDrawer: (type: string) => void,\n};\n\nconst StreamClaimPage = (props: Props) => {\n  const {\n    uri,\n    // -- redux --\n    commentsListTitle,\n    costInfo,\n    isMature,\n    linkedCommentId,\n    renderMode,\n    commentSettingDisabled,\n    threadCommentId,\n    isProtectedContent,\n    contentUnlocked,\n    isLivestream,\n    doSetContentHistoryItem,\n    doSetPrimaryUri,\n    doToggleAppDrawer,\n  } = props;\n\n  const isMobile = useIsMobile();\n  const isLandscapeRotated = useIsMobileLandscape();\n\n  const cost = costInfo ? costInfo.cost : null;\n  const isMarkdown = renderMode === RENDER_MODES.MARKDOWN;\n  const accessStatus = !isProtectedContent ? undefined : contentUnlocked ? 'unlocked' : 'locked';\n\n  React.useEffect(() => {\n    if ((linkedCommentId || threadCommentId) && isMobile) {\n      doToggleAppDrawer(DRAWERS.CHAT);\n    }\n    // only on mount, otherwise clicking on a comments timestamp and linking it\n    // would trigger the drawer\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    doSetContentHistoryItem(uri);\n    doSetPrimaryUri(uri);\n\n    return () => doSetPrimaryUri(null);\n  }, [doSetContentHistoryItem, doSetPrimaryUri, uri]);\n\n  if (isMarkdown) {\n    return (\n      <React.Suspense fallback={null}>\n        <MarkdownPostPage uri={uri} accessStatus={accessStatus} />\n      </React.Suspense>\n    );\n  }\n\n  if (RENDER_MODES.FLOATING_MODES.includes(renderMode)) {\n    if (isLivestream) {\n      return (\n        <React.Suspense fallback={null}>\n          <LivestreamPage uri={uri} accessStatus={accessStatus} />\n        </React.Suspense>\n      );\n    }\n\n    return (\n      <React.Suspense fallback={null}>\n        <VideoPlayersPage uri={uri} accessStatus={accessStatus} />\n      </React.Suspense>\n    );\n  }\n\n  function renderClaimLayout() {\n    if (RENDER_MODES.UNRENDERABLE_MODES.includes(renderMode)) {\n      return <FileRenderDownload uri={uri} isFree={cost === 0} />;\n    }\n\n    if (RENDER_MODES.TEXT_MODES.includes(renderMode)) {\n      return (\n        <div className=\"file-page__pdf-wrapper\">\n          <StreamClaimRenderInline uri={uri} />\n        </div>\n      );\n    }\n\n    if (renderMode === RENDER_MODES.IMAGE) {\n      return (\n        <div className={PRIMARY_IMAGE_WRAPPER_CLASS}>\n          <StreamClaimRenderInline uri={uri} />\n        </div>\n      );\n    }\n\n    return <StreamClaimRenderInline uri={uri} />;\n  }\n\n  if (isMature) {\n    return (\n      <>\n        <FileTitleSection uri={uri} accessStatus={accessStatus} isNsfwBlocked />\n        <RecommendedContent uri={uri} />\n      </>\n    );\n  }\n\n  const commentsListProps = { uri, linkedCommentId, threadCommentId };\n  const emptyMsgProps = { padded: !isMobile };\n\n  return (\n    <>\n      <div className={classnames('section card-stack', `file-page__${renderMode}`)}>\n        {renderClaimLayout()}\n\n        <FileTitleSection uri={uri} accessStatus={accessStatus} />\n\n        {contentUnlocked && (\n          <div className=\"file-page__secondary-content\">\n            <section className=\"file-page__media-actions\">\n              <React.Suspense fallback={null}>\n                {commentSettingDisabled ? (\n                  <Empty {...emptyMsgProps} text={__('The creator of this content has disabled comments.')} />\n                ) : isMobile && !isLandscapeRotated ? (\n                  <React.Fragment>\n                    <SwipeableDrawer type={DRAWERS.CHAT} title={<h2>{commentsListTitle}</h2>}>\n                      <CommentsList {...commentsListProps} />\n                    </SwipeableDrawer>\n\n                    <DrawerExpandButton icon={ICONS.CHAT} label={<h2>{commentsListTitle}</h2>} type={DRAWERS.CHAT} />\n                  </React.Fragment>\n                ) : (\n                  <CommentsList {...commentsListProps} notInDrawer />\n                )}\n              </React.Suspense>\n            </section>\n          </div>\n        )}\n      </div>\n\n      <RecommendedContent uri={uri} />\n    </>\n  );\n};\n\nexport default StreamClaimPage;\n","import { connect } from 'react-redux';\nimport { doSetContentHistoryItem, doSetPrimaryUri } from 'redux/actions/content';\nimport { withRouter } from 'react-router-dom';\nimport {\n  selectClaimIsNsfwForUri,\n  selectClaimForUri,\n  selectProtectedContentTagForUri,\n  selectIsStreamPlaceholderForUri,\n  selectCostInfoForUri,\n} from 'redux/selectors/claims';\nimport { LINKED_COMMENT_QUERY_PARAM, THREAD_COMMENT_QUERY_PARAM } from 'constants/comment';\nimport { makeSelectFileRenderModeForUri } from 'redux/selectors/content';\nimport { selectCommentsListTitleForUri, selectCommentsDisabledSettingForChannelId } from 'redux/selectors/comments';\nimport { doToggleAppDrawer } from 'redux/actions/app';\nimport { getChannelIdFromClaim } from 'util/claim';\n\nimport { selectNoRestrictionOrUserIsMemberForContentClaimId } from 'redux/selectors/memberships';\n\nimport StreamClaimPage from './view';\n\nconst select = (state, props) => {\n  const { uri } = props;\n  const { search } = location;\n\n  const urlParams = new URLSearchParams(search);\n  const claim = selectClaimForUri(state, uri);\n  const channelId = getChannelIdFromClaim(claim);\n\n  const claimId = claim.claim_id;\n\n  return {\n    commentsListTitle: selectCommentsListTitleForUri(state, uri),\n    costInfo: selectCostInfoForUri(state, uri),\n    isMature: selectClaimIsNsfwForUri(state, uri),\n    linkedCommentId: urlParams.get(LINKED_COMMENT_QUERY_PARAM),\n    renderMode: makeSelectFileRenderModeForUri(uri)(state),\n    commentSettingDisabled: selectCommentsDisabledSettingForChannelId(state, channelId),\n    threadCommentId: urlParams.get(THREAD_COMMENT_QUERY_PARAM),\n    isProtectedContent: Boolean(selectProtectedContentTagForUri(state, uri)),\n    contentUnlocked: claimId && selectNoRestrictionOrUserIsMemberForContentClaimId(state, claimId),\n    isLivestream: selectIsStreamPlaceholderForUri(state, uri),\n  };\n};\n\nconst perform = {\n  doSetContentHistoryItem,\n  doSetPrimaryUri,\n  doToggleAppDrawer,\n};\n\nexport default withRouter(connect(select, perform)(StreamClaimPage));\n","// @flow\n\nexport function webDownloadClaim(\n  streamingUrl: string,\n  fileName: ?string,\n  isSecure: ?boolean,\n  uriAccessKey: ?UriAccessKey\n) {\n  const url = new URL(streamingUrl);\n\n  // Existing usages allowed null string. Try to capture that scenario\n  assert(fileName, 'Trying to download an empty fileName');\n\n  if (!isSecure) {\n    url.searchParams.set('download', 'true');\n  }\n\n  if (uriAccessKey) {\n    url.searchParams.set('signature', uriAccessKey.signature);\n    url.searchParams.set('signature_ts', uriAccessKey.signature_ts);\n  }\n\n  const element = document.createElement('a');\n  element.href = url.toString();\n  element.setAttribute('download', fileName || '');\n  element.click();\n  element.remove();\n}\n","const { URL, THUMBNAIL_CARDS_CDN_URL } = require('../../config');\n\nconst CONTINENT_COOKIE = 'continent';\n\nfunction generateEmbedUrl(claimUri, startTime, referralLink, newestType, autoplay) {\n  const uriPath = claimUri.replace('lbry://', '').replace(/#/g, ':');\n  let urlParams = new URLSearchParams();\n\n  if (startTime) {\n    urlParams.append('t', escapeHtmlProperty(startTime));\n  }\n\n  if (referralLink) {\n    urlParams.append('r', escapeHtmlProperty(referralLink));\n  }\n\n  if (newestType) {\n    urlParams.append('feature', newestType);\n  }\n\n  if (autoplay) {\n    urlParams.append('autoplay', true);\n  }\n\n  const embedUrl = `${URL}/$/embed/${escapeHtmlProperty(uriPath)}`;\n  const embedUrlParams = urlParams.toString() ? `?${urlParams.toString()}` : '';\n\n  return `${embedUrl}${embedUrlParams}`;\n}\n\nfunction generateEmbedUrlEncoded(claimUri, startTime, referralLink) {\n  const uriPath = claimUri.replace('lbry://', '').replace(/#/g, ':');\n  const encodedUri = encodeURIComponent(uriPath).replace(/'/g, '%27').replace(/\\(/g, '%28').replace(/\\)/g, '%29');\n\n  return generateEmbedUrl(encodedUri, startTime, referralLink).replace(/\\$/g, '%24');\n}\n\nfunction generateEmbedIframeData(src) {\n  const width = '560';\n  const height = '315';\n  const html = `<iframe id=\"odysee-iframe\" width=\"${width}\" height=\"${height}\" src=\"${src}\" allowfullscreen></iframe>`;\n\n  return { html, width, height };\n}\n\nfunction generateDownloadUrl(claimName, claimId) {\n  return `${URL}/$/download/${claimName}/${claimId}`;\n}\n\nfunction generateDirectUrl(claimName, claimId) {\n  return `${URL}/$/stream/${claimName}/${claimId}`;\n}\n\nfunction generateNewestUrl(channelName, newestType) {\n  return `${URL}/$/${newestType}/${channelName}`;\n}\n\nfunction getThumbnailCardCdnUrl(url) {\n  if (\n    !THUMBNAIL_CARDS_CDN_URL ||\n    !url ||\n    (url && (url.includes('https://twitter-card') || url.includes('https://cards.odycdn.com')))\n  ) {\n    return url;\n  }\n\n  if (url && !url.startsWith('data:image')) {\n    return `${THUMBNAIL_CARDS_CDN_URL}${url}`;\n  }\n}\n\nfunction getParameterByName(name, url) {\n  var match = RegExp('[?&]' + name + '=([^&]*)').exec(url);\n  return match && decodeURIComponent(match[1].replace(/\\+/g, ' '));\n}\n\nfunction escapeHtmlProperty(property) {\n  return property\n    ? String(property)\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#039;')\n    : '';\n}\n\nfunction unscapeHtmlProperty(property) {\n  return property\n    ? String(property)\n        .replace(/&amp;/g, '&')\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>')\n        .replace(/&quot;/g, '\"')\n        .replace(/&#039;/g, \"'\")\n    : '';\n}\n\n// module.exports needed since the web server imports this function\nmodule.exports = {\n  CONTINENT_COOKIE,\n  generateDirectUrl,\n  generateDownloadUrl,\n  generateEmbedIframeData,\n  generateEmbedUrl,\n  generateEmbedUrlEncoded,\n  getParameterByName,\n  getThumbnailCardCdnUrl,\n  escapeHtmlProperty,\n  unscapeHtmlProperty,\n  generateNewestUrl,\n};\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".file-visibility{color:var(--color-text-subtitle);font-size:var(--font-xsmall);max-height:1.3rem;white-space:nowrap}[dir] .file-visibility{background-color:var(--color-visibility-label);border:1px solid var(--color-border);border-radius:3px;padding:0 var(--spacing-xs)}[dir=ltr] .file-visibility{margin-left:var(--spacing-s)}[dir=rtl] .file-visibility{margin-right:var(--spacing-s)}[dir=ltr] .file-visibility svg{margin-right:var(--spacing-xxs)}[dir=rtl] .file-visibility svg{margin-left:var(--spacing-xxs)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../ui/component/fileVisibility/style.scss\"],\"names\":[],\"mappings\":\"AAAA,iBAME,gCAAA,CADA,4BAAA,CAGA,iBAAA,CACA,kBAAA,CATF,uBAOE,8CAAA,CAHA,oCAAA,CADA,iBAAA,CADA,2BAOA,CATF,2BACE,4BAQA,CATF,2BACE,6BAQA,CAEA,+BACE,+BAAA,CADF,+BACE,8BAAA\",\"sourcesContent\":[\".file-visibility {\\n  margin-left: var(--spacing-s);\\n  padding: 0 var(--spacing-xs);\\n  border-radius: 3px;\\n  border: 1px solid var(--color-border);\\n  font-size: var(--font-xsmall);\\n  color: var(--color-text-subtitle);\\n  background-color: var(--color-visibility-label);\\n  max-height: 1.3rem;\\n  white-space: nowrap;\\n\\n  svg {\\n    margin-right: var(--spacing-xxs);\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".geo-restriction-info{align-items:center;color:#e2495e;display:flex;flex-direction:column}[dir] .geo-restriction-info{background:var(--color-card-background);border-radius:var(--border-radius);margin:var(--spacing-m) 0}.geo-restriction-info__container{align-items:center;display:flex}[dir] .geo-restriction-info__container{margin-bottom:var(--spacing-l);margin-top:var(--spacing-l)}.geo-restriction-info__title{font-size:var(--font-large);font-style:italic}[dir=ltr] .geo-restriction-info__title{margin-left:var(--spacing-s)}[dir=rtl] .geo-restriction-info__title{margin-right:var(--spacing-s)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../ui/component/geoRestictionInfo/style.scss\"],\"names\":[],\"mappings\":\"AAIA,sBAGE,kBAAA,CAIA,aATW,CAGX,YAAA,CAGA,qBANW,CAEb,4BAKE,uCAAA,CACA,kCAAA,CAJA,yBAJW,CAYb,iCAEE,kBAAA,CADA,YAGA,CAJF,uCAIE,8BAAA,CADA,2BACA,CAGF,6BACE,2BAAA,CACA,iBACA,CAHF,uCAGE,4BAAA,CAHF,uCAGE,6BAAA\",\"sourcesContent\":[\"// \\\"--color-text-error\\\" is too bright, while \\\"--color-error\\\" isn't adjusted for\\n// light theme. Using the value of RED_COLOR from icon.jsx.\\n$text-color: #e2495e;\\n\\n.geo-restriction-info {\\n  display: flex;\\n  margin: var(--spacing-m) 0;\\n  align-items: center;\\n  flex-direction: column;\\n  background: var(--color-card-background);\\n  border-radius: var(--border-radius);\\n  color: $text-color;\\n}\\n\\n.geo-restriction-info__container {\\n  display: flex;\\n  align-items: center;\\n  margin-top: var(--spacing-l);\\n  margin-bottom: var(--spacing-l);\\n}\\n\\n.geo-restriction-info__title {\\n  font-size: var(--font-large);\\n  font-style: italic;\\n  margin-left: var(--spacing-s);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["props","uri","claim","isSaved","doOpenModal","isClaimAllowedForCollection","React","FileActionButton","title","__","label","icon","ICONS","iconSize","requiresAuth","onClick","MODALS","perform","connect","state","selectClaimForUri","permanentUrl","permanent_url","selectClaimSavedForUrl","CollectionAddButton","repostedAmount","getClaimScheduledState","isClaimUnlisted","isClaimPrivate","repost_total","requiresChannel","selectClaimRepostedAmountForUri","ClaimRepostButton","editUri","claimType","channelName","claimIsMine","doPrepareEdit","uriObject","streamName","name","streamClaimId","claim_id","buildURI","undefined","selectChannelNameForClaimUri","selectClaimIsMineForUri","ClaimPublishButton","ClaimDeleteButton","doToast","doDownloadUri","isPostClaim","makeSelectFileRenderModeForUri","RENDER_MODES","selectClaimIsMine","renderMode","costInfo","selectCostInfoForUri","hasChannels","selectHasChannels","uriAccessKey","selectContentStates","uriAccessKeys","isLivestreamClaim","isStreamPlaceholderClaim","streamingUrl","selectStreamingUrlForUri","disableDownloadButton","makeSelectTagInClaimOrChannelForUri","DISABLE_DOWNLOAD_BUTTON_TAG","isMature","selectClaimIsNsfwForUri","isAPreorder","Boolean","selectPreorderTagForUri","isProtectedContent","selectProtectedContentTagForUri","isFiatRequired","selectIsFiatRequiredForUri","isFiatPaid","selectIsFiatPaidForUri","isTierUnlocked","selectNoRestrictionOrUserIsMemberForContentClaimId","scheduledState","selectScheduledStateForUri","hideRepost","_useHistory","useHistory","push","search","location","isMobile","useIsMobile","_React$useState2","_slicedToArray","downloadClicked","setDownloadClicked","claimId","signingChannel","signing_channel","value","claimMeta","meta","fileName","source","isUnlistedOrPrivate","webShareable","cost","collectionId","URLSearchParams","get","COLLECTIONS_CONSTS","showDownload","showRepost","webDownloadClaim","className","ENABLE_FILE_REACTIONS","FileReactions","ClaimSupportButton","fileAction","ClaimCollectionAddButton","ClaimShareButton","Menu","MenuButton","e","stopPropagation","preventDefault","Icon","size","MenuList","MenuItem","onSelect","message","SITE_NAME","reposted","concat","PAGES","isInsufficientCredits","fileInfo","claimWasPurchased","I18nMessage","tokens","reward_link","Button","button","navigate","buy_link","lbc","LbcSymbol","selectInsufficientCreditsForUri","selectClaimWasPurchasedForUri","ClaimInsufficientCredits","_props$isLivestreamCl","_props$isLive","isLive","contentUnlocked","LivestreamDateTime","DateTimeClaim","format","disableFromNowFormat","FileViewCount","FileVisibility","FileActions","livestream","ClaimPreviewReset","selectIsStreamPlaceholderForUri","selectShouldShowLivestreamForUri","FileSubtitle","pendingAmount","makeSelectPendingAmountByUri","metadata","getClaimMetadata","description","amount","parseFloat","support_amount","hasSupport","Number","isEmpty","expandOverride","expanded","setExpanded","_React$useState4","showCreditDetails","setShowCreditDetails","formattedAmount","formatCredits","classnames","MarkdownPreview","content","simpleLinks","ClaimTags","type","FileDetails","postfix","FileValues","escapeHtmlProperty","require","doFetchSubCount","channel","channelUri","canonical_url","channelClaimId","getClaimTitle","subCount","selectSubCountForUri","nsfw","isNsfwBlocked","_props$livestream","accessStatus","Card","isPageTitle","noTitleWrap","GeoRestrictionInfo","titleActions","FilePrice","normalizeURI","hideFree","body","actions","ENABLE_MATURE","content_settings","download_url","href","ClaimAuthor","channelSubCount","FileDescription","isLivestreamActive","fetchViewCount","viewCount","activeViewers","lang","count","countCompact","isInteger","toCompactNotation","countFullResolution","toLocaleString","Placeholder","Skeleton","variant","animation","Tooltip","followCursor","placement","viewer_count","viewer_state","view_count","SIMPLE_SITE","HelpLink","selectClaimIdForUri","selectViewCountForUri","selectViewersForId","selectLanguage","selectIsActiveLivestreamForUri","dispatch","doFetchViewCount","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","isUnlisted","selectIsUriUnlisted","geoRestriction","selectGeoRestrictionForUri","console","log","isChannel","parseURI","msg","subtitle","onConfirm","closeModal","hideCancel","VIEW_ALL_RELATED","VIEW_MORE_FROM","doFetchRecommendedContent","recommendedContentUris","nextRecommendedUri","isSearching","searchInLanguage","viewMode","setViewMode","isMedium","useIsMediumScreen","onRecommendationsLoaded","RecSys","onRecommendationClicked","fypId","FYP_ID","uuid","Uuidv4","gid","length","isBodyList","smallTitle","LangFilterIndicator","claim_name","Spinner","ClaimList","loading","uris","hideMenu","empty","clickedClaim","ClaimListDiscover","hideAdvancedFilter","tileLayout","showHeader","orderBy","pageSize","infiniteScroll","hideFilters","channelIds","areEqual","prevProps","nextProps","a","b","i","withRouter","selectRecommendedContentForUri","selectIsSearching","selectClientSetting","SETTINGS","RecommendedContent","_React$PureComponent","_inherits","CodeViewer","_super","_createSuper","_this","_classCallCheck","_defineProperty","_assertThisInitialized","call","codeMirror","key","theme","this","setOption","me","_me$props","contentType","then","CodeMirror","CM","fromTextArea","textarea","mode","readOnly","styleSelectedText","dragDrop","lineNumbers","lineWrapping","on","openSnippetMenu","_this2","ref","disabled","stream","setContent","https","res","statusCode","data","chunk","LoadingScreen","transparent","status","isMarkdownPost","promptLinks","getRenderDocument","AppViewer","lazyImport","HtmlViewer","ImageViewer","PdfViewer","StreamClaimRenderInline","escapeListener","bind","prevUri","_this$props","embedded","doAnalyticsViewForUri","claimRewards","analytics","setState","_this$props2","keyCode","KEYCODES","exitFullscreen","remote","setFullScreen","_this$props3","currentTheme","downloadPath","fileExtension","fallback","DocumentViewer","DocxViewer","ThreeViewer","fileType","ComicBookViewer","_this$props4","renderViewer","withStreamClaimRender","autoplay","makeSelectClaimForUri","thumbnail","selectThumbnailForUri","makeSelectContentTypeForUri","makeSelectDownloadPathForUri","makeSelectFileExtensionForUri","_doAnalyticsViewForUri","doClaimEligiblePurchaseRewards","openModal","downloading","pause","download","buttonType","_props$focusable","focusable","_props$showLabel","showLabel","_props$hideOpenButton","hideOpenButton","hideDownloadStatus","contentRestrictedFromUser","_useState2","useState","didClickDownloadButton","setDidClickDownloadButton","isPrivateOrUnlisted","download_path","completed","openLabel","path","isMine","tabIndex","makeSelectDownloadingForUri","makeSelectFileInfoForUri","makeSelectLoadingForUri","selectIsProtectedContentLockedFromUserForId","modal","doClearPlayingUri","FileDownloadLink","CommentsList","MarkdownPostPage","VideoPlayersPage","LivestreamPage","commentsListTitle","linkedCommentId","commentSettingDisabled","threadCommentId","isLivestream","doSetContentHistoryItem","doSetPrimaryUri","doToggleAppDrawer","isLandscapeRotated","useIsMobileLandscape","isMarkdown","DRAWERS","FileTitleSection","commentsListProps","emptyMsgProps","padded","FileRenderDownload","isFree","PRIMARY_IMAGE_WRAPPER_CLASS","Empty","_extends","text","SwipeableDrawer","DrawerExpandButton","notInDrawer","urlParams","channelId","getChannelIdFromClaim","selectCommentsListTitleForUri","LINKED_COMMENT_QUERY_PARAM","selectCommentsDisabledSettingForChannelId","THREAD_COMMENT_QUERY_PARAM","StreamClaimPage","isSecure","url","URL","assert","searchParams","set","signature","signature_ts","element","document","createElement","toString","setAttribute","click","remove","_require","THUMBNAIL_CARDS_CDN_URL","generateEmbedUrl","claimUri","startTime","referralLink","newestType","uriPath","replace","append","embedUrl","embedUrlParams","property","String","module","exports","CONTINENT_COOKIE","generateDirectUrl","claimName","generateDownloadUrl","generateEmbedIframeData","src","html","width","height","generateEmbedUrlEncoded","encodeURIComponent","getParameterByName","match","RegExp","exec","decodeURIComponent","getThumbnailCardCdnUrl","includes","startsWith","unscapeHtmlProperty","generateNewestUrl","___CSS_LOADER_EXPORT___","id"],"sourceRoot":""}