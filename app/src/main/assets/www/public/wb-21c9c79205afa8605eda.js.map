{"version":3,"file":"wb-21c9c79205afa8605eda.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/claimProperties/index.js","webpack://odysee.com/../ui/component/claimProperties/view.jsx","webpack://odysee.com/../ui/component/wunderbarSuggestion/index.js","webpack://odysee.com/../ui/component/wunderbarSuggestion/view.jsx","webpack://odysee.com/../ui/component/wunderbarTopSuggestion/index.js","webpack://odysee.com/../ui/component/wunderbarTopSuggestion/view.jsx","webpack://odysee.com/../ui/component/wunderbarSuggestions/view.jsx","webpack://odysee.com/../ui/component/wunderbarSuggestions/index.js","webpack://odysee.com/../ui/effects/use-lighthouse.js","webpack://odysee.com/../ui/effects/use-throttle.js"],"sourcesContent":["import { connect } from 'react-redux';\nimport { selectClaimIsMine, selectClaimForUri } from 'redux/selectors/claims';\nimport { selectIsSubscribedForUri } from 'redux/selectors/subscriptions';\nimport ClaimProperties from './view';\n\nconst select = (state, props) => {\n  const claim = selectClaimForUri(state, props.uri);\n\n  return {\n    claim,\n    isSubscribed: selectIsSubscribedForUri(state, props.uri),\n    claimIsMine: selectClaimIsMine(state, claim),\n  };\n};\n\nexport default connect(select, null)(ClaimProperties);\n","// @flow\nimport * as ICONS from 'constants/icons';\nimport * as React from 'react';\nimport classnames from 'classnames';\nimport Icon from 'component/common/icon';\nimport FilePrice from 'component/filePrice';\nimport ClaimType from 'component/claimType';\nimport * as COL from 'constants/collections';\n\ntype Props = {\n  uri: string,\n  isSubscribed: boolean,\n  small: boolean,\n  claim: Claim | CollectionClaim,\n  iconOnly: boolean,\n};\nexport default function ClaimProperties(props: Props) {\n  const { uri, isSubscribed, small = false, claim, iconOnly } = props;\n  const isCollection = claim && claim.value_type === 'collection';\n  const size = small ? COL.ICON_SIZE : undefined;\n  // $FlowFixMe\n\n  return (\n    <div\n      className={classnames('claim-preview__overlay-properties', { 'claim-preview__overlay-properties--small': small })}\n    >\n      {\n        <>\n          <ClaimType uri={uri} small />\n          {/*   // $FlowFixMe */}\n          {isCollection && claim && claim.value.claims && !iconOnly && <div>{claim.value.claims.length}</div>}\n          {isSubscribed && <Icon size={size} tooltip icon={ICONS.SUBSCRIBE} />}\n          <FilePrice hideFree uri={uri} />\n        </>\n      }\n    </div>\n  );\n}\n","import { connect } from 'react-redux';\nimport { selectClaimForUri, selectGeoRestrictionForUri, selectIsUriResolving } from 'redux/selectors/claims';\nimport { selectOdyseeMembershipForChannelId } from 'redux/selectors/memberships';\nimport { getChannelIdFromClaim } from 'util/claim';\nimport WunderbarSuggestion from './view';\n\nconst select = (state, props) => {\n  const { uri } = props;\n  const claim = selectClaimForUri(state, uri);\n\n  return {\n    claim,\n    odyseeMembership: selectOdyseeMembershipForChannelId(state, getChannelIdFromClaim(claim)),\n    isResolvingUri: selectIsUriResolving(state, uri),\n    geoRestriction: selectGeoRestrictionForUri(state, props.uri),\n  };\n};\n\nexport default connect(select)(WunderbarSuggestion);\n","// @flow\nimport React from 'react';\nimport classnames from 'classnames';\nimport { ComboboxOption } from '@reach/combobox';\nimport FileThumbnail from 'component/fileThumbnail';\nimport ChannelThumbnail from 'component/channelThumbnail';\nimport FileProperties from 'component/previewOverlayProperties';\nimport ClaimProperties from 'component/claimProperties';\nimport MembershipBadge from 'component/membershipBadge';\n\ntype Props = {\n  claim: ?Claim,\n  uri: string,\n  isResolvingUri: boolean,\n  geoRestriction: ?GeoRestriction,\n  odyseeMembership: ?string,\n};\n\nexport default function WunderbarSuggestion(props: Props) {\n  const { claim, uri, isResolvingUri, geoRestriction, odyseeMembership } = props;\n\n  if (isResolvingUri) {\n    return (\n      <ComboboxOption value={uri}>\n        <div className=\"wunderbar__suggestion\">\n          <div className=\"media__thumb media__thumb--resolving\" />\n        </div>\n      </ComboboxOption>\n    );\n  }\n\n  if (!claim) {\n    return null;\n  }\n\n  if (geoRestriction) {\n    // Could display something else in the future, but hide completely for now.\n    return null;\n  }\n\n  const isChannel = claim.value_type === 'channel';\n  const isCollection = claim.value_type === 'collection';\n\n  return (\n    <ComboboxOption value={uri}>\n      <div\n        className={classnames('wunderbar__suggestion', {\n          'wunderbar__suggestion--channel': isChannel,\n        })}\n      >\n        {isChannel && <ChannelThumbnail small uri={uri} />}\n        {!isChannel && (\n          <FileThumbnail uri={uri}>\n            {}\n            {isCollection && (\n              <div className=\"claim-preview__claim-property-overlay\">\n                <ClaimProperties uri={uri} small iconOnly />\n              </div>\n            )}\n          </FileThumbnail>\n        )}\n        <span className=\"wunderbar__suggestion-label\">\n          <div className=\"wunderbar__suggestion-title\">{claim.value.title}</div>\n          <div className=\"wunderbar__suggestion-name\">\n            {isChannel ? claim.name : (claim.signing_channel && claim.signing_channel.name) || __('Anonymous')}\n            {odyseeMembership && <MembershipBadge membershipName={odyseeMembership} />}\n          </div>\n        </span>\n      </div>\n    </ComboboxOption>\n  );\n}\n","import { connect } from 'react-redux';\nimport {\n  makeSelectClaimForUri,\n  selectIsUriResolving,\n  makeSelectTagInClaimOrChannelForUri,\n} from 'redux/selectors/claims';\nimport { doResolveUris } from 'redux/actions/claims';\nimport { parseURI } from 'util/lbryURI';\nimport { makeSelectWinningUriForQuery } from 'redux/selectors/search';\nimport WunderbarTopSuggestion from './view';\nimport { PREFERENCE_EMBED } from 'constants/tags';\n\nconst select = (state, props) => {\n  const uriFromQuery = `lbry://${props.query}`;\n\n  let uris = [uriFromQuery];\n  try {\n    const { isChannel } = parseURI(uriFromQuery);\n\n    if (!isChannel) {\n      const channelUriFromQuery = `lbry://@${props.query}`;\n      uris.push(channelUriFromQuery);\n    }\n  } catch (e) {}\n\n  const resolvingUris = uris.some((uri) => selectIsUriResolving(state, uri));\n  const winningUri = makeSelectWinningUriForQuery(props.query)(state);\n  const winningClaim = winningUri ? makeSelectClaimForUri(winningUri)(state) : undefined;\n  const preferEmbed = makeSelectTagInClaimOrChannelForUri(winningUri, PREFERENCE_EMBED)(state);\n\n  return { resolvingUris, winningUri, winningClaim, uris, preferEmbed };\n};\n\nexport default connect(select, {\n  doResolveUris,\n})(WunderbarTopSuggestion);\n","// @flow\nimport React from 'react';\nimport LbcSymbol from 'component/common/lbc-symbol';\nimport WunderbarSuggestion from 'component/wunderbarSuggestion';\n\ntype Props = {\n  winningUri: ?string,\n  doResolveUris: (Array<string>) => void,\n  uris: Array<string>,\n  resolvingUris: boolean,\n  preferEmbed: boolean,\n};\n\nexport default function WunderbarTopSuggestion(props: Props) {\n  const { uris, resolvingUris, winningUri, doResolveUris, preferEmbed } = props;\n\n  const stringifiedUris = JSON.stringify(uris);\n  React.useEffect(() => {\n    if (stringifiedUris) {\n      const arrayUris = JSON.parse(stringifiedUris);\n\n      if (arrayUris.length > 0) {\n        doResolveUris(arrayUris);\n      }\n    }\n  }, [doResolveUris, stringifiedUris]);\n\n  if (resolvingUris) {\n    return (\n      <div className=\"wunderbar__winning-claim\">\n        <div className=\"wunderbar__label wunderbar__placeholder-label\" />\n\n        <div className=\"wunderbar__suggestion wunderbar__placeholder-suggestion\">\n          <div className=\"wunderbar__placeholder-thumbnail\" />\n          <div className=\"wunderbar__placeholder-info\" />\n        </div>\n        <hr className=\"wunderbar__top-separator\" />\n      </div>\n    );\n  }\n\n  if (!winningUri || preferEmbed) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"wunderbar__label\">\n        <LbcSymbol prefix={__('Most Supported')} />\n      </div>\n\n      <WunderbarSuggestion uri={winningUri} />\n      <hr className=\"wunderbar__top-separator\" />\n    </>\n  );\n}\n","// @flow\nimport type { ElementRef } from 'react';\nimport { URL, URL_LOCAL, URL_DEV, KNOWN_APP_DOMAINS } from 'config';\nimport * as PAGES from 'constants/pages';\nimport * as ICONS from 'constants/icons';\nimport React from 'react';\nimport classnames from 'classnames';\nimport Icon from 'component/common/icon';\nimport { isURIValid, normalizeURI, parseURI } from 'util/lbryURI';\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from '@reach/combobox';\n// import '@reach/combobox/styles.css'; --> 'scss/third-party.scss'\nimport useLighthouse from 'effects/use-lighthouse';\nimport { Form } from 'component/common/form';\nimport Button from 'component/button';\nimport WunderbarTopSuggestion from 'component/wunderbarTopSuggestion';\nimport WunderbarSuggestion from 'component/wunderbarSuggestion';\nimport { useHistory } from 'react-router';\nimport { formatLbryUrlForWeb } from 'util/url';\nimport Yrbl from 'component/yrbl';\nimport { LIGHTHOUSE_MIN_CHARACTERS, SEARCH_OPTIONS } from 'constants/search';\nimport Spinner from 'component/spinner';\n\nconst LBRY_PROTOCOL = 'lbry://';\nconst WEB_DEV_PREFIX = `${URL_DEV}/`;\nconst WEB_LOCAL_PREFIX = `${URL_LOCAL}/`;\nconst WEB_PROD_PREFIX = `${URL}/`;\nconst SEARCH_PREFIX = `$/${PAGES.SEARCH}q=`;\nconst INVALID_URL_ERROR = \"Invalid LBRY URL entered. Only A-Z, a-z, 0-9, and '-' allowed.\";\nconst TAG_SEARCH_PREFIX = 'tag:';\n\nconst K_KEY_CODE = 75;\nconst L_KEY_CODE = 76;\nconst ESC_KEY_CODE = 27;\n\nconst WUNDERBAR_INPUT_DEBOUNCE_MS = 1000;\n\ntype Props = {\n  onSearch: (string) => void,\n  isMobile: boolean,\n  channelsOnly?: boolean,\n  noTopSuggestion?: boolean,\n  noBottomLinks?: boolean,\n  subscriptions: Array<Subscription>,\n  customSelectAction?: (string) => void,\n  // --- redux ---\n  searchInLanguage: boolean,\n  languageSetting: string,\n  showMature: boolean,\n  claimsByUri: { [string]: Claim },\n  subscriptionUris: Array<string>,\n  navigateToSearchPage: (string) => void,\n  doShowSnackBar: (string) => void,\n  doCloseMobileSearch: () => void,\n  doResolveUris: (uris: Array<string>) => Promise<any>,\n};\n\nexport default function WunderBarSuggestions(props: Props) {\n  const {\n    navigateToSearchPage,\n    doShowSnackBar,\n    showMature,\n    claimsByUri,\n    subscriptionUris,\n    isMobile,\n    doCloseMobileSearch,\n    channelsOnly,\n    noTopSuggestion,\n    noBottomLinks,\n    customSelectAction,\n    searchInLanguage,\n    languageSetting,\n    doResolveUris,\n  } = props;\n\n  const inputRef: ElementRef<any> = React.useRef();\n  const viewResultsRef: ElementRef<any> = React.useRef();\n  const exploreTagRef: ElementRef<any> = React.useRef();\n\n  const isRefFocused = (ref) => ref && ref.current && ref.current === document.activeElement;\n  const isFocused = isRefFocused(inputRef) || isRefFocused(viewResultsRef) || isRefFocused(exploreTagRef);\n\n  const {\n    push,\n    location: { search },\n  } = useHistory();\n  const urlParams = new URLSearchParams(search);\n  const queryFromUrl = urlParams.get('q') || '';\n  const [term, setTerm] = React.useState(queryFromUrl);\n  const [debouncedTerm, setDebouncedTerm] = React.useState('');\n  const searchSize = isMobile ? 20 : 5;\n  const additionalOptions = getAdditionalOptions(channelsOnly, searchInLanguage ? languageSetting : null);\n  const { results, loading } = useLighthouse(debouncedTerm, showMature, searchSize, additionalOptions, 0);\n  const noResults = debouncedTerm && !loading && results && results.length === 0;\n  const nameFromQuery = debouncedTerm && debouncedTerm.trim().replace(/\\s+/g, '').replace(/:/g, '#');\n  const uriFromQuery = `lbry://${nameFromQuery}`;\n  let uriFromQueryIsValid = false;\n  let channelUrlForTopTest;\n  try {\n    const { isChannel } = parseURI(uriFromQuery);\n    uriFromQueryIsValid = true;\n    if (!isChannel) {\n      channelUrlForTopTest = `lbry://@${uriFromQuery}`;\n    }\n  } catch (e) {}\n\n  const topUrisToTest = [uriFromQuery];\n  if (channelUrlForTopTest) {\n    topUrisToTest.push(uriFromQuery);\n  }\n\n  const isTyping = debouncedTerm !== term;\n  const showPlaceholder = isTyping || loading;\n\n  function getAdditionalOptions(channelsOnly: ?boolean, language: ?string) {\n    const additionalOptions = {};\n\n    if (channelsOnly) {\n      additionalOptions.isBackgroundSearch = false;\n      additionalOptions[SEARCH_OPTIONS.CLAIM_TYPE] = SEARCH_OPTIONS.INCLUDE_CHANNELS;\n    }\n\n    if (language) {\n      additionalOptions[SEARCH_OPTIONS.LANGUAGE] = language;\n    }\n\n    return additionalOptions;\n  }\n\n  function handleSelect(value) {\n    if (!value) {\n      return;\n    }\n\n    doCloseMobileSearch();\n\n    const knownAppDomains = KNOWN_APP_DOMAINS.map((x) => `https://${x}/`); // Match WEB_PROD_PREFIX's 'https://xx/' format.\n    const webDomainList = [WEB_PROD_PREFIX, ...knownAppDomains, WEB_LOCAL_PREFIX, WEB_DEV_PREFIX];\n    const webDomainIndex = webDomainList.findIndex((x) => value.includes(x));\n    const wasCopiedFromWeb = webDomainIndex !== -1;\n    const isLbryUrl = value.startsWith('lbry://');\n\n    if (inputRef.current) {\n      inputRef.current.blur();\n    }\n\n    if (customSelectAction) {\n      // Give them full results, as our resolved one might truncate the claimId.\n      customSelectAction(results ? results.find((r) => r.startsWith(value)) : '');\n      return;\n    }\n\n    if (wasCopiedFromWeb) {\n      const prefix = webDomainList[webDomainIndex];\n      let query = value.slice(prefix.length).replace(/:/g, '#');\n\n      if (query.includes(SEARCH_PREFIX)) {\n        query = query.slice(SEARCH_PREFIX.length);\n        navigateToSearchPage(query);\n      } else {\n        try {\n          const lbryUrl = `lbry://${query}`;\n          parseURI(lbryUrl);\n          const formattedLbryUrl = formatLbryUrlForWeb(lbryUrl);\n          push(formattedLbryUrl);\n\n          return;\n        } catch (e) {}\n      }\n    }\n\n    if (value.startsWith(TAG_SEARCH_PREFIX)) {\n      const tag = value.slice(TAG_SEARCH_PREFIX.length);\n      push(`/$/${PAGES.DISCOVER}?t=${tag}`);\n    } else if (!isLbryUrl) {\n      navigateToSearchPage(value);\n    } else {\n      let query = 'lbry://' + value.slice(LBRY_PROTOCOL.length).replace(/:/g, '#');\n      try {\n        if (isURIValid(query)) {\n          const uri = normalizeURI(query);\n          const normalizedWebUrl = formatLbryUrlForWeb(uri);\n          push(normalizedWebUrl);\n        } else {\n          doShowSnackBar(INVALID_URL_ERROR);\n        }\n      } catch (e) {\n        navigateToSearchPage(value);\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      if (debouncedTerm !== term) {\n        setDebouncedTerm(term.length < LIGHTHOUSE_MIN_CHARACTERS ? '' : term);\n      }\n    }, WUNDERBAR_INPUT_DEBOUNCE_MS);\n\n    return () => clearTimeout(timer);\n  }, [term, debouncedTerm]);\n\n  React.useEffect(() => {\n    function handleHomeEndCaretPos(elem, shiftKey, isHome) {\n      if (elem) {\n        const cur = elem.selectionStart ? elem.selectionStart : 0;\n        let begin;\n        let final;\n        let scrollPx;\n        let direction = 'none';\n\n        if (isHome) {\n          begin = 0;\n          final = shiftKey ? cur : begin;\n          scrollPx = 0;\n          direction = 'backward';\n        } else {\n          final = elem.value.length;\n          begin = shiftKey ? cur : final;\n          scrollPx = elem.scrollWidth - elem.clientWidth;\n        }\n\n        elem.setSelectionRange(begin, final, direction);\n        elem.scrollLeft = scrollPx;\n        return true;\n      }\n\n      return false;\n    }\n\n    function overrideHomeEndHandling(event) {\n      const { ctrlKey, metaKey, shiftKey, key } = event;\n      if (!ctrlKey && !metaKey) {\n        if (key === 'Home' || key === 'End') {\n          if (handleHomeEndCaretPos(inputRef.current, shiftKey, key === 'Home')) {\n            event.stopPropagation();\n          }\n        }\n      }\n    }\n\n    // Injecting the listener at the element level puts it before\n    // ReachUI::ComboBoxInput's listener, allowing us to skip their handling.\n    if (inputRef.current) {\n      inputRef.current.addEventListener('keydown', overrideHomeEndHandling);\n    }\n\n    return () => {\n      if (inputRef.current) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps -- wrong, but unused code\n        inputRef.current.removeEventListener('keydown', overrideHomeEndHandling);\n      }\n    };\n  }, [inputRef]);\n\n  React.useEffect(() => {\n    function handleKeyDown(event) {\n      const { ctrlKey, metaKey, keyCode } = event;\n\n      if (!inputRef.current) {\n        return;\n      }\n\n      if (keyCode === K_KEY_CODE && ctrlKey) {\n        inputRef.current.focus();\n        inputRef.current.select();\n        return;\n      }\n\n      if (inputRef.current === document.activeElement && keyCode === ESC_KEY_CODE) {\n        // If the user presses escape and the text has already been cleared then blur the widget\n        if (inputRef.current.value === '') {\n          inputRef.current.blur();\n        } else {\n          // Remove the current text\n          inputRef.current.value = '';\n          inputRef.current.focus();\n        }\n      }\n\n    }\n\n    window.addEventListener('keydown', handleKeyDown);\n\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [inputRef]);\n\n  React.useEffect(() => {\n    if (isMobile && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [inputRef, isMobile]);\n\n  const stringifiedResults = JSON.stringify(results);\n\n  React.useEffect(() => {\n    if (stringifiedResults) {\n      const arrayResults = JSON.parse(stringifiedResults);\n      if (arrayResults && arrayResults.length > 0) {\n        doResolveUris(arrayResults);\n      }\n    }\n  }, [doResolveUris, stringifiedResults]);\n\n  const [subscriptionResults, setSubscriptionResults] = React.useState([]);\n\n  React.useEffect(() => {\n    if (subscriptionUris && term && term.length > 1) {\n      let subscriptionResults = [];\n      subscriptionUris.map((uri) => {\n        if (\n          claimsByUri[uri] &&\n          subscriptionResults.indexOf(claimsByUri[uri].permanent_url) === -1 &&\n          (claimsByUri[uri].name.toLowerCase().includes(term.toLowerCase()) ||\n            // $FlowIgnore\n            claimsByUri[uri].value?.title?.toLowerCase().includes(term.toLowerCase()))\n        ) {\n          subscriptionResults.push(claimsByUri[uri].permanent_url);\n        }\n      });\n      setSubscriptionResults(subscriptionResults.slice(0, isMobile ? 5 : 10));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- @see TODO_NEED_VERIFICATION\n  }, [term]);\n\n  React.useEffect(() => {\n    if (results && subscriptionResults) {\n      subscriptionResults.map((subscription) => {\n        if (results.indexOf(subscription) !== -1) results.splice(results.indexOf(subscription), 1);\n      });\n    }\n  }, [subscriptionResults, results]);\n\n  return (\n    <>\n      <Form\n        className={classnames('wunderbar__wrapper', { 'wunderbar__wrapper--mobile': isMobile })}\n        onSubmit={() => handleSelect(term)}\n      >\n        <Combobox className=\"wunderbar\" onSelect={handleSelect} openOnFocus>\n          <Icon icon={ICONS.SEARCH} />\n          <ComboboxInput\n            ref={inputRef}\n            className=\"wunderbar__input\"\n            placeholder={__('Search')}\n            onChange={(e) => setTerm(e.target.value)}\n            value={term}\n          />\n\n          {isFocused && (\n            <ComboboxPopover\n              portal={false}\n              className={classnames('wunderbar__suggestions', { 'wunderbar__suggestions--mobile': isMobile })}\n            >\n              <ComboboxList>\n                {!noBottomLinks && (\n                  <div className=\"wunderbar__bottom-links\">\n                    <ComboboxOption value={term} className=\"wunderbar__more-results\">\n                      <Button ref={viewResultsRef} button=\"link\" label={__('View All Results')} />\n                    </ComboboxOption>\n                    <ComboboxOption value={`${TAG_SEARCH_PREFIX}${term}`} className=\"wunderbar__more-results\">\n                      <Button ref={exploreTagRef} className=\"wunderbar__tag-search\" button=\"link\">\n                        {__('Search tag')}\n                        <div className=\"tag\">{term.split(' ').join('')}</div>\n                      </Button>\n                    </ComboboxOption>\n                  </div>\n                )}\n\n                <hr className=\"wunderbar__top-separator\" />\n\n                {uriFromQueryIsValid && !noTopSuggestion ? <WunderbarTopSuggestion query={nameFromQuery} /> : null}\n\n                <div className=\"wunderbar__label\">{__('Search Results')}</div>\n\n                {subscriptionResults.length > 0 &&\n                  subscriptionResults.map((uri) => <WunderbarSuggestion key={uri} uri={uri} />)}\n\n                {showPlaceholder && term.length > LIGHTHOUSE_MIN_CHARACTERS ? <Spinner type=\"small\" /> : null}\n\n                {!showPlaceholder && results\n                  ? results\n                      .slice(0, isMobile ? 20 - subscriptionResults.length : 10 - subscriptionResults.length)\n                      .map((uri) => <WunderbarSuggestion key={uri} uri={uri} />)\n                  : null}\n              </ComboboxList>\n            </ComboboxPopover>\n          )}\n        </Combobox>\n      </Form>\n      {isMobile && !term && (\n        <div className=\"main--empty\">\n          <Yrbl subtitle={__('Search for something...')} alwaysShow />\n        </div>\n      )}\n\n      {isMobile && noResults && (\n        <div className=\"main--empty\">\n          <Yrbl type=\"sad\" subtitle={__('No results')} alwaysShow />\n        </div>\n      )}\n    </>\n  );\n}\n","import { connect } from 'react-redux';\nimport { selectClientSetting, selectLanguage, selectShowMatureContent } from 'redux/selectors/settings';\nimport { doToast } from 'redux/actions/notifications';\nimport { doHideModal } from 'redux/actions/app';\nimport { withRouter } from 'react-router';\nimport { doResolveUris } from 'redux/actions/claims';\nimport { selectSubscriptionUris } from 'redux/selectors/subscriptions';\nimport { selectClaimsByUri } from 'redux/selectors/claims';\n\nimport analytics from 'analytics';\nimport Wunderbar from './view';\nimport * as SETTINGS from 'constants/settings';\n\nconst select = (state, props) => {\n  return {\n    languageSetting: selectLanguage(state),\n    searchInLanguage: selectClientSetting(state, SETTINGS.SEARCH_IN_LANGUAGE),\n    showMature: selectShowMatureContent(state),\n    claimsByUri: selectClaimsByUri(state),\n    subscriptionUris: selectSubscriptionUris(state) || [],\n  };\n};\n\nconst perform = (dispatch, ownProps) => ({\n  doResolveUris: (uris) => dispatch(doResolveUris(uris)),\n  navigateToSearchPage: (query) => {\n    let encodedQuery = encodeURIComponent(query);\n    ownProps.history.push({ pathname: `/$/search`, search: `?q=${encodedQuery}` });\n    analytics.apiLog.search();\n  },\n  doShowSnackBar: (message) => dispatch(doToast({ isError: true, message })),\n  doCloseMobileSearch: () => dispatch(doHideModal()),\n});\n\nexport default withRouter(connect(select, perform)(Wunderbar));\n","// @flow\nimport React from 'react';\nimport { lighthouse } from 'redux/actions/search';\nimport { getSearchQueryString } from 'util/query-params';\nimport { isURIValid } from 'util/lbryURI';\nimport useThrottle from './use-throttle';\n\nexport default function useLighthouse(\n  query: string,\n  showMature: boolean,\n  size: number = 5,\n  additionalOptions: any = {},\n  throttleMs: number = 500\n) {\n  const [results, setResults] = React.useState();\n  const [loading, setLoading] = React.useState();\n  const queryString = query ? getSearchQueryString(query, { nsfw: showMature, size, ...additionalOptions }) : '';\n  const throttledQuery = useThrottle(queryString, throttleMs);\n\n  React.useEffect(() => {\n    if (throttledQuery) {\n      setLoading(true);\n      setResults(null);\n\n      let isSubscribed = true;\n      lighthouse\n        .search(throttledQuery)\n        .then(({ body: results }) => {\n          if (isSubscribed) {\n            setResults(\n              results.map((result) => `lbry://${result.name}#${result.claimId}`).filter((uri) => isURIValid(uri))\n            );\n            setLoading(false);\n          }\n        })\n        .catch(() => {\n          setLoading(false);\n        });\n\n      return () => {\n        isSubscribed = false;\n      };\n    }\n  }, [throttledQuery]);\n\n  return { results, loading };\n}\n","// @flow\nimport React from 'react';\n\nconst useEffectOnce = (effect) => {\n  React.useEffect(effect, []);\n};\n\nfunction useUnmount(fn: () => any): void {\n  const fnRef = React.useRef(fn);\n\n  // update the ref each render so if it change the newest callback will be invoked\n  fnRef.current = fn;\n\n  useEffectOnce(() => () => fnRef.current());\n}\n\nexport default function useThrottle(value: string, ms: number = 200) {\n  const [state, setState] = React.useState(value);\n  const timeout = React.useRef();\n  const nextValue = React.useRef(null);\n  const hasNextValue = React.useRef(0);\n\n  React.useEffect(() => {\n    if (!timeout.current) {\n      setState(value);\n      const timeoutCallback = () => {\n        if (hasNextValue.current) {\n          hasNextValue.current = false;\n          setState(nextValue.current);\n          timeout.current = setTimeout(timeoutCallback, ms);\n        } else {\n          timeout.current = undefined;\n        }\n      };\n      timeout.current = setTimeout(timeoutCallback, ms);\n    } else {\n      nextValue.current = value;\n      hasNextValue.current = true;\n    }\n  }, [ms, value]);\n\n  useUnmount(() => {\n    timeout.current && clearTimeout(timeout.current);\n  });\n\n  return state;\n}\n"],"names":["connect","state","props","claim","selectClaimForUri","uri","isSubscribed","selectIsSubscribedForUri","claimIsMine","selectClaimIsMine","_props$small","small","iconOnly","isCollection","value_type","size","COL","undefined","React","className","classnames","ClaimType","value","claims","length","Icon","tooltip","icon","ICONS","FilePrice","hideFree","odyseeMembership","selectOdyseeMembershipForChannelId","getChannelIdFromClaim","isResolvingUri","selectIsUriResolving","geoRestriction","selectGeoRestrictionForUri","ComboboxOption","isChannel","ChannelThumbnail","FileThumbnail","ClaimProperties","title","name","signing_channel","__","MembershipBadge","membershipName","uriFromQuery","concat","query","uris","parseURI","channelUriFromQuery","push","e","resolvingUris","some","winningUri","makeSelectWinningUriForQuery","winningClaim","makeSelectClaimForUri","preferEmbed","makeSelectTagInClaimOrChannelForUri","PREFERENCE_EMBED","doResolveUris","stringifiedUris","JSON","stringify","arrayUris","parse","LbcSymbol","prefix","WunderbarSuggestion","LBRY_PROTOCOL","WEB_DEV_PREFIX","URL_DEV","WEB_LOCAL_PREFIX","URL_LOCAL","WEB_PROD_PREFIX","URL","SEARCH_PREFIX","PAGES","INVALID_URL_ERROR","TAG_SEARCH_PREFIX","K_KEY_CODE","ESC_KEY_CODE","WUNDERBAR_INPUT_DEBOUNCE_MS","withRouter","languageSetting","selectLanguage","searchInLanguage","selectClientSetting","SETTINGS","showMature","selectShowMatureContent","claimsByUri","selectClaimsByUri","subscriptionUris","selectSubscriptionUris","dispatch","ownProps","_doResolveUris","navigateToSearchPage","encodedQuery","encodeURIComponent","history","pathname","search","analytics","doShowSnackBar","message","doToast","isError","doCloseMobileSearch","doHideModal","channelUrlForTopTest","isMobile","channelsOnly","noTopSuggestion","noBottomLinks","customSelectAction","inputRef","viewResultsRef","exploreTagRef","isRefFocused","ref","current","document","activeElement","isFocused","_useHistory","useHistory","location","queryFromUrl","URLSearchParams","get","_React$useState2","_slicedToArray","term","setTerm","_React$useState4","debouncedTerm","setDebouncedTerm","searchSize","additionalOptions","language","isBackgroundSearch","SEARCH_OPTIONS","getAdditionalOptions","_useLighthouse","useLighthouse","results","loading","noResults","nameFromQuery","trim","replace","uriFromQueryIsValid","showPlaceholder","handleSelect","knownAppDomains","KNOWN_APP_DOMAINS","x","webDomainList","_toConsumableArray","webDomainIndex","findIndex","includes","wasCopiedFromWeb","isLbryUrl","startsWith","blur","find","r","slice","lbryUrl","formattedLbryUrl","formatLbryUrlForWeb","tag","_query","isURIValid","normalizeURI","normalizedWebUrl","timer","setTimeout","LIGHTHOUSE_MIN_CHARACTERS","clearTimeout","overrideHomeEndHandling","event","ctrlKey","metaKey","shiftKey","key","elem","isHome","begin","_final","scrollPx","cur","selectionStart","direction","scrollWidth","clientWidth","setSelectionRange","scrollLeft","handleHomeEndCaretPos","stopPropagation","addEventListener","removeEventListener","handleKeyDown","keyCode","focus","select","window","stringifiedResults","arrayResults","_React$useState6","subscriptionResults","setSubscriptionResults","_subscriptionResults","map","_claimsByUri$uri$valu","_claimsByUri$uri$valu2","indexOf","permanent_url","toLowerCase","subscription","splice","Form","onSubmit","Combobox","onSelect","openOnFocus","ComboboxInput","placeholder","onChange","target","ComboboxPopover","portal","ComboboxList","Button","button","label","split","join","WunderbarTopSuggestion","Spinner","type","Yrbl","subtitle","alwaysShow","arguments","throttleMs","setResults","setLoading","queryString","getSearchQueryString","_objectSpread","nsfw","throttledQuery","useThrottle","lighthouse","then","_ref","body","result","claimId","filter","useEffectOnce","effect","fn","fnRef","ms","setState","timeout","nextValue","hasNextValue","timeoutCallback"],"sourceRoot":""}