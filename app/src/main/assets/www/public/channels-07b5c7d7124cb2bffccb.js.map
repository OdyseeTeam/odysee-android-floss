{"version":3,"file":"channels-07b5c7d7124cb2bffccb.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/common/help-link.jsx","webpack://odysee.com/../ui/page/channels/view.jsx","webpack://odysee.com/../ui/page/channels/index.js"],"sourcesContent":["// @flow\nimport * as ICONS from 'constants/icons';\nimport React from 'react';\nimport Button from 'component/button';\n\ntype Props = {\n  href?: string,\n  navigate?: string,\n  icon?: string,\n  iconSize?: number,\n  description?: string,\n};\n\nexport default function HelpLink(props: Props) {\n  const { href, navigate, icon, iconSize, description } = props;\n  return (\n    <Button\n      onClick={(e) => {\n        if (href) {\n          e.stopPropagation();\n        }\n      }}\n      className=\"icon--help\"\n      icon={icon || ICONS.HELP}\n      iconSize={iconSize || 14}\n      title={description || __('Help')}\n      description={description || __('Help')}\n      href={href}\n      navigate={navigate}\n    />\n  );\n}\n","// @flow\nimport React from 'react';\nimport ClaimList from 'component/claimList';\nimport Page from 'component/page';\nimport Button from 'component/button';\nimport Spinner from 'component/spinner';\nimport Yrbl from 'component/yrbl';\nimport LbcSymbol from 'component/common/lbc-symbol';\nimport Icon from 'component/common/icon';\nimport * as ICONS from 'constants/icons';\nimport * as PAGES from 'constants/pages';\nimport HelpLink from 'component/common/help-link';\nimport { lazyImport } from 'util/lazyImport';\nimport { useHistory } from 'react-router';\n\nconst YoutubeTransferStatus = lazyImport(() =>\n  import('component/youtubeTransferStatus' /* webpackChunkName: \"youtubeTransferStatus\" */)\n);\n\ntype Props = {\n  // -- redux --\n  channelUrls: Array<string>,\n  channelIds: ?ClaimIds,\n  fetchingChannels: boolean,\n  hasYoutubeChannels: boolean,\n  pendingIds: Array<string>,\n  viewRateById: {},\n  doFetchChannelListMine: () => void,\n  doUserViewRateList: () => void,\n  doSetActiveChannel: (string) => void,\n  doFetchOdyseeMembershipForChannelIds: (claimIds: ClaimIds) => void,\n};\n\nexport default function ChannelsPage(props: Props) {\n  const {\n    // -- redux --\n    channelUrls,\n    channelIds,\n    fetchingChannels,\n    hasYoutubeChannels,\n    pendingIds,\n    viewRateById,\n    doFetchChannelListMine,\n    doUserViewRateList,\n    doSetActiveChannel,\n    doFetchOdyseeMembershipForChannelIds,\n  } = props;\n\n  const hasChannels = Number.isInteger(channelIds?.length);\n\n  React.useEffect(() => {\n    if (channelIds) {\n      doFetchOdyseeMembershipForChannelIds(channelIds);\n      doUserViewRateList();\n    } else {\n      doFetchChannelListMine();\n    }\n  }, [channelIds, doFetchChannelListMine, doFetchOdyseeMembershipForChannelIds, doUserViewRateList]);\n\n  const { push } = useHistory();\n\n  if (!hasChannels && !hasYoutubeChannels) {\n    return (\n      <Page className=\"channelsPage-wrapper\">\n        {fetchingChannels ? (\n          <div className=\"main--empty\">\n            <Spinner delayed />\n          </div>\n        ) : (\n          <Yrbl\n            title={__('No channels')}\n            subtitle={__(\"You haven't created a channel yet. All of your beautiful channels will be listed here!\")}\n            actions={\n              <div className=\"section__actions\">\n                <Button button=\"primary\" label={__('Create Channel')} navigate={`/$/${PAGES.CHANNEL_NEW}`} />\n              </div>\n            }\n          />\n        )}\n      </Page>\n    );\n  }\n\n  return (\n    <Page className=\"channelsPage-wrapper\">\n      <div className=\"card-stack\">\n        {hasYoutubeChannels && (\n          <React.Suspense fallback={null}>\n            <YoutubeTransferStatus hideChannelLink />\n          </React.Suspense>\n        )}\n\n        <ClaimList\n          header={\n            <h1 className=\"page__title\">\n              <Icon icon={ICONS.CHANNEL} />\n              <label>{__('Your channels')}</label>\n            </h1>\n          }\n          headerAltControls={\n            <>\n              <Button\n                button=\"secondary\"\n                label={__('Sync YouTube Channel')}\n                icon={ICONS.YOUTUBE}\n                navigate={`/$/${PAGES.YOUTUBE_SYNC}`}\n              />\n              <Button\n                button=\"secondary\"\n                icon={ICONS.CHANNEL}\n                label={__('New Channel')}\n                navigate={`/$/${PAGES.CHANNEL_NEW}`}\n              />\n            </>\n          }\n          loading={fetchingChannels}\n          uris={channelUrls}\n          renderActions={(claim) => {\n            const claimsInChannel = claim.meta.claims_in_channel;\n            return claimsInChannel === 0 ? (\n              <span />\n            ) : (\n              <div className=\"section__actions\">\n                <Button\n                  button=\"alt\"\n                  icon={ICONS.ANALYTICS}\n                  label={__('Analytics')}\n                  onClick={() => {\n                    doSetActiveChannel(claim.claim_id);\n                    push(`/$/${PAGES.CREATOR_DASHBOARD}`);\n                  }}\n                />\n              </div>\n            );\n          }}\n          renderProperties={(claim) => {\n            const claimsInChannel = claim.meta.claims_in_channel;\n            if (!claim || claimsInChannel === 0) {\n              return null;\n            }\n\n            const channelRewardData = viewRateById[claim.claim_id];\n\n            if (channelRewardData && !pendingIds.includes(claim.claim_id)) {\n              return (\n                <span className=\"claim-preview__custom-properties\">\n                  <span className=\"help--inline\">\n                    {__('Earnings per view: ')}\n                    <LbcSymbol postfix={channelRewardData.view_rate.toFixed(2)} />\n                    <HelpLink href=\"https://help.odysee.tv/category-monetization/\" />\n                  </span>\n                </span>\n              );\n            } else {\n              return null;\n            }\n          }}\n        />\n      </div>\n    </Page>\n  );\n}\n","import { connect } from 'react-redux';\nimport {\n  selectMyChannelClaimUrls,\n  selectMyChannelClaimIds,\n  selectFetchingMyChannels,\n  selectPendingIds,\n  selectClaimsByUri,\n} from 'redux/selectors/claims';\nimport { doFetchOdyseeMembershipForChannelIds } from 'redux/actions/memberships';\nimport { doUserViewRateList } from 'redux/actions/rewards';\nimport { doFetchChannelListMine } from 'redux/actions/claims';\nimport { doSetActiveChannel } from 'redux/actions/app';\nimport { selectHasYoutubeChannels } from 'redux/selectors/user';\nimport { selectViewRateById } from 'redux/selectors/rewards';\n\nimport ChannelsPage from './view';\n\nconst select = (state) => ({\n  channelUrls: selectMyChannelClaimUrls(state),\n  channelIds: selectMyChannelClaimIds(state),\n  fetchingChannels: selectFetchingMyChannels(state),\n  hasYoutubeChannels: selectHasYoutubeChannels(state),\n  pendingIds: selectPendingIds(state),\n  viewRateById: selectViewRateById(state),\n  claimsByUri: selectClaimsByUri(state),\n});\n\nconst perform = {\n  doFetchChannelListMine,\n  doSetActiveChannel,\n  doFetchOdyseeMembershipForChannelIds,\n  doUserViewRateList,\n};\n\nexport default connect(select, perform)(ChannelsPage);\n"],"names":["HelpLink","props","href","navigate","icon","iconSize","description","React","Button","onClick","e","stopPropagation","className","ICONS","title","__","YoutubeTransferStatus","lazyImport","perform","doFetchChannelListMine","doSetActiveChannel","doFetchOdyseeMembershipForChannelIds","doUserViewRateList","connect","state","channelUrls","selectMyChannelClaimUrls","channelIds","selectMyChannelClaimIds","fetchingChannels","selectFetchingMyChannels","hasYoutubeChannels","selectHasYoutubeChannels","pendingIds","selectPendingIds","viewRateById","selectViewRateById","claimsByUri","selectClaimsByUri","hasChannels","Number","isInteger","length","push","useHistory","Page","fallback","hideChannelLink","ClaimList","header","Icon","headerAltControls","button","label","concat","PAGES","loading","uris","renderActions","claim","meta","claims_in_channel","claim_id","renderProperties","claimsInChannel","channelRewardData","includes","LbcSymbol","postfix","view_rate","toFixed","Spinner","delayed","Yrbl","subtitle","actions"],"sourceRoot":""}