{"version":3,"file":"channelNew-44cd2a43f48a6db6d73f.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/common/card.jsx","webpack://odysee.com/../ui/component/yrblWalletEmpty/index.js","webpack://odysee.com/../ui/component/yrblWalletEmpty/view.jsx","webpack://odysee.com/../ui/page/channelNew/view.jsx","webpack://odysee.com/../ui/page/channelNew/index.js"],"sourcesContent":["// @flow\nimport type { Node } from 'react';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Icon from 'component/common/icon';\nimport Button from 'component/button';\nimport * as ICONS from 'constants/icons';\n// import twemoji from 'twemoji';\nimport Tooltip from 'component/common/tooltip';\n\ntype Props = {\n  title?: string | Node,\n  subtitle?: string | Node,\n  titleActions?: string | Node,\n  id?: string,\n  body?: string | Node,\n  actions?: string | Node,\n  icon?: string,\n  className?: string,\n  isPageTitle?: boolean,\n  noTitleWrap?: boolean,\n  isBodyList?: boolean,\n  defaultExpand?: boolean,\n  nag?: Node,\n  smallTitle?: boolean,\n  onClick?: () => void,\n  children?: Node,\n  secondPane?: Node,\n  slimHeader?: boolean,\n  background?: boolean,\n  backgroundImage?: string,\n  singlePane?: boolean,\n  headerActions?: Node,\n  gridHeader?: boolean,\n  accessStatus?: string,\n};\n\nfunction Card(props: Props) {\n  const {\n    title,\n    subtitle,\n    titleActions,\n    id,\n    body,\n    actions,\n    icon,\n    className,\n    isPageTitle = false,\n    isBodyList = false,\n    // noTitleWrap = false,\n    smallTitle = false,\n    defaultExpand,\n    nag,\n    onClick,\n    children,\n    secondPane,\n    slimHeader,\n    background,\n    backgroundImage,\n    singlePane,\n    headerActions,\n    accessStatus,\n    gridHeader,\n  } = props;\n\n  const [expanded, setExpanded] = useState(defaultExpand);\n  const expandable = defaultExpand !== undefined;\n\n  return (\n    <section\n      role={onClick ? 'button' : undefined}\n      className={classnames(className, 'card', {\n        'card__multi-pane': Boolean(secondPane),\n        'card--background': background,\n      })}\n      id={id}\n      onClick={(e) => {\n        if (onClick) {\n          onClick();\n          e.stopPropagation();\n        }\n      }}\n    >\n      {backgroundImage && (\n        <div\n          className=\"background\"\n          style={{\n            backgroundImage:\n              'url(https://thumbnails.odycdn.com/optimize/s:390:0/quality:85/plain/' + backgroundImage + ')',\n          }}\n        />\n      )}\n      <FirstPaneWrapper singlePane={singlePane}>\n        {(title || subtitle) && (\n          <div\n            className={classnames('card__header--between', {\n              'card__header--slim': slimHeader,\n              'card__header--grid': gridHeader,\n            })}\n          >\n            <div className={classnames('card__title-section', { 'card__title-section--body-list': isBodyList })}>\n              {icon && <Icon sectionIcon icon={icon} />}\n\n              <div className=\"card__title-text\">\n                <TitleWrapper isPageTitle={isPageTitle} smallTitle={smallTitle} accessStatus={accessStatus}>\n                  {title}\n                </TitleWrapper>\n\n                {subtitle && (\n                  <div className={classnames('card__subtitle', { 'card__subtitle--small': smallTitle })}>\n                    {subtitle}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {(titleActions || expandable) && (\n              <div className=\"card__title-actions-container\">\n                {titleActions && (\n                  <div\n                    className={classnames('card__title-actions', {\n                      'card__title-actions--small': smallTitle,\n                    })}\n                  >\n                    {titleActions}\n                  </div>\n                )}\n                {expandable && (\n                  <div className=\"card__title-actions\">\n                    <Button\n                      button=\"alt\"\n                      aria-expanded={expanded}\n                      aria-label={expanded ? __('Less') : __('More')}\n                      icon={expanded ? ICONS.SUBTRACT : ICONS.ADD}\n                      onClick={() => setExpanded(!expanded)}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n\n            {headerActions}\n          </div>\n        )}\n\n        {(!expandable || (expandable && expanded)) && (\n          <>\n            {body && (\n              <div\n                className={classnames('card__body', {\n                  'card__body--no-title': !title && !subtitle,\n                  'card__body--list': isBodyList,\n                })}\n              >\n                {body}\n              </div>\n            )}\n            {actions && <div className=\"card__main-actions\">{actions}</div>}\n            {children && <div className=\"card__main-actions\">{children}</div>}\n          </>\n        )}\n\n        {nag}\n      </FirstPaneWrapper>\n\n      {secondPane && <div className=\"card__second-pane\">{secondPane}</div>}\n    </section>\n  );\n}\n\ntype FirstPaneProps = {\n  singlePane?: boolean,\n  children: any,\n};\n\nconst FirstPaneWrapper = (props: FirstPaneProps) => {\n  const { singlePane, children } = props;\n\n  return singlePane ? children : <div className=\"card__first-pane\">{children}</div>;\n};\n\ntype TitleProps = {\n  isPageTitle?: boolean,\n  smallTitle?: boolean,\n  children?: any,\n  emoji?: any,\n  accessStatus?: string,\n};\n\nconst TitleWrapper = (props: TitleProps) => {\n  const { isPageTitle, smallTitle, children, accessStatus } = props;\n\n  /*\n  const Twemoji = ({ emoji }) => (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: twemoji.parse(emoji, {\n          folder: 'svg',\n          ext: '.svg',\n        }),\n      }}\n    />\n  );\n  */\n\n  const AccessIndicator = (par: any) => {\n    return (\n      <Tooltip title={__('This is a members-only content')}>\n        <div\n          className={classnames('content-access-indicator', {\n            locked: par.status === 'locked',\n            unlocked: par.status === 'unlocked',\n            purchased: par.status === 'purchased',\n          })}\n        >\n          <Icon icon={par.status === 'locked' ? ICONS.LOCK : ICONS.UNLOCK} />\n        </div>\n      </Tooltip>\n    );\n  };\n\n  /*\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return <Twemoji emoji={children?.props?.children[child]} />;\n      }\n    }\n    return children;\n  }\n  */\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return children?.props?.children[child];\n      }\n    }\n    return children;\n  }\n\n  return isPageTitle ? (\n    <h1 className=\"card__title\">\n      {accessStatus && <AccessIndicator status={accessStatus} />}\n      <font dangerouslySetInnerHTML={{ __html: transformer(children) }} />\n    </h1>\n  ) : (\n    <h2 className={classnames('card__title', { 'card__title--small': smallTitle })}>{children}</h2>\n  );\n};\n\nexport default Card;\n","import { connect } from 'react-redux';\nimport { selectBalance } from 'redux/selectors/wallet';\nimport YrblWalletEmpty from './view';\n\nconst select = (state) => ({\n  balance: selectBalance(state),\n});\n\nexport default connect(select)(YrblWalletEmpty);\n","// @flow\nimport type { Node } from 'react';\nimport * as ICONS from 'constants/icons';\nimport * as PAGES from 'constants/pages';\nimport React from 'react';\nimport Button from 'component/button';\nimport Yrbl from 'component/yrbl';\nimport I18nMessage from 'component/i18nMessage';\nimport LbcSymbol from 'component/common/lbc-symbol';\n\ntype Props = {\n  includeWalletLink: boolean,\n  type?: string,\n  actions?: Node,\n};\nexport default function YrblWalletEmpty(props: Props) {\n  const { includeWalletLink = false, type = 'sad' } = props;\n\n  return (\n    <div className=\"main--empty\">\n      <Yrbl\n        type={type}\n        title={__('Your wallet is empty')}\n        subtitle={\n          <div>\n            <p>\n              <I18nMessage tokens={{ lbc: <LbcSymbol /> }}>\n                You need %lbc% to create a channel and upload content.\n              </I18nMessage>\n            </p>\n            <p>\n              <I18nMessage tokens={{ lbc: <LbcSymbol /> }}>\n                Never fear though, there are tons of ways to earn %lbc%. You can earn or purchase %lbc%, or you can have\n                your friends send you some.\n              </I18nMessage>\n            </p>\n          </div>\n        }\n        actions={\n          <div className=\"section__actions\">\n            <Button button=\"primary\" icon={ICONS.REWARDS} label={__('Earn Rewards')} navigate={`/$/${PAGES.REWARDS}`} />\n            <Button button=\"secondary\" icon={ICONS.BUY} label={'Buy/Swap Credits'} navigate={`/$/${PAGES.BUY}`} />\n            {includeWalletLink && (\n              <Button\n                icon={ICONS.RECEIVE}\n                button=\"secondary\"\n                label={__('Your Address')}\n                navigate={`/$/${PAGES.RECEIVE}`}\n              />\n            )}\n          </div>\n        }\n      />\n    </div>\n  );\n}\n","// @flow\nimport * as PAGES from 'constants/pages';\nimport React from 'react';\nimport ChannelEdit from 'component/channelEdit';\nimport Page from 'component/page';\nimport { useHistory } from 'react-router';\nimport YrblWalletEmpty from 'component/yrblWalletEmpty';\n\ntype Props = {\n  balance: number,\n  claimConfirmEmailReward: () => void,\n  isAuthenticated: boolean,\n  channelCountOverLimit: boolean,\n};\n\nfunction ChannelNew(props: Props) {\n  const { balance, claimConfirmEmailReward, isAuthenticated, channelCountOverLimit } = props;\n  const { push, location } = useHistory();\n  const urlSearchParams = new URLSearchParams(location.search);\n  const redirectUrl = urlSearchParams.get('redirect');\n  const emptyBalance = balance === 0;\n\n  React.useEffect(() => {\n    if (isAuthenticated && emptyBalance) {\n      claimConfirmEmailReward();\n    }\n  }, [isAuthenticated, claimConfirmEmailReward, emptyBalance]);\n\n  return (\n    <Page\n      className=\"channelPage-wrapper channelPage-edit-wrapper channelPage-new-wrapper\"\n      noSideNavigation\n      fullWidthPage\n      noFooter\n      backout={{ title: __('Create a channel'), backLabel: __('Cancel') }}\n    >\n      {emptyBalance && <YrblWalletEmpty />}\n\n      {channelCountOverLimit && (\n        <div className=\"empty empty--centered\">{__('Sorry, you have exceeded the channel creation limit.')}</div>\n      )}\n\n      <ChannelEdit\n        disabled={emptyBalance || channelCountOverLimit}\n        onDone={() => {\n          push(redirectUrl || `/$/${PAGES.CHANNELS}`);\n        }}\n      />\n    </Page>\n  );\n}\n\nexport default ChannelNew;\n","import REWARD_TYPES from 'rewards';\nimport { connect } from 'react-redux';\nimport { selectBalance } from 'redux/selectors/wallet';\nimport { selectUserVerifiedEmail } from 'redux/selectors/user';\nimport { doClaimRewardType } from 'redux/actions/rewards';\nimport { selectIsMyChannelCountOverLimit } from 'redux/selectors/claims';\nimport ChannelNew from './view';\n\nconst select = (state) => ({\n  balance: selectBalance(state),\n  isAuthenticated: selectUserVerifiedEmail(state),\n  channelCountOverLimit: selectIsMyChannelCountOverLimit(state),\n});\n\nexport default connect(select, (dispatch) => ({\n  claimConfirmEmailReward: () =>\n    dispatch(\n      doClaimRewardType(REWARD_TYPES.TYPE_CONFIRM_EMAIL, {\n        notifyError: false,\n      })\n    ),\n}))(ChannelNew);\n"],"names":["FirstPaneWrapper","props","singlePane","children","React","className","TitleWrapper","isPageTitle","smallTitle","accessStatus","AccessIndicator","par","Tooltip","title","__","classnames","locked","status","unlocked","purchased","Icon","icon","ICONS","dangerouslySetInnerHTML","__html","child","_children$props","_children$props2","_children$props3","transformer","subtitle","titleActions","id","body","actions","_props$isPageTitle","_props$isBodyList","isBodyList","_props$smallTitle","defaultExpand","nag","_onClick","onClick","secondPane","slimHeader","background","backgroundImage","headerActions","gridHeader","_useState2","_slicedToArray","useState","expanded","setExpanded","expandable","undefined","role","Boolean","e","stopPropagation","style","sectionIcon","Button","button","connect","state","balance","selectBalance","_props$includeWalletL","includeWalletLink","_props$type","type","Yrbl","I18nMessage","tokens","lbc","LbcSymbol","label","navigate","concat","PAGES","claimConfirmEmailReward","isAuthenticated","channelCountOverLimit","_useHistory","useHistory","push","location","redirectUrl","URLSearchParams","search","get","emptyBalance","Page","noSideNavigation","fullWidthPage","noFooter","backout","backLabel","YrblWalletEmpty","ChannelEdit","disabled","onDone","selectUserVerifiedEmail","selectIsMyChannelCountOverLimit","dispatch","doClaimRewardType","REWARD_TYPES","notifyError","ChannelNew"],"sourceRoot":""}