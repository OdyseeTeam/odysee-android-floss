{"version":3,"file":"modalSyncEnable-7b887caa6561cb232beb.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/common/card.jsx","webpack://odysee.com/../ui/component/syncEnableFlow/view.jsx","webpack://odysee.com/../ui/component/syncEnableFlow/index.js","webpack://odysee.com/../ui/modal/modalSyncEnable/view.jsx","webpack://odysee.com/../ui/modal/modalSyncEnable/index.js"],"sourcesContent":["// @flow\nimport type { Node } from 'react';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Icon from 'component/common/icon';\nimport Button from 'component/button';\nimport * as ICONS from 'constants/icons';\n// import twemoji from 'twemoji';\nimport Tooltip from 'component/common/tooltip';\n\ntype Props = {\n  title?: string | Node,\n  subtitle?: string | Node,\n  titleActions?: string | Node,\n  id?: string,\n  body?: string | Node,\n  actions?: string | Node,\n  icon?: string,\n  className?: string,\n  isPageTitle?: boolean,\n  noTitleWrap?: boolean,\n  isBodyList?: boolean,\n  defaultExpand?: boolean,\n  nag?: Node,\n  smallTitle?: boolean,\n  onClick?: () => void,\n  children?: Node,\n  secondPane?: Node,\n  slimHeader?: boolean,\n  background?: boolean,\n  backgroundImage?: string,\n  singlePane?: boolean,\n  headerActions?: Node,\n  gridHeader?: boolean,\n  accessStatus?: string,\n};\n\nfunction Card(props: Props) {\n  const {\n    title,\n    subtitle,\n    titleActions,\n    id,\n    body,\n    actions,\n    icon,\n    className,\n    isPageTitle = false,\n    isBodyList = false,\n    // noTitleWrap = false,\n    smallTitle = false,\n    defaultExpand,\n    nag,\n    onClick,\n    children,\n    secondPane,\n    slimHeader,\n    background,\n    backgroundImage,\n    singlePane,\n    headerActions,\n    accessStatus,\n    gridHeader,\n  } = props;\n\n  const [expanded, setExpanded] = useState(defaultExpand);\n  const expandable = defaultExpand !== undefined;\n\n  return (\n    <section\n      role={onClick ? 'button' : undefined}\n      className={classnames(className, 'card', {\n        'card__multi-pane': Boolean(secondPane),\n        'card--background': background,\n      })}\n      id={id}\n      onClick={(e) => {\n        if (onClick) {\n          onClick();\n          e.stopPropagation();\n        }\n      }}\n    >\n      {backgroundImage && (\n        <div\n          className=\"background\"\n          style={{\n            backgroundImage:\n              'url(https://thumbnails.odycdn.com/optimize/s:390:0/quality:85/plain/' + backgroundImage + ')',\n          }}\n        />\n      )}\n      <FirstPaneWrapper singlePane={singlePane}>\n        {(title || subtitle) && (\n          <div\n            className={classnames('card__header--between', {\n              'card__header--slim': slimHeader,\n              'card__header--grid': gridHeader,\n            })}\n          >\n            <div className={classnames('card__title-section', { 'card__title-section--body-list': isBodyList })}>\n              {icon && <Icon sectionIcon icon={icon} />}\n\n              <div className=\"card__title-text\">\n                <TitleWrapper isPageTitle={isPageTitle} smallTitle={smallTitle} accessStatus={accessStatus}>\n                  {title}\n                </TitleWrapper>\n\n                {subtitle && (\n                  <div className={classnames('card__subtitle', { 'card__subtitle--small': smallTitle })}>\n                    {subtitle}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {(titleActions || expandable) && (\n              <div className=\"card__title-actions-container\">\n                {titleActions && (\n                  <div\n                    className={classnames('card__title-actions', {\n                      'card__title-actions--small': smallTitle,\n                    })}\n                  >\n                    {titleActions}\n                  </div>\n                )}\n                {expandable && (\n                  <div className=\"card__title-actions\">\n                    <Button\n                      button=\"alt\"\n                      aria-expanded={expanded}\n                      aria-label={expanded ? __('Less') : __('More')}\n                      icon={expanded ? ICONS.SUBTRACT : ICONS.ADD}\n                      onClick={() => setExpanded(!expanded)}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n\n            {headerActions}\n          </div>\n        )}\n\n        {(!expandable || (expandable && expanded)) && (\n          <>\n            {body && (\n              <div\n                className={classnames('card__body', {\n                  'card__body--no-title': !title && !subtitle,\n                  'card__body--list': isBodyList,\n                })}\n              >\n                {body}\n              </div>\n            )}\n            {actions && <div className=\"card__main-actions\">{actions}</div>}\n            {children && <div className=\"card__main-actions\">{children}</div>}\n          </>\n        )}\n\n        {nag}\n      </FirstPaneWrapper>\n\n      {secondPane && <div className=\"card__second-pane\">{secondPane}</div>}\n    </section>\n  );\n}\n\ntype FirstPaneProps = {\n  singlePane?: boolean,\n  children: any,\n};\n\nconst FirstPaneWrapper = (props: FirstPaneProps) => {\n  const { singlePane, children } = props;\n\n  return singlePane ? children : <div className=\"card__first-pane\">{children}</div>;\n};\n\ntype TitleProps = {\n  isPageTitle?: boolean,\n  smallTitle?: boolean,\n  children?: any,\n  emoji?: any,\n  accessStatus?: string,\n};\n\nconst TitleWrapper = (props: TitleProps) => {\n  const { isPageTitle, smallTitle, children, accessStatus } = props;\n\n  /*\n  const Twemoji = ({ emoji }) => (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: twemoji.parse(emoji, {\n          folder: 'svg',\n          ext: '.svg',\n        }),\n      }}\n    />\n  );\n  */\n\n  const AccessIndicator = (par: any) => {\n    return (\n      <Tooltip title={__('This is a members-only content')}>\n        <div\n          className={classnames('content-access-indicator', {\n            locked: par.status === 'locked',\n            unlocked: par.status === 'unlocked',\n            purchased: par.status === 'purchased',\n          })}\n        >\n          <Icon icon={par.status === 'locked' ? ICONS.LOCK : ICONS.UNLOCK} />\n        </div>\n      </Tooltip>\n    );\n  };\n\n  /*\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return <Twemoji emoji={children?.props?.children[child]} />;\n      }\n    }\n    return children;\n  }\n  */\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return children?.props?.children[child];\n      }\n    }\n    return children;\n  }\n\n  return isPageTitle ? (\n    <h1 className=\"card__title\">\n      {accessStatus && <AccessIndicator status={accessStatus} />}\n      <font dangerouslySetInnerHTML={{ __html: transformer(children) }} />\n    </h1>\n  ) : (\n    <h2 className={classnames('card__title', { 'card__title--small': smallTitle })}>{children}</h2>\n  );\n};\n\nexport default Card;\n","// @flow\nimport React from 'react';\nimport Button from 'component/button';\nimport { getSavedPassword } from 'util/saved-passwords';\nimport Card from 'component/common/card';\nimport { withRouter } from 'react-router';\nimport Spinner from 'component/spinner';\nimport Lbry from 'lbry';\nimport ErrorText from 'component/common/error-text';\nimport I18nMessage from 'component/i18nMessage';\n\ntype Props = {\n  setSyncEnabled: (boolean) => void,\n  syncEnabled: boolean,\n  getSyncError: ?string,\n  getSyncPending: boolean,\n  getSync: (pw: string, cb: () => void) => void,\n  checkSync: () => void,\n  closeModal: () => void,\n  updatePreferences: () => void,\n  mode: string,\n};\n\nconst ENABLE_MODE = 'enable';\n\n// steps\nconst FETCH_FOR_ENABLE = 'fetch-for-enable';\nconst FETCH_FOR_DISABLE = 'fetch-for-disable';\nconst CONFIRM = 'confirm';\nconst INITIAL = 'initial';\nconst ERROR = 'error';\n\nconst SHARED_KEY = 'shared';\nconst LOCAL_KEY = 'local';\n\nfunction SyncEnableFlow(props: Props) {\n  const { setSyncEnabled, getSyncError, getSyncPending, getSync, checkSync, mode, closeModal, updatePreferences } =\n    props;\n\n  const [step, setStep] = React.useState(INITIAL);\n  const [prefDict, setPrefDict]: [any, (any) => void] = React.useState();\n  const [error, setError] = React.useState();\n  const [password, setPassword] = React.useState('');\n\n  const handleSyncToggle = async () => {\n    const shared = prefDict.shared;\n    const local = prefDict.local;\n    let finalPrefs;\n    if (shared && local) {\n      if (mode === ENABLE_MODE) {\n        finalPrefs = makeMergedPrefs(local, shared);\n      } else {\n        finalPrefs = makeMergedPrefs(shared, local);\n      }\n    } else {\n      finalPrefs = local || shared || null;\n    }\n\n    // set busy (disable button)\n    if (finalPrefs) {\n      await Lbry.preference_set({ key: mode === ENABLE_MODE ? SHARED_KEY : LOCAL_KEY, value: finalPrefs });\n    }\n    await setSyncEnabled(mode === ENABLE_MODE);\n    await updatePreferences();\n    closeModal();\n  };\n\n  const makeMergedPrefs = (alt, base) => {\n    let finalPrefs = base;\n    let baseData = base.value;\n    let altData = alt.value;\n    if (!altData) {\n      return base;\n    }\n\n    let mergedBlockListSet = new Set(baseData.blocked || []);\n    let mergedSubscriptionsSet = new Set(baseData.subscriptions || []);\n    let mergedTagsSet = new Set(baseData.tags || []);\n\n    const altBlocklist = altData.blocked || [];\n    const altSubscriptions = altData.subscriptions || [];\n    const altTags = altData.tags || [];\n\n    if (altBlocklist.length) {\n      altBlocklist.forEach((el) => mergedBlockListSet.add(el));\n    }\n    if (altSubscriptions.length) {\n      altSubscriptions.forEach((el) => mergedSubscriptionsSet.add(el));\n    }\n    if (altTags.length) {\n      altTags.forEach((el) => mergedTagsSet.add(el));\n    }\n\n    baseData.blocked = Array.from(mergedBlockListSet);\n    baseData.subscriptions = Array.from(mergedSubscriptionsSet);\n    baseData.tags = Array.from(mergedTagsSet);\n    finalPrefs.value = baseData;\n    return finalPrefs;\n  };\n\n  React.useEffect(() => {\n    if (mode) {\n      checkSync();\n      if (mode === ENABLE_MODE) {\n        getSavedPassword().then((pw) => {\n          setPassword(pw);\n          setStep(FETCH_FOR_ENABLE);\n        });\n      } else {\n        setStep(FETCH_FOR_DISABLE);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- @see TODO_NEED_VERIFICATION\n  }, [mode, setPassword]);\n\n  React.useEffect(() => {\n    if (step === FETCH_FOR_ENABLE) {\n      getSync(password, (e, hasChanged) => {\n        if (e) {\n          setStep(ERROR);\n          setError(e && e.message ? e.message : e);\n        } else {\n          Lbry.preference_get().then((result) => {\n            const prefs = {};\n            if (result[SHARED_KEY]) prefs[SHARED_KEY] = result[SHARED_KEY];\n            if (result[LOCAL_KEY]) prefs[LOCAL_KEY] = result[LOCAL_KEY];\n            setPrefDict(prefs);\n            setStep(CONFIRM);\n          });\n        }\n      });\n    }\n    if (step === FETCH_FOR_DISABLE) {\n      Lbry.preference_get().then((result) => {\n        const prefs = {};\n        if (result[SHARED_KEY]) prefs[SHARED_KEY] = result[SHARED_KEY];\n        if (result[LOCAL_KEY]) prefs[LOCAL_KEY] = result[LOCAL_KEY];\n        setPrefDict(prefs);\n        setStep(CONFIRM);\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- @see TODO_NEED_VERIFICATION\n  }, [step, setPrefDict, setStep, password]);\n\n  if (getSyncPending) {\n    return (\n      <div>\n        <Spinner />\n      </div>\n    );\n  }\n\n  return (\n    <Card\n      title={mode === ENABLE_MODE ? 'Enable Sync' : 'Disable Sync'}\n      subtitle={\n        <div>\n          {(error || getSyncError) && (\n            <I18nMessage\n              tokens={{\n                click_here: (\n                  <Button\n                    button=\"link\"\n                    href=\"https://lbry.com/faq/accounts-and-sync#limitations\"\n                    label={__('Click here')}\n                  />\n                ),\n              }}\n            >\n              Something went wrong. Please %click_here% to learn about sync limitations.\n            </I18nMessage>\n          )}\n          {step === INITIAL && (\n            <>\n              <h1>{__(`Please wait...`)}</h1>\n              <Spinner />\n            </>\n          )}\n          {(step === FETCH_FOR_ENABLE || step === FETCH_FOR_DISABLE) && (\n            <>\n              <h1>{__(`Getting your profiles...`)}</h1>\n              <Spinner />\n            </>\n          )}\n          {step === CONFIRM && mode === ENABLE_MODE && (\n            <>\n              <h1>{__(`Enabling sync will switch to your cloud profile.`)}</h1>\n            </>\n          )}\n          {step === CONFIRM && mode !== ENABLE_MODE && (\n            <>\n              <h1>{__(`Disabling sync will switch to your local profile.`)}</h1>\n            </>\n          )}\n          {(error || getSyncError) && (\n            <>\n              <ErrorText>{error || (getSyncError && String(getSyncError)) || __('Unknown error')}</ErrorText>\n            </>\n          )}\n        </div>\n      }\n      actions={\n        <>\n          {step === CONFIRM && (\n            <div className={'card__actions'}>\n              <Button\n                button=\"primary\"\n                name={'syncbutton'}\n                label={mode === ENABLE_MODE ? __('Enable Sync') : __('Disable Sync')}\n                onClick={() => handleSyncToggle()}\n              />\n              <Button button=\"link\" name={'cancel'} label={__('Cancel')} onClick={() => closeModal()} />\n            </div>\n          )}\n          {(step === FETCH_FOR_ENABLE || step === FETCH_FOR_DISABLE) && (\n            <div className={'card__actions'}>\n              <Button\n                button=\"primary\"\n                name={'syncbutton'}\n                label={mode === ENABLE_MODE ? __('Enable Sync') : __('Disable Sync')}\n                onClick={() => handleSyncToggle()}\n                disabled\n              />\n              <Button button=\"link\" name={'cancel'} label={__('Cancel')} onClick={() => closeModal()} />\n            </div>\n          )}\n          {(error || getSyncError) && (\n            <div className={'card__actions'}>\n              <Button button=\"primary\" name={'cancel'} label={__('Close')} onClick={() => closeModal()} />\n              <ErrorText>{error || (getSyncError && String(getSyncError)) || __('Unknown error')}</ErrorText>\n            </div>\n          )}\n        </>\n      }\n    />\n  );\n}\n\nexport default withRouter(SyncEnableFlow);\n","import * as SETTINGS from 'constants/settings';\nimport { connect } from 'react-redux';\nimport { selectUserVerifiedEmail } from 'redux/selectors/user';\nimport {\n  selectGetSyncErrorMessage,\n  selectHasSyncedWallet,\n  selectGetSyncIsPending,\n  selectHashChanged,\n} from 'redux/selectors/sync';\nimport { doCheckSync, doGetSync } from 'redux/actions/sync';\nimport { selectClientSetting } from 'redux/selectors/settings';\nimport { doSetWalletSyncPreference } from 'redux/actions/settings';\nimport SyncToggle from './view';\nimport { doGetAndPopulatePreferences } from 'redux/actions/app';\n\nconst select = (state) => ({\n  syncEnabled: selectClientSetting(state, SETTINGS.ENABLE_SYNC),\n  hasSyncedWallet: selectHasSyncedWallet(state),\n  hasSyncChanged: selectHashChanged(state),\n  verifiedEmail: selectUserVerifiedEmail(state),\n  getSyncError: selectGetSyncErrorMessage(state),\n  getSyncPending: selectGetSyncIsPending(state),\n});\n\nconst perform = (dispatch) => ({\n  setSyncEnabled: (value) => dispatch(doSetWalletSyncPreference(value)),\n  checkSync: () => dispatch(doCheckSync()),\n  getSync: (pw, cb) => dispatch(doGetSync(pw, cb)),\n  updatePreferences: () => dispatch(doGetAndPopulatePreferences()),\n});\n\nexport default connect(select, perform)(SyncToggle);\n","// @flow\nimport React from 'react';\nimport { Modal } from 'modal/modal';\nimport SyncToggleFlow from 'component/syncEnableFlow';\n\ntype Props = {\n  closeModal: () => void,\n  mode: string,\n};\n\nconst ModalSyncEnable = (props: Props) => {\n  const { closeModal, mode } = props;\n\n  return (\n    <Modal isOpen type=\"card\" onAborted={closeModal}>\n      <SyncToggleFlow closeModal={closeModal} mode={mode} />\n    </Modal>\n  );\n};\n\nexport default ModalSyncEnable;\n","import { connect } from 'react-redux';\nimport { doHideModal } from 'redux/actions/app';\nimport ModalSyncEnable from './view';\n\nconst perform = dispatch => () => ({\n  closeModal: () => {\n    dispatch(doHideModal());\n  },\n});\n\nexport default connect(null, perform)(ModalSyncEnable);\n"],"names":["FirstPaneWrapper","props","singlePane","children","React","className","TitleWrapper","isPageTitle","smallTitle","accessStatus","AccessIndicator","par","Tooltip","title","__","classnames","locked","status","unlocked","purchased","Icon","icon","ICONS","dangerouslySetInnerHTML","__html","child","_children$props","_children$props2","_children$props3","transformer","subtitle","titleActions","id","body","actions","_props$isPageTitle","_props$isBodyList","isBodyList","_props$smallTitle","defaultExpand","nag","_onClick","onClick","secondPane","slimHeader","background","backgroundImage","headerActions","gridHeader","_useState2","_slicedToArray","useState","expanded","setExpanded","expandable","undefined","role","Boolean","e","stopPropagation","style","sectionIcon","Button","button","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","arr","Array","isArray","_arrayWithHoles","_i","_s","_e","_x","_r","_arr","_n","_d","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","n","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","len","arr2","ENABLE_MODE","FETCH_FOR_ENABLE","FETCH_FOR_DISABLE","CONFIRM","INITIAL","ERROR","SHARED_KEY","LOCAL_KEY","withRouter","setSyncEnabled","getSyncError","getSyncPending","getSync","checkSync","mode","closeModal","updatePreferences","_React$useState2","step","setStep","_React$useState4","prefDict","setPrefDict","_React$useState6","setError","_React$useState8","password","setPassword","handleSyncToggle","_ref","_callee","shared","local","finalPrefs","_context","makeMergedPrefs","Lbry","args","arguments","apply","alt","base","baseData","altData","mergedBlockListSet","Set","blocked","mergedSubscriptionsSet","subscriptions","mergedTagsSet","tags","altBlocklist","altSubscriptions","altTags","el","add","getSavedPassword","pw","hasChanged","message","prefs","Spinner","Card","I18nMessage","tokens","click_here","href","label","ErrorText","String","disabled","connect","syncEnabled","selectClientSetting","SETTINGS","hasSyncedWallet","selectHasSyncedWallet","hasSyncChanged","selectHashChanged","verifiedEmail","selectUserVerifiedEmail","selectGetSyncErrorMessage","selectGetSyncIsPending","dispatch","doSetWalletSyncPreference","doCheckSync","cb","doGetSync","doGetAndPopulatePreferences","SyncToggle","Modal","isOpen","onAborted","SyncToggleFlow","doHideModal","ModalSyncEnable"],"sourceRoot":""}