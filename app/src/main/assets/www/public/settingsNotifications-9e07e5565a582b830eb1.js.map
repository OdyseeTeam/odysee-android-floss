{"version":3,"file":"settingsNotifications-9e07e5565a582b830eb1.js","mappings":"svCA+KA,IAAMA,EAAmB,SAACC,GACxB,IAAQC,EAAyBD,EAAzBC,WAAYC,EAAaF,EAAbE,SAEpB,OAAOD,EAAaC,EAAWC,EAAAA,cAAA,OAAKC,UAAU,oBAAoBF,EACpE,EAUMG,EAAe,SAACL,GACpB,IAAQM,EAAoDN,EAApDM,YAAaC,EAAuCP,EAAvCO,WAAYL,EAA2BF,EAA3BE,SAAUM,EAAiBR,EAAjBQ,aAerCC,EAAkB,SAACC,GACvB,OACEP,EAAAA,cAACQ,EAAAA,EAAO,CAACC,MAAOC,EAAG,mCACjBV,EAAAA,cAAA,OACEC,UAAWU,IAAW,2BAA4B,CAChDC,OAAuB,WAAfL,EAAIM,OACZC,SAAyB,aAAfP,EAAIM,OACdE,UAA0B,cAAfR,EAAIM,UAGjBb,EAAAA,cAACgB,EAAAA,QAAI,CAACC,KAAqB,WAAfV,EAAIM,OAAsBK,EAAAA,KAAaA,EAAAA,UAI3D,EAqBA,OAAOf,EACLH,EAAAA,cAAA,MAAIC,UAAU,eACXI,GAAgBL,EAAAA,cAACM,EAAe,CAACO,OAAQR,IAC1CL,EAAAA,cAAA,QAAMmB,wBAAyB,CAAEC,OAZrC,SAAqBrB,GACnB,IAAK,IAAIsB,KAAStB,SAAe,QAAPuB,EAARvB,EAAUF,aAAK,IAAAyB,OAAP,EAARA,EAAiBvB,SAAU,KAAAuB,EAAAC,EACeC,EAA1D,GAAgD,iBAArCzB,SAAe,QAAPwB,EAARxB,EAAUF,aAAK,IAAA0B,OAAP,EAARA,EAAiBxB,SAASsB,IACnC,OAAOtB,SAAe,QAAPyB,EAARzB,EAAUF,aAAK,IAAA2B,OAAP,EAARA,EAAiBzB,SAASsB,EAErC,CACA,OAAOtB,CACT,CAK6C0B,CAAY1B,OAGvDC,EAAAA,cAAA,MAAIC,UAAWU,IAAW,cAAe,CAAE,qBAAsBP,KAAgBL,EAErF,EAEA,QArNA,SAAcF,GACZ,IACEY,EAwBEZ,EAxBFY,MACAiB,EAuBE7B,EAvBF6B,SACAC,EAsBE9B,EAtBF8B,aACAC,EAqBE/B,EArBF+B,GACAC,EAoBEhC,EApBFgC,KACAC,EAmBEjC,EAnBFiC,QACAb,EAkBEpB,EAlBFoB,KACAhB,EAiBEJ,EAjBFI,UAAS8B,EAiBPlC,EAhBFM,YAAAA,OAAW,IAAA4B,GAAQA,EAAAC,EAgBjBnC,EAfFoC,WAAAA,OAAU,IAAAD,GAAQA,EAAAE,EAehBrC,EAbFO,WAAAA,OAAU,IAAA8B,GAAQA,EAClBC,EAYEtC,EAZFsC,cACAC,EAWEvC,EAXFuC,IACAC,EAUExC,EAVFyC,QACAvC,EASEF,EATFE,SACAwC,EAQE1C,EARF0C,WACAC,EAOE3C,EAPF2C,WACAC,EAME5C,EANF4C,WACAC,EAKE7C,EALF6C,gBACA5C,EAIED,EAJFC,WACA6C,EAGE9C,EAHF8C,cACAtC,EAEER,EAFFQ,aACAuC,EACE/C,EADF+C,WAGqDC,EAAAC,GAAvBC,EAAAA,EAAAA,UAASZ,GAAc,GAAhDa,EAAQH,EAAA,GAAEI,EAAWJ,EAAA,GACtBK,OAA+BC,IAAlBhB,EAEnB,OACEnC,EAAAA,cAAA,WACEoD,KAAMf,EAAU,cAAWc,EAC3BlD,UAAWU,IAAWV,EAAW,OAAQ,CACvC,mBAAoBoD,QAAQd,GAC5B,mBAAoBE,IAEtBb,GAAIA,EACJU,QAAS,SAACgB,GACJjB,IACFA,IACAiB,EAAEC,kBAEN,GAECb,GACC1C,EAAAA,cAAA,OACEC,UAAU,aACVuD,MAAO,CACLd,gBACE,uEAAyEA,EAAkB,OAInG1C,EAAAA,cAACJ,EAAgB,CAACE,WAAYA,IAC1BW,GAASiB,IACT1B,EAAAA,cAAA,OACEC,UAAWU,IAAW,wBAAyB,CAC7C,qBAAsB6B,EACtB,qBAAsBI,KAGxB5C,EAAAA,cAAA,OAAKC,UAAWU,IAAW,sBAAuB,CAAE,iCAAkCsB,KACnFhB,GAAQjB,EAAAA,cAACgB,EAAAA,QAAI,CAACyC,aAAW,EAACxC,KAAMA,IAEjCjB,EAAAA,cAAA,OAAKC,UAAU,oBACbD,EAAAA,cAACE,EAAY,CAACC,YAAaA,EAAaC,WAAYA,EAAYC,aAAcA,GAC3EI,GAGFiB,GACC1B,EAAAA,cAAA,OAAKC,UAAWU,IAAW,iBAAkB,CAAE,wBAAyBP,KACrEsB,MAMPC,GAAgBuB,IAChBlD,EAAAA,cAAA,OAAKC,UAAU,iCACZ0B,GACC3B,EAAAA,cAAA,OACEC,UAAWU,IAAW,sBAAuB,CAC3C,6BAA8BP,KAG/BuB,GAGJuB,GACClD,EAAAA,cAAA,OAAKC,UAAU,uBACbD,EAAAA,cAAC0D,EAAAA,QAAM,CACLC,OAAO,MACP,gBAAeX,EACf,aAAuBtC,EAAXsC,EAAc,OAAa,QACvC/B,KAAM+B,EAAW9B,EAAAA,SAAiBA,EAAAA,IAClCoB,QAAS,kBAAMW,GAAaD,EAAS,MAO9CL,KAIFO,GAAeA,GAAcF,IAC9BhD,EAAAA,cAAAA,EAAAA,SAAA,KACG6B,GACC7B,EAAAA,cAAA,OACEC,UAAWU,IAAW,aAAc,CAClC,wBAAyBF,IAAUiB,EACnC,mBAAoBO,KAGrBJ,GAGJC,GAAW9B,EAAAA,cAAA,OAAKC,UAAU,sBAAsB6B,GAChD/B,GAAYC,EAAAA,cAAA,OAAKC,UAAU,sBAAsBF,IAIrDqC,GAGFG,GAAcvC,EAAAA,cAAA,OAAKC,UAAU,qBAAqBsC,GAGzD,C,2FCvKA,QCgBe,SAAqB1C,GAClC,IAAQY,EAAkGZ,EAAlGY,MAAOiB,EAA2F7B,EAA3F6B,SAAUkC,EAAiF/D,EAAjF+D,SAAUC,EAAuEhE,EAAvEgE,qBAAsBC,EAAiDjE,EAAjDiE,SAAUC,EAAuClE,EAAvCkE,YAAaC,EAA0BnE,EAA1BmE,YAAajE,EAAaF,EAAbE,SAC7F,OACEC,EAAAA,cAAA,OACEC,UAAWU,IAAW,kCAAmC,CACvD,6BAA8BiD,EAC9B,aAAcE,EACd,0BAA2BC,KAG7B/D,EAAAA,cAAA,OAAKC,UAAU,uBACbD,EAAAA,cAAA,YACGS,EACAuD,GACChE,EAAAA,cAAC0D,EAAAA,QAAM,CAACzD,UAAU,6BAA6BgE,SAAQ,MAAAC,OAAQC,EAAAA,oBAC5D,YAINzC,GAAY1B,EAAAA,cAAA,KAAGC,UAAU,0BAA0ByB,IAEtD1B,EAAAA,cAAA,OACEC,UAAWU,IAAW,sBAAuB,CAC3C,gCAAiCiD,EACjC,mCAAoCC,EACpC,gBAAiBC,KAGlB/D,GAAYA,GAIrB,C,k1FClCA,SAAeqE,EAAAA,EAAAA,KATA,SAACC,GAAK,MAAM,CACzBC,wBAAwBC,EAAAA,EAAAA,IAA6BF,GACrDG,gBAAiBnB,SAAQoB,EAAAA,EAAAA,IAAwBJ,IAClD,IAEe,SAACK,GAAQ,MAAM,CAC7BC,iBAAkB,SAACC,EAAKC,GAAK,OAAKH,GAASI,EAAAA,EAAAA,IAAmBF,EAAKC,GAAO,EAC3E,GAED,ECOe,SAAkChF,GACuBA,EAA9DyE,uBAA8DzE,EAAtC8E,iBAAhC,IAAkDH,EAAoB3E,EAApB2E,gBACRO,EAAAjC,EAAhB9C,EAAAA,WAAgB,GAAnCgF,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACwBG,EAAApC,EAAlB9C,EAAAA,SAAe,CAAC,GAAE,GAAvCmF,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACgBG,EAAAvC,EAAhB9C,EAAAA,WAAgB,GAAjCsF,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACsCG,EAAA1C,EAAhB9C,EAAAA,WAAgB,GAAnDyF,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAC9BG,GAAaC,EAAAA,EAAAA,MAAbD,SAEFE,EADY,IAAIC,gBAAgBH,EAASI,QACXC,IAAI,sBAClCC,EAAeJ,EAAoB,CAAEK,WAAYL,QAAsB1C,EAG5EgD,EAAArD,EAF6C9C,EAAAA,WAC5CoG,OAAOC,aAAaC,QAAQ,oBAAqBjD,QAAQ+C,OAAOC,aAAaC,QAAQ,qBACtF,GAsED,OAxEsBH,EAAA,GAAoBA,EAAA,GAI1CnG,EAAAA,WAAgB,YACViG,GAAgBzB,KAClB+B,EAAAA,OAAAA,KAAY,MAAO,OAAQN,GACxBO,KAAKjB,GAAQ,OACP,SAACjC,GACN2B,GAAS,EACX,IAEFsB,EAAAA,OAAAA,KAAY,aAAc,SAAUN,GACjCO,MAAK,SAACC,GACL,IAAMhB,EACJgB,EAAIC,QACJC,OAAOC,KAAKH,EAAIC,QAAQG,QAAO,SAACC,EAAKC,GACnC,IAAMC,EAAYP,EAAIC,OAAOK,GAC7B,MAAO,GAAP7C,OAAA+C,EAAWH,GAAG,CAAE,CAAEC,MAAAA,EAAOC,UAAAA,IAC3B,GAAG,IAEL5B,EAAUqB,EAAInB,MACdI,EAAiBD,EACnB,IAAE,OACK,SAACnC,GACN2B,GAAS,EACX,IAGN,GAAG,IA2CYT,GAAoBqB,EAKjC7F,EAAAA,cAACkH,EAAAA,EAAI,CACHC,UAAQ,EACRC,kBAAgB,EAChBC,cAAY,EACZpH,UAAU,aACVqH,QAAS,CAAE7G,MAAOC,EAAG,wBAAyB6G,UAAW7G,EAAG,UAE3DsE,EACChF,EAAAA,cAACwH,EAAAA,EAAI,CACHC,KAAK,MACLhH,MAAOC,EAAG,SACVgB,SAAUhB,EAAG,4CACboB,QACE9B,EAAAA,cAAA,OAAKC,UAAU,oBACbD,EAAAA,cAAC0D,EAAAA,QAAM,CACLC,OAAO,YACP+D,MAAOhH,EAAG,WACVO,KAAMC,EAAAA,QACNoB,QAAS,kBAAM8D,OAAOT,SAASgC,QAAQ,IAEzC3H,EAAAA,cAAC0D,EAAAA,QAAM,CAACC,OAAO,YAAY+D,MAAOhH,EAAG,WAAYO,KAAMC,EAAAA,KAAY+C,SAAU,SAMjFjE,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAAA,WACEA,EAAAA,cAAA,MAAIC,UAAU,eAAeS,EAAG,0BAChCV,EAAAA,cAAA,OAAKC,UAAU,kBAAkBS,EAAG,iEAEtCV,EAAAA,cAAC4H,EAAAA,EAAI,CACH3F,YAAU,EACVJ,KACE7B,EAAAA,cAAAA,EAAAA,SAAA,KACGyF,GAAiBA,EAAcoC,OAAS,GACvC7H,EAAAA,cAAAA,EAAAA,SAAA,KACGyF,EAAcqC,KAAI,SAAAC,GAAA,IAAGhB,EAAKgB,EAALhB,MAAOC,EAASe,EAATf,UAAS,OACpChH,EAAAA,cAACgI,EAAAA,EAAW,CACVpD,IAAKmC,EACLtG,MAAOC,EAAG,uBACVgB,SAAUhB,EAAG,sDAAuD,CAAEqG,MAAAA,KAEtE/G,EAAAA,cAACiI,EAAAA,GAAS,CACRR,KAAK,WACLS,KAAI,gBAAAhE,OAAkB6C,GACtBnC,IAAKmC,EACLoB,SAAU,kBAlFpC,SAA2BpB,EAAOqB,GAChC7B,EAAAA,OAAAA,KAAY,aAAc,OAAM8B,EAAA,CAC9BtB,MAAOA,EACPuB,QAASF,GACNnC,IAEFO,MAAK,WACJ,IAAM+B,EAAmB9C,EACrBA,EAAcqC,KAAI,SAACU,GACjB,OAAIzB,IAAUyB,EAAUzB,MACf,CAAEA,MAAAA,EAAOC,UAAWoB,GAGtBI,CACT,IACA,GAEJ9C,EAAiB6C,EACnB,IAAE,OACK,SAACjF,GACN2B,GAAS,EACX,GACJ,CA4D0CwD,CAAkB1B,GAAQC,EAAU,EACpD0B,QAAS1B,IAEC,QAUjB1B,GAAQA,EAAKuC,OAAS,GAC7B7H,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,WACEA,EAAAA,cAAA,MAAIC,UAAU,eAAeS,EAAG,8BAChCV,EAAAA,cAAA,OAAKC,UAAU,kBAAkBS,EAAG,yDAEtCV,EAAAA,cAAC4H,EAAAA,EAAI,CACH3F,YAAU,EACVJ,KACE7B,EAAAA,cAAAA,EAAAA,SAAA,KACGsF,EAAKwC,KAAI,SAACa,GACT,IAAM3B,EAAY7B,EAAOwD,EAAIT,MAC7B,OACElI,EAAAA,cAACgI,EAAAA,EAAW,CAACpD,IAAK+D,EAAIT,KAAMxG,SAAUhB,EAAGiI,EAAIC,cAC3C5I,EAAAA,cAACiI,EAAAA,GAAS,CACRR,KAAK,WACL7C,IAAK+D,EAAIT,KACTA,KAAMS,EAAIT,KACVC,SAAU,kBA5HbD,EA4HmCS,EAAIT,KA3HxDW,GADuBT,GA4HwCpB,GA3HpC,CAAE8B,IAAKZ,GAAS,CAAEa,OAAQb,QAE3D3B,EAAAA,OAAAA,KAAY,WAAY,OAAM8B,EAAAA,EAAA,GAAOpC,GAAiB4C,IAAarC,MAAK,WACtE,IAAMwC,EAASX,EAAA,GAAQlD,GACvB6D,EAAUd,GAAQE,EAElBhD,EAAU4D,EACZ,IARF,IAAyBd,EAAME,EACvBS,CA2HyE,EACrDH,QAAS1B,IAIjB,UASf,GAhGIhH,EAAAA,cAACiJ,EAAAA,GAAQ,CAACC,GAAE,MAAAhF,OAAQC,EAAAA,YAAiB,cAAAD,OAAayB,EAASwD,WAmItE,G","sources":["webpack://odysee.com/../ui/component/common/card.jsx","webpack://odysee.com/../ui/component/settingsRow/index.js","webpack://odysee.com/../ui/component/settingsRow/view.jsx","webpack://odysee.com/../ui/page/settingsNotifications/index.js","webpack://odysee.com/../ui/page/settingsNotifications/view.jsx"],"sourcesContent":["// @flow\nimport type { Node } from 'react';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Icon from 'component/common/icon';\nimport Button from 'component/button';\nimport * as ICONS from 'constants/icons';\n// import twemoji from 'twemoji';\nimport Tooltip from 'component/common/tooltip';\n\ntype Props = {\n  title?: string | Node,\n  subtitle?: string | Node,\n  titleActions?: string | Node,\n  id?: string,\n  body?: string | Node,\n  actions?: string | Node,\n  icon?: string,\n  className?: string,\n  isPageTitle?: boolean,\n  noTitleWrap?: boolean,\n  isBodyList?: boolean,\n  defaultExpand?: boolean,\n  nag?: Node,\n  smallTitle?: boolean,\n  onClick?: () => void,\n  children?: Node,\n  secondPane?: Node,\n  slimHeader?: boolean,\n  background?: boolean,\n  backgroundImage?: string,\n  singlePane?: boolean,\n  headerActions?: Node,\n  gridHeader?: boolean,\n  accessStatus?: string,\n};\n\nfunction Card(props: Props) {\n  const {\n    title,\n    subtitle,\n    titleActions,\n    id,\n    body,\n    actions,\n    icon,\n    className,\n    isPageTitle = false,\n    isBodyList = false,\n    // noTitleWrap = false,\n    smallTitle = false,\n    defaultExpand,\n    nag,\n    onClick,\n    children,\n    secondPane,\n    slimHeader,\n    background,\n    backgroundImage,\n    singlePane,\n    headerActions,\n    accessStatus,\n    gridHeader,\n  } = props;\n\n  const [expanded, setExpanded] = useState(defaultExpand);\n  const expandable = defaultExpand !== undefined;\n\n  return (\n    <section\n      role={onClick ? 'button' : undefined}\n      className={classnames(className, 'card', {\n        'card__multi-pane': Boolean(secondPane),\n        'card--background': background,\n      })}\n      id={id}\n      onClick={(e) => {\n        if (onClick) {\n          onClick();\n          e.stopPropagation();\n        }\n      }}\n    >\n      {backgroundImage && (\n        <div\n          className=\"background\"\n          style={{\n            backgroundImage:\n              'url(https://thumbnails.odycdn.com/optimize/s:390:0/quality:85/plain/' + backgroundImage + ')',\n          }}\n        />\n      )}\n      <FirstPaneWrapper singlePane={singlePane}>\n        {(title || subtitle) && (\n          <div\n            className={classnames('card__header--between', {\n              'card__header--slim': slimHeader,\n              'card__header--grid': gridHeader,\n            })}\n          >\n            <div className={classnames('card__title-section', { 'card__title-section--body-list': isBodyList })}>\n              {icon && <Icon sectionIcon icon={icon} />}\n\n              <div className=\"card__title-text\">\n                <TitleWrapper isPageTitle={isPageTitle} smallTitle={smallTitle} accessStatus={accessStatus}>\n                  {title}\n                </TitleWrapper>\n\n                {subtitle && (\n                  <div className={classnames('card__subtitle', { 'card__subtitle--small': smallTitle })}>\n                    {subtitle}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {(titleActions || expandable) && (\n              <div className=\"card__title-actions-container\">\n                {titleActions && (\n                  <div\n                    className={classnames('card__title-actions', {\n                      'card__title-actions--small': smallTitle,\n                    })}\n                  >\n                    {titleActions}\n                  </div>\n                )}\n                {expandable && (\n                  <div className=\"card__title-actions\">\n                    <Button\n                      button=\"alt\"\n                      aria-expanded={expanded}\n                      aria-label={expanded ? __('Less') : __('More')}\n                      icon={expanded ? ICONS.SUBTRACT : ICONS.ADD}\n                      onClick={() => setExpanded(!expanded)}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n\n            {headerActions}\n          </div>\n        )}\n\n        {(!expandable || (expandable && expanded)) && (\n          <>\n            {body && (\n              <div\n                className={classnames('card__body', {\n                  'card__body--no-title': !title && !subtitle,\n                  'card__body--list': isBodyList,\n                })}\n              >\n                {body}\n              </div>\n            )}\n            {actions && <div className=\"card__main-actions\">{actions}</div>}\n            {children && <div className=\"card__main-actions\">{children}</div>}\n          </>\n        )}\n\n        {nag}\n      </FirstPaneWrapper>\n\n      {secondPane && <div className=\"card__second-pane\">{secondPane}</div>}\n    </section>\n  );\n}\n\ntype FirstPaneProps = {\n  singlePane?: boolean,\n  children: any,\n};\n\nconst FirstPaneWrapper = (props: FirstPaneProps) => {\n  const { singlePane, children } = props;\n\n  return singlePane ? children : <div className=\"card__first-pane\">{children}</div>;\n};\n\ntype TitleProps = {\n  isPageTitle?: boolean,\n  smallTitle?: boolean,\n  children?: any,\n  emoji?: any,\n  accessStatus?: string,\n};\n\nconst TitleWrapper = (props: TitleProps) => {\n  const { isPageTitle, smallTitle, children, accessStatus } = props;\n\n  /*\n  const Twemoji = ({ emoji }) => (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: twemoji.parse(emoji, {\n          folder: 'svg',\n          ext: '.svg',\n        }),\n      }}\n    />\n  );\n  */\n\n  const AccessIndicator = (par: any) => {\n    return (\n      <Tooltip title={__('This is a members-only content')}>\n        <div\n          className={classnames('content-access-indicator', {\n            locked: par.status === 'locked',\n            unlocked: par.status === 'unlocked',\n            purchased: par.status === 'purchased',\n          })}\n        >\n          <Icon icon={par.status === 'locked' ? ICONS.LOCK : ICONS.UNLOCK} />\n        </div>\n      </Tooltip>\n    );\n  };\n\n  /*\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return <Twemoji emoji={children?.props?.children[child]} />;\n      }\n    }\n    return children;\n  }\n  */\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return children?.props?.children[child];\n      }\n    }\n    return children;\n  }\n\n  return isPageTitle ? (\n    <h1 className=\"card__title\">\n      {accessStatus && <AccessIndicator status={accessStatus} />}\n      <font dangerouslySetInnerHTML={{ __html: transformer(children) }} />\n    </h1>\n  ) : (\n    <h2 className={classnames('card__title', { 'card__title--small': smallTitle })}>{children}</h2>\n  );\n};\n\nexport default Card;\n","import SettingsRow from './view';\nexport default SettingsRow;\n","// @flow\nimport React from 'react';\nimport Button from 'component/button';\nimport * as PAGES from 'constants/pages';\nimport classnames from 'classnames';\n\ntype Props = {\n  title: string,\n  subtitle?: string,\n  multirow?: boolean, // Displays the Value widget(s) below the Label instead of on the right.\n  useVerticalSeparator?: boolean, // Show a separator line between Label and Value. Useful when there are multiple Values.\n  disabled?: boolean,\n  highlighted?: boolean,\n  membersOnly?: boolean,\n  children?: React$Node,\n};\n\nexport default function SettingsRow(props: Props) {\n  const { title, subtitle, multirow, useVerticalSeparator, disabled, highlighted, membersOnly, children } = props;\n  return (\n    <div\n      className={classnames('card__main-actions settings-row', {\n        'section__actions--between': !multirow,\n        'opacity-40': disabled,\n        'card--highlightedActive': highlighted,\n      })}\n    >\n      <div className=\"settings-row__title\">\n        <span>\n          {title}\n          {membersOnly && (\n            <Button className=\"settings-row__members-only\" navigate={`/$/${PAGES.ODYSEE_MEMBERSHIP}`}>\n              {'PREMIUM'}\n            </Button>\n          )}\n        </span>\n        {subtitle && <p className=\"settings-row__subtitle\">{subtitle}</p>}\n      </div>\n      <div\n        className={classnames('settings-row__value', {\n          'settings-row__value--multirow': multirow,\n          'settings-row__vertical-separator': useVerticalSeparator,\n          'non-clickable': disabled,\n        })}\n      >\n        {children && children}\n      </div>\n    </div>\n  );\n}\n","import { connect } from 'react-redux';\nimport { doSetClientSetting } from 'redux/actions/settings';\nimport { selectosNotificationsEnabled } from 'redux/selectors/settings';\nimport { selectUserVerifiedEmail } from 'redux/selectors/user';\nimport NotificationSettingsPage from './view';\n\nconst select = (state) => ({\n  osNotificationsEnabled: selectosNotificationsEnabled(state),\n  isAuthenticated: Boolean(selectUserVerifiedEmail(state)),\n});\n\nconst perform = (dispatch) => ({\n  setClientSetting: (key, value) => dispatch(doSetClientSetting(key, value)),\n});\n\nexport default connect(select, perform)(NotificationSettingsPage);\n","// @flow\nimport * as ICONS from 'constants/icons';\nimport * as PAGES from 'constants/pages';\nimport * as SETTINGS from 'constants/settings';\nimport * as React from 'react';\n\nimport Page from 'component/page';\nimport { FormField } from 'component/common/form';\nimport Card from 'component/common/card';\nimport SettingsRow from 'component/settingsRow';\nimport { Lbryio } from 'lbryinc';\nimport { useHistory } from 'react-router';\nimport { Redirect } from 'react-router-dom';\nimport Yrbl from 'component/yrbl';\nimport Button from 'component/button';\n\ntype Props = {\n  osNotificationsEnabled: boolean,\n  isAuthenticated: boolean,\n  setClientSetting: (string, boolean) => void,\n};\n\nexport default function NotificationSettingsPage(props: Props) {\n  const { osNotificationsEnabled, setClientSetting, isAuthenticated } = props;\n  const [error, setError] = React.useState();\n  const [tagMap, setTagMap] = React.useState({});\n  const [tags, setTags] = React.useState();\n  const [enabledEmails, setEnabledEmails] = React.useState();\n  const { location } = useHistory();\n  const urlParams = new URLSearchParams(location.search);\n  const verificationToken = urlParams.get('verification_token');\n  const lbryIoParams = verificationToken ? { auth_token: verificationToken } : undefined;\n  const [appNotification, setAppNotification] = React.useState(\n    window.localStorage.getItem('appNotification') ? Boolean(window.localStorage.getItem('appNotification')) : false\n  );\n\n  React.useEffect(() => {\n    if (lbryIoParams || isAuthenticated) {\n      Lbryio.call('tag', 'list', lbryIoParams)\n        .then(setTags)\n        .catch((e) => {\n          setError(true);\n        });\n\n      Lbryio.call('user_email', 'status', lbryIoParams)\n        .then((res) => {\n          const enabledEmails =\n            res.emails &&\n            Object.keys(res.emails).reduce((acc, email) => {\n              const isEnabled = res.emails[email];\n              return [...acc, { email, isEnabled }];\n            }, []);\n\n          setTagMap(res.tags);\n          setEnabledEmails(enabledEmails);\n        })\n        .catch((e) => {\n          setError(true);\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- on mount only\n  }, []);\n\n  function handleChangeTag(name, newIsEnabled) {\n    const tagParams = newIsEnabled ? { add: name } : { remove: name };\n\n    Lbryio.call('user_tag', 'edit', { ...lbryIoParams, ...tagParams }).then(() => {\n      const newTagMap = { ...tagMap };\n      newTagMap[name] = newIsEnabled;\n\n      setTagMap(newTagMap);\n    });\n  }\n\n  function handleChangeEmail(email, newIsEnabled) {\n    Lbryio.call('user_email', 'edit', {\n      email: email,\n      enabled: newIsEnabled,\n      ...lbryIoParams,\n    })\n      .then(() => {\n        const newEnabledEmails = enabledEmails\n          ? enabledEmails.map((userEmail) => {\n              if (email === userEmail.email) {\n                return { email, isEnabled: newIsEnabled };\n              }\n\n              return userEmail;\n            })\n          : [];\n\n        setEnabledEmails(newEnabledEmails);\n      })\n      .catch((e) => {\n        setError(true);\n      });\n  }\n\n  function toggleNotification() {\n    console.log('Set local storage to ', !appNotification);\n    window.localStorage.setItem('appNotification', !appNotification);\n    setAppNotification(!appNotification);\n  }\n\n  if (IS_WEB && !isAuthenticated && !verificationToken) {\n    return <Redirect to={`/$/${PAGES.AUTH_SIGNIN}?redirect=${location.pathname}`} />;\n  }\n\n  return (\n    <Page\n      noFooter\n      noSideNavigation\n      settingsPage\n      className=\"card-stack\"\n      backout={{ title: __('Manage notifications'), backLabel: __('Back') }}\n    >\n      {error ? (\n        <Yrbl\n          type=\"sad\"\n          title={__('Uh oh')}\n          subtitle={__('There was an error displaying this page.')}\n          actions={\n            <div className=\"section__actions\">\n              <Button\n                button=\"secondary\"\n                label={__('Refresh')}\n                icon={ICONS.REFRESH}\n                onClick={() => window.location.reload()}\n              />\n              <Button button=\"secondary\" label={__('Go Home')} icon={ICONS.HOME} navigate={'/'} />\n            </div>\n          }\n        />\n      ) : (\n        true && (\n          <div className=\"card-stack\">\n            <div>\n              <h2 className=\"card__title\">{__('Notification Delivery')}</h2>\n              <div className=\"card__subtitle\">{__(\"Choose how you'd like to receive your Odysee notifications.\")}</div>\n            </div>\n            <Card\n              isBodyList\n              body={\n                <>\n                  {enabledEmails && enabledEmails.length > 0 && (\n                    <>\n                      {enabledEmails.map(({ email, isEnabled }) => (\n                        <SettingsRow\n                          key={email}\n                          title={__('Email Notifications')}\n                          subtitle={__(`Receive notifications to the email address: %email%`, { email })}\n                        >\n                          <FormField\n                            type=\"checkbox\"\n                            name={`active-email:${email}`}\n                            key={email}\n                            onChange={() => handleChangeEmail(email, !isEnabled)}\n                            checked={isEnabled}\n                          />\n                        </SettingsRow>\n                      ))}\n                    </>\n                  )}\n\n                  {}\n                </>\n              }\n            />\n\n            {true && tags && tags.length > 0 && (\n              <>\n                <div>\n                  <h2 className=\"card__title\">{__('Email Notification Topics')}</h2>\n                  <div className=\"card__subtitle\">{__('Choose which topics you’d like to be emailed about.')}</div>\n                </div>\n                <Card\n                  isBodyList\n                  body={\n                    <>\n                      {tags.map((tag) => {\n                        const isEnabled = tagMap[tag.name];\n                        return (\n                          <SettingsRow key={tag.name} subtitle={__(tag.description)}>\n                            <FormField\n                              type=\"checkbox\"\n                              key={tag.name}\n                              name={tag.name}\n                              onChange={() => handleChangeTag(tag.name, !isEnabled)}\n                              checked={isEnabled}\n                            />\n                          </SettingsRow>\n                        );\n                      })}\n                    </>\n                  }\n                />\n              </>\n            )}\n          </div>\n        )\n      )}\n      {false && (\n        <>\n          <div>\n            <h2 className=\"card__title\">{__('Notifications')}</h2>\n          </div>\n          <div className=\"card cordova-settings\">\n            <div className=\"card__body--list\">\n              <div className=\"settings__row\">\n                <div className=\"settings__row--title\">\n                  {__('App notifications')}\n                  <label className=\"switch\">\n                    <input type=\"checkbox\" onChange={() => toggleNotification()} checked={appNotification} />\n                    <span className=\"slider\" />\n                  </label>\n                </div>\n              </div>\n              {false && (\n                <>\n                  <div className=\"settings__row\">\n                    <div className=\"settings__row--title\">{__('Livestreams')}</div>\n                  </div>\n                  <div className=\"settings__row\">\n                    <div className=\"settings__row--title\">{__('Comments')}</div>\n                  </div>\n                  <div className=\"settings__row\">\n                    <div className=\"settings__row--title\">{__('Replies')}</div>\n                  </div>\n                </>\n              )}\n            </div>\n          </div>\n        </>\n      )}\n    </Page>\n  );\n}\n"],"names":["FirstPaneWrapper","props","singlePane","children","React","className","TitleWrapper","isPageTitle","smallTitle","accessStatus","AccessIndicator","par","Tooltip","title","__","classnames","locked","status","unlocked","purchased","Icon","icon","ICONS","dangerouslySetInnerHTML","__html","child","_children$props","_children$props2","_children$props3","transformer","subtitle","titleActions","id","body","actions","_props$isPageTitle","_props$isBodyList","isBodyList","_props$smallTitle","defaultExpand","nag","_onClick","onClick","secondPane","slimHeader","background","backgroundImage","headerActions","gridHeader","_useState2","_slicedToArray","useState","expanded","setExpanded","expandable","undefined","role","Boolean","e","stopPropagation","style","sectionIcon","Button","button","multirow","useVerticalSeparator","disabled","highlighted","membersOnly","navigate","concat","PAGES","connect","state","osNotificationsEnabled","selectosNotificationsEnabled","isAuthenticated","selectUserVerifiedEmail","dispatch","setClientSetting","key","value","doSetClientSetting","_React$useState2","error","setError","_React$useState4","tagMap","setTagMap","_React$useState6","tags","setTags","_React$useState8","enabledEmails","setEnabledEmails","location","useHistory","verificationToken","URLSearchParams","search","get","lbryIoParams","auth_token","_React$useState10","window","localStorage","getItem","Lbryio","then","res","emails","Object","keys","reduce","acc","email","isEnabled","_toConsumableArray","Page","noFooter","noSideNavigation","settingsPage","backout","backLabel","Yrbl","type","label","reload","Card","length","map","_ref","SettingsRow","FormField","name","onChange","newIsEnabled","_objectSpread","enabled","newEnabledEmails","userEmail","handleChangeEmail","checked","tag","description","tagParams","add","remove","newTagMap","Redirect","to","pathname"],"sourceRoot":""}