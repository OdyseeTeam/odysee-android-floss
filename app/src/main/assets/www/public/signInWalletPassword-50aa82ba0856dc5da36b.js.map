{"version":3,"file":"signInWalletPassword-50aa82ba0856dc5da36b.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/common/card.jsx","webpack://odysee.com/../ui/component/syncPassword/view.jsx","webpack://odysee.com/../ui/component/syncPassword/index.js","webpack://odysee.com/../ui/page/signInWalletPassword/index.js","webpack://odysee.com/../ui/page/signInWalletPassword/view.jsx"],"sourcesContent":["// @flow\nimport type { Node } from 'react';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Icon from 'component/common/icon';\nimport Button from 'component/button';\nimport * as ICONS from 'constants/icons';\n// import twemoji from 'twemoji';\nimport Tooltip from 'component/common/tooltip';\n\ntype Props = {\n  title?: string | Node,\n  subtitle?: string | Node,\n  titleActions?: string | Node,\n  id?: string,\n  body?: string | Node,\n  actions?: string | Node,\n  icon?: string,\n  className?: string,\n  isPageTitle?: boolean,\n  noTitleWrap?: boolean,\n  isBodyList?: boolean,\n  defaultExpand?: boolean,\n  nag?: Node,\n  smallTitle?: boolean,\n  onClick?: () => void,\n  children?: Node,\n  secondPane?: Node,\n  slimHeader?: boolean,\n  background?: boolean,\n  backgroundImage?: string,\n  singlePane?: boolean,\n  headerActions?: Node,\n  gridHeader?: boolean,\n  accessStatus?: string,\n};\n\nfunction Card(props: Props) {\n  const {\n    title,\n    subtitle,\n    titleActions,\n    id,\n    body,\n    actions,\n    icon,\n    className,\n    isPageTitle = false,\n    isBodyList = false,\n    // noTitleWrap = false,\n    smallTitle = false,\n    defaultExpand,\n    nag,\n    onClick,\n    children,\n    secondPane,\n    slimHeader,\n    background,\n    backgroundImage,\n    singlePane,\n    headerActions,\n    accessStatus,\n    gridHeader,\n  } = props;\n\n  const [expanded, setExpanded] = useState(defaultExpand);\n  const expandable = defaultExpand !== undefined;\n\n  return (\n    <section\n      role={onClick ? 'button' : undefined}\n      className={classnames(className, 'card', {\n        'card__multi-pane': Boolean(secondPane),\n        'card--background': background,\n      })}\n      id={id}\n      onClick={(e) => {\n        if (onClick) {\n          onClick();\n          e.stopPropagation();\n        }\n      }}\n    >\n      {backgroundImage && (\n        <div\n          className=\"background\"\n          style={{\n            backgroundImage:\n              'url(https://thumbnails.odycdn.com/optimize/s:390:0/quality:85/plain/' + backgroundImage + ')',\n          }}\n        />\n      )}\n      <FirstPaneWrapper singlePane={singlePane}>\n        {(title || subtitle) && (\n          <div\n            className={classnames('card__header--between', {\n              'card__header--slim': slimHeader,\n              'card__header--grid': gridHeader,\n            })}\n          >\n            <div className={classnames('card__title-section', { 'card__title-section--body-list': isBodyList })}>\n              {icon && <Icon sectionIcon icon={icon} />}\n\n              <div className=\"card__title-text\">\n                <TitleWrapper isPageTitle={isPageTitle} smallTitle={smallTitle} accessStatus={accessStatus}>\n                  {title}\n                </TitleWrapper>\n\n                {subtitle && (\n                  <div className={classnames('card__subtitle', { 'card__subtitle--small': smallTitle })}>\n                    {subtitle}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {(titleActions || expandable) && (\n              <div className=\"card__title-actions-container\">\n                {titleActions && (\n                  <div\n                    className={classnames('card__title-actions', {\n                      'card__title-actions--small': smallTitle,\n                    })}\n                  >\n                    {titleActions}\n                  </div>\n                )}\n                {expandable && (\n                  <div className=\"card__title-actions\">\n                    <Button\n                      button=\"alt\"\n                      aria-expanded={expanded}\n                      aria-label={expanded ? __('Less') : __('More')}\n                      icon={expanded ? ICONS.SUBTRACT : ICONS.ADD}\n                      onClick={() => setExpanded(!expanded)}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n\n            {headerActions}\n          </div>\n        )}\n\n        {(!expandable || (expandable && expanded)) && (\n          <>\n            {body && (\n              <div\n                className={classnames('card__body', {\n                  'card__body--no-title': !title && !subtitle,\n                  'card__body--list': isBodyList,\n                })}\n              >\n                {body}\n              </div>\n            )}\n            {actions && <div className=\"card__main-actions\">{actions}</div>}\n            {children && <div className=\"card__main-actions\">{children}</div>}\n          </>\n        )}\n\n        {nag}\n      </FirstPaneWrapper>\n\n      {secondPane && <div className=\"card__second-pane\">{secondPane}</div>}\n    </section>\n  );\n}\n\ntype FirstPaneProps = {\n  singlePane?: boolean,\n  children: any,\n};\n\nconst FirstPaneWrapper = (props: FirstPaneProps) => {\n  const { singlePane, children } = props;\n\n  return singlePane ? children : <div className=\"card__first-pane\">{children}</div>;\n};\n\ntype TitleProps = {\n  isPageTitle?: boolean,\n  smallTitle?: boolean,\n  children?: any,\n  emoji?: any,\n  accessStatus?: string,\n};\n\nconst TitleWrapper = (props: TitleProps) => {\n  const { isPageTitle, smallTitle, children, accessStatus } = props;\n\n  /*\n  const Twemoji = ({ emoji }) => (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: twemoji.parse(emoji, {\n          folder: 'svg',\n          ext: '.svg',\n        }),\n      }}\n    />\n  );\n  */\n\n  const AccessIndicator = (par: any) => {\n    return (\n      <Tooltip title={__('This is a members-only content')}>\n        <div\n          className={classnames('content-access-indicator', {\n            locked: par.status === 'locked',\n            unlocked: par.status === 'unlocked',\n            purchased: par.status === 'purchased',\n          })}\n        >\n          <Icon icon={par.status === 'locked' ? ICONS.LOCK : ICONS.UNLOCK} />\n        </div>\n      </Tooltip>\n    );\n  };\n\n  /*\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return <Twemoji emoji={children?.props?.children[child]} />;\n      }\n    }\n    return children;\n  }\n  */\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return children?.props?.children[child];\n      }\n    }\n    return children;\n  }\n\n  return isPageTitle ? (\n    <h1 className=\"card__title\">\n      {accessStatus && <AccessIndicator status={accessStatus} />}\n      <font dangerouslySetInnerHTML={{ __html: transformer(children) }} />\n    </h1>\n  ) : (\n    <h2 className={classnames('card__title', { 'card__title--small': smallTitle })}>{children}</h2>\n  );\n};\n\nexport default Card;\n","// @flow\nimport React from 'react';\nimport { Form, FormField } from 'component/common/form';\nimport Button from 'component/button';\nimport Card from 'component/common/card';\nimport { setSavedPassword } from 'util/saved-passwords';\nimport usePersistedState from 'effects/use-persisted-state';\nimport I18nMessage from 'component/i18nMessage';\nimport { useHistory } from 'react-router';\nimport { SITE_HELP_EMAIL } from 'config';\n\ntype Props = {\n  getSync: ((any, boolean) => void, ?string) => void,\n  getSyncIsPending: boolean,\n  email: string,\n  passwordError: boolean,\n  signOut: () => void,\n  handleSyncComplete: (any, boolean) => void,\n};\n\nfunction SyncPassword(props: Props) {\n  const { getSync, getSyncIsPending, email, signOut, passwordError, handleSyncComplete } = props;\n  const {\n    push,\n    location: { search },\n  } = useHistory();\n  const urlParams = new URLSearchParams(search);\n  const redirect = urlParams.get('redirect');\n  const [password, setPassword] = React.useState('');\n  const [rememberPassword, setRememberPassword] = usePersistedState(true);\n\n  function handleSubmit() {\n    getSync((error, hasDataChanged) => {\n      handleSyncComplete(error, hasDataChanged);\n\n      if (!error) {\n        push(redirect || '/');\n        setSavedPassword(password, rememberPassword);\n      }\n    }, password);\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Card\n        title={__('Enter your wallet password')}\n        subtitle={__(\n          'You set your wallet password when you previously installed LBRY. This may have been on different device.'\n        )}\n        actions={\n          <div>\n            <FormField\n              type=\"password\"\n              error={passwordError && __('Wrong password for %email%', { email })}\n              label={__('Password for %email%', { email })}\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <FormField\n              name=\"remember-password\"\n              type=\"checkbox\"\n              label={__('Remember My Password')}\n              checked={rememberPassword}\n              onChange={() => setRememberPassword(!rememberPassword)}\n            />\n            <div className=\"card__actions\">\n              <Button\n                type=\"submit\"\n                button=\"primary\"\n                label={getSyncIsPending ? __('Continue...') : __('Continue')}\n                disabled={getSyncIsPending}\n              />\n              <Button button=\"link\" label={__('Cancel')} onClick={signOut} />\n            </div>\n            <p className=\"help\">\n              <I18nMessage\n                tokens={{\n                  help: (\n                    <Button\n                      button=\"link\"\n                      label={__('help guide')}\n                      href=\"https://help.odysee.tv/category-basics/category-loggingin/\"\n                    />\n                  ),\n                  email: <Button button=\"link\" href={`mailto:${SITE_HELP_EMAIL}`} label={`${SITE_HELP_EMAIL}`} />,\n                }}\n              >\n                If you are having issues, checkout our %help% or email us at %email%.\n              </I18nMessage>\n            </p>\n          </div>\n        }\n      />\n    </Form>\n  );\n}\n\nexport default SyncPassword;\n","import { connect } from 'react-redux';\nimport { selectGetSyncIsPending, selectSyncApplyPasswordError } from 'redux/selectors/sync';\nimport { doGetSyncDesktop } from 'redux/actions/sync';\nimport { selectUserEmail } from 'redux/selectors/user';\nimport { doSetClientSetting } from 'redux/actions/settings';\nimport { doSignOut, doHandleSyncComplete } from 'redux/actions/app';\nimport SyncPassword from './view';\n\nconst select = state => ({\n  getSyncIsPending: selectGetSyncIsPending(state),\n  email: selectUserEmail(state),\n  passwordError: selectSyncApplyPasswordError(state),\n});\n\nconst perform = dispatch => ({\n  getSync: (cb, password) => dispatch(doGetSyncDesktop(cb, password)),\n  setClientSetting: (key, value) => dispatch(doSetClientSetting(key, value)),\n  handleSyncComplete: (error, hasDataChanged) => dispatch(doHandleSyncComplete(error, hasDataChanged)),\n  signOut: () => dispatch(doSignOut()),\n});\n\nexport default connect(select, perform)(SyncPassword);\n","import { connect } from 'react-redux';\nimport { doToast } from 'redux/actions/notifications';\nimport SignInWalletPasswordPage from './view';\n\nconst select = () => ({});\nconst perform = {\n  doToast,\n};\n\nexport default connect(select, perform)(SignInWalletPasswordPage);\n","import React from 'react';\nimport Page from 'component/page';\nimport SyncPassword from 'component/syncPassword';\n\nexport default function SignInWalletPasswordPage() {\n  return (\n    <Page authPage>\n      <SyncPassword />\n    </Page>\n  );\n}\n"],"names":["FirstPaneWrapper","props","singlePane","children","React","className","TitleWrapper","isPageTitle","smallTitle","accessStatus","AccessIndicator","par","Tooltip","title","__","classnames","locked","status","unlocked","purchased","Icon","icon","ICONS","dangerouslySetInnerHTML","__html","child","_children$props","_children$props2","_children$props3","transformer","subtitle","titleActions","id","body","actions","_props$isPageTitle","_props$isBodyList","isBodyList","_props$smallTitle","defaultExpand","nag","_onClick","onClick","secondPane","slimHeader","background","backgroundImage","headerActions","gridHeader","_useState2","_slicedToArray","useState","expanded","setExpanded","expandable","undefined","role","Boolean","e","stopPropagation","style","sectionIcon","Button","button","getSync","getSyncIsPending","email","signOut","passwordError","handleSyncComplete","_useHistory","useHistory","push","search","location","redirect","URLSearchParams","get","_React$useState2","password","setPassword","_usePersistedState2","usePersistedState","rememberPassword","setRememberPassword","Form","onSubmit","error","hasDataChanged","setSavedPassword","Card","FormField","type","label","value","onChange","target","name","checked","disabled","I18nMessage","tokens","help","href","concat","SITE_HELP_EMAIL","connect","state","selectGetSyncIsPending","selectUserEmail","selectSyncApplyPasswordError","dispatch","cb","doGetSyncDesktop","setClientSetting","key","doSetClientSetting","doHandleSyncComplete","doSignOut","SyncPassword","perform","doToast","Page","authPage"],"sourceRoot":""}