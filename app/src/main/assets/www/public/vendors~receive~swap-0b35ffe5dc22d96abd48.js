(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendors~receive~swap"],{

/***/ "../node_modules/qr.js/lib/8BitByte.js":
/*!*********************************************!*\
  !*** ../node_modules/qr.js/lib/8BitByte.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var mode = __webpack_require__(/*! ./mode */ \"../node_modules/qr.js/lib/mode.js\");\n\nfunction QR8bitByte(data) {\n  this.mode = mode.MODE_8BIT_BYTE;\n  this.data = data;\n}\n\nQR8bitByte.prototype = {\n  getLength: function getLength(buffer) {\n    return this.data.length;\n  },\n  write: function write(buffer) {\n    for (var i = 0; i < this.data.length; i++) {\n      // not JIS ...\n      buffer.put(this.data.charCodeAt(i), 8);\n    }\n  }\n};\nmodule.exports = QR8bitByte;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL3FyLmpzL2xpYi84Qml0Qnl0ZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvcXIuanMvbGliLzhCaXRCeXRlLmpzP2ViNTQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vZGUgPSByZXF1aXJlKCcuL21vZGUnKTtcblxuZnVuY3Rpb24gUVI4Yml0Qnl0ZShkYXRhKSB7XG5cdHRoaXMubW9kZSA9IG1vZGUuTU9ERV84QklUX0JZVEU7XG5cdHRoaXMuZGF0YSA9IGRhdGE7XG59XG5cblFSOGJpdEJ5dGUucHJvdG90eXBlID0ge1xuXG5cdGdldExlbmd0aCA6IGZ1bmN0aW9uKGJ1ZmZlcikge1xuXHRcdHJldHVybiB0aGlzLmRhdGEubGVuZ3RoO1xuXHR9LFxuXHRcblx0d3JpdGUgOiBmdW5jdGlvbihidWZmZXIpIHtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuZGF0YS5sZW5ndGg7IGkrKykge1xuXHRcdFx0Ly8gbm90IEpJUyAuLi5cblx0XHRcdGJ1ZmZlci5wdXQodGhpcy5kYXRhLmNoYXJDb2RlQXQoaSksIDgpO1xuXHRcdH1cblx0fVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBRUjhiaXRCeXRlO1xuXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFYQTtBQWNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/qr.js/lib/8BitByte.js\n");

/***/ }),

/***/ "../node_modules/qr.js/lib/BitBuffer.js":
/*!**********************************************!*\
  !*** ../node_modules/qr.js/lib/BitBuffer.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function QRBitBuffer() {\n  this.buffer = new Array();\n  this.length = 0;\n}\n\nQRBitBuffer.prototype = {\n  get: function get(index) {\n    var bufIndex = Math.floor(index / 8);\n    return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;\n  },\n  put: function put(num, length) {\n    for (var i = 0; i < length; i++) {\n      this.putBit((num >>> length - i - 1 & 1) == 1);\n    }\n  },\n  getLengthInBits: function getLengthInBits() {\n    return this.length;\n  },\n  putBit: function putBit(bit) {\n    var bufIndex = Math.floor(this.length / 8);\n\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0);\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n    }\n\n    this.length++;\n  }\n};\nmodule.exports = QRBitBuffer;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL3FyLmpzL2xpYi9CaXRCdWZmZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3FyLmpzL2xpYi9CaXRCdWZmZXIuanM/ZTcwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBRUkJpdEJ1ZmZlcigpIHtcblx0dGhpcy5idWZmZXIgPSBuZXcgQXJyYXkoKTtcblx0dGhpcy5sZW5ndGggPSAwO1xufVxuXG5RUkJpdEJ1ZmZlci5wcm90b3R5cGUgPSB7XG5cblx0Z2V0IDogZnVuY3Rpb24oaW5kZXgpIHtcblx0XHR2YXIgYnVmSW5kZXggPSBNYXRoLmZsb29yKGluZGV4IC8gOCk7XG5cdFx0cmV0dXJuICggKHRoaXMuYnVmZmVyW2J1ZkluZGV4XSA+Pj4gKDcgLSBpbmRleCAlIDgpICkgJiAxKSA9PSAxO1xuXHR9LFxuXHRcblx0cHV0IDogZnVuY3Rpb24obnVtLCBsZW5ndGgpIHtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG5cdFx0XHR0aGlzLnB1dEJpdCggKCAobnVtID4+PiAobGVuZ3RoIC0gaSAtIDEpICkgJiAxKSA9PSAxKTtcblx0XHR9XG5cdH0sXG5cdFxuXHRnZXRMZW5ndGhJbkJpdHMgOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5sZW5ndGg7XG5cdH0sXG5cdFxuXHRwdXRCaXQgOiBmdW5jdGlvbihiaXQpIHtcblx0XG5cdFx0dmFyIGJ1ZkluZGV4ID0gTWF0aC5mbG9vcih0aGlzLmxlbmd0aCAvIDgpO1xuXHRcdGlmICh0aGlzLmJ1ZmZlci5sZW5ndGggPD0gYnVmSW5kZXgpIHtcblx0XHRcdHRoaXMuYnVmZmVyLnB1c2goMCk7XG5cdFx0fVxuXHRcblx0XHRpZiAoYml0KSB7XG5cdFx0XHR0aGlzLmJ1ZmZlcltidWZJbmRleF0gfD0gKDB4ODAgPj4+ICh0aGlzLmxlbmd0aCAlIDgpICk7XG5cdFx0fVxuXHRcblx0XHR0aGlzLmxlbmd0aCsrO1xuXHR9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFFSQml0QnVmZmVyO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFKQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBVkE7QUFhQTtBQUNBO0FBZEE7QUFpQkE7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUE3QkE7QUFnQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/qr.js/lib/BitBuffer.js\n");

/***/ }),

/***/ "../node_modules/qr.js/lib/ErrorCorrectLevel.js":
/*!******************************************************!*\
  !*** ../node_modules/qr.js/lib/ErrorCorrectLevel.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  L: 1,\n  M: 0,\n  Q: 3,\n  H: 2\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL3FyLmpzL2xpYi9FcnJvckNvcnJlY3RMZXZlbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvcXIuanMvbGliL0Vycm9yQ29ycmVjdExldmVsLmpzPzNjODIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG5cdEwgOiAxLFxuXHRNIDogMCxcblx0USA6IDMsXG5cdEggOiAyXG59O1xuXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/qr.js/lib/ErrorCorrectLevel.js\n");

/***/ }),

/***/ "../node_modules/qr.js/lib/Polynomial.js":
/*!***********************************************!*\
  !*** ../node_modules/qr.js/lib/Polynomial.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var math = __webpack_require__(/*! ./math */ \"../node_modules/qr.js/lib/math.js\");\n\nfunction QRPolynomial(num, shift) {\n  if (num.length == undefined) {\n    throw new Error(num.length + \"/\" + shift);\n  }\n\n  var offset = 0;\n\n  while (offset < num.length && num[offset] == 0) {\n    offset++;\n  }\n\n  this.num = new Array(num.length - offset + shift);\n\n  for (var i = 0; i < num.length - offset; i++) {\n    this.num[i] = num[i + offset];\n  }\n}\n\nQRPolynomial.prototype = {\n  get: function get(index) {\n    return this.num[index];\n  },\n  getLength: function getLength() {\n    return this.num.length;\n  },\n  multiply: function multiply(e) {\n    var num = new Array(this.getLength() + e.getLength() - 1);\n\n    for (var i = 0; i < this.getLength(); i++) {\n      for (var j = 0; j < e.getLength(); j++) {\n        num[i + j] ^= math.gexp(math.glog(this.get(i)) + math.glog(e.get(j)));\n      }\n    }\n\n    return new QRPolynomial(num, 0);\n  },\n  mod: function mod(e) {\n    if (this.getLength() - e.getLength() < 0) {\n      return this;\n    }\n\n    var ratio = math.glog(this.get(0)) - math.glog(e.get(0));\n    var num = new Array(this.getLength());\n\n    for (var i = 0; i < this.getLength(); i++) {\n      num[i] = this.get(i);\n    }\n\n    for (var i = 0; i < e.getLength(); i++) {\n      num[i] ^= math.gexp(math.glog(e.get(i)) + ratio);\n    } // recursive call\n\n\n    return new QRPolynomial(num, 0).mod(e);\n  }\n};\nmodule.exports = QRPolynomial;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL3FyLmpzL2xpYi9Qb2x5bm9taWFsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9xci5qcy9saWIvUG9seW5vbWlhbC5qcz8yMTI4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBtYXRoID0gcmVxdWlyZSgnLi9tYXRoJyk7XG5cbmZ1bmN0aW9uIFFSUG9seW5vbWlhbChudW0sIHNoaWZ0KSB7XG5cblx0aWYgKG51bS5sZW5ndGggPT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKG51bS5sZW5ndGggKyBcIi9cIiArIHNoaWZ0KTtcblx0fVxuXG5cdHZhciBvZmZzZXQgPSAwO1xuXG5cdHdoaWxlIChvZmZzZXQgPCBudW0ubGVuZ3RoICYmIG51bVtvZmZzZXRdID09IDApIHtcblx0XHRvZmZzZXQrKztcblx0fVxuXG5cdHRoaXMubnVtID0gbmV3IEFycmF5KG51bS5sZW5ndGggLSBvZmZzZXQgKyBzaGlmdCk7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgbnVtLmxlbmd0aCAtIG9mZnNldDsgaSsrKSB7XG5cdFx0dGhpcy5udW1baV0gPSBudW1baSArIG9mZnNldF07XG5cdH1cbn1cblxuUVJQb2x5bm9taWFsLnByb3RvdHlwZSA9IHtcblxuXHRnZXQgOiBmdW5jdGlvbihpbmRleCkge1xuXHRcdHJldHVybiB0aGlzLm51bVtpbmRleF07XG5cdH0sXG5cdFxuXHRnZXRMZW5ndGggOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5udW0ubGVuZ3RoO1xuXHR9LFxuXHRcblx0bXVsdGlwbHkgOiBmdW5jdGlvbihlKSB7XG5cdFxuXHRcdHZhciBudW0gPSBuZXcgQXJyYXkodGhpcy5nZXRMZW5ndGgoKSArIGUuZ2V0TGVuZ3RoKCkgLSAxKTtcblx0XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmdldExlbmd0aCgpOyBpKyspIHtcblx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgZS5nZXRMZW5ndGgoKTsgaisrKSB7XG5cdFx0XHRcdG51bVtpICsgal0gXj0gbWF0aC5nZXhwKG1hdGguZ2xvZyh0aGlzLmdldChpKSApICsgbWF0aC5nbG9nKGUuZ2V0KGopICkgKTtcblx0XHRcdH1cblx0XHR9XG5cdFxuXHRcdHJldHVybiBuZXcgUVJQb2x5bm9taWFsKG51bSwgMCk7XG5cdH0sXG5cdFxuXHRtb2QgOiBmdW5jdGlvbihlKSB7XG5cdFxuXHRcdGlmICh0aGlzLmdldExlbmd0aCgpIC0gZS5nZXRMZW5ndGgoKSA8IDApIHtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblx0XG5cdFx0dmFyIHJhdGlvID0gbWF0aC5nbG9nKHRoaXMuZ2V0KDApICkgLSBtYXRoLmdsb2coZS5nZXQoMCkgKTtcblx0XG5cdFx0dmFyIG51bSA9IG5ldyBBcnJheSh0aGlzLmdldExlbmd0aCgpICk7XG5cdFx0XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmdldExlbmd0aCgpOyBpKyspIHtcblx0XHRcdG51bVtpXSA9IHRoaXMuZ2V0KGkpO1xuXHRcdH1cblx0XHRcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGUuZ2V0TGVuZ3RoKCk7IGkrKykge1xuXHRcdFx0bnVtW2ldIF49IG1hdGguZ2V4cChtYXRoLmdsb2coZS5nZXQoaSkgKSArIHJhdGlvKTtcblx0XHR9XG5cdFxuXHRcdC8vIHJlY3Vyc2l2ZSBjYWxsXG5cdFx0cmV0dXJuIG5ldyBRUlBvbHlub21pYWwobnVtLCAwKS5tb2QoZSk7XG5cdH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gUVJQb2x5bm9taWFsO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBUEE7QUFVQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXBCQTtBQXVCQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBZkE7QUFDQTtBQUNBO0FBaUJBO0FBQ0E7QUEzQ0E7QUE4Q0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/qr.js/lib/Polynomial.js\n");

/***/ }),

/***/ "../node_modules/qr.js/lib/QRCode.js":
/*!*******************************************!*\
  !*** ../node_modules/qr.js/lib/QRCode.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var BitByte = __webpack_require__(/*! ./8BitByte */ \"../node_modules/qr.js/lib/8BitByte.js\");\n\nvar RSBlock = __webpack_require__(/*! ./RSBlock */ \"../node_modules/qr.js/lib/RSBlock.js\");\n\nvar BitBuffer = __webpack_require__(/*! ./BitBuffer */ \"../node_modules/qr.js/lib/BitBuffer.js\");\n\nvar util = __webpack_require__(/*! ./util */ \"../node_modules/qr.js/lib/util.js\");\n\nvar Polynomial = __webpack_require__(/*! ./Polynomial */ \"../node_modules/qr.js/lib/Polynomial.js\");\n\nfunction QRCode(typeNumber, errorCorrectLevel) {\n  this.typeNumber = typeNumber;\n  this.errorCorrectLevel = errorCorrectLevel;\n  this.modules = null;\n  this.moduleCount = 0;\n  this.dataCache = null;\n  this.dataList = [];\n} // for client side minification\n\n\nvar proto = QRCode.prototype;\n\nproto.addData = function (data) {\n  var newData = new BitByte(data);\n  this.dataList.push(newData);\n  this.dataCache = null;\n};\n\nproto.isDark = function (row, col) {\n  if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n    throw new Error(row + \",\" + col);\n  }\n\n  return this.modules[row][col];\n};\n\nproto.getModuleCount = function () {\n  return this.moduleCount;\n};\n\nproto.make = function () {\n  // Calculate automatically typeNumber if provided is < 1\n  if (this.typeNumber < 1) {\n    var typeNumber = 1;\n\n    for (typeNumber = 1; typeNumber < 40; typeNumber++) {\n      var rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n      var buffer = new BitBuffer();\n      var totalDataCount = 0;\n\n      for (var i = 0; i < rsBlocks.length; i++) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n\n      for (var i = 0; i < this.dataList.length; i++) {\n        var data = this.dataList[i];\n        buffer.put(data.mode, 4);\n        buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber));\n        data.write(buffer);\n      }\n\n      if (buffer.getLengthInBits() <= totalDataCount * 8) break;\n    }\n\n    this.typeNumber = typeNumber;\n  }\n\n  this.makeImpl(false, this.getBestMaskPattern());\n};\n\nproto.makeImpl = function (test, maskPattern) {\n  this.moduleCount = this.typeNumber * 4 + 17;\n  this.modules = new Array(this.moduleCount);\n\n  for (var row = 0; row < this.moduleCount; row++) {\n    this.modules[row] = new Array(this.moduleCount);\n\n    for (var col = 0; col < this.moduleCount; col++) {\n      this.modules[row][col] = null; //(col + row) % 3;\n    }\n  }\n\n  this.setupPositionProbePattern(0, 0);\n  this.setupPositionProbePattern(this.moduleCount - 7, 0);\n  this.setupPositionProbePattern(0, this.moduleCount - 7);\n  this.setupPositionAdjustPattern();\n  this.setupTimingPattern();\n  this.setupTypeInfo(test, maskPattern);\n\n  if (this.typeNumber >= 7) {\n    this.setupTypeNumber(test);\n  }\n\n  if (this.dataCache == null) {\n    this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n  }\n\n  this.mapData(this.dataCache, maskPattern);\n};\n\nproto.setupPositionProbePattern = function (row, col) {\n  for (var r = -1; r <= 7; r++) {\n    if (row + r <= -1 || this.moduleCount <= row + r) continue;\n\n    for (var c = -1; c <= 7; c++) {\n      if (col + c <= -1 || this.moduleCount <= col + c) continue;\n\n      if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {\n        this.modules[row + r][col + c] = true;\n      } else {\n        this.modules[row + r][col + c] = false;\n      }\n    }\n  }\n};\n\nproto.getBestMaskPattern = function () {\n  var minLostPoint = 0;\n  var pattern = 0;\n\n  for (var i = 0; i < 8; i++) {\n    this.makeImpl(true, i);\n    var lostPoint = util.getLostPoint(this);\n\n    if (i == 0 || minLostPoint > lostPoint) {\n      minLostPoint = lostPoint;\n      pattern = i;\n    }\n  }\n\n  return pattern;\n};\n\nproto.createMovieClip = function (target_mc, instance_name, depth) {\n  var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n  var cs = 1;\n  this.make();\n\n  for (var row = 0; row < this.modules.length; row++) {\n    var y = row * cs;\n\n    for (var col = 0; col < this.modules[row].length; col++) {\n      var x = col * cs;\n      var dark = this.modules[row][col];\n\n      if (dark) {\n        qr_mc.beginFill(0, 100);\n        qr_mc.moveTo(x, y);\n        qr_mc.lineTo(x + cs, y);\n        qr_mc.lineTo(x + cs, y + cs);\n        qr_mc.lineTo(x, y + cs);\n        qr_mc.endFill();\n      }\n    }\n  }\n\n  return qr_mc;\n};\n\nproto.setupTimingPattern = function () {\n  for (var r = 8; r < this.moduleCount - 8; r++) {\n    if (this.modules[r][6] != null) {\n      continue;\n    }\n\n    this.modules[r][6] = r % 2 == 0;\n  }\n\n  for (var c = 8; c < this.moduleCount - 8; c++) {\n    if (this.modules[6][c] != null) {\n      continue;\n    }\n\n    this.modules[6][c] = c % 2 == 0;\n  }\n};\n\nproto.setupPositionAdjustPattern = function () {\n  var pos = util.getPatternPosition(this.typeNumber);\n\n  for (var i = 0; i < pos.length; i++) {\n    for (var j = 0; j < pos.length; j++) {\n      var row = pos[i];\n      var col = pos[j];\n\n      if (this.modules[row][col] != null) {\n        continue;\n      }\n\n      for (var r = -2; r <= 2; r++) {\n        for (var c = -2; c <= 2; c++) {\n          if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {\n            this.modules[row + r][col + c] = true;\n          } else {\n            this.modules[row + r][col + c] = false;\n          }\n        }\n      }\n    }\n  }\n};\n\nproto.setupTypeNumber = function (test) {\n  var bits = util.getBCHTypeNumber(this.typeNumber);\n\n  for (var i = 0; i < 18; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n    this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n  }\n\n  for (var i = 0; i < 18; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n    this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n  }\n};\n\nproto.setupTypeInfo = function (test, maskPattern) {\n  var data = this.errorCorrectLevel << 3 | maskPattern;\n  var bits = util.getBCHTypeInfo(data); // vertical\t\t\n\n  for (var i = 0; i < 15; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n\n    if (i < 6) {\n      this.modules[i][8] = mod;\n    } else if (i < 8) {\n      this.modules[i + 1][8] = mod;\n    } else {\n      this.modules[this.moduleCount - 15 + i][8] = mod;\n    }\n  } // horizontal\n\n\n  for (var i = 0; i < 15; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n\n    if (i < 8) {\n      this.modules[8][this.moduleCount - i - 1] = mod;\n    } else if (i < 9) {\n      this.modules[8][15 - i - 1 + 1] = mod;\n    } else {\n      this.modules[8][15 - i - 1] = mod;\n    }\n  } // fixed module\n\n\n  this.modules[this.moduleCount - 8][8] = !test;\n};\n\nproto.mapData = function (data, maskPattern) {\n  var inc = -1;\n  var row = this.moduleCount - 1;\n  var bitIndex = 7;\n  var byteIndex = 0;\n\n  for (var col = this.moduleCount - 1; col > 0; col -= 2) {\n    if (col == 6) col--;\n\n    while (true) {\n      for (var c = 0; c < 2; c++) {\n        if (this.modules[row][col - c] == null) {\n          var dark = false;\n\n          if (byteIndex < data.length) {\n            dark = (data[byteIndex] >>> bitIndex & 1) == 1;\n          }\n\n          var mask = util.getMask(maskPattern, row, col - c);\n\n          if (mask) {\n            dark = !dark;\n          }\n\n          this.modules[row][col - c] = dark;\n          bitIndex--;\n\n          if (bitIndex == -1) {\n            byteIndex++;\n            bitIndex = 7;\n          }\n        }\n      }\n\n      row += inc;\n\n      if (row < 0 || this.moduleCount <= row) {\n        row -= inc;\n        inc = -inc;\n        break;\n      }\n    }\n  }\n};\n\nQRCode.PAD0 = 0xEC;\nQRCode.PAD1 = 0x11;\n\nQRCode.createData = function (typeNumber, errorCorrectLevel, dataList) {\n  var rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n  var buffer = new BitBuffer();\n\n  for (var i = 0; i < dataList.length; i++) {\n    var data = dataList[i];\n    buffer.put(data.mode, 4);\n    buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber));\n    data.write(buffer);\n  } // calc num max data.\n\n\n  var totalDataCount = 0;\n\n  for (var i = 0; i < rsBlocks.length; i++) {\n    totalDataCount += rsBlocks[i].dataCount;\n  }\n\n  if (buffer.getLengthInBits() > totalDataCount * 8) {\n    throw new Error(\"code length overflow. (\" + buffer.getLengthInBits() + \">\" + totalDataCount * 8 + \")\");\n  } // end code\n\n\n  if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n    buffer.put(0, 4);\n  } // padding\n\n\n  while (buffer.getLengthInBits() % 8 != 0) {\n    buffer.putBit(false);\n  } // padding\n\n\n  while (true) {\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\n      break;\n    }\n\n    buffer.put(QRCode.PAD0, 8);\n\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\n      break;\n    }\n\n    buffer.put(QRCode.PAD1, 8);\n  }\n\n  return QRCode.createBytes(buffer, rsBlocks);\n};\n\nQRCode.createBytes = function (buffer, rsBlocks) {\n  var offset = 0;\n  var maxDcCount = 0;\n  var maxEcCount = 0;\n  var dcdata = new Array(rsBlocks.length);\n  var ecdata = new Array(rsBlocks.length);\n\n  for (var r = 0; r < rsBlocks.length; r++) {\n    var dcCount = rsBlocks[r].dataCount;\n    var ecCount = rsBlocks[r].totalCount - dcCount;\n    maxDcCount = Math.max(maxDcCount, dcCount);\n    maxEcCount = Math.max(maxEcCount, ecCount);\n    dcdata[r] = new Array(dcCount);\n\n    for (var i = 0; i < dcdata[r].length; i++) {\n      dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n    }\n\n    offset += dcCount;\n    var rsPoly = util.getErrorCorrectPolynomial(ecCount);\n    var rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);\n    var modPoly = rawPoly.mod(rsPoly);\n    ecdata[r] = new Array(rsPoly.getLength() - 1);\n\n    for (var i = 0; i < ecdata[r].length; i++) {\n      var modIndex = i + modPoly.getLength() - ecdata[r].length;\n      ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n    }\n  }\n\n  var totalCodeCount = 0;\n\n  for (var i = 0; i < rsBlocks.length; i++) {\n    totalCodeCount += rsBlocks[i].totalCount;\n  }\n\n  var data = new Array(totalCodeCount);\n  var index = 0;\n\n  for (var i = 0; i < maxDcCount; i++) {\n    for (var r = 0; r < rsBlocks.length; r++) {\n      if (i < dcdata[r].length) {\n        data[index++] = dcdata[r][i];\n      }\n    }\n  }\n\n  for (var i = 0; i < maxEcCount; i++) {\n    for (var r = 0; r < rsBlocks.length; r++) {\n      if (i < ecdata[r].length) {\n        data[index++] = ecdata[r][i];\n      }\n    }\n  }\n\n  return data;\n};\n\nmodule.exports = QRCode;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/qr.js/lib/QRCode.js\n");

/***/ }),

/***/ "../node_modules/qr.js/lib/RSBlock.js":
/*!********************************************!*\
  !*** ../node_modules/qr.js/lib/RSBlock.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// ErrorCorrectLevel\nvar ECL = __webpack_require__(/*! ./ErrorCorrectLevel */ \"../node_modules/qr.js/lib/ErrorCorrectLevel.js\");\n\nfunction QRRSBlock(totalCount, dataCount) {\n  this.totalCount = totalCount;\n  this.dataCount = dataCount;\n}\n\nQRRSBlock.RS_BLOCK_TABLE = [// L\n// M\n// Q\n// H\n// 1\n[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], // 2\n[1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], // 3\n[1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], // 4\t\t\n[1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], // 5\n[1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], // 6\n[2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], // 7\t\t\n[2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], // 8\n[2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], // 9\n[2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], // 10\t\t\n[2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], // 11\n[4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], // 12\n[2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], // 13\n[4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], // 14\n[3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], // 15\n[5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12], // 16\n[5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], // 17\n[1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], // 18\n[5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], // 19\n[3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], // 20\n[3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], // 21\n[4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], // 22\n[2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], // 23\n[4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], // 24\n[6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], // 25\n[8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], // 26\n[10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], // 27\n[8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], // 28\n[3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], // 29\n[7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], // 30\n[5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], // 31\n[13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], // 32\n[17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], // 33\n[17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], // 34\n[13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], // 35\n[12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], // 36\n[6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], // 37\n[17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], // 38\n[4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], // 39\n[20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], // 40\n[19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];\n\nQRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {\n  var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n\n  if (rsBlock == undefined) {\n    throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n  }\n\n  var length = rsBlock.length / 3;\n  var list = new Array();\n\n  for (var i = 0; i < length; i++) {\n    var count = rsBlock[i * 3 + 0];\n    var totalCount = rsBlock[i * 3 + 1];\n    var dataCount = rsBlock[i * 3 + 2];\n\n    for (var j = 0; j < count; j++) {\n      list.push(new QRRSBlock(totalCount, dataCount));\n    }\n  }\n\n  return list;\n};\n\nQRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {\n  switch (errorCorrectLevel) {\n    case ECL.L:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n\n    case ECL.M:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n\n    case ECL.Q:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n\n    case ECL.H:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n\n    default:\n      return undefined;\n  }\n};\n\nmodule.exports = QRRSBlock;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/qr.js/lib/RSBlock.js\n");

/***/ }),

/***/ "../node_modules/qr.js/lib/math.js":
/*!*****************************************!*\
  !*** ../node_modules/qr.js/lib/math.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var QRMath = {\n  glog: function glog(n) {\n    if (n < 1) {\n      throw new Error(\"glog(\" + n + \")\");\n    }\n\n    return QRMath.LOG_TABLE[n];\n  },\n  gexp: function gexp(n) {\n    while (n < 0) {\n      n += 255;\n    }\n\n    while (n >= 256) {\n      n -= 255;\n    }\n\n    return QRMath.EXP_TABLE[n];\n  },\n  EXP_TABLE: new Array(256),\n  LOG_TABLE: new Array(256)\n};\n\nfor (var i = 0; i < 8; i++) {\n  QRMath.EXP_TABLE[i] = 1 << i;\n}\n\nfor (var i = 8; i < 256; i++) {\n  QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];\n}\n\nfor (var i = 0; i < 255; i++) {\n  QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n}\n\nmodule.exports = QRMath;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL3FyLmpzL2xpYi9tYXRoLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9xci5qcy9saWIvbWF0aC5qcz9mN2MzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBRUk1hdGggPSB7XG5cblx0Z2xvZyA6IGZ1bmN0aW9uKG4pIHtcblx0XG5cdFx0aWYgKG4gPCAxKSB7XG5cdFx0XHR0aHJvdyBuZXcgRXJyb3IoXCJnbG9nKFwiICsgbiArIFwiKVwiKTtcblx0XHR9XG5cdFx0XG5cdFx0cmV0dXJuIFFSTWF0aC5MT0dfVEFCTEVbbl07XG5cdH0sXG5cdFxuXHRnZXhwIDogZnVuY3Rpb24obikge1xuXHRcblx0XHR3aGlsZSAobiA8IDApIHtcblx0XHRcdG4gKz0gMjU1O1xuXHRcdH1cblx0XG5cdFx0d2hpbGUgKG4gPj0gMjU2KSB7XG5cdFx0XHRuIC09IDI1NTtcblx0XHR9XG5cdFxuXHRcdHJldHVybiBRUk1hdGguRVhQX1RBQkxFW25dO1xuXHR9LFxuXHRcblx0RVhQX1RBQkxFIDogbmV3IEFycmF5KDI1NiksXG5cdFxuXHRMT0dfVEFCTEUgOiBuZXcgQXJyYXkoMjU2KVxuXG59O1xuXHRcbmZvciAodmFyIGkgPSAwOyBpIDwgODsgaSsrKSB7XG5cdFFSTWF0aC5FWFBfVEFCTEVbaV0gPSAxIDw8IGk7XG59XG5mb3IgKHZhciBpID0gODsgaSA8IDI1NjsgaSsrKSB7XG5cdFFSTWF0aC5FWFBfVEFCTEVbaV0gPSBRUk1hdGguRVhQX1RBQkxFW2kgLSA0XVxuXHRcdF4gUVJNYXRoLkVYUF9UQUJMRVtpIC0gNV1cblx0XHReIFFSTWF0aC5FWFBfVEFCTEVbaSAtIDZdXG5cdFx0XiBRUk1hdGguRVhQX1RBQkxFW2kgLSA4XTtcbn1cbmZvciAodmFyIGkgPSAwOyBpIDwgMjU1OyBpKyspIHtcblx0UVJNYXRoLkxPR19UQUJMRVtRUk1hdGguRVhQX1RBQkxFW2ldIF0gPSBpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFFSTWF0aDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFSQTtBQVdBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBckJBO0FBd0JBO0FBRUE7QUExQkE7QUFDQTtBQTZCQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFJQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/qr.js/lib/math.js\n");

/***/ }),

/***/ "../node_modules/qr.js/lib/mode.js":
/*!*****************************************!*\
  !*** ../node_modules/qr.js/lib/mode.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  MODE_NUMBER: 1 << 0,\n  MODE_ALPHA_NUM: 1 << 1,\n  MODE_8BIT_BYTE: 1 << 2,\n  MODE_KANJI: 1 << 3\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL3FyLmpzL2xpYi9tb2RlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9xci5qcy9saWIvbW9kZS5qcz9hMGI1Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xuXHRNT0RFX05VTUJFUiA6XHRcdDEgPDwgMCxcblx0TU9ERV9BTFBIQV9OVU0gOiBcdDEgPDwgMSxcblx0TU9ERV84QklUX0JZVEUgOiBcdDEgPDwgMixcblx0TU9ERV9LQU5KSSA6XHRcdDEgPDwgM1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/qr.js/lib/mode.js\n");

/***/ }),

/***/ "../node_modules/qr.js/lib/util.js":
/*!*****************************************!*\
  !*** ../node_modules/qr.js/lib/util.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Mode = __webpack_require__(/*! ./mode */ \"../node_modules/qr.js/lib/mode.js\");\n\nvar Polynomial = __webpack_require__(/*! ./Polynomial */ \"../node_modules/qr.js/lib/Polynomial.js\");\n\nvar math = __webpack_require__(/*! ./math */ \"../node_modules/qr.js/lib/math.js\");\n\nvar QRMaskPattern = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n};\nvar QRUtil = {\n  PATTERN_POSITION_TABLE: [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]],\n  G15: 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0,\n  G18: 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0,\n  G15_MASK: 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1,\n  getBCHTypeInfo: function getBCHTypeInfo(data) {\n    var d = data << 10;\n\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n      d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);\n    }\n\n    return (data << 10 | d) ^ QRUtil.G15_MASK;\n  },\n  getBCHTypeNumber: function getBCHTypeNumber(data) {\n    var d = data << 12;\n\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n      d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);\n    }\n\n    return data << 12 | d;\n  },\n  getBCHDigit: function getBCHDigit(data) {\n    var digit = 0;\n\n    while (data != 0) {\n      digit++;\n      data >>>= 1;\n    }\n\n    return digit;\n  },\n  getPatternPosition: function getPatternPosition(typeNumber) {\n    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n  },\n  getMask: function getMask(maskPattern, i, j) {\n    switch (maskPattern) {\n      case QRMaskPattern.PATTERN000:\n        return (i + j) % 2 == 0;\n\n      case QRMaskPattern.PATTERN001:\n        return i % 2 == 0;\n\n      case QRMaskPattern.PATTERN010:\n        return j % 3 == 0;\n\n      case QRMaskPattern.PATTERN011:\n        return (i + j) % 3 == 0;\n\n      case QRMaskPattern.PATTERN100:\n        return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n\n      case QRMaskPattern.PATTERN101:\n        return i * j % 2 + i * j % 3 == 0;\n\n      case QRMaskPattern.PATTERN110:\n        return (i * j % 2 + i * j % 3) % 2 == 0;\n\n      case QRMaskPattern.PATTERN111:\n        return (i * j % 3 + (i + j) % 2) % 2 == 0;\n\n      default:\n        throw new Error(\"bad maskPattern:\" + maskPattern);\n    }\n  },\n  getErrorCorrectPolynomial: function getErrorCorrectPolynomial(errorCorrectLength) {\n    var a = new Polynomial([1], 0);\n\n    for (var i = 0; i < errorCorrectLength; i++) {\n      a = a.multiply(new Polynomial([1, math.gexp(i)], 0));\n    }\n\n    return a;\n  },\n  getLengthInBits: function getLengthInBits(mode, type) {\n    if (1 <= type && type < 10) {\n      // 1 - 9\n      switch (mode) {\n        case Mode.MODE_NUMBER:\n          return 10;\n\n        case Mode.MODE_ALPHA_NUM:\n          return 9;\n\n        case Mode.MODE_8BIT_BYTE:\n          return 8;\n\n        case Mode.MODE_KANJI:\n          return 8;\n\n        default:\n          throw new Error(\"mode:\" + mode);\n      }\n    } else if (type < 27) {\n      // 10 - 26\n      switch (mode) {\n        case Mode.MODE_NUMBER:\n          return 12;\n\n        case Mode.MODE_ALPHA_NUM:\n          return 11;\n\n        case Mode.MODE_8BIT_BYTE:\n          return 16;\n\n        case Mode.MODE_KANJI:\n          return 10;\n\n        default:\n          throw new Error(\"mode:\" + mode);\n      }\n    } else if (type < 41) {\n      // 27 - 40\n      switch (mode) {\n        case Mode.MODE_NUMBER:\n          return 14;\n\n        case Mode.MODE_ALPHA_NUM:\n          return 13;\n\n        case Mode.MODE_8BIT_BYTE:\n          return 16;\n\n        case Mode.MODE_KANJI:\n          return 12;\n\n        default:\n          throw new Error(\"mode:\" + mode);\n      }\n    } else {\n      throw new Error(\"type:\" + type);\n    }\n  },\n  getLostPoint: function getLostPoint(qrCode) {\n    var moduleCount = qrCode.getModuleCount();\n    var lostPoint = 0; // LEVEL1\n\n    for (var row = 0; row < moduleCount; row++) {\n      for (var col = 0; col < moduleCount; col++) {\n        var sameCount = 0;\n        var dark = qrCode.isDark(row, col);\n\n        for (var r = -1; r <= 1; r++) {\n          if (row + r < 0 || moduleCount <= row + r) {\n            continue;\n          }\n\n          for (var c = -1; c <= 1; c++) {\n            if (col + c < 0 || moduleCount <= col + c) {\n              continue;\n            }\n\n            if (r == 0 && c == 0) {\n              continue;\n            }\n\n            if (dark == qrCode.isDark(row + r, col + c)) {\n              sameCount++;\n            }\n          }\n        }\n\n        if (sameCount > 5) {\n          lostPoint += 3 + sameCount - 5;\n        }\n      }\n    } // LEVEL2\n\n\n    for (var row = 0; row < moduleCount - 1; row++) {\n      for (var col = 0; col < moduleCount - 1; col++) {\n        var count = 0;\n        if (qrCode.isDark(row, col)) count++;\n        if (qrCode.isDark(row + 1, col)) count++;\n        if (qrCode.isDark(row, col + 1)) count++;\n        if (qrCode.isDark(row + 1, col + 1)) count++;\n\n        if (count == 0 || count == 4) {\n          lostPoint += 3;\n        }\n      }\n    } // LEVEL3\n\n\n    for (var row = 0; row < moduleCount; row++) {\n      for (var col = 0; col < moduleCount - 6; col++) {\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) && qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) && qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) && qrCode.isDark(row, col + 6)) {\n          lostPoint += 40;\n        }\n      }\n    }\n\n    for (var col = 0; col < moduleCount; col++) {\n      for (var row = 0; row < moduleCount - 6; row++) {\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) && qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) && qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) && qrCode.isDark(row + 6, col)) {\n          lostPoint += 40;\n        }\n      }\n    } // LEVEL4\n\n\n    var darkCount = 0;\n\n    for (var col = 0; col < moduleCount; col++) {\n      for (var row = 0; row < moduleCount; row++) {\n        if (qrCode.isDark(row, col)) {\n          darkCount++;\n        }\n      }\n    }\n\n    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n    lostPoint += ratio * 10;\n    return lostPoint;\n  }\n};\nmodule.exports = QRUtil;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/qr.js/lib/util.js\n");

/***/ }),

/***/ "../node_modules/qrcode.react/lib/index.js":
/*!*************************************************!*\
  !*** ../node_modules/qrcode.react/lib/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof2(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof2 = function _typeof2(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof2 = function _typeof2(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof2(obj);\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar React = __webpack_require__(/*! react */ \"../node_modules/react/index.js\");\n\nvar PropTypes = __webpack_require__(/*! prop-types */ \"../node_modules/prop-types/index.js\"); // qr.js doesn't handle error level of zero (M) so we need to do it right,\n// thus the deep require.\n\n\nvar QRCodeImpl = __webpack_require__(/*! qr.js/lib/QRCode */ \"../node_modules/qr.js/lib/QRCode.js\");\n\nvar ErrorCorrectLevel = __webpack_require__(/*! qr.js/lib/ErrorCorrectLevel */ \"../node_modules/qr.js/lib/ErrorCorrectLevel.js\");\n\nfunction getBackingStorePixelRatio(ctx) {\n  return (// $FlowFixMe\n    ctx.webkitBackingStorePixelRatio || // $FlowFixMe\n    ctx.mozBackingStorePixelRatio || // $FlowFixMe\n    ctx.msBackingStorePixelRatio || // $FlowFixMe\n    ctx.oBackingStorePixelRatio || // $FlowFixMe\n    ctx.backingStorePixelRatio || 1\n  );\n} // Convert from UTF-16, forcing the use of byte-mode encoding in our QR Code.\n// This allows us to encode Hanji, Kanji, emoji, etc. Ideally we'd do more\n// detection and not resort to byte-mode if possible, but we're trading off\n// a smaller library for a smaller amount of data we can potentially encode.\n// Based on http://jonisalonen.com/2012/from-utf-16-to-utf-8-in-javascript/\n\n\nfunction convertStr(str) {\n  var out = '';\n\n  for (var i = 0; i < str.length; i++) {\n    var charcode = str.charCodeAt(i);\n\n    if (charcode < 0x0080) {\n      out += String.fromCharCode(charcode);\n    } else if (charcode < 0x0800) {\n      out += String.fromCharCode(0xc0 | charcode >> 6);\n      out += String.fromCharCode(0x80 | charcode & 0x3f);\n    } else if (charcode < 0xd800 || charcode >= 0xe000) {\n      out += String.fromCharCode(0xe0 | charcode >> 12);\n      out += String.fromCharCode(0x80 | charcode >> 6 & 0x3f);\n      out += String.fromCharCode(0x80 | charcode & 0x3f);\n    } else {\n      // This is a surrogate pair, so we'll reconsitute the pieces and work\n      // from that\n      i++;\n      charcode = 0x10000 + ((charcode & 0x3ff) << 10 | str.charCodeAt(i) & 0x3ff);\n      out += String.fromCharCode(0xf0 | charcode >> 18);\n      out += String.fromCharCode(0x80 | charcode >> 12 & 0x3f);\n      out += String.fromCharCode(0x80 | charcode >> 6 & 0x3f);\n      out += String.fromCharCode(0x80 | charcode & 0x3f);\n    }\n  }\n\n  return out;\n}\n\nvar DEFAULT_PROPS = {\n  size: 128,\n  level: 'L',\n  bgColor: '#FFFFFF',\n  fgColor: '#000000'\n};\nvar PROP_TYPES = {\n  value: PropTypes.string.isRequired,\n  size: PropTypes.number,\n  level: PropTypes.oneOf(['L', 'M', 'Q', 'H']),\n  bgColor: PropTypes.string,\n  fgColor: PropTypes.string\n};\n\nvar QRCodeCanvas = /*#__PURE__*/function (_React$Component) {\n  _inherits(QRCodeCanvas, _React$Component);\n\n  function QRCodeCanvas() {\n    var _ref;\n\n    var _temp, _this;\n\n    _classCallCheck(this, QRCodeCanvas);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_ref = QRCodeCanvas.__proto__ || Object.getPrototypeOf(QRCodeCanvas)).call.apply(_ref, [this].concat(args))), Object.defineProperty(_assertThisInitialized(_this), \"_canvas\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: void 0\n    }), _temp));\n  }\n\n  _createClass(QRCodeCanvas, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _this2 = this;\n\n      return Object.keys(QRCodeCanvas.propTypes).some(function (k) {\n        return _this2.props[k] !== nextProps[k];\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.update();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _props = this.props,\n          value = _props.value,\n          size = _props.size,\n          level = _props.level,\n          bgColor = _props.bgColor,\n          fgColor = _props.fgColor; // We'll use type===-1 to force QRCode to automatically pick the best type\n\n      var qrcode = new QRCodeImpl(-1, ErrorCorrectLevel[level]);\n      qrcode.addData(convertStr(value));\n      qrcode.make();\n\n      if (this._canvas != null) {\n        var canvas = this._canvas;\n        var ctx = canvas.getContext('2d');\n\n        if (!ctx) {\n          return;\n        }\n\n        var cells = qrcode.modules;\n\n        if (cells === null) {\n          return;\n        }\n\n        var tileW = size / cells.length;\n        var tileH = size / cells.length;\n        var scale = (window.devicePixelRatio || 1) / getBackingStorePixelRatio(ctx);\n        canvas.height = canvas.width = size * scale;\n        ctx.scale(scale, scale);\n        cells.forEach(function (row, rdx) {\n          row.forEach(function (cell, cdx) {\n            ctx && (ctx.fillStyle = cell ? fgColor : bgColor);\n            var w = Math.ceil((cdx + 1) * tileW) - Math.floor(cdx * tileW);\n            var h = Math.ceil((rdx + 1) * tileH) - Math.floor(rdx * tileH);\n            ctx && ctx.fillRect(Math.round(cdx * tileW), Math.round(rdx * tileH), w, h);\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _props2 = this.props,\n          value = _props2.value,\n          size = _props2.size,\n          level = _props2.level,\n          bgColor = _props2.bgColor,\n          fgColor = _props2.fgColor,\n          style = _props2.style,\n          otherProps = _objectWithoutProperties(_props2, [\"value\", \"size\", \"level\", \"bgColor\", \"fgColor\", \"style\"]);\n\n      var canvasStyle = _extends({\n        height: size,\n        width: size\n      }, style);\n\n      return React.createElement(\"canvas\", _extends({\n        style: canvasStyle,\n        height: size,\n        width: size,\n        ref: function ref(_ref2) {\n          return _this3._canvas = _ref2;\n        }\n      }, otherProps));\n    }\n  }]);\n\n  return QRCodeCanvas;\n}(React.Component);\n\nObject.defineProperty(QRCodeCanvas, \"defaultProps\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: DEFAULT_PROPS\n});\nObject.defineProperty(QRCodeCanvas, \"propTypes\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: PROP_TYPES\n});\n\nvar QRCodeSVG = /*#__PURE__*/function (_React$Component2) {\n  _inherits(QRCodeSVG, _React$Component2);\n\n  function QRCodeSVG() {\n    _classCallCheck(this, QRCodeSVG);\n\n    return _possibleConstructorReturn(this, (QRCodeSVG.__proto__ || Object.getPrototypeOf(QRCodeSVG)).apply(this, arguments));\n  }\n\n  _createClass(QRCodeSVG, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _this4 = this;\n\n      return Object.keys(QRCodeCanvas.propTypes).some(function (k) {\n        return _this4.props[k] !== nextProps[k];\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props3 = this.props,\n          value = _props3.value,\n          size = _props3.size,\n          level = _props3.level,\n          bgColor = _props3.bgColor,\n          fgColor = _props3.fgColor,\n          otherProps = _objectWithoutProperties(_props3, [\"value\", \"size\", \"level\", \"bgColor\", \"fgColor\"]); // We'll use type===-1 to force QRCode to automatically pick the best type\n\n\n      var qrcode = new QRCodeImpl(-1, ErrorCorrectLevel[level]);\n      qrcode.addData(convertStr(value));\n      qrcode.make();\n      var cells = qrcode.modules;\n\n      if (cells === null) {\n        return;\n      } // Drawing strategy: instead of a rect per module, we're going to create a\n      // single path for the dark modules and layer that on top of a light rect,\n      // for a total of 2 DOM nodes. We pay a bit more in string concat but that's\n      // way faster than DOM ops.\n      // For level 1, 441 nodes -> 2\n      // For level 40, 31329 -> 2\n\n\n      var ops = [];\n      cells.forEach(function (row, y) {\n        var lastIsDark = false;\n        var start = null;\n        row.forEach(function (cell, x) {\n          if (!cell && start !== null) {\n            // M0 0h7v1H0z injects the space with the move and dropd the comma,\n            // saving a char per operation\n            ops.push(\"M\".concat(start, \" \").concat(y, \"h\").concat(x - start, \"v1H\").concat(start, \"z\"));\n            start = null;\n            return;\n          } // end of row, clean up or skip\n\n\n          if (x === row.length - 1) {\n            if (!cell) {\n              // We would have closed the op above already so this can only mean\n              // 2+ light modules in a row.\n              return;\n            }\n\n            if (start === null) {\n              // Just a single dark module.\n              ops.push(\"M\".concat(x, \",\").concat(y, \" h1v1H\").concat(x, \"z\"));\n            } else {\n              // Otherwise finish the current line.\n              ops.push(\"M\".concat(start, \",\").concat(y, \" h\").concat(x + 1 - start, \"v1H\").concat(start, \"z\"));\n            }\n\n            return;\n          }\n\n          if (cell && start === null) {\n            start = x;\n          }\n        });\n      });\n      return React.createElement(\"svg\", _extends({\n        shapeRendering: \"crispEdges\",\n        height: size,\n        width: size,\n        viewBox: \"0 0 \".concat(cells.length, \" \").concat(cells.length)\n      }, otherProps), React.createElement(\"path\", {\n        fill: bgColor,\n        d: \"M0,0 h\".concat(cells.length, \"v\").concat(cells.length, \"H0z\")\n      }), React.createElement(\"path\", {\n        fill: fgColor,\n        d: ops.join('')\n      }));\n    }\n  }]);\n\n  return QRCodeSVG;\n}(React.Component);\n\nObject.defineProperty(QRCodeSVG, \"defaultProps\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: DEFAULT_PROPS\n});\nObject.defineProperty(QRCodeSVG, \"propTypes\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: PROP_TYPES\n});\n\nvar QRCode = function QRCode(props) {\n  var renderAs = props.renderAs,\n      otherProps = _objectWithoutProperties(props, [\"renderAs\"]);\n\n  var Component = renderAs === 'svg' ? QRCodeSVG : QRCodeCanvas;\n  return React.createElement(Component, otherProps);\n};\n\nQRCode.defaultProps = _extends({\n  renderAs: 'canvas'\n}, DEFAULT_PROPS);\nmodule.exports = QRCode;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/qrcode.react/lib/index.js\n");

/***/ })

}]);