{"version":3,"file":"modalConfirmOdyseeMembership-f448bb129ab87f40e39f.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/common/busy-indicator.jsx","webpack://odysee.com/../ui/component/common/card.jsx","webpack://odysee.com/../ui/hocs/withCreditCard/view.jsx","webpack://odysee.com/../ui/hocs/withCreditCard/index.js","webpack://odysee.com/../ui/modal/modalConfirmOdyseeMembership/style.scss?0823","webpack://odysee.com/../ui/modal/modalConfirmOdyseeMembership/view.jsx","webpack://odysee.com/../ui/modal/modalConfirmOdyseeMembership/index.js","webpack://odysee.com/../ui/modal/modalConfirmOdyseeMembership/style.scss"],"sourcesContent":["// @flow\nimport React from 'react';\n\ntype Props = {\n  message: ?string,\n};\n\nclass BusyIndicator extends React.PureComponent<Props> {\n  static defaultProps = {\n    message: '',\n  };\n\n  render() {\n    const { message } = this.props;\n\n    return (\n      <span className=\"busy-indicator\">\n        {message} <span className=\"busy-indicator__loader\" />\n      </span>\n    );\n  }\n}\n\nexport default BusyIndicator;\n","// @flow\nimport type { Node } from 'react';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Icon from 'component/common/icon';\nimport Button from 'component/button';\nimport * as ICONS from 'constants/icons';\n// import twemoji from 'twemoji';\nimport Tooltip from 'component/common/tooltip';\n\ntype Props = {\n  title?: string | Node,\n  subtitle?: string | Node,\n  titleActions?: string | Node,\n  id?: string,\n  body?: string | Node,\n  actions?: string | Node,\n  icon?: string,\n  className?: string,\n  isPageTitle?: boolean,\n  noTitleWrap?: boolean,\n  isBodyList?: boolean,\n  defaultExpand?: boolean,\n  nag?: Node,\n  smallTitle?: boolean,\n  onClick?: () => void,\n  children?: Node,\n  secondPane?: Node,\n  slimHeader?: boolean,\n  background?: boolean,\n  backgroundImage?: string,\n  singlePane?: boolean,\n  headerActions?: Node,\n  gridHeader?: boolean,\n  accessStatus?: string,\n};\n\nfunction Card(props: Props) {\n  const {\n    title,\n    subtitle,\n    titleActions,\n    id,\n    body,\n    actions,\n    icon,\n    className,\n    isPageTitle = false,\n    isBodyList = false,\n    // noTitleWrap = false,\n    smallTitle = false,\n    defaultExpand,\n    nag,\n    onClick,\n    children,\n    secondPane,\n    slimHeader,\n    background,\n    backgroundImage,\n    singlePane,\n    headerActions,\n    accessStatus,\n    gridHeader,\n  } = props;\n\n  const [expanded, setExpanded] = useState(defaultExpand);\n  const expandable = defaultExpand !== undefined;\n\n  return (\n    <section\n      role={onClick ? 'button' : undefined}\n      className={classnames(className, 'card', {\n        'card__multi-pane': Boolean(secondPane),\n        'card--background': background,\n      })}\n      id={id}\n      onClick={(e) => {\n        if (onClick) {\n          onClick();\n          e.stopPropagation();\n        }\n      }}\n    >\n      {backgroundImage && (\n        <div\n          className=\"background\"\n          style={{\n            backgroundImage:\n              'url(https://thumbnails.odycdn.com/optimize/s:390:0/quality:85/plain/' + backgroundImage + ')',\n          }}\n        />\n      )}\n      <FirstPaneWrapper singlePane={singlePane}>\n        {(title || subtitle) && (\n          <div\n            className={classnames('card__header--between', {\n              'card__header--slim': slimHeader,\n              'card__header--grid': gridHeader,\n            })}\n          >\n            <div className={classnames('card__title-section', { 'card__title-section--body-list': isBodyList })}>\n              {icon && <Icon sectionIcon icon={icon} />}\n\n              <div className=\"card__title-text\">\n                <TitleWrapper isPageTitle={isPageTitle} smallTitle={smallTitle} accessStatus={accessStatus}>\n                  {title}\n                </TitleWrapper>\n\n                {subtitle && (\n                  <div className={classnames('card__subtitle', { 'card__subtitle--small': smallTitle })}>\n                    {subtitle}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {(titleActions || expandable) && (\n              <div className=\"card__title-actions-container\">\n                {titleActions && (\n                  <div\n                    className={classnames('card__title-actions', {\n                      'card__title-actions--small': smallTitle,\n                    })}\n                  >\n                    {titleActions}\n                  </div>\n                )}\n                {expandable && (\n                  <div className=\"card__title-actions\">\n                    <Button\n                      button=\"alt\"\n                      aria-expanded={expanded}\n                      aria-label={expanded ? __('Less') : __('More')}\n                      icon={expanded ? ICONS.SUBTRACT : ICONS.ADD}\n                      onClick={() => setExpanded(!expanded)}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n\n            {headerActions}\n          </div>\n        )}\n\n        {(!expandable || (expandable && expanded)) && (\n          <>\n            {body && (\n              <div\n                className={classnames('card__body', {\n                  'card__body--no-title': !title && !subtitle,\n                  'card__body--list': isBodyList,\n                })}\n              >\n                {body}\n              </div>\n            )}\n            {actions && <div className=\"card__main-actions\">{actions}</div>}\n            {children && <div className=\"card__main-actions\">{children}</div>}\n          </>\n        )}\n\n        {nag}\n      </FirstPaneWrapper>\n\n      {secondPane && <div className=\"card__second-pane\">{secondPane}</div>}\n    </section>\n  );\n}\n\ntype FirstPaneProps = {\n  singlePane?: boolean,\n  children: any,\n};\n\nconst FirstPaneWrapper = (props: FirstPaneProps) => {\n  const { singlePane, children } = props;\n\n  return singlePane ? children : <div className=\"card__first-pane\">{children}</div>;\n};\n\ntype TitleProps = {\n  isPageTitle?: boolean,\n  smallTitle?: boolean,\n  children?: any,\n  emoji?: any,\n  accessStatus?: string,\n};\n\nconst TitleWrapper = (props: TitleProps) => {\n  const { isPageTitle, smallTitle, children, accessStatus } = props;\n\n  /*\n  const Twemoji = ({ emoji }) => (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: twemoji.parse(emoji, {\n          folder: 'svg',\n          ext: '.svg',\n        }),\n      }}\n    />\n  );\n  */\n\n  const AccessIndicator = (par: any) => {\n    return (\n      <Tooltip title={__('This is a members-only content')}>\n        <div\n          className={classnames('content-access-indicator', {\n            locked: par.status === 'locked',\n            unlocked: par.status === 'unlocked',\n            purchased: par.status === 'purchased',\n          })}\n        >\n          <Icon icon={par.status === 'locked' ? ICONS.LOCK : ICONS.UNLOCK} />\n        </div>\n      </Tooltip>\n    );\n  };\n\n  /*\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return <Twemoji emoji={children?.props?.children[child]} />;\n      }\n    }\n    return children;\n  }\n  */\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return children?.props?.children[child];\n      }\n    }\n    return children;\n  }\n\n  return isPageTitle ? (\n    <h1 className=\"card__title\">\n      {accessStatus && <AccessIndicator status={accessStatus} />}\n      <font dangerouslySetInnerHTML={{ __html: transformer(children) }} />\n    </h1>\n  ) : (\n    <h2 className={classnames('card__title', { 'card__title--small': smallTitle })}>{children}</h2>\n  );\n};\n\nexport default Card;\n","// @flow\nimport React from 'react';\n\nimport * as MODALS from 'constants/modal_types';\nimport Button from 'component/button';\nimport Spinner from 'component/spinner';\n\nimport { ModalContext } from 'contexts/modal';\n\ntype Props = {\n  modalState: any,\n  // -- redux --\n  hasSavedCard: ?boolean,\n  isAuthenticated: ?boolean,\n  doOpenModal: (modalId: string, modalProps: {}) => void,\n  doGetCustomerStatus: () => void,\n};\n\n/**\n * HigherOrderComponent to condition a button to become a \"add card\" prompt every time it is needed for a purchase,\n * and also prompts back to the previous modal in case it came from one.\n *\n * @param Component: FunctionalComponentParam\n * @returns {FunctionalComponent}\n */\nconst withCreditCard = (Component: FunctionalComponentParam) => {\n  const CreditCardPrompt = (props: Props) => {\n    // eslint-disable-next-line react/prop-types\n    const { hasSavedCard, isAuthenticated, doOpenModal, doGetCustomerStatus, modalState, ...componentProps } = props;\n\n    const fetchPending = isAuthenticated && hasSavedCard === undefined;\n    const modal = React.useContext(ModalContext)?.modal;\n\n    React.useEffect(() => {\n      if (fetchPending) {\n        doGetCustomerStatus();\n      }\n    }, [doGetCustomerStatus, fetchPending]);\n\n    if (!hasSavedCard) {\n      const handleOpenAddCardModal = () =>\n        doOpenModal(MODALS.ADD_CARD, {\n          ...(modal ? { previousModal: modal.id, previousProps: { ...modal.modalProps, ...modalState } } : {}),\n        });\n\n      return (\n        <Button\n          disabled={fetchPending}\n          requiresAuth\n          button=\"primary\"\n          label={fetchPending ? <Spinner type=\"small\" /> : __('Add a Credit Card')}\n          onClick={handleOpenAddCardModal}\n        />\n      );\n    }\n\n    return <Component {...componentProps} />;\n  };\n\n  return CreditCardPrompt;\n};\n\nexport default withCreditCard;\n","import { connect } from 'react-redux';\n\nimport { selectHasSavedCard } from 'redux/selectors/stripe';\nimport { selectUserVerifiedEmail } from 'redux/selectors/user';\n\nimport { doOpenModal } from 'redux/actions/app';\nimport { doGetCustomerStatus } from 'redux/actions/stripe';\n\nimport withCreditCard from './view';\n\nconst select = (state, props) => ({\n  hasSavedCard: selectHasSavedCard(state),\n  isAuthenticated: selectUserVerifiedEmail(state),\n});\n\nconst perform = {\n  doOpenModal,\n  doGetCustomerStatus,\n};\n\nexport default (Component) => connect(select, perform)(withCreditCard(Component));\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","// @flow\nimport React from 'react';\n\nimport { Modal } from 'modal/modal';\n\nimport * as ICONS from 'constants/icons';\nimport * as MEMBERSHIP_CONSTS from 'constants/memberships';\nimport * as STRIPE from 'constants/stripe';\n\nimport I18nMessage from 'component/i18nMessage';\nimport Card from 'component/common/card';\nimport Button from 'component/button';\nimport BusyIndicator from 'component/common/busy-indicator';\n\nimport withCreditCard from 'hocs/withCreditCard';\nimport './style.scss';\n\ntype Props = {\n  membership: CreatorMembership,\n  price: StripePriceDetails,\n  // -- redux --\n  activeChannelClaim: ?ChannelClaim,\n  channels: ?Array<ChannelClaim>,\n  incognito: boolean,\n  preferredCurrency: CurrencyOption,\n  purchasePending: boolean,\n  doMembershipBuy: (membershipParams: MembershipBuyParams) => Promise<Membership>,\n  doHideModal: () => void,\n  doToast: (params: { message: string }) => void,\n};\n\nexport default function ConfirmOdyseeMembershipPurchase(props: Props) {\n  const {\n    membership,\n    price,\n    // -- redux --\n    activeChannelClaim,\n    channels,\n    incognito,\n    preferredCurrency,\n    purchasePending,\n    doMembershipBuy,\n    doHideModal,\n    doToast,\n  } = props;\n\n  const isPurchasing = React.useRef(false);\n\n  const { Membership } = membership;\n\n  const { name: activeChannelName, claim_id: activeChannelId } = activeChannelClaim || {};\n  const noChannelsOrIncognitoMode = incognito || !channels;\n  const plan = Membership.name;\n\n  function handlePurchase() {\n    if (isPurchasing.current) return;\n\n    isPurchasing.current = true;\n\n    doMembershipBuy({\n      membership_id: Membership.id,\n      channel_id: activeChannelId,\n      channel_name: activeChannelName,\n      price_id: price.id,\n    })\n      .then((response) => {\n        isPurchasing.current = false;\n\n        // this isn't the best pattern, should be passed as a callback\n        if (response?.created_at) {\n          doToast({ message: __('Purchase was successful. Enjoy the perks and special features!') });\n        }\n\n        doHideModal();\n      })\n      .catch(() => {\n        isPurchasing.current = false;\n      });\n  }\n\n  return (\n    <Modal\n      className=\"confirm-odysee-premium__modal\"\n      ariaHideApp={false}\n      isOpen\n      contentLabel={__('Confirm Membership Purchase')}\n      type=\"card\"\n      onAborted={doHideModal}\n    >\n      <Card\n        className=\"stripe__confirm-remove-membership\"\n        title={\n          window.cordova && !window.odysee.build.googlePlay\n            ? __('Confirm %plan% Membership', { plan })\n            : __(\"We're sorry\")\n        }\n        subtitle={\n          window.cordova && !window.odysee.build.googlePlay ? (\n            <>\n              <I18nMessage\n                tokens={{\n                  time_interval_bold: (\n                    <b className=\"membership-bolded\">{__(MEMBERSHIP_CONSTS.INTERVALS[price.recurring.interval])}</b>\n                  ),\n                  time_interval: __(MEMBERSHIP_CONSTS.INTERVALS[price.recurring.interval]),\n                  price_bold: (\n                    <b className=\"membership-bolded\">{`${preferredCurrency.toUpperCase()} ${\n                      STRIPE.CURRENCY[price.currency.toUpperCase()].symbol\n                    }${price.unit_amount / 100}`}</b>\n                  ),\n                  plan,\n                }}\n              >\n                You are purchasing a %time_interval_bold% %plan% membership that is active immediately and will renew\n                %time_interval% at a price of %price_bold%.\n              </I18nMessage>{' '}\n              {plan === MEMBERSHIP_CONSTS.ODYSEE_TIER_NAMES.PREMIUM_PLUS &&\n                __('The no ads feature applies site-wide for all channels.')}\n              {!noChannelsOrIncognitoMode ? (\n                <I18nMessage tokens={{ channel_name: <b className=\"membership-bolded\">{activeChannelName}</b> }}>\n                  Your badge will be shown for your %channel_name% channel in all areas of the app, and can be added to\n                  two additional channels in the future for free.\n                </I18nMessage>\n              ) : !channels ? (\n                __(\n                  'You currently have no channels. To show your badge on a channel, please create a channel first. If you register a channel later you will be able to show a badge for up to three channels.'\n                )\n              ) : incognito ? (\n                __(\n                  'You currently have no channel selected and will not have a badge be visible, if you want to show a badge you can select a channel now, or you can show a badge for up to three channels in the future for free.'\n                )\n              ) : undefined}{' '}\n              {__(\n                'You can cancel Premium at any time (no refunds) and you can also close this window and choose a different membership option.'\n              )}\n            </>\n          ) : (\n            __(\n              'Unfortunately Google does not allow us to process payments in this version of the app. You can get a more open version of the app at https://apk.odysee.tv or F-Droid. Alternatively you can also just visit Odysee.com in a browser.'\n            )\n          )\n        }\n        actions={\n          window.cordova && !window.odysee.build.googlePlay ? (\n            <div className=\"section__actions\">\n              {!purchasePending ? (\n                <>\n                  <SubmitPurchaseButton handlePurchase={handlePurchase} />\n                  <Button button=\"link\" label={__('Cancel')} onClick={doHideModal} />\n                </>\n              ) : (\n                <BusyIndicator message={__('Completing your purchase...')} />\n              )}\n            </div>\n          ) : (\n            <Button button=\"link\" label={__('Cancel')} onClick={doHideModal} />\n          )\n        }\n      />\n    </Modal>\n  );\n}\n\nconst SubmitPurchaseButton = withCreditCard((props: any) => (\n  <Button\n    className=\"stripe__confirm-remove-card\"\n    button=\"primary\"\n    icon={ICONS.FINANCE}\n    label={__('Confirm Purchase')}\n    onClick={props.handlePurchase}\n  />\n));\n","import { connect } from 'react-redux';\nimport { doHideModal } from 'redux/actions/app';\nimport { doMembershipBuy } from 'redux/actions/memberships';\nimport { selectActiveChannelClaim, selectIncognito } from 'redux/selectors/app';\nimport { selectMyChannelClaims } from 'redux/selectors/claims';\nimport { selectPurchaseIsPendingForMembershipId } from 'redux/selectors/memberships';\nimport { selectPreferredCurrency } from 'redux/selectors/settings';\nimport { doToast } from 'redux/actions/notifications';\n\nimport ConfirmOdyseeMembershipPurchase from './view';\n\nconst select = (state, props) => {\n  const { membership } = props;\n\n  return {\n    activeChannelClaim: selectActiveChannelClaim(state),\n    channels: selectMyChannelClaims(state),\n    incognito: selectIncognito(state),\n    preferredCurrency: selectPreferredCurrency(state),\n    purchasePending: selectPurchaseIsPendingForMembershipId(state, membership.Membership.id),\n  };\n};\n\nconst perform = {\n  doHideModal,\n  doMembershipBuy,\n  doToast,\n};\n\nexport default connect(select, perform)(ConfirmOdyseeMembershipPurchase);\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".confirm-odysee-premium__modal{max-width:580px!important}.membership-bolded{color:var(--color-text)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../ui/modal/modalConfirmOdyseeMembership/style.scss\"],\"names\":[],\"mappings\":\"AAAA,+BACE,yBAAA,CAGF,mBACE,uBAAA\",\"sourcesContent\":[\".confirm-odysee-premium__modal {\\n  max-width: 580px !important; // default modal width is too wide, looks weird\\n}\\n\\n.membership-bolded {\\n  color: var(--color-text);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["BusyIndicator","_React$PureComponent","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","key","value","message","this","props","React","className","FirstPaneWrapper","singlePane","children","TitleWrapper","isPageTitle","smallTitle","accessStatus","AccessIndicator","par","Tooltip","title","__","classnames","locked","status","unlocked","purchased","Icon","icon","ICONS","dangerouslySetInnerHTML","__html","child","_children$props","_children$props2","_children$props3","transformer","subtitle","titleActions","id","body","actions","_props$isPageTitle","_props$isBodyList","isBodyList","_props$smallTitle","defaultExpand","nag","_onClick","onClick","secondPane","slimHeader","background","backgroundImage","headerActions","gridHeader","_useState2","_slicedToArray","useState","expanded","setExpanded","expandable","undefined","role","Boolean","e","stopPropagation","style","sectionIcon","Button","button","Component","_React$useContext","hasSavedCard","isAuthenticated","doOpenModal","doGetCustomerStatus","modalState","componentProps","_objectWithoutProperties","_excluded","fetchPending","modal","ModalContext","disabled","requiresAuth","label","Spinner","type","MODALS","_objectSpread","previousModal","previousProps","modalProps","select","state","selectHasSavedCard","selectUserVerifiedEmail","perform","connect","withCreditCard","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","SubmitPurchaseButton","handlePurchase","doHideModal","doMembershipBuy","doToast","membership","activeChannelClaim","selectActiveChannelClaim","channels","selectMyChannelClaims","incognito","selectIncognito","preferredCurrency","selectPreferredCurrency","purchasePending","selectPurchaseIsPendingForMembershipId","Membership","price","isPurchasing","_ref","activeChannelName","name","activeChannelId","claim_id","noChannelsOrIncognitoMode","plan","Modal","ariaHideApp","isOpen","contentLabel","onAborted","Card","window","cordova","odysee","build","googlePlay","I18nMessage","tokens","time_interval_bold","MEMBERSHIP_CONSTS","recurring","interval","time_interval","price_bold","concat","toUpperCase","STRIPE","currency","symbol","unit_amount","channel_name","current","membership_id","channel_id","price_id","then","response","created_at","___CSS_LOADER_EXPORT___","push","module"],"sourceRoot":""}