{"version":3,"file":"overviewTab-aca2960332f4c40c2ff0.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/buttonNavigateChannelId/view.jsx","webpack://odysee.com/../ui/component/buttonNavigateChannelId/index.js","webpack://odysee.com/../ui/component/common/help-hub.jsx","webpack://odysee.com/../ui/component/copyableText/index.js","webpack://odysee.com/../ui/component/copyableText/view.jsx","webpack://odysee.com/../ui/page/creatorMemberships/creatorArea/internal/overviewTab/internal/channelOverview/view.jsx","webpack://odysee.com/../ui/page/creatorMemberships/creatorArea/internal/overviewTab/internal/channelOverview/index.js","webpack://odysee.com/../ui/page/creatorMemberships/creatorArea/internal/overviewTab/style.scss?0e5d","webpack://odysee.com/../ui/page/creatorMemberships/creatorArea/internal/overviewTab/view.jsx","webpack://odysee.com/../ui/page/creatorMemberships/creatorArea/internal/overviewTab/index.js","webpack://odysee.com/../ui/page/creatorMemberships/creatorArea/internal/overviewTab/style.scss"],"sourcesContent":["// @flow\nimport React from 'react';\nimport Button from 'component/button';\n\ntype Props = {\n  channelId?: string,\n  // -- redux --\n  defaultChannelId: ?string,\n  activeChannelId: ?string,\n};\n\nconst ButtonNavigateChannelId = (props: Props) => {\n  const { channelId, defaultChannelId, activeChannelId, ...buttonProps } = props;\n\n  const addWindowPendingActiveChannel = () => {\n    if (channelId) {\n      window.pendingActiveChannel = channelId;\n    } else if (defaultChannelId && activeChannelId && defaultChannelId !== activeChannelId) {\n      window.pendingActiveChannel = activeChannelId;\n    }\n  };\n\n  return <Button {...buttonProps} onClick={addWindowPendingActiveChannel} />;\n};\n\nexport default ButtonNavigateChannelId;\n","import { connect } from 'react-redux';\nimport { selectActiveChannelId } from 'redux/selectors/app';\nimport { selectDefaultChannelId } from 'redux/selectors/settings';\n\nimport ButtonNavigateChannelId from './view';\n\nconst select = (state) => ({\n  defaultChannelId: selectDefaultChannelId(state),\n  activeChannelId: selectActiveChannelId(state),\n});\n\nexport default connect(select)(ButtonNavigateChannelId);\n","// @flow\n// import * as ICONS from 'constants/icons';\nimport React from 'react';\nimport I18nMessage from 'component/i18nMessage';\n\ntype Props = {\n  href?: string,\n  image?: string,\n  description?: string,\n  text?: string,\n};\n\nexport default function HelpHub(props: Props) {\n  const { href, image, text } = props;\n\n  const hubMessage = (text, href) => {\n    return (\n      <I18nMessage\n        tokens={{\n          help_hub: (\n            <a rel=\"noopener noreferrer\" href={href} target=\"_blank\">\n              {__('Help Hub')}\n            </a>\n          ),\n        }}\n      >\n        {text}\n      </I18nMessage>\n    );\n  };\n\n  return (\n    <div className=\"help-hub__wrapper\">\n      <span>{hubMessage(text, href)}</span>\n      {image && (\n        <img\n          src={\n            'https://thumbnails.odycdn.com/optimize/s:46:0/quality:95/plain/https://static.odycdn.com/images/helpHub_' +\n            image +\n            '.png'\n          }\n        />\n      )}\n    </div>\n  );\n}\n","import { connect } from 'react-redux';\nimport { doToast } from 'redux/actions/notifications';\nimport CopyableText from './view';\n\nexport default connect(null, {\n  doToast,\n})(CopyableText);\n","// @flow\nimport * as ICONS from 'constants/icons';\nimport { FormField } from 'component/common/form';\nimport Button from 'component/button';\nimport React, { useRef } from 'react';\n\ntype Props = {\n  copyable: string,\n  onlyCopy: boolean,\n  snackMessage: ?string,\n  doToast: ({ message: string }) => void,\n  label?: string,\n  primaryButton?: boolean,\n  name?: string,\n  onCopy?: (string) => string,\n  enableInputMask?: boolean,\n};\n\nexport default function CopyableText(props: Props) {\n  const {\n    copyable,\n    onlyCopy,\n    doToast,\n    snackMessage,\n    label,\n    primaryButton = false,\n    name,\n    onCopy,\n    enableInputMask,\n  } = props;\n  const [maskInput, setMaskInput] = React.useState(enableInputMask);\n\n  const input = useRef();\n\n  function handleCopyText() {\n    if (enableInputMask || onlyCopy) {\n      navigator.clipboard\n        .writeText(copyable)\n        .then(() => {\n          doToast({ message: snackMessage || __('Text copied') });\n        })\n        .catch(() => {\n          doToast({ message: __('Failed to copy.'), isError: true });\n        });\n    } else {\n      const topRef = input.current;\n      if (topRef && topRef.input && topRef.input.current) {\n        topRef.input.current.select();\n        if (onCopy) {\n          // Allow clients to change the selection before making the copy.\n          onCopy(topRef.input.current);\n        }\n      }\n\n      document.execCommand('copy');\n      doToast({ message: snackMessage || __('Text copied') });\n    }\n  }\n\n  function onFocus() {\n    // We have to go a layer deep since the input is inside the form component\n    const topRef = input.current;\n    if (topRef && topRef.input && topRef.input.current) {\n      topRef.input.current.select();\n    }\n  }\n\n  return (\n    <FormField\n      type={maskInput ? 'password' : 'text'}\n      className=\"form-field--copyable\"\n      readOnly\n      name={name}\n      label={label}\n      value={copyable || ''}\n      ref={input}\n      onFocus={onFocus}\n      inputButton={\n        <Button button={primaryButton ? 'primary' : 'secondary'} icon={ICONS.COPY} onClick={handleCopyText} />\n      }\n      helper={\n        enableInputMask && (\n          <Button button=\"link\" onClick={() => setMaskInput(!maskInput)} label={maskInput ? __('Show') : __('Hide')} />\n        )\n      }\n    />\n  );\n}\n","// @flow\nimport React from 'react';\n\nimport { URL } from 'config';\nimport { formatLbryUrlForWeb } from 'util/url';\n\nimport * as ICONS from 'constants/icons';\n\nimport CopyableText from 'component/copyableText';\nimport ChannelThumbnail from 'component/channelThumbnail';\nimport ButtonNavigateChannelId from 'component/buttonNavigateChannelId';\nimport TruncatedText from 'component/common/truncated-text';\n\ntype Props = {\n  channelClaim: ChannelClaim,\n  // -- redux --\n  supportersAmount: number,\n  monthlyIncome: number,\n};\n\nconst ChannelOverview = (props: Props) => {\n  const { channelClaim, supportersAmount, monthlyIncome } = props;\n\n  return (\n    <>\n      <td className=\"channelThumbnail\">\n        <ChannelThumbnail xsmall uri={channelClaim.canonical_url} />\n      </td>\n\n      <td>\n        <TruncatedText text={channelClaim.value.title || channelClaim.name} lines={1} />\n      </td>\n\n      <td>{supportersAmount}</td>\n      <td>${(monthlyIncome / 100).toFixed(2)}</td>\n\n      <td>\n        <ButtonNavigateChannelId\n          button=\"primary\"\n          channelId={channelClaim.claim_id}\n          icon={ICONS.MEMBERSHIP}\n          navigate={`${formatLbryUrlForWeb(channelClaim.canonical_url)}?view=membership`}\n        />\n      </td>\n\n      <td className=\"membership-table__url\">\n        <CopyableText\n          onlyCopy\n          primaryButton\n          copyable={`${URL}${formatLbryUrlForWeb(channelClaim.canonical_url)}?view=membership`}\n          snackMessage={__('Page location copied')}\n        />\n      </td>\n    </>\n  );\n};\n\nexport default ChannelOverview;\n","import { connect } from 'react-redux';\n\nimport { selectMyChannelClaims } from 'redux/selectors/claims';\nimport { selectSupportersAmountForChannelId, selectMonthlyIncomeForChannelId } from 'redux/selectors/memberships';\n\nimport ChannelOverview from './view';\n\nconst select = (state, props) => {\n  const { channelClaim } = props;\n\n  return {\n    myChannelClaims: selectMyChannelClaims(state),\n    supportersAmount: selectSupportersAmountForChannelId(state, channelClaim.claim_id),\n    monthlyIncome: selectMonthlyIncomeForChannelId(state, channelClaim.claim_id),\n  };\n};\n\nexport default connect(select)(ChannelOverview);\n","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js!../../../../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js!../../../../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","// @flow\nimport React from 'react';\nimport * as PAGES from 'constants/pages';\nimport * as ICONS from 'constants/icons';\nimport Button from 'component/button';\nimport HelpHub from 'component/common/help-hub';\nimport ChannelOverview from './internal/channelOverview';\n\nimport './style.scss';\n\ntype Props = {\n  onChannelSelect: () => void,\n  // -- redux --\n  myChannelClaims: Array<ChannelClaim>,\n  totalSupportersAmount: number,\n  totalMonthlyIncome: number,\n  doSetActiveChannel: (claimId: ?string, override?: boolean) => void,\n};\n\nfunction OverviewTab(props: Props) {\n  const { onChannelSelect, myChannelClaims, totalSupportersAmount, totalMonthlyIncome, doSetActiveChannel } = props;\n\n  function selectChannel(channelClaim) {\n    doSetActiveChannel(channelClaim.claim_id, true);\n    onChannelSelect();\n  }\n\n  return (\n    <>\n      <table className=\"table table-total\">\n        <tr>\n          {/* todo: allow sorting */}\n          <td>\n            {/* todo: make this a link to the supporters tab with all channel set to on */}\n            {/* so they can see all their supporters */}\n            {__('Total Supporters')} <span>{totalSupportersAmount}</span>\n          </td>\n          <td>\n            {__('Total Monthly Income')} <span>${(totalMonthlyIncome / 100).toFixed(2)}</span>\n          </td>\n        </tr>\n      </table>\n\n      <div className=\"link-to-bank-account\">\n        <h2>You can view your balance and transaction history on Stripe from the Bank Accounts section.</h2>\n        <Button\n          button=\"secondary\"\n          label={__('Bank Accounts')}\n          icon={ICONS.SETTINGS}\n          navigate={`/$/${PAGES.SETTINGS_STRIPE_ACCOUNT}`}\n        />\n      </div>\n\n      <div className=\"membership-table__wrapper\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th className=\"channelName-header\" colSpan=\"2\">\n                {__('Channel Name')}\n              </th>\n              <th>{__('Supporters')}</th>\n              <th>{__('Estimated Monthly Income')}</th>\n              <th className=\"membership-table__page\">{__('Page')}</th>\n              <th className=\"membership-table__url\">{__('URL')}</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {myChannelClaims.map((channelClaim) => (\n              <tr key={channelClaim.claim_id} onClick={() => selectChannel(channelClaim)}>\n                <ChannelOverview channelClaim={channelClaim} />\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <HelpHub\n        href=\"https://help.odysee.tv/category-memberships/\"\n        image=\"Spaceman\"\n        text={__(\n          'Want to increase your channel growth? Spaceman has whipped up some marketing concepts in the %help_hub%.'\n        )}\n      />\n    </>\n  );\n}\n\nexport default OverviewTab;\n","import { connect } from 'react-redux';\n\nimport { selectMyChannelClaims } from 'redux/selectors/claims';\nimport { selectMyTotalSupportersAmount, selectMyTotalMonthlyIncome } from 'redux/selectors/memberships';\nimport { doSetActiveChannel } from 'redux/actions/app';\n\nimport OverviewTab from './view';\n\nconst select = (state, props) => ({\n  myChannelClaims: selectMyChannelClaims(state),\n  totalSupportersAmount: selectMyTotalSupportersAmount(state),\n  totalMonthlyIncome: selectMyTotalMonthlyIncome(state),\n});\n\nconst perform = {\n  doSetActiveChannel,\n};\n\nexport default connect(select, perform)(OverviewTab);\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"[dir] .bank-account-status{background-color:rgba(255,0,0,.1);border:2px solid rgba(255,0,0,.8);border-radius:var(--border-radius);margin-top:var(--spacing-s);padding:var(--spacing-s)}.bank-account-status div label{display:block;font-size:var(--font-body);font-weight:var(--font-weight-bold)}.bank-account-status div span{display:block;font-size:var(--font-small);font-weight:var(--font-weight-bold);opacity:.8}.bank-account-status .button{max-width:100%;width:auto}[dir] .bank-account-status .button{margin-bottom:0;margin-top:var(--spacing-s)}.ugly-alien-box{color:#000;font-weight:700;width:100%}[dir] .ugly-alien-box{background-color:#f3e3f6;border-radius:var(--border-radius);margin-top:var(--spacing-l);padding:var(--spacing-s);text-align:center}.ugly-alien-box a{color:var(--color-primary)}.ugly-alien-box img{height:46px;width:46px}[dir] .ugly-alien-box img{background-color:#650f7c;border-radius:50%}[dir=ltr] .ugly-alien-box img{margin-left:var(--spacing-s)}[dir=rtl] .ugly-alien-box img{margin-right:var(--spacing-s)}[dir] .table-total{background-color:var(--color-header-background);border-radius:var(--border-radius);margin-bottom:var(--spacing-m)}.table-total td{font-weight:var(--font-weight-bold);width:50%}[dir=ltr] .table-total td:first-child{padding-right:.25rem}[dir=rtl] .table-total td:first-child{padding-left:.25rem}[dir=ltr] .table-total td:nth-child(2){padding-left:.25rem;text-align:right}[dir=rtl] .table-total td:nth-child(2){padding-right:.25rem;text-align:left}.table-total span{color:var(--color-primary);display:block;width:auto}[dir] .table-total span{background-color:var(--color-header-background);border:2px solid var(--color-border);border-radius:var(--border-radius);padding:var(--spacing-xxs);padding-bottom:4px}[dir] .link-to-bank-account{margin-bottom:var(--spacing-m);margin-top:var(--spacing-m)}[dir] .link-to-bank-account a{margin-top:3px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../ui/page/creatorMemberships/creatorArea/internal/overviewTab/style.scss\"],\"names\":[],\"mappings\":\"AAEA,2BAKE,iCAAA,CADA,iCAAA,CADA,kCAAA,CAFA,2BAAA,CACA,wBAGA,CAGE,+BACE,aAAA,CACA,0BAAA,CACA,mCAAA,CAGF,8BACE,aAAA,CACA,2BAAA,CACA,mCAAA,CACA,UAAA,CAIJ,6BAEE,cAAA,CADA,UAGA,CAJF,mCAIE,eAAA,CADA,2BACA,CAIJ,gBAIE,UAAA,CAIA,eAAA,CANA,UAMA,CARF,sBAGE,wBAAA,CAEA,kCAAA,CAJA,2BAAA,CAMA,wBAAA,CADA,iBAEA,CAEA,kBACE,0BAAA,CAGF,oBAEE,WAAA,CADA,UAIA,CALF,0BAGE,wBAAA,CACA,iBACA,CALF,8BAKE,4BAAA,CALF,8BAKE,6BAAA,CAIJ,mBAEE,+CAAA,CACA,kCAAA,CAFA,8BAEA,CAEA,gBACE,mCAAA,CACA,SAAA,CACA,sCACE,oBAAA,CADF,sCACE,mBAAA,CAEF,uCACE,mBAAA,CACA,gBAAA,CAFF,uCACE,oBAAA,CACA,eAAA,CAGJ,kBAME,0BAAA,CALA,aAAA,CAIA,UAGA,CARF,wBAEE,+CAAA,CAKA,oCAAA,CACA,kCAAA,CALA,0BAAA,CACA,kBAIA,CAIJ,4BAEE,8BAAA,CADA,2BACA,CAEA,8BACE,cAAA\",\"sourcesContent\":[\"@import '~ui/scss/init/breakpoints';\\n\\n.bank-account-status {\\n  margin-top: var(--spacing-s);\\n  padding: var(--spacing-s);\\n  border-radius: var(--border-radius);\\n  border: 2px solid rgba(255, 0, 0, 0.8);\\n  background-color: rgba(255, 0, 0, 0.1);\\n\\n  div {\\n    label {\\n      display: block;\\n      font-size: var(--font-body);\\n      font-weight: var(--font-weight-bold);\\n    }\\n\\n    span {\\n      display: block;\\n      font-size: var(--font-small);\\n      font-weight: var(--font-weight-bold);\\n      opacity: 0.8;\\n    }\\n  }\\n\\n  .button {\\n    width: auto;\\n    max-width: 100%;\\n    margin-top: var(--spacing-s);\\n    margin-bottom: 0;\\n  }\\n}\\n\\n.ugly-alien-box {\\n  margin-top: var(--spacing-l);\\n  width: 100%;\\n  background-color: #f3e3f6;\\n  color: black;\\n  border-radius: var(--border-radius);\\n  text-align: center;\\n  padding: var(--spacing-s);\\n  font-weight: bold;\\n\\n  a {\\n    color: var(--color-primary);\\n  }\\n\\n  img {\\n    width: 46px;\\n    height: 46px;\\n    background-color: #650f7c;\\n    border-radius: 50%;\\n    margin-left: var(--spacing-s);\\n  }\\n}\\n\\n.table-total {\\n  margin-bottom: var(--spacing-m);\\n  background-color: var(--color-header-background);\\n  border-radius: var(--border-radius);\\n\\n  td {\\n    font-weight: var(--font-weight-bold);\\n    width: 50%;\\n    &:nth-child(1) {\\n      padding-right: 0.25rem;\\n    }\\n    &:nth-child(2) {\\n      padding-left: 0.25rem;\\n      text-align: right;\\n    }\\n  }\\n  span {\\n    display: block;\\n    background-color: var(--color-header-background);\\n    padding: var(--spacing-xxs);\\n    padding-bottom: 4px;\\n    width: auto;\\n    color: var(--color-primary);\\n    border: 2px solid var(--color-border);\\n    border-radius: var(--border-radius);\\n  }\\n}\\n\\n.link-to-bank-account {\\n  margin-top: var(--spacing-m);\\n  margin-bottom: var(--spacing-m);\\n\\n  a {\\n    margin-top: 3px;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["props","channelId","defaultChannelId","activeChannelId","buttonProps","_objectWithoutProperties","_excluded","React","Button","_extends","onClick","window","pendingActiveChannel","connect","state","selectDefaultChannelId","selectActiveChannelId","ButtonNavigateChannelId","HelpHub","href","image","text","className","I18nMessage","tokens","help_hub","rel","target","__","hubMessage","src","doToast","copyable","onlyCopy","snackMessage","label","_props$primaryButton","primaryButton","name","onCopy","enableInputMask","_React$useState2","_slicedToArray","maskInput","setMaskInput","input","useRef","FormField","type","readOnly","value","ref","onFocus","topRef","current","select","inputButton","button","icon","ICONS","navigator","clipboard","writeText","then","message","isError","document","execCommand","helper","channelClaim","supportersAmount","monthlyIncome","ChannelThumbnail","xsmall","uri","canonical_url","TruncatedText","title","lines","toFixed","claim_id","navigate","concat","formatLbryUrlForWeb","CopyableText","URL","myChannelClaims","selectMyChannelClaims","selectSupportersAmountForChannelId","selectMonthlyIncomeForChannelId","ChannelOverview","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","onChannelSelect","totalSupportersAmount","totalMonthlyIncome","doSetActiveChannel","PAGES","colSpan","map","key","selectChannel","perform","selectMyTotalSupportersAmount","selectMyTotalMonthlyIncome","OverviewTab","___CSS_LOADER_EXPORT___","push","module","id"],"sourceRoot":""}