{"version":3,"file":"modalPhoneCollection-4b36db0d8c9e61d50ebf.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/common/card.jsx","webpack://odysee.com/../ui/component/userPhoneVerify/view.jsx","webpack://odysee.com/../ui/component/userPhoneVerify/index.js","webpack://odysee.com/../ui/component/userPhoneNew/view.jsx","webpack://odysee.com/../ui/component/userPhoneNew/index.js","webpack://odysee.com/../ui/modal/modalPhoneCollection/view.jsx","webpack://odysee.com/../ui/modal/modalPhoneCollection/index.js"],"sourcesContent":["// @flow\nimport type { Node } from 'react';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Icon from 'component/common/icon';\nimport Button from 'component/button';\nimport * as ICONS from 'constants/icons';\n// import twemoji from 'twemoji';\nimport Tooltip from 'component/common/tooltip';\n\ntype Props = {\n  title?: string | Node,\n  subtitle?: string | Node,\n  titleActions?: string | Node,\n  id?: string,\n  body?: string | Node,\n  actions?: string | Node,\n  icon?: string,\n  className?: string,\n  isPageTitle?: boolean,\n  noTitleWrap?: boolean,\n  isBodyList?: boolean,\n  defaultExpand?: boolean,\n  nag?: Node,\n  smallTitle?: boolean,\n  onClick?: () => void,\n  children?: Node,\n  secondPane?: Node,\n  slimHeader?: boolean,\n  background?: boolean,\n  backgroundImage?: string,\n  singlePane?: boolean,\n  headerActions?: Node,\n  gridHeader?: boolean,\n  accessStatus?: string,\n};\n\nfunction Card(props: Props) {\n  const {\n    title,\n    subtitle,\n    titleActions,\n    id,\n    body,\n    actions,\n    icon,\n    className,\n    isPageTitle = false,\n    isBodyList = false,\n    // noTitleWrap = false,\n    smallTitle = false,\n    defaultExpand,\n    nag,\n    onClick,\n    children,\n    secondPane,\n    slimHeader,\n    background,\n    backgroundImage,\n    singlePane,\n    headerActions,\n    accessStatus,\n    gridHeader,\n  } = props;\n\n  const [expanded, setExpanded] = useState(defaultExpand);\n  const expandable = defaultExpand !== undefined;\n\n  return (\n    <section\n      role={onClick ? 'button' : undefined}\n      className={classnames(className, 'card', {\n        'card__multi-pane': Boolean(secondPane),\n        'card--background': background,\n      })}\n      id={id}\n      onClick={(e) => {\n        if (onClick) {\n          onClick();\n          e.stopPropagation();\n        }\n      }}\n    >\n      {backgroundImage && (\n        <div\n          className=\"background\"\n          style={{\n            backgroundImage:\n              'url(https://thumbnails.odycdn.com/optimize/s:390:0/quality:85/plain/' + backgroundImage + ')',\n          }}\n        />\n      )}\n      <FirstPaneWrapper singlePane={singlePane}>\n        {(title || subtitle) && (\n          <div\n            className={classnames('card__header--between', {\n              'card__header--slim': slimHeader,\n              'card__header--grid': gridHeader,\n            })}\n          >\n            <div className={classnames('card__title-section', { 'card__title-section--body-list': isBodyList })}>\n              {icon && <Icon sectionIcon icon={icon} />}\n\n              <div className=\"card__title-text\">\n                <TitleWrapper isPageTitle={isPageTitle} smallTitle={smallTitle} accessStatus={accessStatus}>\n                  {title}\n                </TitleWrapper>\n\n                {subtitle && (\n                  <div className={classnames('card__subtitle', { 'card__subtitle--small': smallTitle })}>\n                    {subtitle}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {(titleActions || expandable) && (\n              <div className=\"card__title-actions-container\">\n                {titleActions && (\n                  <div\n                    className={classnames('card__title-actions', {\n                      'card__title-actions--small': smallTitle,\n                    })}\n                  >\n                    {titleActions}\n                  </div>\n                )}\n                {expandable && (\n                  <div className=\"card__title-actions\">\n                    <Button\n                      button=\"alt\"\n                      aria-expanded={expanded}\n                      aria-label={expanded ? __('Less') : __('More')}\n                      icon={expanded ? ICONS.SUBTRACT : ICONS.ADD}\n                      onClick={() => setExpanded(!expanded)}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n\n            {headerActions}\n          </div>\n        )}\n\n        {(!expandable || (expandable && expanded)) && (\n          <>\n            {body && (\n              <div\n                className={classnames('card__body', {\n                  'card__body--no-title': !title && !subtitle,\n                  'card__body--list': isBodyList,\n                })}\n              >\n                {body}\n              </div>\n            )}\n            {actions && <div className=\"card__main-actions\">{actions}</div>}\n            {children && <div className=\"card__main-actions\">{children}</div>}\n          </>\n        )}\n\n        {nag}\n      </FirstPaneWrapper>\n\n      {secondPane && <div className=\"card__second-pane\">{secondPane}</div>}\n    </section>\n  );\n}\n\ntype FirstPaneProps = {\n  singlePane?: boolean,\n  children: any,\n};\n\nconst FirstPaneWrapper = (props: FirstPaneProps) => {\n  const { singlePane, children } = props;\n\n  return singlePane ? children : <div className=\"card__first-pane\">{children}</div>;\n};\n\ntype TitleProps = {\n  isPageTitle?: boolean,\n  smallTitle?: boolean,\n  children?: any,\n  emoji?: any,\n  accessStatus?: string,\n};\n\nconst TitleWrapper = (props: TitleProps) => {\n  const { isPageTitle, smallTitle, children, accessStatus } = props;\n\n  /*\n  const Twemoji = ({ emoji }) => (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: twemoji.parse(emoji, {\n          folder: 'svg',\n          ext: '.svg',\n        }),\n      }}\n    />\n  );\n  */\n\n  const AccessIndicator = (par: any) => {\n    return (\n      <Tooltip title={__('This is a members-only content')}>\n        <div\n          className={classnames('content-access-indicator', {\n            locked: par.status === 'locked',\n            unlocked: par.status === 'unlocked',\n            purchased: par.status === 'purchased',\n          })}\n        >\n          <Icon icon={par.status === 'locked' ? ICONS.LOCK : ICONS.UNLOCK} />\n        </div>\n      </Tooltip>\n    );\n  };\n\n  /*\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return <Twemoji emoji={children?.props?.children[child]} />;\n      }\n    }\n    return children;\n  }\n  */\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return children?.props?.children[child];\n      }\n    }\n    return children;\n  }\n\n  return isPageTitle ? (\n    <h1 className=\"card__title\">\n      {accessStatus && <AccessIndicator status={accessStatus} />}\n      <font dangerouslySetInnerHTML={{ __html: transformer(children) }} />\n    </h1>\n  ) : (\n    <h2 className={classnames('card__title', { 'card__title--small': smallTitle })}>{children}</h2>\n  );\n};\n\nexport default Card;\n","// @flow\nimport * as React from 'react';\nimport Button from 'component/button';\nimport { Form, FormField, Submit } from 'component/common/form';\nimport I18nMessage from 'component/i18nMessage';\nimport Card from 'component/common/card';\nimport { SITE_HELP_EMAIL } from 'config';\n\ntype Props = {\n  verifyUserPhone: (string) => void,\n  resetPhone: () => void,\n  phoneErrorMessage: string,\n  phone: string,\n  countryCode: string,\n};\n\ntype State = {\n  code: string,\n};\n\nclass UserPhoneVerify extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      code: '',\n    };\n  }\n\n  handleCodeChanged(event: SyntheticInputEvent<*>) {\n    this.setState({\n      code: String(event.target.value).trim(),\n    });\n  }\n\n  handleSubmit() {\n    const { code } = this.state;\n    this.props.verifyUserPhone(code);\n  }\n\n  reset() {\n    const { resetPhone } = this.props;\n    resetPhone();\n  }\n\n  render() {\n    const { phoneErrorMessage, phone, countryCode } = this.props;\n    return (\n      <Card\n        title={__('Enter the verification code')}\n        subtitle={\n          <>\n            {__(`Please enter the verification code sent to +${countryCode}${phone}. Didn't receive it? `)}\n            <Button button=\"link\" onClick={this.reset.bind(this)} label={__('Go back.')} />\n          </>\n        }\n        actions={\n          <>\n            <Form onSubmit={this.handleSubmit.bind(this)}>\n              <FormField\n                type=\"text\"\n                name=\"code\"\n                placeholder=\"1234\"\n                value={this.state.code}\n                onChange={(event) => {\n                  this.handleCodeChanged(event);\n                }}\n                label={__('Verification Code')}\n                error={phoneErrorMessage}\n                inputButton={<Submit label={__('Verify')} />}\n              />\n            </Form>\n            <p className=\"help\">\n              <I18nMessage\n                tokens={{\n                  help_link: <Button button=\"link\" href={`mailto:${SITE_HELP_EMAIL}`} label={`${SITE_HELP_EMAIL}`} />,\n                  chat_link: <Button button=\"link\" href=\"https://chat.odysee.com\" label={__('chat')} />,\n                }}\n              >\n                Email %help_link% or join our %chat_link% if you encounter any trouble with your code.\n              </I18nMessage>\n            </p>\n          </>\n        }\n      />\n    );\n  }\n}\n\nexport default UserPhoneVerify;\n","import { connect } from 'react-redux';\nimport { doUserPhoneVerify, doUserPhoneReset } from 'redux/actions/user';\nimport { selectPhoneToVerify, selectPhoneVerifyErrorMessage, selectUserCountryCode } from 'redux/selectors/user';\nimport UserPhoneVerify from './view';\n\nconst select = state => ({\n  phone: selectPhoneToVerify(state),\n  countryCode: selectUserCountryCode(state),\n  phoneErrorMessage: selectPhoneVerifyErrorMessage(state),\n});\n\nconst perform = dispatch => ({\n  resetPhone: () => dispatch(doUserPhoneReset()),\n  verifyUserPhone: code => dispatch(doUserPhoneVerify(code)),\n});\n\nexport default connect(select, perform)(UserPhoneVerify);\n","// @flow\nimport * as React from 'react';\nimport { Form, FormField, Submit } from 'component/common/form';\nimport Card from 'component/common/card';\n\nconst os = require('os').type();\nconst countryCodes = require('country-data')\n  .callingCountries.all.filter((_) => _.emoji)\n  .reduce((acc, cur) => acc.concat(cur.countryCallingCodes.map((_) => ({ ...cur, countryCallingCode: _ }))), [])\n  .sort((a, b) => {\n    if (a.countryCallingCode < b.countryCallingCode) {\n      return -1;\n    }\n    if (a.countryCallingCode > b.countryCallingCode) {\n      return 1;\n    }\n    return 0;\n  });\n\ntype Props = {\n  addUserPhone: (string, string) => void,\n  cancelButton: React.Node,\n  phoneErrorMessage: ?string,\n  isPending: boolean,\n};\n\ntype State = {\n  phone: string,\n  countryCode: string,\n};\n\nclass UserPhoneNew extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      phone: '',\n      countryCode: '+1',\n    };\n\n    (this: any).formatPhone = this.formatPhone.bind(this);\n    (this: any).handleSubmit = this.handleSubmit.bind(this);\n    (this: any).handleSelect = this.handleSelect.bind(this);\n  }\n\n  formatPhone(value: string) {\n    const { countryCode } = this.state;\n    const formattedNumber = value.replace(/\\D/g, '');\n\n    if (countryCode === '+1') {\n      if (!formattedNumber) {\n        return '';\n      } else if (formattedNumber.length < 4) {\n        return formattedNumber;\n      } else if (formattedNumber.length < 7) {\n        return `(${formattedNumber.substring(0, 3)}) ${formattedNumber.substring(3)}`;\n      }\n      const fullNumber = `(${formattedNumber.substring(0, 3)}) ${formattedNumber.substring(\n        3,\n        6\n      )}-${formattedNumber.substring(6)}`;\n      return fullNumber.length <= 14 ? fullNumber : fullNumber.substring(0, 14);\n    }\n    return formattedNumber;\n  }\n\n  handleChanged(event: SyntheticInputEvent<*>) {\n    this.setState({\n      phone: this.formatPhone(event.target.value),\n    });\n  }\n\n  handleSelect(event: SyntheticInputEvent<*>) {\n    this.setState({ countryCode: event.target.value });\n  }\n\n  handleSubmit() {\n    const { phone, countryCode } = this.state;\n    this.props.addUserPhone(phone.replace(/\\D/g, ''), countryCode.substring(1));\n  }\n\n  render() {\n    const { cancelButton, phoneErrorMessage, isPending } = this.props;\n\n    return (\n      <Card\n        title={__('Enter your phone number')}\n        subtitle={__(\n          'Enter your phone number and we will send you a verification code. We will not share your phone number with third parties.'\n        )}\n        actions={\n          <Form onSubmit={this.handleSubmit}>\n            <fieldset-group class=\"fieldset-group--smushed\">\n              <FormField label={__('Country')} type=\"select\" name=\"country-codes\" onChange={this.handleSelect}>\n                {countryCodes.map((country, index) => (\n                  <option key={index} value={country.countryCallingCode}>\n                    {os === 'Darwin' ? country.emoji : `(${country.alpha2})`} {country.countryCallingCode}\n                  </option>\n                ))}\n              </FormField>\n              <FormField\n                type=\"text\"\n                label={__('Number')}\n                placeholder={this.state.countryCode === '+1' ? '(555) 555-5555' : '5555555555'}\n                name=\"phone\"\n                value={this.state.phone}\n                error={phoneErrorMessage}\n                onChange={(event) => {\n                  this.handleChanged(event);\n                }}\n              />\n            </fieldset-group>\n            <div className=\"card__actions\">\n              <Submit label={__('Submit')} disabled={isPending} />\n              {cancelButton}\n            </div>\n          </Form>\n        }\n      />\n    );\n  }\n}\n\nexport default UserPhoneNew;\n","import { connect } from 'react-redux';\nimport { selectPhoneNewErrorMessage } from 'redux/selectors/user';\nimport { doUserPhoneNew } from 'redux/actions/user';\nimport UserPhoneNew from './view';\n\nconst select = state => ({\n  phoneErrorMessage: selectPhoneNewErrorMessage(state),\n});\n\nconst perform = dispatch => ({\n  addUserPhone: (phone, countryCode) => dispatch(doUserPhoneNew(phone, countryCode)),\n});\n\nexport default connect(select, perform)(UserPhoneNew);\n","// @flow\nimport React from 'react';\nimport { Modal } from 'modal/modal';\nimport Button from 'component/button';\nimport UserPhoneVerify from 'component/userPhoneVerify';\nimport UserPhoneNew from 'component/userPhoneNew';\nimport { Redirect } from 'react-router';\n\ntype Props = {\n  phone: ?number,\n  user: {\n    is_identity_verified: boolean,\n  },\n  closeModal: () => void,\n  history: { push: string => void },\n};\n\nclass ModalPhoneCollection extends React.PureComponent<Props> {\n  renderInner() {\n    const { closeModal, phone, user } = this.props;\n\n    const cancelButton = <Button button=\"link\" onClick={closeModal} label={__('Not Now')} />;\n\n    if (!user.is_identity_verified && !phone) {\n      return <UserPhoneNew cancelButton={cancelButton} />;\n    } else if (!user.is_identity_verified) {\n      return <UserPhoneVerify cancelButton={cancelButton} />;\n    }\n\n    closeModal();\n    return <Redirect to=\"/$/rewards\" />;\n  }\n\n  render() {\n    const { user, closeModal } = this.props;\n\n    // this shouldn't happen\n    if (!user) {\n      return null;\n    }\n\n    return (\n      <Modal type=\"card\" isOpen contentLabel=\"Phone\" onAborted={closeModal}>\n        {this.renderInner()}\n      </Modal>\n    );\n  }\n}\n\nexport default ModalPhoneCollection;\n","import { connect } from 'react-redux';\nimport { doHideModal } from 'redux/actions/app';\nimport { selectPhoneToVerify, selectUser } from 'redux/selectors/user';\nimport ModalPhoneCollection from './view';\n\nconst select = state => ({\n  phone: selectPhoneToVerify(state),\n  user: selectUser(state),\n});\n\nconst perform = dispatch => () => ({\n  closeModal: () => dispatch(doHideModal()),\n});\n\nexport default connect(select, perform)(ModalPhoneCollection);\n"],"names":["FirstPaneWrapper","props","singlePane","children","React","className","TitleWrapper","isPageTitle","smallTitle","accessStatus","AccessIndicator","par","Tooltip","title","__","classnames","locked","status","unlocked","purchased","Icon","icon","ICONS","dangerouslySetInnerHTML","__html","child","_children$props","_children$props2","_children$props3","transformer","subtitle","titleActions","id","body","actions","_props$isPageTitle","_props$isBodyList","isBodyList","_props$smallTitle","defaultExpand","nag","_onClick","onClick","secondPane","slimHeader","background","backgroundImage","headerActions","gridHeader","_useState2","_slicedToArray","useState","expanded","setExpanded","expandable","undefined","role","Boolean","e","stopPropagation","style","sectionIcon","Button","button","_React$PureComponent","_inherits","UserPhoneVerify","_super","_createSuper","_this","_classCallCheck","call","state","code","key","value","event","this","setState","String","target","trim","verifyUserPhone","resetPhone","_this2","_this$props","phoneErrorMessage","phone","countryCode","Card","concat","reset","bind","label","Form","onSubmit","handleSubmit","FormField","type","name","placeholder","onChange","handleCodeChanged","error","inputButton","Submit","I18nMessage","tokens","help_link","href","SITE_HELP_EMAIL","chat_link","connect","selectPhoneToVerify","selectUserCountryCode","selectPhoneVerifyErrorMessage","dispatch","doUserPhoneReset","doUserPhoneVerify","os","require","countryCodes","_","emoji","reduce","acc","cur","countryCallingCodes","map","_objectSpread","countryCallingCode","sort","a","b","UserPhoneNew","_assertThisInitialized","formatPhone","handleSelect","formattedNumber","replace","length","substring","fullNumber","_this$state","addUserPhone","cancelButton","isPending","class","country","index","alpha2","handleChanged","disabled","selectPhoneNewErrorMessage","doUserPhoneNew","ModalPhoneCollection","apply","arguments","closeModal","user","is_identity_verified","Redirect","to","_this$props2","Modal","isOpen","contentLabel","onAborted","renderInner","selectUser","doHideModal"],"sourceRoot":""}