{"version":3,"file":"fileListPublished-96d0a2891736f984e9a0.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/claimSearchView/style.scss?9e28","webpack://odysee.com/../ui/component/claimSearchView/view.jsx","webpack://odysee.com/../ui/component/claimSearchView/index.js","webpack://odysee.com/../ui/component/common/busy-indicator.jsx","webpack://odysee.com/../ui/component/common/card.jsx","webpack://odysee.com/../ui/component/common/file-selector.jsx","webpack://odysee.com/../ui/component/common/paginate.jsx","webpack://odysee.com/../ui/page/fileListPublished/style.scss?67a9","webpack://odysee.com/../ui/component/webUploadList/internal/web-upload-item.jsx","webpack://odysee.com/../ui/component/webUploadList/index.js","webpack://odysee.com/../ui/component/webUploadList/view.jsx","webpack://odysee.com/../ui/page/fileListPublished/view.jsx","webpack://odysee.com/../ui/page/fileListPublished/index.js","webpack://odysee.com/../react_components/BreakView.js","webpack://odysee.com/../react_components/PageView.js","webpack://odysee.com/../react_components/PaginationBoxView.js","webpack://odysee.com/../react_components/index.js","webpack://odysee.com/../ui/component/claimSearchView/style.scss","webpack://odysee.com/../ui/page/fileListPublished/style.scss"],"sourcesContent":["\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","/**\n * Generic paginated representation of a `claim_search` call.\n *\n * Client provides the full claim_search options. The component only handles\n * the pagination and API calls.\n *\n * -- Usage note: Please memoize 'csOptions' object --\n *  To keep the props list minimal, ClaimSearchOptions is used, but unstable\n *  object references will cause a re-render, so we have to rely on the client\n *  to memoize the object.\n *\n * -- Usage note: how to change options --\n *  To re-use the same instance but with different csOptions, invalidate the\n *  instance through the React 'key' prop.\n *\n * -- Design note: no handling of csOptions --\n *  This component will not construct the options object; the client is in full\n *  control. This eliminates the need to expose a long list of redundant props,\n *  and also makes the usage (what type of search) clearer from the client side.\n *\n *  [CsOptHelper] can be used to generate common options.\n */\n\n// @flow\nimport type { Node } from 'react';\nimport React from 'react';\n\nimport './style.scss';\nimport ClaimList from 'component/claimList';\nimport Icon from 'component/common/icon';\nimport * as ICONS from 'constants/icons';\nimport Spinner from 'component/spinner';\nimport debounce from 'util/debounce';\n\n// ****************************************************************************\n// ****************************************************************************\n\nexport type Props = {|\n  csOptions: ClaimSearchOptions,\n  pagination?: 'infinite' | 'paged',\n  header?: string | Node,\n  layout?: 'tile' | 'list',\n|};\n\ntype StateProps = {|\n  csResults: ?Array<string>,\n  csResultsMiscInfo: ?ClaimSearchResultsInfo,\n  isFetching: boolean,\n|};\n\ntype DispatchProps = {|\n  doClaimSearch: (options: ClaimSearchOptions, settings?: DoClaimSearchSettings) => void,\n|};\n\n// ****************************************************************************\n// ****************************************************************************\n\nfunction ClaimSearchView(props: Props & StateProps & DispatchProps) {\n  const {\n    csOptions,\n    pagination = 'infinite',\n    header,\n    layout = 'tile',\n    csResults,\n    csResultsMiscInfo,\n    isFetching,\n    doClaimSearch,\n  } = props;\n\n  type ScrollInfo = {\n    isFetching: boolean,\n    csResults: ?Array<string>,\n    hasMorePages: boolean,\n  };\n\n  const scrollInfoRef = React.useRef<?ScrollInfo>();\n  const containerRef = React.useRef<?HTMLDivElement>(null);\n  const [page, setPage] = React.useState(1);\n\n  const hasMorePages = React.useMemo(() => {\n    if (csResultsMiscInfo && csResultsMiscInfo.page && csResultsMiscInfo.totalPages) {\n      return csResultsMiscInfo.page < csResultsMiscInfo.totalPages;\n    }\n    return false;\n  }, [csResultsMiscInfo]);\n\n  function advanceToNextPage() {\n    // Using a ref here as a workaround to the stale-closure problem because\n    // advanceToNextPage() is used inside the debounced scroll-handler function.\n    // We don't want to re-register the handler each time any of the props\n    // changed, hence the ref method.\n    if (scrollInfoRef.current) {\n      const { isFetching, csResults, hasMorePages } = scrollInfoRef.current;\n      if (!isFetching) {\n        if (csResults && hasMorePages) {\n          setPage((prev) => prev + 1);\n        }\n      }\n    }\n  }\n\n  const Header = () => {\n    if (header) {\n      if (typeof header === 'string') {\n        return <label className=\"cs-view__header\">{header}</label>;\n      } else {\n        return header;\n      }\n    }\n    return null;\n  };\n\n  const NoResults = () => {\n    if (isFetching) {\n      return null;\n    }\n\n    return (\n      <div className=\"cs-view__no-results\" onClick={advanceToNextPage}>\n        {csResults === null && <p>{__('Sorry, your request timed out. Try refreshing in a bit.')}</p>}\n        {csResults && csResults.length === 0 && <p>{__('No results.')}</p>}\n      </div>\n    );\n  };\n\n  const MoreIndicator = () => {\n    if (pagination === 'infinite') {\n      return (\n        <div className=\"cs-view__has-more\" onClick={advanceToNextPage}>\n          {isFetching && <Spinner type=\"small\" />}\n          {!isFetching && hasMorePages && <Icon icon={ICONS.DOWN} />}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  // --------------------------------------------------------------------------\n\n  // Infinite-scroll query\n  React.useEffect(() => {\n    if (pagination !== 'infinite') {\n      return;\n    }\n\n    if (csResults === undefined) {\n      if (page !== 1) {\n        setPage(1); // Covers the case of results purged while we are mounted.\n      }\n      doClaimSearch({ ...csOptions, page: 1 });\n    } else {\n      assert(csResultsMiscInfo, 'claimSearchView: previous search info missing', csResultsMiscInfo);\n      const prevPage = csResultsMiscInfo && csResultsMiscInfo.page ? csResultsMiscInfo.page : null;\n      const pageChanged = prevPage && page !== prevPage;\n      if (pageChanged && hasMorePages) {\n        doClaimSearch({ ...csOptions, page: page });\n      }\n    }\n  }, [csOptions, csResults, csResultsMiscInfo, doClaimSearch, hasMorePages, page, pagination]);\n\n  React.useEffect(() => {\n    scrollInfoRef.current = { isFetching, csResults, hasMorePages };\n  }, [isFetching, csResults, hasMorePages]);\n\n  React.useEffect(() => {\n    const handleScroll = debounce(() => {\n      const container = containerRef.current;\n      if (container) {\n        const containerBottom = container.offsetTop + container.offsetHeight;\n        const viewportBottom = window.scrollY + window.innerHeight;\n        if (containerBottom <= viewportBottom) {\n          advanceToNextPage();\n        }\n      }\n    }, 150);\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- on mount only\n  }, []);\n\n  // --------------------------------------------------------------------------\n\n  assert(csOptions.page_size, 'Please provide a page_size');\n\n  if (pagination === 'paged') {\n    // It's a little tricky to implement given how we are storing result's key\n    // using the claim_search query, minus the page. Will require some deeper\n    // changes. Coming soon(tm).\n    assert(false, 'Paged pagination not supported at the moment');\n    return null;\n  }\n\n  return (\n    <div className=\"cs-view\" ref={containerRef}>\n      <Header />\n      <ClaimList\n        uris={csResults}\n        tileLayout={layout === 'tile'}\n        showNoSourceClaims={csOptions.has_no_source || undefined}\n        noEmpty\n      />\n      <NoResults />\n      <MoreIndicator />\n    </div>\n  );\n}\n\nexport default ClaimSearchView;\n","// @flow\nimport { connect } from 'react-redux';\nimport type { Props } from './view';\nimport ClaimSearchView from './view';\n\nimport { doClaimSearch } from 'redux/actions/claims';\nimport { selectClaimsStates, selectClaimSearchByQuery, selectFetchingClaimSearchByQuery } from 'redux/selectors/claims';\nimport { createNormalizedClaimSearchKey } from 'util/claim';\n\nconst select = (state, props) => {\n  const csByQuery = selectClaimSearchByQuery(state);\n  const csByQueryMiscInfo = selectClaimsStates(state).claimSearchByQueryMiscInfo;\n  const csIsFetchingByQuery = selectFetchingClaimSearchByQuery(state);\n  const query = createNormalizedClaimSearchKey(props.csOptions);\n\n  return {\n    csResults: csByQuery[query],\n    csResultsMiscInfo: csByQueryMiscInfo[query],\n    isFetching: csIsFetchingByQuery[query],\n  };\n};\n\nconst perform = {\n  doClaimSearch,\n};\n\nexport default connect<_, Props, _, _, _, _>(select, perform)(ClaimSearchView);\n","// @flow\nimport React from 'react';\n\ntype Props = {\n  message: ?string,\n};\n\nclass BusyIndicator extends React.PureComponent<Props> {\n  static defaultProps = {\n    message: '',\n  };\n\n  render() {\n    const { message } = this.props;\n\n    return (\n      <span className=\"busy-indicator\">\n        {message} <span className=\"busy-indicator__loader\" />\n      </span>\n    );\n  }\n}\n\nexport default BusyIndicator;\n","// @flow\nimport type { Node } from 'react';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Icon from 'component/common/icon';\nimport Button from 'component/button';\nimport * as ICONS from 'constants/icons';\n// import twemoji from 'twemoji';\nimport Tooltip from 'component/common/tooltip';\n\ntype Props = {\n  title?: string | Node,\n  subtitle?: string | Node,\n  titleActions?: string | Node,\n  id?: string,\n  body?: string | Node,\n  actions?: string | Node,\n  icon?: string,\n  className?: string,\n  isPageTitle?: boolean,\n  noTitleWrap?: boolean,\n  isBodyList?: boolean,\n  defaultExpand?: boolean,\n  nag?: Node,\n  smallTitle?: boolean,\n  onClick?: () => void,\n  children?: Node,\n  secondPane?: Node,\n  slimHeader?: boolean,\n  background?: boolean,\n  backgroundImage?: string,\n  singlePane?: boolean,\n  headerActions?: Node,\n  gridHeader?: boolean,\n  accessStatus?: string,\n};\n\nfunction Card(props: Props) {\n  const {\n    title,\n    subtitle,\n    titleActions,\n    id,\n    body,\n    actions,\n    icon,\n    className,\n    isPageTitle = false,\n    isBodyList = false,\n    // noTitleWrap = false,\n    smallTitle = false,\n    defaultExpand,\n    nag,\n    onClick,\n    children,\n    secondPane,\n    slimHeader,\n    background,\n    backgroundImage,\n    singlePane,\n    headerActions,\n    accessStatus,\n    gridHeader,\n  } = props;\n\n  const [expanded, setExpanded] = useState(defaultExpand);\n  const expandable = defaultExpand !== undefined;\n\n  return (\n    <section\n      role={onClick ? 'button' : undefined}\n      className={classnames(className, 'card', {\n        'card__multi-pane': Boolean(secondPane),\n        'card--background': background,\n      })}\n      id={id}\n      onClick={(e) => {\n        if (onClick) {\n          onClick();\n          e.stopPropagation();\n        }\n      }}\n    >\n      {backgroundImage && (\n        <div\n          className=\"background\"\n          style={{\n            backgroundImage:\n              'url(https://thumbnails.odycdn.com/optimize/s:390:0/quality:85/plain/' + backgroundImage + ')',\n          }}\n        />\n      )}\n      <FirstPaneWrapper singlePane={singlePane}>\n        {(title || subtitle) && (\n          <div\n            className={classnames('card__header--between', {\n              'card__header--slim': slimHeader,\n              'card__header--grid': gridHeader,\n            })}\n          >\n            <div className={classnames('card__title-section', { 'card__title-section--body-list': isBodyList })}>\n              {icon && <Icon sectionIcon icon={icon} />}\n\n              <div className=\"card__title-text\">\n                <TitleWrapper isPageTitle={isPageTitle} smallTitle={smallTitle} accessStatus={accessStatus}>\n                  {title}\n                </TitleWrapper>\n\n                {subtitle && (\n                  <div className={classnames('card__subtitle', { 'card__subtitle--small': smallTitle })}>\n                    {subtitle}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {(titleActions || expandable) && (\n              <div className=\"card__title-actions-container\">\n                {titleActions && (\n                  <div\n                    className={classnames('card__title-actions', {\n                      'card__title-actions--small': smallTitle,\n                    })}\n                  >\n                    {titleActions}\n                  </div>\n                )}\n                {expandable && (\n                  <div className=\"card__title-actions\">\n                    <Button\n                      button=\"alt\"\n                      aria-expanded={expanded}\n                      aria-label={expanded ? __('Less') : __('More')}\n                      icon={expanded ? ICONS.SUBTRACT : ICONS.ADD}\n                      onClick={() => setExpanded(!expanded)}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n\n            {headerActions}\n          </div>\n        )}\n\n        {(!expandable || (expandable && expanded)) && (\n          <>\n            {body && (\n              <div\n                className={classnames('card__body', {\n                  'card__body--no-title': !title && !subtitle,\n                  'card__body--list': isBodyList,\n                })}\n              >\n                {body}\n              </div>\n            )}\n            {actions && <div className=\"card__main-actions\">{actions}</div>}\n            {children && <div className=\"card__main-actions\">{children}</div>}\n          </>\n        )}\n\n        {nag}\n      </FirstPaneWrapper>\n\n      {secondPane && <div className=\"card__second-pane\">{secondPane}</div>}\n    </section>\n  );\n}\n\ntype FirstPaneProps = {\n  singlePane?: boolean,\n  children: any,\n};\n\nconst FirstPaneWrapper = (props: FirstPaneProps) => {\n  const { singlePane, children } = props;\n\n  return singlePane ? children : <div className=\"card__first-pane\">{children}</div>;\n};\n\ntype TitleProps = {\n  isPageTitle?: boolean,\n  smallTitle?: boolean,\n  children?: any,\n  emoji?: any,\n  accessStatus?: string,\n};\n\nconst TitleWrapper = (props: TitleProps) => {\n  const { isPageTitle, smallTitle, children, accessStatus } = props;\n\n  /*\n  const Twemoji = ({ emoji }) => (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: twemoji.parse(emoji, {\n          folder: 'svg',\n          ext: '.svg',\n        }),\n      }}\n    />\n  );\n  */\n\n  const AccessIndicator = (par: any) => {\n    return (\n      <Tooltip title={__('This is a members-only content')}>\n        <div\n          className={classnames('content-access-indicator', {\n            locked: par.status === 'locked',\n            unlocked: par.status === 'unlocked',\n            purchased: par.status === 'purchased',\n          })}\n        >\n          <Icon icon={par.status === 'locked' ? ICONS.LOCK : ICONS.UNLOCK} />\n        </div>\n      </Tooltip>\n    );\n  };\n\n  /*\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return <Twemoji emoji={children?.props?.children[child]} />;\n      }\n    }\n    return children;\n  }\n  */\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return children?.props?.children[child];\n      }\n    }\n    return children;\n  }\n\n  return isPageTitle ? (\n    <h1 className=\"card__title\">\n      {accessStatus && <AccessIndicator status={accessStatus} />}\n      <font dangerouslySetInnerHTML={{ __html: transformer(children) }} />\n    </h1>\n  ) : (\n    <h2 className={classnames('card__title', { 'card__title--small': smallTitle })}>{children}</h2>\n  );\n};\n\nexport default Card;\n","// @flow\nimport * as React from 'react';\nimport { remote } from 'electron';\nimport Button from 'component/button';\nimport { FormField } from 'component/common/form';\n\ntype Props = {\n  type: string,\n  currentPath?: ?string,\n  onFileChosen: (WebFile) => void,\n  label?: string,\n  placeholder?: string,\n  accept?: string,\n  error?: string,\n  disabled?: boolean,\n  autoFocus?: boolean,\n};\n\nclass FileSelector extends React.PureComponent<Props> {\n  static defaultProps = {\n    autoFocus: false,\n    type: 'file',\n  };\n\n  fileInput: React.ElementRef<any>;\n\n  constructor() {\n    super();\n    this.fileInput = React.createRef();\n    this.handleFileInputSelection = this.handleFileInputSelection.bind(this);\n    this.handleDirectoryInputSelection = this.handleDirectoryInputSelection.bind(this);\n    this.fileInputButton = this.fileInputButton.bind(this);\n  }\n\n  handleFileInputSelection = () => {\n    const { files } = this.fileInput.current;\n    if (!files) {\n      return;\n    }\n\n    const file = files[0];\n\n    if (this.props.onFileChosen) {\n      this.props.onFileChosen(file);\n    }\n    this.fileInput.current.value = null; // clear the file input\n  };\n\n  handleDirectoryInputSelection = () => {\n    remote.dialog.showOpenDialog({ properties: ['openDirectory'] }).then((result) => {\n      const path = result && result.filePaths[0];\n      if (path) {\n        // $FlowFixMe\n        this.props.onFileChosen({ path });\n      }\n    });\n  };\n\n  fileInputButton = () => {\n    this.fileInput.current.click();\n  };\n\n  input: ?HTMLInputElement;\n\n  render() {\n    const { type, currentPath, label, placeholder, accept, error, disabled, autoFocus = false } = this.props;\n    const placeHolder = currentPath || placeholder;\n\n    return (\n      <React.Fragment>\n        <FormField\n          label={label}\n          webkitdirectory=\"true\"\n          className=\"form-field--copyable\"\n          error={error}\n          disabled={disabled}\n          type=\"text\"\n          readOnly=\"readonly\"\n          value={placeHolder || __('Choose a file')}\n          inputButton={\n            <Button\n              autoFocus={autoFocus}\n              button=\"primary\"\n              disabled={disabled}\n              onClick={type === 'openDirectory' ? this.handleDirectoryInputSelection : this.fileInputButton}\n              label={__('Browse')}\n            />\n          }\n        />\n        <input\n          type={'file'}\n          style={{ display: 'none' }}\n          accept={accept}\n          ref={this.fileInput}\n          onChange={() => (type === 'openDirectory' ? () => {} : this.handleFileInputSelection())}\n          webkitdirectory={type === 'openDirectory' ? 'True' : null}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default FileSelector;\n","// @flow\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { Form, FormField } from 'component/common/form';\nimport ReactPaginate from 'react-paginate';\nimport { useIsMobile } from 'effects/use-screensize';\n\nconst PAGINATE_PARAM = 'page';\n\ntype Props = {\n  totalPages: number,\n  shouldResetPageNumber?: boolean,\n  location: { search: string },\n  history: { push: (string) => void },\n  onPageChange?: (number) => void,\n  disableHistory?: boolean, // Disables the use of '&page=' param and history stack.\n};\n\nfunction Paginate(props: Props) {\n  const { totalPages = 1, shouldResetPageNumber, location, history, onPageChange, disableHistory } = props;\n  const { search } = location;\n  const [textValue, setTextValue] = React.useState('');\n  const urlParams = new URLSearchParams(search);\n  const urlParamPage = Number(urlParams.get(PAGINATE_PARAM));\n  const initialPage = disableHistory ? 1 : urlParamPage || 1;\n  const [currentPage, setCurrentPage] = React.useState(initialPage);\n  const isMobile = useIsMobile();\n  const firstPage = 1;\n\n  function handleChangePage(newPageNumber: number) {\n    if (onPageChange) {\n      onPageChange(newPageNumber);\n    }\n\n    if (currentPage !== newPageNumber) {\n      setCurrentPage(newPageNumber);\n\n      if (!disableHistory) {\n        const params = new URLSearchParams(search);\n        params.set(PAGINATE_PARAM, newPageNumber.toString());\n        history.push('?' + params.toString());\n      }\n    }\n  }\n\n  function handlePaginateKeyUp() {\n    const newPage = Number(textValue);\n    if (newPage && newPage > 0 && newPage <= totalPages) {\n      handleChangePage(newPage);\n    }\n    setTextValue('');\n  }\n\n  if (shouldResetPageNumber && currentPage !== firstPage) {\n    handleChangePage(firstPage);\n  }\n\n  React.useEffect(() => {\n    if (urlParamPage) {\n      setCurrentPage(urlParamPage);\n    }\n  }, [urlParamPage, setCurrentPage]);\n\n  return (\n    // Hide the paginate controls if we are loading or there is only one page\n    // It should still be rendered to trigger the onPageChange callback\n    <Form style={totalPages <= 1 ? { display: 'none' } : null} onSubmit={handlePaginateKeyUp}>\n      <fieldset-group class=\"fieldset-group--smushed fieldgroup--paginate\">\n        <fieldset-section>\n          <ReactPaginate\n            pageCount={totalPages}\n            pageRangeDisplayed={2}\n            previousLabel=\"‹\"\n            nextLabel=\"›\"\n            activeClassName=\"pagination__item--selected\"\n            pageClassName=\"pagination__item\"\n            previousClassName=\"pagination__item pagination__item--previous\"\n            nextClassName=\"pagination__item pagination__item--next\"\n            breakClassName=\"pagination__item pagination__item--break\"\n            marginPagesDisplayed={2}\n            onPageChange={(e) => handleChangePage(e.selected + 1)}\n            forcePage={currentPage - 1}\n            initialPage={currentPage - 1}\n            containerClassName=\"pagination\"\n          />\n        </fieldset-section>\n        {!isMobile && (\n          <FormField\n            value={textValue}\n            onChange={(e) => setTextValue(e.target.value)}\n            className=\"paginate-channel\"\n            label={__('Go to page:')}\n            type=\"text\"\n            name=\"paginate-file\"\n          />\n        )}\n      </fieldset-group>\n    </Form>\n  );\n}\n\nexport default withRouter(Paginate);\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","// @flow\nimport React, { useState } from 'react';\nimport BusyIndicator from 'component/common/busy-indicator';\nimport FileSelector from 'component/common/file-selector';\nimport Button from 'component/button';\nimport FileThumbnail from 'component/fileThumbnail';\nimport * as MODALS from 'constants/modal_types';\nimport { serializeFileObj } from 'util/file';\nimport { tusIsSessionLocked } from 'util/tus';\n\ntype Props = {\n  uploadItem: FileUploadItem,\n  doPublishResume: (any) => void,\n  doUpdateUploadRemove: (string, any) => void,\n  doOpenModal: (string, {}) => void,\n};\n\nexport default function WebUploadItem(props: Props) {\n  const { uploadItem, doPublishResume, doUpdateUploadRemove, doOpenModal } = props;\n  const { params, file, fileFingerprint, progress, status, publishId, resumable, uploader, backend } = uploadItem;\n\n  const [isCheckingStatus, setIsCheckingStatus] = useState(false);\n  const [showFileSelector, setShowFileSelector] = useState(false);\n  const locked = tusIsSessionLocked(params.guid);\n\n  function handleFileChange(newFile: WebFile, clearName = true) {\n    if (serializeFileObj(newFile) === fileFingerprint) {\n      setShowFileSelector(false);\n      doPublishResume({ ...params, file_path: newFile });\n      if (!params.guid) {\n        // Can remove this if-block after January 2022.\n        doUpdateUploadRemove('', params);\n      }\n    } else {\n      doOpenModal(MODALS.CONFIRM, {\n        title: __('Invalid file'),\n        subtitle: __('It appears to be a different or modified file.'),\n        body: <p className=\"help--warning\">{__('Please select the same file from the initial upload.')}</p>,\n        onConfirm: (closeModal) => closeModal(),\n        hideCancel: true,\n      });\n    }\n  }\n\n  function handleCancel() {\n    doOpenModal(MODALS.CONFIRM, {\n      title: __('Cancel upload'),\n      subtitle: __('Cancel and remove the selected upload?'),\n      body: params.name ? (\n        <>\n          <div className=\"section section--padded border-std non-clickable\">\n            <p className=\"empty\">{`lbry://${params.name}`}</p>\n          </div>\n          <div className=\"section section__subtitle\">\n            <p>\n              {__(\n                'If the file has been fully uploaded and already being processed, it might still appear in your Uploads list later.'\n              )}\n            </p>\n          </div>\n        </>\n      ) : undefined,\n      onConfirm: (closeModal) => {\n        if (tusIsSessionLocked(params.guid)) {\n          // Corner-case: it's possible for the upload to resume in another tab\n          // after the modal has appeared. Make a final lock-check here.\n          // We can invoke a toast here, but just do nothing for now.\n          // The upload status should make things obvious.\n        } else {\n          if (uploader) {\n            if (resumable) {\n              // $FlowFixMe - couldn't resolve to TusUploader manually.\n              uploader.abort(true); // TUS\n            } else {\n              uploader.abort(); // XHR\n            }\n          }\n\n          // The second parameter (params) can be removed after January 2022.\n          doUpdateUploadRemove(params.guid, params);\n        }\n        closeModal();\n      },\n    });\n  }\n\n  function getProgressElem() {\n    if (locked) {\n      return __('File being uploaded in another tab or window.');\n    }\n\n    if (!uploader) {\n      if (status === 'notify_ok') {\n        if (isCheckingStatus) {\n          return <BusyIndicator message={__('Still processing, please be patient...')} />;\n        } else {\n          return __('File uploaded to server.');\n        }\n      } else {\n        return __('Stopped.');\n      }\n    }\n\n    if (resumable) {\n      if (status) {\n        switch (status) {\n          case 'retry':\n            return __('Uploading...');\n          case 'error':\n            return __('Failed.');\n          case 'conflict':\n            return __('Stopped. Duplicate session detected.');\n          case 'notify_ok':\n            return <BusyIndicator message={__('Processing file. Please wait...')} />;\n          case 'notify_failed':\n            return __('Failed to process file. Please try again.');\n          default:\n            return status;\n        }\n      } else {\n        const progressInt = parseInt(progress);\n        return progressInt === 100 ? __('Processing...') : `${__('Uploading...')} (${progressInt}%)`;\n      }\n    } else {\n      return __('Uploading...');\n    }\n  }\n\n  function getProgressSubText() {\n    if (locked) {\n      return null;\n    }\n\n    if (!uploader) {\n      return null;\n    }\n\n    if (resumable) {\n      if (status) {\n        switch (status) {\n          case 'notify_ok':\n            if (file?.size && file.size > 500000000) {\n              return 'Check back later, larger files take longer to process.';\n            } else {\n              return null;\n            }\n          default:\n            return null;\n        }\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  function getRetryButton() {\n    if (!resumable || locked) {\n      return null;\n    }\n\n    if (uploader && status !== 'notify_failed') {\n      // Should still be uploading. Don't show.\n      return null;\n    } else {\n      // Refreshed or connection broken ...\n\n      if (backend !== 'v4') {\n        return getLegacyRetryButton();\n      }\n\n      if (publishId) {\n        // ... '/notify' was already sent and known to be successful. We just\n        // need to resume from the '/status' query stage.\n        return !isCheckingStatus ? (\n          <Button\n            label={__('Check Status')}\n            button=\"link\"\n            onClick={() => {\n              setIsCheckingStatus(true);\n              doPublishResume({ ...params, publishId });\n            }}\n          />\n        ) : null;\n      }\n\n      let isFileActive = file instanceof File;\n      // #631: There are logs showing that some users can't resume no matter how\n      // many times they tried, which seems to indicate the net::ERR_UPLOAD_FILE_CHANGED\n      // problem. Since we can't programmatically detect this scenario, always\n      // assume so and ask the user to re-select the file.\n      isFileActive = false;\n\n      return (\n        <Button\n          label={isFileActive ? __('Resume') : __('Retry')}\n          button=\"link\"\n          onClick={() => {\n            if (isFileActive) {\n              doPublishResume({ ...params, file_path: file });\n            } else {\n              setShowFileSelector(true);\n            }\n          }}\n          disabled={showFileSelector}\n        />\n      );\n    }\n  }\n\n  function getLegacyRetryButton() {\n    if (uploadItem.params.sdkRan) {\n      return null;\n    }\n\n    return (\n      <Button label={__('Retry')} button=\"link\" onClick={() => setShowFileSelector(true)} disabled={showFileSelector} />\n    );\n  }\n\n  function getCancelButton() {\n    if (!locked) {\n      if (resumable) {\n        if (publishId && status === 'error') {\n          return <Button label={__('Remove')} button=\"link\" onClick={handleCancel} />;\n        }\n\n      }\n\n      return <Button label={__('Cancel')} button=\"link\" onClick={handleCancel} />;\n    }\n  }\n\n  function getFileSelector() {\n    return (\n      <div className=\"claim-preview--padded\">\n        <FileSelector\n          label={__('File')}\n          onFileChosen={handleFileChange}\n          // https://stackoverflow.com/questions/19107685/safari-input-type-file-accept-video-ignores-mp4-files\n          placeholder={__('Select the file to resume upload...')}\n        />\n      </div>\n    );\n  }\n\n  function getProgressBar() {\n    return (\n      <>\n        <div className=\"claim-upload__progress--label\">lbry://{params.name}</div>\n        <div className={'claim-upload__progress--outer card--inline'}>\n          <div className={'claim-upload__progress--inner'} style={{ width: `${progress}%` }}>\n            <span className=\"claim-upload__progress--inner-text\">{getProgressElem()}</span>\n          </div>\n        </div>\n        <div className=\"claim-upload__progress-sub-text\">{getProgressSubText()}</div>\n      </>\n    );\n  }\n\n  React.useEffect(() => {\n    if (locked && showFileSelector) {\n      setShowFileSelector(false);\n    }\n  }, [locked, showFileSelector]);\n\n  return (\n    <li\n      className={\n        'claim-preview__wrapper claim-preview__wrapper--row web-upload-item claim-preview claim-preview--inactive card--inline'\n      }\n    >\n      <FileThumbnail thumbnail={params.thumbnail_url} />\n      <div className={'claim-preview-metadata'}>\n        <div className=\"claim-preview-info\">\n          <div className=\"claim-preview__title\">{params.title}</div>\n          <div className=\"card__actions--inline\">\n            {getRetryButton()}\n            {getCancelButton()}\n          </div>\n        </div>\n        {showFileSelector && getFileSelector()}\n        {!showFileSelector && getProgressBar()}\n      </div>\n    </li>\n  );\n}\n","import { connect } from 'react-redux';\nimport { doOpenModal } from 'redux/actions/app';\nimport { doPublishResume, doUpdateUploadRemove } from 'redux/actions/publish';\nimport { selectCurrentUploads, selectUploadCount } from 'redux/selectors/publish';\nimport WebUploadList from './view';\n\nconst select = (state) => ({\n  currentUploads: selectCurrentUploads(state),\n  uploadCount: selectUploadCount(state),\n});\n\nconst perform = {\n  doPublishResume,\n  doUpdateUploadRemove,\n  doOpenModal,\n};\n\nexport default connect(select, perform)(WebUploadList);\n","// @flow\nimport * as React from 'react';\nimport Card from 'component/common/card';\nimport WebUploadItem from './internal/web-upload-item';\n\ntype Props = {\n  currentUploads: { [guid: string]: FileUploadItem },\n  uploadCount: number,\n  doPublishResume: (any) => void,\n  doUpdateUploadRemove: (string, any) => void,\n  doOpenModal: (string, {}) => void,\n};\n\nexport default function WebUploadList(props: Props) {\n  const { currentUploads, uploadCount, doPublishResume, doUpdateUploadRemove, doOpenModal } = props;\n\n  return (\n    !!uploadCount && (\n      <Card\n        title={__('Currently Uploading')}\n        subtitle={__('Leave the app running until upload is complete')}\n        body={\n          <section>\n            {/* $FlowFixMe */}\n            {Object.values(currentUploads).map((uploadItem) => (\n              <WebUploadItem\n                // $FlowFixMe\n                key={`upload${uploadItem.params.name}`}\n                // $FlowFixMe\n                uploadItem={uploadItem}\n                doPublishResume={doPublishResume}\n                doUpdateUploadRemove={doUpdateUploadRemove}\n                doOpenModal={doOpenModal}\n              />\n            ))}\n          </section>\n        }\n      />\n    )\n  );\n}\n","// @flow\nimport type { DoFetchClaimListMine } from 'redux/actions/claims';\n\nimport './style.scss';\nimport * as ICONS from 'constants/icons';\nimport React, { useEffect } from 'react';\nimport Button from 'component/button';\nimport ClaimList from 'component/claimList';\nimport ClaimPreview from 'component/claimPreview';\nimport ClaimSearchView from 'component/claimSearchView';\nimport Page from 'component/page';\nimport Icon from 'component/common/icon';\nimport Paginate from 'component/common/paginate';\nimport { PAGE_PARAM, PAGE_SIZE_PARAM } from 'constants/claim';\nimport { SCHEDULED_TAGS, VISIBILITY_TAGS } from 'constants/tags';\nimport WebUploadList from 'component/webUploadList';\nimport Spinner from 'component/spinner';\nimport Yrbl from 'component/yrbl';\nimport classnames from 'classnames';\n\ntype FilterInfo = { key: string, cmd: string, label: string, ariaLabel?: string };\n\nconst FILTER: { [string]: FilterInfo } = Object.freeze({\n  ALL: { key: 'ALL', cmd: 'stream,repost', label: 'All', ariaLabel: 'All uploads' },\n  UPLOADS: { key: 'UPLOADS', cmd: 'stream', label: 'Uploads' },\n  REPOSTS: { key: 'REPOSTS', cmd: 'repost', label: 'Reposts' },\n  UNLISTED: { key: 'UNLISTED', cmd: '', label: 'Unlisted' },\n  SCHEDULED: { key: 'SCHEDULED', cmd: '', label: 'Scheduled' },\n});\n\nconst METHOD = {\n  CLAIM_LIST: 'CLAIM_LIST',\n  CLAIM_SEARCH: 'CLAIM_SEARCH',\n};\n\ntype Props = {\n  uploadCount: number,\n  checkPendingPublishes: () => void,\n  doBeginPublish: (PublishType, ?string) => void,\n  fetchClaimListMine: DoFetchClaimListMine,\n  fetching: boolean,\n  urls: Array<string>,\n  urlTotal: number,\n  history: { replace: (string) => void, push: (string) => void },\n  page: number,\n  pageSize: number,\n  myChannelIds: ?Array<ClaimId>,\n  doClearClaimSearch: () => void,\n};\n\nfunction FileListPublished(props: Props) {\n  const {\n    uploadCount,\n    checkPendingPublishes,\n    doBeginPublish,\n    fetchClaimListMine,\n    fetching,\n    urls,\n    urlTotal,\n    page,\n    pageSize,\n    myChannelIds,\n    doClearClaimSearch,\n  } = props;\n\n  const [filterBy, setFilterBy] = React.useState(FILTER.ALL.key);\n  const method =\n    filterBy === FILTER.UNLISTED.key || filterBy === FILTER.SCHEDULED.key ? METHOD.CLAIM_SEARCH : METHOD.CLAIM_LIST;\n\n  const params = React.useMemo(() => {\n    return {\n      [PAGE_PARAM]: Number(page),\n      [PAGE_SIZE_PARAM]: Number(pageSize),\n    };\n  }, [page, pageSize]);\n\n  const csOptionsUnlisted: ClaimSearchOptions = React.useMemo(() => {\n    return {\n      page_size: 20,\n      any_tags: [VISIBILITY_TAGS.UNLISTED],\n      channel_ids: myChannelIds || [],\n      claim_type: ['stream'],\n      has_source: true,\n      order_by: ['height'],\n      remove_duplicates: true,\n    };\n  }, [myChannelIds]);\n\n  const csOptionsScheduled: ClaimSearchOptions = React.useMemo(() => {\n    return {\n      page_size: 20,\n      any_tags: [SCHEDULED_TAGS.SHOW, SCHEDULED_TAGS.HIDE],\n      channel_ids: myChannelIds || [],\n      claim_type: ['stream'],\n      has_source: true,\n      order_by: ['height'],\n      remove_duplicates: true,\n      release_time: `>${Math.floor(Date.now() / 1000)}`,\n    };\n  }, [myChannelIds]);\n\n  const AdvisoryMsg = () => {\n    if (filterBy === FILTER.UNLISTED.key) {\n      return (\n        <div className=\"flp__advisory\">\n          <Icon icon={ICONS.INFO} />\n          <p>\n            {__(\n              'A special link is required to share unlisted contents. The link can be obtained from \"Copy Link\" in the context menu, or the \"Share\" functionality in the file page.'\n            )}\n          </p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  function getHeaderJsx() {\n    return (\n      <div className={classnames('flp__header')}>\n        <div className=\"flp__filter\">\n          {/* $FlowIgnore: mixed bug */}\n          {Object.values(FILTER).map((info: FilterInfo) => (\n            <Button\n              button=\"alt\"\n              key={info.label}\n              label={__(info.label)}\n              aria-label={info.ariaLabel}\n              onClick={() => setFilterBy(info.key)}\n              className={classnames(`button-toggle`, { 'button-toggle--active': filterBy === info.key })}\n            />\n          ))}\n        </div>\n        <div className=\"flp__refresh\">\n          {!fetching && (\n            <Button\n              button=\"alt\"\n              label={__('Refresh')}\n              icon={ICONS.REFRESH}\n              onClick={() => {\n                if (method === METHOD.CLAIM_LIST) {\n                  fetchClaimListMine(params.page, params.page_size, true, FILTER[filterBy].cmd.split(','), true);\n                } else {\n                  doClearClaimSearch();\n                }\n              }}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  function getClaimListResultsJsx() {\n    return (\n      <>\n        {!!urls && (\n          <>\n            <ClaimList\n              noEmpty\n              persistedStorageKey=\"claim-list-published\"\n              uris={fetching ? [] : urls}\n              loading={fetching}\n            />\n            {getFetchingPlaceholders()}\n            <Paginate totalPages={urlTotal > 0 ? Math.ceil(urlTotal / Number(pageSize)) : 1} />\n          </>\n        )}\n      </>\n    );\n  }\n\n  function getClaimSearchResultsJsx() {\n    const isUnlisted = filterBy === FILTER.UNLISTED.key;\n    const hasChannels = myChannelIds ? myChannelIds.length > 0 : false;\n\n    return hasChannels ? (\n      <ClaimSearchView\n        key={isUnlisted ? 'unlisted' : 'scheduled'}\n        csOptions={isUnlisted ? csOptionsUnlisted : csOptionsScheduled}\n        layout=\"list\"\n        pagination=\"infinite\"\n      />\n    ) : (\n      <Yrbl\n        title={__('No uploads')}\n        subtitle={__(\"You haven't uploaded anything yet. This is where you can find them when you do!\")}\n      />\n    );\n  }\n\n  function getFetchingPlaceholders() {\n    return (\n      <>\n        {method === METHOD.CLAIM_LIST &&\n          fetching &&\n          new Array(Number(pageSize)).fill(1).map((x, i) => {\n            return <ClaimPreview key={i} placeholder=\"loading\" />;\n          })}\n      </>\n    );\n  }\n\n  useEffect(() => {\n    checkPendingPublishes();\n  }, [checkPendingPublishes]);\n\n  useEffect(() => {\n    if (params && fetchClaimListMine && method === METHOD.CLAIM_LIST) {\n      fetchClaimListMine(params.page, params.page_size, true, FILTER[filterBy].cmd.split(','), true);\n    }\n  }, [uploadCount, params, filterBy, fetchClaimListMine, method]);\n\n  return (\n    <Page>\n      <div className=\"card-stack\">\n        <WebUploadList />\n        {getHeaderJsx()}\n        <AdvisoryMsg />\n        {method === METHOD.CLAIM_LIST && getClaimListResultsJsx()}\n        {method === METHOD.CLAIM_SEARCH && getClaimSearchResultsJsx()}\n      </div>\n      {!(urls && urls.length) && method === METHOD.CLAIM_LIST && (\n        <React.Fragment>\n          {!fetching ? (\n            <section className=\"main--empty\">\n              <Yrbl\n                title={filterBy === FILTER.REPOSTS ? __('No Reposts') : __('No uploads')}\n                subtitle={\n                  filterBy === FILTER.REPOSTS\n                    ? __(\"You haven't reposted anything yet.\")\n                    : __(\"You haven't uploaded anything yet. This is where you can find them when you do!\")\n                }\n                actions={\n                  filterBy !== FILTER.REPOSTS && (\n                    <div className=\"section__actions\">\n                      <Button\n                        button=\"primary\"\n                        label={__('Upload Something New')}\n                        onClick={() => doBeginPublish('file')}\n                      />\n                    </div>\n                  )\n                }\n              />\n            </section>\n          ) : (\n            <section className=\"main--empty\">\n              <Spinner delayed />\n            </section>\n          )}\n        </React.Fragment>\n      )}\n    </Page>\n  );\n}\n\nexport default FileListPublished;\n","import { connect } from 'react-redux';\nimport {\n  selectIsFetchingClaimListMine,\n  selectMyClaimsPage,\n  selectMyClaimsPageItemCount,\n  selectFetchingMyClaimsPageError,\n  selectMyChannelClaimIds,\n} from 'redux/selectors/claims';\nimport { selectUploadCount } from 'redux/selectors/publish';\nimport { doFetchClaimListMine, doCheckPendingClaims, doClearClaimSearch } from 'redux/actions/claims';\nimport { doBeginPublish } from 'redux/actions/publish';\nimport FileListPublished from './view';\nimport { withRouter } from 'react-router';\nimport { MY_CLAIMS_PAGE_SIZE, PAGE_PARAM, PAGE_SIZE_PARAM } from 'constants/claim';\n\nconst select = (state, props) => {\n  const { search } = props.location;\n  const urlParams = new URLSearchParams(search);\n  const page = Number(urlParams.get(PAGE_PARAM)) || '1';\n  const pageSize = urlParams.get(PAGE_SIZE_PARAM) || String(MY_CLAIMS_PAGE_SIZE);\n\n  return {\n    page,\n    pageSize,\n    fetching: selectIsFetchingClaimListMine(state),\n    urls: selectMyClaimsPage(state),\n    urlTotal: selectMyClaimsPageItemCount(state),\n    error: selectFetchingMyClaimsPageError(state),\n    uploadCount: selectUploadCount(state),\n    myChannelIds: selectMyChannelClaimIds(state),\n  };\n};\n\nconst perform = {\n  checkPendingPublishes: doCheckPendingClaims,\n  fetchClaimListMine: doFetchClaimListMine,\n  doClearClaimSearch,\n  doBeginPublish,\n};\n\nexport default withRouter(connect(select, perform)(FileListPublished));\n","'use strict';\n\nimport React from 'react';\n\nconst BreakView = (props) => {\n  const label = props.breakLabel;\n  const className = props.breakClassName || 'break';\n\n  return (\n    <li className={className}>\n      {label}\n    </li>\n  );\n}\n\nexport default BreakView;\n","'use strict';\n\nimport React from 'react';\n\nconst PageView = (props) => {\n  let pageClassName = props.pageClassName;\n  let pageLinkClassName = props.pageLinkClassName;\n\n  const onClick = props.onClick;\n  const href = props.href;\n\n  let ariaLabel = 'Page ' + props.page +\n    (props.extraAriaContext ? ' ' + props.extraAriaContext : '');\n  let ariaCurrent = null;\n\n  if (props.selected) {\n    ariaCurrent = 'page';\n    ariaLabel = 'Page ' + props.page + ' is your current page';\n\n    if (typeof(pageClassName) !== 'undefined') {\n      pageClassName = pageClassName + ' ' + props.activeClassName;\n    } else {\n      pageClassName = props.activeClassName;\n    }\n\n    if (typeof(pageLinkClassName) !== 'undefined') {\n      pageLinkClassName = pageLinkClassName;\n\n      if (typeof(props.activeLinkClassName) !== 'undefined') {\n        pageLinkClassName = pageLinkClassName + ' ' + props.activeLinkClassName;\n      }\n    } else {\n      pageLinkClassName = props.activeLinkClassName;\n    }\n  }\n\n  return (\n      <li className={pageClassName}>\n          <a onClick={onClick}\n             role=\"button\"\n             className={pageLinkClassName}\n             href={href}\n             tabIndex=\"0\"\n             aria-label={ariaLabel}\n             aria-current={ariaCurrent}\n             onKeyPress={onClick}>\n            {props.page}\n          </a>\n      </li>\n  )\n}\n\nexport default PageView;\n","'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount             : PropTypes.number.isRequired,\n    pageRangeDisplayed    : PropTypes.number.isRequired,\n    marginPagesDisplayed  : PropTypes.number.isRequired,\n    previousLabel         : PropTypes.node,\n    nextLabel             : PropTypes.node,\n    breakLabel            : PropTypes.node,\n    hrefBuilder           : PropTypes.func,\n    onPageChange          : PropTypes.func,\n    initialPage           : PropTypes.number,\n    forcePage             : PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName    : PropTypes.string,\n    pageClassName         : PropTypes.string,\n    pageLinkClassName     : PropTypes.string,\n    activeClassName       : PropTypes.string,\n    activeLinkClassName   : PropTypes.string,\n    previousClassName     : PropTypes.string,\n    nextClassName         : PropTypes.string,\n    previousLinkClassName : PropTypes.string,\n    nextLinkClassName     : PropTypes.string,\n    disabledClassName     : PropTypes.string,\n    breakClassName        : PropTypes.string\n  };\n\n  static defaultProps = {\n    pageCount             : 10,\n    pageRangeDisplayed    : 2,\n    marginPagesDisplayed  : 3,\n    activeClassName       : \"selected\",\n    previousClassName     : \"previous\",\n    nextClassName         : \"next\",\n    previousLabel         : \"Previous\",\n    nextLabel             : \"Next\",\n    breakLabel            : \"...\",\n    disabledClassName     : \"disabled\",\n    disableInitialCallback: false\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: props.initialPage ? props.initialPage :\n                props.forcePage   ? props.forcePage :\n                0\n    };\n  }\n\n  componentDidMount() {\n    const { initialPage, disableInitialCallback } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof(initialPage) !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (typeof(nextProps.forcePage) !== 'undefined' && this.props.forcePage !== nextProps.forcePage) {\n      this.setState({selected: nextProps.forcePage});\n    }\n  }\n\n  handlePreviousPage = evt => {\n    const { selected } = this.state;\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected > 0) {\n      this.handlePageSelected(selected - 1, evt);\n    }\n  };\n\n  handleNextPage = evt => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected < pageCount - 1) {\n      this.handlePageSelected(selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({selected: selected});\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  hrefBuilder(pageIndex) {\n    const { hrefBuilder, pageCount } = this.props;\n    if (hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < pageCount\n    ) {\n      return hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  callCallback = (selectedItem) => {\n    if (typeof(this.props.onPageChange) !== \"undefined\" &&\n        typeof(this.props.onPageChange) === \"function\") {\n      this.props.onPageChange({selected: selectedItem});\n    }\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext\n    } = this.props;\n\n    return <PageView\n      key={index}\n      onClick={this.handlePageSelected.bind(null, index)}\n      selected={selected === index}\n      pageClassName={pageClassName}\n      pageLinkClassName={pageLinkClassName}\n      activeClassName={activeClassName}\n      activeLinkClassName={activeLinkClassName}\n      extraAriaContext={extraAriaContext}\n      href={this.hrefBuilder(index)}\n      page={index + 1} />\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n\n      for (let index = 0; index < pageCount; index++) {\n        items.push(this.getPageElement(index));\n      }\n\n    } else {\n\n      let leftSide  = (pageRangeDisplayed / 2);\n      let rightSide = (pageRangeDisplayed - leftSide);\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide  = pageRangeDisplayed - rightSide;\n      }\n      else if (selected < pageRangeDisplayed / 2) {\n        leftSide  = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = (index) => this.getPageElement(index);\n\n      for (index = 0; index < pageCount; index++) {\n\n        page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if ((index >= selected - leftSide) && (index <= selected + rightSide)) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (breakLabel && items[items.length - 1] !== breakView) {\n          breakView = (\n            <BreakView\n              key={index}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n            />\n          );\n          items.push(breakView);\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      disabledClassName,\n      previousClassName,\n      nextClassName,\n      pageCount,\n      containerClassName,\n      previousLinkClassName,\n      previousLabel,\n      nextLinkClassName,\n      nextLabel\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const previousClasses = previousClassName + (selected === 0 ? ` ${disabledClassName}` : '');\n    const nextClasses = nextClassName + (selected === pageCount - 1 ? ` ${disabledClassName}` : '');\n\n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <a onClick={this.handlePreviousPage}\n             className={previousLinkClassName}\n             href={this.hrefBuilder(selected - 1)}\n             tabIndex=\"0\"\n             role=\"button\"\n             onKeyPress={this.handlePreviousPage}>\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a onClick={this.handleNextPage}\n             className={nextLinkClassName}\n             href={this.hrefBuilder(selected + 1)}\n             tabIndex=\"0\"\n             role=\"button\"\n             onKeyPress={this.handleNextPage}>\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n};\n","import PaginationBoxView from './PaginationBoxView';\n\nexport default PaginationBoxView;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".cs-view__has-more{display:block}[dir] .cs-view__has-more{border-radius:var(--border-radius);text-align:center}[dir] .cs-view__has-more:hover{background-color:var(--color-navigation-hover);cursor:pointer}.cs-view__has-more svg{display:inline-block}.cs-view__no-results{align-items:center;color:var(--color-text-empty);display:flex;flex-direction:column;font-style:italic}[dir] .cs-view__no-results{margin:var(--spacing-l) 0;padding:0 var(--spacing-m)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../ui/component/claimSearchView/style.scss\"],\"names\":[],\"mappings\":\"AAAA,mBACE,aAEA,CAHF,yBAGE,kCAAA,CADA,iBACA,CAEA,+BAEE,8CAAA,CADA,cACA,CAGF,uBACE,oBAAA,CAIJ,qBAEE,kBAAA,CAIA,6BAAA,CALA,YAAA,CAEA,qBAAA,CAIA,iBAAA,CAPF,2BAKE,yBAAA,CADA,0BAGA\",\"sourcesContent\":[\".cs-view__has-more {\\n  display: block;\\n  text-align: center;\\n  border-radius: var(--border-radius);\\n\\n  &:hover {\\n    cursor: pointer;\\n    background-color: var(--color-navigation-hover);\\n  }\\n\\n  svg {\\n    display: inline-block;\\n  }\\n}\\n\\n.cs-view__no-results {\\n  display: flex;\\n  align-items: center;\\n  flex-direction: column;\\n  padding: 0 var(--spacing-m);\\n  margin: var(--spacing-l) 0;\\n  color: var(--color-text-empty);\\n  font-style: italic;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".flp__header{display:flex}[dir] .flp__header{margin-bottom:var(--spacing-m)}@media(max-width:900px){.flp__header{flex-flow:column;gap:var(--spacing-xs)}.flp__header .button{flex:1}.flp__header .button .button__content{justify-content:center}}.flp__filter{display:flex}[dir=ltr] .flp__refresh{margin-left:auto}[dir=rtl] .flp__refresh{margin-right:auto}.flp__advisory{color:var(--color-text);display:flex;font-size:var(--font-small)}[dir] .flp__advisory{background-color:var(--color-card-background-highlighted);border:1px solid var(--color-border);border-radius:var(--border-radius);margin:var(--spacing-m) 0;padding:var(--spacing-s)}[dir=ltr] .flp__advisory p{margin-left:var(--spacing-s)}[dir=rtl] .flp__advisory p{margin-right:var(--spacing-s)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../ui/page/fileListPublished/style.scss\"],\"names\":[],\"mappings\":\"AAEA,aACE,YACA,CAFF,mBAEE,8BAAA,CACA,wBAHF,aAKI,gBAAA,CADA,qBACA,CACA,qBACE,MAAA,CACA,sCACE,sBAAA,CAAA,CAMR,aACE,YAAA,CAGF,wBACE,gBAAA,CADF,wBACE,iBAAA,CAGF,eAQE,uBAAA,CAPA,YAAA,CAGA,2BAIA,CARF,qBAOE,yDAAA,CADA,oCAAA,CADA,kCAAA,CAHA,yBAAA,CACA,wBAKA,CAEA,2BACE,4BAAA,CADF,2BACE,6BAAA\",\"sourcesContent\":[\"@import '~ui/scss/init/breakpoints';\\n\\n.flp__header {\\n  display: flex;\\n  margin-bottom: var(--spacing-m);\\n  @media (max-width: $breakpoint-small) {\\n    gap: var(--spacing-xs);\\n    flex-flow: column;\\n    .button {\\n      flex: 1;\\n      .button__content {\\n        justify-content: center;\\n      }\\n    }\\n  }\\n}\\n\\n.flp__filter {\\n  display: flex;\\n}\\n\\n.flp__refresh {\\n  margin-left: auto;\\n}\\n\\n.flp__advisory {\\n  display: flex;\\n  margin: var(--spacing-m) 0;\\n  padding: var(--spacing-s);\\n  font-size: var(--font-small);\\n  border-radius: var(--border-radius);\\n  border: 1px solid var(--color-border);\\n  background-color: var(--color-card-background-highlighted);\\n  color: var(--color-text);\\n\\n  p {\\n    margin-left: var(--spacing-s);\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","props","csOptions","_props$pagination","pagination","header","_props$layout","layout","csResults","csResultsMiscInfo","isFetching","doClaimSearch","scrollInfoRef","React","containerRef","_React$useState2","_slicedToArray","page","setPage","hasMorePages","totalPages","advanceToNextPage","current","_scrollInfoRef$curren","_isFetching","_csResults","_hasMorePages","prev","Header","className","NoResults","onClick","__","length","MoreIndicator","Spinner","type","Icon","icon","ICONS","undefined","_objectSpread","assert","prevPage","handleScroll","debounce","container","offsetTop","offsetHeight","window","scrollY","innerHeight","addEventListener","removeEventListener","page_size","ref","ClaimList","uris","tileLayout","showNoSourceClaims","has_no_source","noEmpty","perform","connect","state","csByQuery","selectClaimSearchByQuery","csByQueryMiscInfo","selectClaimsStates","claimSearchByQueryMiscInfo","csIsFetchingByQuery","selectFetchingClaimSearchByQuery","query","createNormalizedClaimSearchKey","ClaimSearchView","BusyIndicator","_React$PureComponent","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","key","value","message","this","FirstPaneWrapper","singlePane","children","TitleWrapper","isPageTitle","smallTitle","accessStatus","AccessIndicator","par","Tooltip","title","classnames","locked","status","unlocked","purchased","dangerouslySetInnerHTML","__html","child","_children$props","_children$props2","_children$props3","transformer","subtitle","titleActions","id","body","actions","_props$isPageTitle","_props$isBodyList","isBodyList","_props$smallTitle","defaultExpand","nag","_onClick","secondPane","slimHeader","background","backgroundImage","headerActions","gridHeader","_useState2","useState","expanded","setExpanded","expandable","role","Boolean","e","stopPropagation","style","sectionIcon","Button","button","FileSelector","_this","_defineProperty","_assertThisInitialized","call","files","fileInput","file","onFileChosen","remote","properties","then","result","path","filePaths","click","handleFileInputSelection","bind","handleDirectoryInputSelection","fileInputButton","_this2","_this$props","currentPath","label","placeholder","accept","error","disabled","_this$props$autoFocus","autoFocus","placeHolder","FormField","webkitdirectory","readOnly","inputButton","display","onChange","PAGINATE_PARAM","withRouter","_props$totalPages","shouldResetPageNumber","location","history","onPageChange","disableHistory","search","textValue","setTextValue","urlParams","URLSearchParams","urlParamPage","Number","get","initialPage","_React$useState4","currentPage","setCurrentPage","isMobile","useIsMobile","handleChangePage","newPageNumber","params","set","toString","push","Form","onSubmit","newPage","class","ReactPaginate","pageCount","pageRangeDisplayed","previousLabel","nextLabel","activeClassName","pageClassName","previousClassName","nextClassName","breakClassName","marginPagesDisplayed","selected","forcePage","containerClassName","target","name","WebUploadItem","uploadItem","doPublishResume","doUpdateUploadRemove","doOpenModal","fileFingerprint","progress","publishId","resumable","uploader","backend","isCheckingStatus","setIsCheckingStatus","_useState4","showFileSelector","setShowFileSelector","tusIsSessionLocked","guid","handleFileChange","newFile","serializeFileObj","file_path","MODALS","onConfirm","closeModal","hideCancel","handleCancel","concat","abort","FileThumbnail","thumbnail","thumbnail_url","sdkRan","File","getCancelButton","width","progressInt","parseInt","getProgressElem","size","currentUploads","selectCurrentUploads","uploadCount","selectUploadCount","Card","Object","values","map","FILTER","freeze","ALL","cmd","ariaLabel","UPLOADS","REPOSTS","UNLISTED","SCHEDULED","METHOD","CLAIM_LIST","CLAIM_SEARCH","isUnlisted","checkPendingPublishes","doBeginPublish","fetchClaimListMine","fetching","urls","urlTotal","pageSize","myChannelIds","doClearClaimSearch","filterBy","setFilterBy","method","_ref","PAGE_PARAM","PAGE_SIZE_PARAM","csOptionsUnlisted","any_tags","VISIBILITY_TAGS","channel_ids","claim_type","has_source","order_by","remove_duplicates","csOptionsScheduled","SCHEDULED_TAGS","release_time","Math","floor","Date","now","AdvisoryMsg","useEffect","split","Page","WebUploadList","info","persistedStorageKey","loading","Array","fill","x","i","ClaimPreview","Paginate","ceil","Yrbl","delayed","doCheckPendingClaims","doFetchClaimListMine","String","MY_CLAIMS_PAGE_SIZE","selectIsFetchingClaimListMine","selectMyClaimsPage","selectMyClaimsPageItemCount","selectFetchingMyClaimsPageError","selectMyChannelClaimIds","FileListPublished","_react","require","breakLabel","_react2","createElement","pageLinkClassName","href","extraAriaContext","ariaCurrent","activeLinkClassName","tabIndex","onKeyPress","_typeof","obj","Symbol","iterator","constructor","prototype","PaginationBoxView","_possibleConstructorReturn","__proto__","getPrototypeOf","handlePreviousPage","evt","preventDefault","returnValue","handlePageSelected","handleNextPage","setState","callCallback","selectedItem","items","index","getPageElement","leftSide","rightSide","_index","breakView","createPageView","_BreakView2","_props","disableInitialCallback","nextProps","pageIndex","_props2","hrefBuilder","_props3","_PageView2","_props4","disabledClassName","previousLinkClassName","nextLinkClassName","previousClasses","nextClasses","Component","propTypes","_propTypes2","number","isRequired","node","func","bool","string","defaultProps","_PaginationBoxView","_PaginationBoxView2","___CSS_LOADER_EXPORT___","module"],"sourceRoot":""}