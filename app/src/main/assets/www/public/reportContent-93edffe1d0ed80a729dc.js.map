{"version":3,"file":"reportContent-93edffe1d0ed80a729dc.js","mappings":"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","sources":["webpack://odysee.com/../ui/constants/email.js","webpack://odysee.com/../ui/constants/report_content.js","webpack://odysee.com/../ui/services/reportContent.js","webpack://odysee.com/../ui/util/country.js","webpack://odysee.com/../ui/component/reportContent/view.jsx","webpack://odysee.com/../ui/component/reportContent/index.js","webpack://odysee.com/../ui/page/reportContent/index.js","webpack://odysee.com/../ui/page/reportContent/view.jsx"],"sourcesContent":["export const EMAIL_REGEX = /^[^@]+@[^@]+$/;\n","// Sample query:\n//   https://reports.odysee.tv/common/new?primary_email=e4drcf@gmail.com\n//     &channel_name=e4drcf\n//     &channel_claim_id=43a7e08b0d83cfb8bc31e59bc48334a90ccfd8cb\n//     &type=Sexual%20content\n//     &category=Nudity\n//     &claim_id=43a7e08b0d83cfb8bc31e59bc48334a90ccfd8cb\n//     &transaction_id=297b3f7a3d17d2a59aed73491934d453091602215c3128337d1859aa18a18d3e\n//     &vout=1\n//     &timestamp=12:03\n//     &additional_details=Hello%20Rick!\n\nexport const CATEGORIES = 'categories';\nexport const INFRINGES_MY_RIGHTS = 'Infringes my rights';\nexport const COPYRIGHT_ISSUES = 'Copyright issue';\nexport const OTHER_LEGAL_ISSUES = 'Other legal issue';\nexport const BEHALF_SELF = 'self';\nexport const BEHALF_CLIENT = 'client';\nexport const PARTY_SELF = 'Myself';\nexport const PARTY_GROUP = 'My company, organization, or client';\n\nexport const RELATIONSHIP_FIELD_MIN_WIDTH = 10;\nexport const COPYRIGHT_OWNER_MAX_LENGTH = 50;\n\nexport const PARAMETERS = {\n  type: {\n    'Sexual content': {\n      [CATEGORIES]: [\n        'Graphic sexual activity',\n        'Nudity',\n        'Suggestive, but without nudity',\n        'Content involving minors',\n        'Sexual Abusive title or description',\n        'Other sexual content',\n      ],\n    },\n    'Violent or repulsive content': {\n      [CATEGORIES]: ['Adults fighting', 'Physical attack', 'Youth violence', 'Animal abuse'],\n    },\n    'Hateful or abusive content': {\n      [CATEGORIES]: ['Promotes hatred or violence', 'Bullying', 'Hateful Abusive title or description'],\n    },\n    'Harmful or dangerous acts': {\n      [CATEGORIES]: [\n        'Pharmaceutical or drug abuse',\n        'Abuse of fire or explosives',\n        'Suicide or self injury',\n        'Other dangerous acts',\n      ],\n    },\n    'Child abuse': {\n      [CATEGORIES]: ['Child abuse'],\n    },\n    'Promotes terrorism': {\n      [CATEGORIES]: ['Promotes terrorism'],\n    },\n    'Spam or misleading': {\n      [CATEGORIES]: [\n        'Mass advertising',\n        'Pharmaceutical drugs for sale',\n        'Misleading text',\n        'Misleading thumbnail',\n        'Scams or fraud',\n      ],\n    },\n    [INFRINGES_MY_RIGHTS]: {\n      [CATEGORIES]: [COPYRIGHT_ISSUES, OTHER_LEGAL_ISSUES],\n    },\n    // CAPTIONS_ISSUE: 'Captions issue',\n  },\n};\n","// @flow\nimport { COPYRIGHT_ISSUES, OTHER_LEGAL_ISSUES } from 'constants/report_content';\n\nfunction getCategoryUrl(category: string) {\n  switch (category) {\n    case COPYRIGHT_ISSUES:\n      return 'https://reports.odysee.tv/copyright_issue/new';\n    case OTHER_LEGAL_ISSUES:\n      return 'https://reports.odysee.tv/other_legal_issue/new';\n    default:\n      return 'https://reports.odysee.tv/common/new';\n  }\n}\n\nexport async function sendContentReport(category: string, params: string) {\n  return fetch(`${getCategoryUrl(category)}?${params}`, { method: 'POST' });\n}\n\nexport type SendContentReportFn = typeof sendContentReport;\n","import { countries as countryData } from 'country-data';\n\nexport const COUNTRIES = Array.from(\n  new Set(\n    countryData.all\n      .filter((country) => country.status !== 'deleted')\n      .map((country) => country.name)\n      .sort((a, b) => {\n        if (a > b) {\n          return 1;\n        }\n        if (b > a) {\n          return -1;\n        }\n        return 0;\n      })\n  )\n);\n","// @flow\nimport type { SendContentReportFn } from 'services/reportContent';\n\nimport React from 'react';\nimport Button from 'component/button';\nimport { Form, FormField } from 'component/common/form';\nimport Card from 'component/common/card';\nimport ClaimPreview from 'component/claimPreview';\nimport CommentView from 'component/comment';\nimport ChannelSelector from 'component/channelSelector';\nimport Spinner from 'component/spinner';\nimport ErrorText from 'component/common/error-text';\nimport Icon from 'component/common/icon';\nimport { COUNTRIES } from 'util/country';\nimport { URL } from 'config';\nimport { EMAIL_REGEX } from 'constants/email';\nimport {\n  FF_MAX_CHARS_REPORT_CONTENT_DETAILS,\n  FF_MAX_CHARS_REPORT_CONTENT_SHORT,\n  FF_MAX_CHARS_REPORT_CONTENT_ADDRESS,\n} from 'constants/form-field';\nimport * as REPORT_API from 'constants/report_content';\nimport * as ICONS from 'constants/icons';\nimport { useHistory } from 'react-router-dom';\n\nconst PAGE_TYPE = 'page--type';\nconst PAGE_CATEGORY = 'page--category';\nconst PAGE_INFRINGEMENT_DETAILS = 'page--infringement-details';\nconst PAGE_SUBMITTER_DETAILS = 'page--submitter-details';\nconst PAGE_SUBMITTER_DETAILS_ADDRESS = 'page--submitter-details-address';\nconst PAGE_CONFIRM = 'page--confirm';\nconst PAGE_SENT = 'page--sent';\n\nconst isDev = process.env.NODE_ENV !== 'production';\n\nconst DEFAULT_INPUT_DATA = {\n  // page: string,\n  type: '',\n  category: '',\n  timestamp: '',\n  additionalDetails: '',\n  email: '',\n  additional_email: '',\n  phone_number: '',\n  country: '',\n  street_address: '',\n  city: '',\n  state_or_province: '',\n  zip_code: '',\n  signature: '',\n  reporter_name: '',\n  acting_on_behalf_of: REPORT_API.BEHALF_SELF,\n  client_name: '',\n  specific_law: '',\n  law_url: '',\n  clarification: '',\n  affected_party: REPORT_API.PARTY_SELF,\n  copyright_owner_name: '',\n  relationship_to_copyrighted_content: '',\n  remove_now: true,\n};\n\ntype Props = {\n  // --- urlParams ---\n  claimId: string,\n  commentId?: string,\n  // --- internal ---\n  claim: StreamClaim,\n  comment?: Comment,\n  activeChannelClaim: ?ChannelClaim,\n  incognito: boolean,\n  sendContentReport: SendContentReportFn,\n  doClaimSearch: (any) => Promise<any>,\n  doCommentById: (string, boolean) => Promise<any>,\n};\n\nexport default function ReportContent(props: Props) {\n  const {\n    activeChannelClaim,\n    incognito,\n    claimId,\n    commentId,\n    claim,\n    comment,\n    sendContentReport,\n    doClaimSearch,\n    doCommentById,\n  } = props;\n\n  const [input, setInput] = React.useState({ ...DEFAULT_INPUT_DATA });\n  const [page, setPage] = React.useState(PAGE_TYPE);\n  const [timestampInvalid, setTimestampInvalid] = React.useState(false);\n  const [isResolvingClaim, setIsResolvingClaim] = React.useState(false);\n  const [isResolvingComment, setIsResolvingComment] = React.useState(false);\n  const [isReporting, setIsReporting] = React.useState();\n  const [error, setError] = React.useState();\n\n  const { goBack } = useHistory();\n\n  // Resolve claim if URL is entered directly or if page is reloaded.\n  React.useEffect(() => {\n    if (!claim) {\n      setIsResolvingClaim(true);\n      doClaimSearch({\n        page_size: 20,\n        page: 1,\n        no_totals: true,\n        claim_ids: [claimId],\n      }).finally(() => {\n        setIsResolvingClaim(false);\n      });\n    }\n  }, [claim, claimId, doClaimSearch]);\n\n  // Fetch comment if `commentId` is provided\n  React.useEffect(() => {\n    if (commentId) {\n      setIsResolvingComment(true);\n      doCommentById(commentId, false).finally(() => {\n        setIsResolvingComment(false);\n      });\n    }\n  }, [commentId, doCommentById]);\n\n  // On mount, pause player and get the timestamp, if applicable.\n  React.useEffect(() => {\n    if (window.player) {\n      // TODO: should create a doPlayerPause() thunk action instead of getting from window.\n      window.player.pause();\n\n      const seconds = window.player.currentTime();\n      const h = Math.floor(seconds / 3600);\n      const m = Math.floor((seconds % 3600) / 60);\n      const s = Math.floor((seconds % 3600) % 60);\n\n      const str = (n) => n.toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false });\n      updateInput('timestamp', str(h) + ':' + str(m) + ':' + str(s));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function getCommentUrl(contentClaim, commentId) {\n    if (commentId) {\n      if (contentClaim && contentClaim.canonical_url) {\n        const canonical = contentClaim.canonical_url.replace(/#/g, ':');\n        const commentUrl = `${canonical.replace('lbry://', `${URL}/`)}?lc=${commentId}`;\n        return commentUrl + '\\n\\n';\n      } else {\n        return commentId + '\\n\\n';\n      }\n    } else {\n      return '';\n    }\n  }\n\n  function onSubmit() {\n    if (!claim) {\n      if (isDev) throw new Error('ReportContent::onSubmit -- null claim');\n      return;\n    }\n\n    const pushParam = (params, label, value, encode = true) => {\n      if (encode) {\n        params.push(`${label}=${encodeURIComponent(value)}`);\n      } else {\n        params.push(`${label}=${value}`);\n      }\n    };\n\n    const params = [];\n    pushParam(params, 'primary_email', input.email);\n    pushParam(params, 'claim_id', claim.claim_id, false);\n    pushParam(params, 'transaction_id', claim.txid, false);\n    pushParam(params, 'vout', claim.nout.toString(), false);\n\n    if (!incognito && activeChannelClaim) {\n      pushParam(params, 'channel_name', activeChannelClaim.name);\n      pushParam(params, 'channel_claim_id', activeChannelClaim.claim_id, false);\n    }\n\n    switch (input.type) {\n      case REPORT_API.INFRINGES_MY_RIGHTS:\n        pushParam(params, 'signature', input.signature);\n        switch (input.category) {\n          case REPORT_API.COPYRIGHT_ISSUES:\n            pushParam(params, 'additional_email', input.additional_email);\n            pushParam(params, 'phone_number', input.phone_number);\n            pushParam(params, 'country', input.country);\n            pushParam(params, 'street_address', input.street_address);\n            pushParam(params, 'city', input.city);\n            pushParam(params, 'state_or_province', input.state_or_province);\n            pushParam(params, 'zip_code', input.zip_code);\n            pushParam(params, 'affected_party', input.affected_party);\n            pushParam(params, 'copyright_owner_name', input.copyright_owner_name);\n            pushParam(params, 'relationship_to_copyrighted_content', input.relationship_to_copyrighted_content);\n            pushParam(params, 'remove_now', input.remove_now.toString(), false);\n            break;\n\n          case REPORT_API.OTHER_LEGAL_ISSUES:\n            pushParam(params, 'reporter_name', input.reporter_name);\n            pushParam(params, 'acting_on_behalf_of', input.acting_on_behalf_of);\n            pushParam(params, 'specific_law', input.specific_law);\n            pushParam(params, 'law_url', input.law_url);\n            pushParam(params, 'clarification', input.clarification);\n            if (input.acting_on_behalf_of === REPORT_API.BEHALF_CLIENT) {\n              pushParam(params, 'client_name', input.client_name);\n            }\n            break;\n        }\n        break;\n\n      default:\n        pushParam(params, 'type', input.type);\n        pushParam(params, 'category', input.category);\n        pushParam(params, 'additional_details', getCommentUrl(claim, commentId) + input.additionalDetails);\n        if (includeTimestamp(claim, commentId)) {\n          pushParam(params, 'timestamp', input.timestamp);\n        }\n        break;\n    }\n\n    setError('');\n    setIsReporting(true);\n\n    sendContentReport(input.category, params.join('&'))\n      .then((response) => {\n        if (response) {\n          response\n            .json()\n            .then((json) => {\n              if (!json.success) {\n                setError(json.error);\n              }\n            })\n            .catch(() => setError('Server error: Invalid response'));\n        } else {\n          setError('Server error: No response');\n        }\n      })\n      .catch(() => setError('Failed to send report.'))\n      .finally(() => setIsReporting(false));\n  }\n\n  function updateInput(field: string, value: any) {\n    let newInput = input;\n\n    if (isDev && newInput[field] === undefined) {\n      throw new Error('Unexpected field: ' + field);\n    }\n\n    newInput[field] = value;\n    if (field === 'type') {\n      newInput['category'] = '';\n    }\n    setInput({ ...newInput });\n  }\n\n  function isInfringementDetailsValid(type: string, category: string) {\n    switch (type) {\n      case REPORT_API.INFRINGES_MY_RIGHTS:\n        switch (category) {\n          case REPORT_API.COPYRIGHT_ISSUES:\n            return (\n              input.affected_party &&\n              input.copyright_owner_name &&\n              input.relationship_to_copyrighted_content &&\n              input.relationship_to_copyrighted_content.length > REPORT_API.RELATIONSHIP_FIELD_MIN_WIDTH\n            );\n          case REPORT_API.OTHER_LEGAL_ISSUES:\n            return (\n              input.reporter_name &&\n              input.specific_law &&\n              input.law_url &&\n              input.acting_on_behalf_of &&\n              (input.acting_on_behalf_of === REPORT_API.BEHALF_SELF || input.client_name) &&\n              input.clarification\n            );\n          default:\n            return false;\n        }\n      default:\n        return (!includeTimestamp(claim, commentId) || isTimestampValid(input.timestamp)) && input.additionalDetails;\n    }\n  }\n\n  function isSubmitterDetailsValid(type: string, category: string) {\n    if (category === REPORT_API.COPYRIGHT_ISSUES) {\n      return (\n        input.email.match(EMAIL_REGEX) &&\n        (!input.additional_email || input.additional_email.match(EMAIL_REGEX)) &&\n        input.phone_number\n      );\n    }\n\n    return input.email.match(EMAIL_REGEX);\n  }\n\n  function isSubmitterDetailsAddressValid() {\n    return input.street_address && input.city && input.state_or_province && input.zip_code && input.country;\n  }\n\n  function isTimestampValid(timestamp: string) {\n    if (timestamp === '0') {\n      return true;\n    }\n\n    const length = timestamp.length;\n    if (length <= 4) {\n      return timestamp.match(/\\d:[0-5]\\d/);\n    } else if (length <= 5) {\n      return timestamp.match(/[0-5]\\d:[0-5]\\d/);\n    } else if (length <= 8) {\n      return timestamp.match(/\\d{1,2}:[0-5]\\d:\\d\\d/);\n    } else {\n      return false;\n    }\n  }\n\n  function includeTimestamp(claim: StreamClaim, commentId: ?string) {\n    return (\n      !commentId &&\n      claim.value_type === 'stream' &&\n      (claim.value.stream_type === 'video' || claim.value.stream_type === 'audio')\n    );\n  }\n\n  function getActionElem() {\n    let body;\n\n    switch (page) {\n      case PAGE_TYPE:\n        return (\n          <>\n            <div className=\"section section--vertical-compact\">\n              <fieldset>\n                {Object.keys(REPORT_API.PARAMETERS['type']).map((x) => {\n                  return (\n                    <FormField\n                      type=\"radio\"\n                      name={x}\n                      key={x}\n                      label={__(String(x))}\n                      checked={x === input.type}\n                      disabled={x === REPORT_API.INFRINGES_MY_RIGHTS && commentId}\n                      onChange={() => updateInput('type', x)}\n                    />\n                  );\n                })}\n              </fieldset>\n            </div>\n            <div className=\"section__actions\">\n              <Button\n                button=\"primary\"\n                label={__('Next')}\n                disabled={input.type === ''}\n                onClick={() => setPage(PAGE_CATEGORY)}\n              />\n            </div>\n          </>\n        );\n\n      case PAGE_CATEGORY:\n        if (!input.type) {\n          return null;\n        } else {\n          return (\n            <>\n              <div className=\"section\">\n                <div>\n                  <b>{__(input.type)}</b>\n                </div>\n                <div className=\"section section--vertical-compact\">\n                  <fieldset>\n                    {REPORT_API.PARAMETERS['type'][input.type][REPORT_API.CATEGORIES].map((x) => {\n                      return (\n                        <FormField\n                          type=\"radio\"\n                          name={x}\n                          key={x}\n                          label={__(String(x))}\n                          checked={input.category === x}\n                          onChange={() => updateInput('category', x)}\n                        />\n                      );\n                    })}\n                  </fieldset>\n                </div>\n              </div>\n              <div className=\"section__actions\">\n                <Button button=\"alt\" label={__('Back')} onClick={() => setPage(PAGE_TYPE)} />\n                <Button\n                  button=\"primary\"\n                  label={__('Next')}\n                  disabled={!input.category || input.category === ''}\n                  onClick={() => setPage(PAGE_INFRINGEMENT_DETAILS)}\n                />\n              </div>\n            </>\n          );\n        }\n\n      case PAGE_INFRINGEMENT_DETAILS:\n        switch (input.type) {\n          case REPORT_API.INFRINGES_MY_RIGHTS:\n            switch (input.category) {\n              case REPORT_API.COPYRIGHT_ISSUES:\n                body = (\n                  <div className=\"section section--vertical-compact\">\n                    <FormField\n                      type=\"select\"\n                      name=\"affected_party\"\n                      label={__('Affected party')}\n                      value={input.affected_party}\n                      onChange={(e) => updateInput('affected_party', e.target.value)}\n                      blockWrap={false}\n                    >\n                      <option key={REPORT_API.PARTY_SELF} value={REPORT_API.PARTY_SELF}>\n                        {__(REPORT_API.PARTY_SELF)}\n                      </option>\n                      <option key={REPORT_API.PARTY_GROUP} value={REPORT_API.PARTY_GROUP}>\n                        {__(REPORT_API.PARTY_GROUP)}\n                      </option>\n                    </FormField>\n                    <FormField\n                      type=\"text\"\n                      name=\"copyright_owner_name\"\n                      label={__('Copyright owner name')}\n                      value={input.copyright_owner_name}\n                      maxlength={REPORT_API.COPYRIGHT_OWNER_MAX_LENGTH}\n                      onChange={(e) => updateInput('copyright_owner_name', e.target.value)}\n                    />\n                    <FormField\n                      type=\"textarea\"\n                      name=\"relationship_to_copyrighted_content\"\n                      label={__('Relationship to copyrighted content')}\n                      placeholder={__('(between 10 to 500 characters)')}\n                      value={input.relationship_to_copyrighted_content}\n                      onChange={(e) => updateInput('relationship_to_copyrighted_content', e.target.value)}\n                      charCount={input.relationship_to_copyrighted_content.length}\n                      textAreaMaxLength={FF_MAX_CHARS_REPORT_CONTENT_DETAILS}\n                      noEmojis\n                    />\n                    <FormField\n                      type=\"checkbox\"\n                      name=\"remove_now\"\n                      label={__('Remove now')}\n                      checked={input.remove_now}\n                      onChange={() => updateInput('remove_now', !input.remove_now)}\n                    />\n                  </div>\n                );\n                break;\n\n              case REPORT_API.OTHER_LEGAL_ISSUES:\n                body = (\n                  <div className=\"section section--vertical-compact\">\n                    <FormField\n                      type=\"text\"\n                      name=\"reporter_name\"\n                      label={__('Your name')}\n                      placeholder={__('Your name')}\n                      value={input.reporter_name}\n                      onChange={(e) => updateInput('reporter_name', e.target.value)}\n                    />\n                    <FormField\n                      type=\"select\"\n                      name=\"acting_on_behalf_of\"\n                      label={__('Acting on behalf of')}\n                      value={input.acting_on_behalf_of}\n                      onChange={(e) => updateInput('acting_on_behalf_of', e.target.value)}\n                      blockWrap={false}\n                    >\n                      <option key={REPORT_API.BEHALF_SELF} value={REPORT_API.BEHALF_SELF}>\n                        {__('Self')}\n                      </option>\n                      <option key={REPORT_API.BEHALF_CLIENT} value={REPORT_API.BEHALF_CLIENT}>\n                        {__('Client')}\n                      </option>\n                    </FormField>\n                    {input.acting_on_behalf_of === REPORT_API.BEHALF_CLIENT && (\n                      <FormField\n                        type=\"text\"\n                        name=\"client_name\"\n                        label={__('Client name')}\n                        placeholder={__('Client name')}\n                        value={input.client_name}\n                        onChange={(e) => updateInput('client_name', e.target.value)}\n                      />\n                    )}\n                    <FormField\n                      type=\"text\"\n                      name=\"specific_law\"\n                      label={__('Title of specific law')}\n                      placeholder={__('Specific law')}\n                      value={input.specific_law}\n                      onChange={(e) => updateInput('specific_law', e.target.value)}\n                    />\n                    <FormField\n                      type=\"text\"\n                      name=\"law_url\"\n                      label={__('Law URL')}\n                      placeholder={'www.lawsrus.com/copyright-act-2030'}\n                      value={input.law_url}\n                      onChange={(e) => updateInput('law_url', e.target.value)}\n                    />\n                    <FormField\n                      type=\"textarea\"\n                      name=\"clarification\"\n                      label={__('Clarification')}\n                      placeholder={__('Provide additional details')}\n                      value={input.clarification}\n                      textAreaMaxLength={FF_MAX_CHARS_REPORT_CONTENT_DETAILS}\n                      onChange={(e) => updateInput('clarification', e.target.value)}\n                      noEmojis\n                    />\n                  </div>\n                );\n                break;\n\n              default:\n                if (isDev) throw new Error('Unhandled category for DMCA: ' + input.category);\n                body = null;\n                break;\n            }\n            break;\n\n          default:\n            body = (\n              <>\n                {includeTimestamp(claim, commentId) && (\n                  <div className=\"section\">\n                    <FormField\n                      type=\"text\"\n                      name=\"timestamp\"\n                      label={__('Timestamp')}\n                      placeholder={'00:23:59'}\n                      pattern=\"[0-9]{2}:[0-9]{2}:[0-9]{2}\"\n                      value={input.timestamp}\n                      maxlength={8}\n                      onChange={(e) => {\n                        updateInput('timestamp', e.target.value);\n                        setTimestampInvalid(!isTimestampValid(e.target.value));\n                      }}\n                      error={timestampInvalid && input.timestamp ? 'Invalid timestamp (e.g. 05:23, 00:23:59)' : ''}\n                    />\n                  </div>\n                )}\n                <div className=\"section\">\n                  <FormField\n                    type=\"textarea\"\n                    name=\"additional_details\"\n                    value={input.additionalDetails}\n                    onChange={(e) => updateInput('additionalDetails', e.target.value)}\n                    charCount={input.additionalDetails.length}\n                    textAreaMaxLength={FF_MAX_CHARS_REPORT_CONTENT_DETAILS}\n                    placeholder={__('Provide additional details')}\n                    noEmojis\n                  />\n                </div>\n              </>\n            );\n        }\n\n        return (\n          <>\n            {body}\n            <div className=\"section__actions\">\n              <Button button=\"alt\" label={__('Back')} onClick={() => setPage(PAGE_CATEGORY)} />\n              <Button\n                button=\"primary\"\n                label={__('Next')}\n                disabled={!isInfringementDetailsValid(input.type, input.category)}\n                onClick={() => setPage(PAGE_SUBMITTER_DETAILS)}\n              />\n            </div>\n          </>\n        );\n\n      case PAGE_SUBMITTER_DETAILS:\n        return (\n          <>\n            <div className=\"section\">\n              <div className=\"section\">\n                <FormField\n                  type=\"email\"\n                  name=\"primary_email\"\n                  label={__('Email')}\n                  placeholder={__('e.g. john@example.com')}\n                  value={input.email}\n                  onChange={(e) => updateInput('email', e.target.value)}\n                />\n                {input.category === REPORT_API.COPYRIGHT_ISSUES && (\n                  <>\n                    <FormField\n                      type=\"email\"\n                      name=\"additional_email\"\n                      label={__('Additional email (optional)')}\n                      placeholder={__('e.g. satoshi@example.com')}\n                      value={input.additional_email}\n                      onChange={(e) => updateInput('additional_email', e.target.value)}\n                    />\n                    <FormField\n                      type=\"text\"\n                      name=\"phone_number\"\n                      label={__('Phone number')}\n                      placeholder={'e.g. +1 (xxx) xxx-xx-xx'}\n                      value={input.phone_number}\n                      maxlength={FF_MAX_CHARS_REPORT_CONTENT_SHORT}\n                      onChange={(e) => updateInput('phone_number', e.target.value)}\n                    />\n                  </>\n                )}\n              </div>\n              <div className=\"section\">\n                <label>{__('Your channel')}</label>\n                <Icon\n                  className=\"icon--help\"\n                  icon={ICONS.HELP}\n                  tooltip\n                  size={16}\n                  customTooltipText={__(\n                    'Set to \"Anonymous\" if you do not want to associate your channel in this report.'\n                  )}\n                />\n                <ChannelSelector />\n              </div>\n            </div>\n            <div className=\"section__actions\">\n              <Button button=\"alt\" label={__('Back')} onClick={() => setPage(PAGE_INFRINGEMENT_DETAILS)} />\n              <Button\n                button=\"primary\"\n                label={__('Next')}\n                disabled={!isSubmitterDetailsValid(input.type, input.category)}\n                onClick={() =>\n                  setPage(\n                    input.category === REPORT_API.COPYRIGHT_ISSUES ? PAGE_SUBMITTER_DETAILS_ADDRESS : PAGE_CONFIRM\n                  )\n                }\n              />\n            </div>\n          </>\n        );\n\n      case PAGE_SUBMITTER_DETAILS_ADDRESS:\n        return (\n          <>\n            <div className=\"section section--vertical-compact\">\n              <FormField\n                type=\"text\"\n                name=\"street_address\"\n                label={__('Address')}\n                placeholder={'Street address'}\n                value={input.street_address}\n                maxlength={FF_MAX_CHARS_REPORT_CONTENT_ADDRESS}\n                onChange={(e) => updateInput('street_address', e.target.value)}\n              />\n              <FormField\n                type=\"text\"\n                name=\"city\"\n                placeholder={__('City')}\n                value={input.city}\n                maxlength={FF_MAX_CHARS_REPORT_CONTENT_SHORT}\n                onChange={(e) => updateInput('city', e.target.value)}\n              />\n              <FormField\n                type=\"text\"\n                name=\"state_or_province\"\n                placeholder={__('State/province')}\n                value={input.state_or_province}\n                maxlength={FF_MAX_CHARS_REPORT_CONTENT_SHORT}\n                onChange={(e) => updateInput('state_or_province', e.target.value)}\n              />\n              <FormField\n                type=\"text\"\n                name=\"zip_code\"\n                placeholder={__('Zip code')}\n                value={input.zip_code}\n                maxlength={FF_MAX_CHARS_REPORT_CONTENT_SHORT}\n                onChange={(e) => updateInput('zip_code', e.target.value)}\n              />\n              <FormField\n                type=\"select\"\n                name=\"country\"\n                label={__('Country')}\n                value={input.country}\n                maxlength={FF_MAX_CHARS_REPORT_CONTENT_SHORT}\n                onChange={(e) => updateInput('country', e.target.value)}\n              >\n                <option value=\"\" disabled defaultValue>\n                  {__('Select your country')}\n                </option>\n                {COUNTRIES.map((country) => (\n                  <option key={country} value={country}>\n                    {country}\n                  </option>\n                ))}\n              </FormField>\n            </div>\n            <div className=\"section__actions\">\n              <Button button=\"alt\" label={__('Back')} onClick={() => setPage(PAGE_SUBMITTER_DETAILS)} />\n              <Button\n                button=\"primary\"\n                label={__('Next')}\n                disabled={!isSubmitterDetailsAddressValid()}\n                onClick={() => setPage(PAGE_CONFIRM)}\n              />\n            </div>\n          </>\n        );\n\n      case PAGE_CONFIRM:\n        return (\n          <>\n            <div className=\"section section--padded card--inline confirm__wrapper\">\n              <div className=\"confirm__label\">{__('Contact details')}</div>\n              <div className=\"confirm__value\">{input.email}</div>\n              {input.type === REPORT_API.INFRINGES_MY_RIGHTS && (\n                <FormField\n                  type=\"text\"\n                  name=\"signature\"\n                  label={__('Signature')}\n                  placeholder={__('e.g. John Doe')}\n                  value={input.signature}\n                  maxlength={FF_MAX_CHARS_REPORT_CONTENT_SHORT}\n                  onChange={(e) => updateInput('signature', e.target.value)}\n                />\n              )}\n            </div>\n            <div className=\"section\">{__('Send report?')}</div>\n            <div className=\"section__actions\">\n              <Button button=\"alt\" label={__('Back')} onClick={() => setPage(PAGE_SUBMITTER_DETAILS)} />\n              <Button\n                button=\"primary\"\n                label={__('Send Report')}\n                disabled={input.type === REPORT_API.INFRINGES_MY_RIGHTS ? !input.signature : false}\n                onClick={() => {\n                  onSubmit();\n                  setPage(PAGE_SENT);\n                }}\n              />\n            </div>\n          </>\n        );\n\n      case PAGE_SENT:\n        if (isReporting) {\n          body = <Spinner />;\n        } else if (error) {\n          body = (\n            <div className=\"error__wrapper--no-overflow\">\n              <ErrorText>{error}</ErrorText>\n            </div>\n          );\n        } else {\n          body = (\n            <>\n              <div className=\"section__title\">{__('Report submitted')}</div>\n              <div className=\"section\">{__('We will review and respond shortly.')}</div>\n            </>\n          );\n        }\n        return (\n          <>\n            <div className=\"section\">{body}</div>\n            <div className=\"section__actions\">\n              {error && <Button button=\"alt\" label={__('Back')} onClick={() => setPage(PAGE_CONFIRM)} />}\n              <Button button=\"primary\" label={__('Close')} disabled={isReporting} onClick={() => goBack()} />\n            </div>\n          </>\n        );\n    }\n  }\n\n  function getClaimPreview(claim: StreamClaim) {\n    return claim ? (\n      <div className=\"section\">\n        <ClaimPreview uri={claim.permanent_url} hideMenu hideActions nonClickable type=\"small\" />\n      </div>\n    ) : null;\n  }\n\n  function getCommentPreviews(comment: ?Comment) {\n    return comment ? (\n      <div className=\"section non-clickable\">\n        <CommentView comment={comment} isTopLevel hideActions hideContextMenu />\n      </div>\n    ) : null;\n  }\n\n  // **************************************************************************\n  // **************************************************************************\n\n  // --- Report comment ---\n  if (commentId) {\n    if (!claimId) {\n      return <Card title={__('Report comment')} subtitle={__(\"Missing 'claimId' parameter.\")} />;\n    } else {\n      return (\n        <Form onSubmit={onSubmit}>\n          <Card\n            title={__('Report comment')}\n            subtitle={getCommentPreviews(comment)}\n            actions={comment ? getActionElem() : isResolvingComment ? <Spinner /> : __('Invalid comment ID')}\n          />\n        </Form>\n      );\n    }\n  }\n\n  // --- Report content ---\n  if (claimId) {\n    return (\n      <Form onSubmit={onSubmit}>\n        <Card\n          title={claim && claim.value_type === 'channel' ? __('Report channel') : __('Report content')}\n          subtitle={getClaimPreview(claim)}\n          actions={claim ? getActionElem() : isResolvingClaim ? <Spinner /> : __('Invalid claim ID')}\n        />\n      </Form>\n    );\n  }\n\n  // --- Invalid ---\n  return <Card title={__('Report content')} subtitle={__('Invalid parameters.')} />;\n}\n","import { connect } from 'react-redux';\nimport { doCommentById } from 'redux/actions/comments';\nimport { selectActiveChannelClaim, selectIncognito } from 'redux/selectors/app';\nimport { selectCommentForCommentId } from 'redux/selectors/comments';\nimport { doClaimSearch } from 'redux/actions/claims';\nimport { selectClaimForClaimId } from 'redux/selectors/claims';\nimport { withRouter } from 'react-router';\nimport { sendContentReport } from 'services/reportContent';\nimport ReportContent from './view';\n\nconst select = (state, props) => {\n  const { search } = props.location;\n  const urlParams = new URLSearchParams(search);\n  const claimId = urlParams.get('claimId');\n  const commentId = urlParams.get('commentId');\n\n  return {\n    claimId,\n    commentId,\n    activeChannelClaim: selectActiveChannelClaim(state),\n    incognito: selectIncognito(state),\n    claim: selectClaimForClaimId(state, claimId),\n    comment: selectCommentForCommentId(state, commentId),\n    sendContentReport: sendContentReport,\n  };\n};\n\nconst perform = {\n  doClaimSearch,\n  doCommentById,\n};\n\nexport default withRouter(connect(select, perform)(ReportContent));\n","import ReportContentPage from './view';\n\nexport default ReportContentPage;\n","// @flow\nimport React from 'react';\nimport { useHistory } from 'react-router';\nimport Page from 'component/page';\nimport ReportContent from 'component/reportContent';\n\nexport default function ReportContentPage(props: any) {\n  const { location } = useHistory();\n\n  return (\n    <Page\n      noSideNavigation\n      className=\"main--report-content\"\n      backout={{\n        backoutLabel: __('Done'),\n      }}\n      authRedirect={`${location.pathname}${location.search}`} // 'report_content?claimId=xxx'\n    >\n      <ReportContent />\n    </Page>\n  );\n}\n"],"names":["EMAIL_REGEX","CATEGORIES","INFRINGES_MY_RIGHTS","COPYRIGHT_ISSUES","OTHER_LEGAL_ISSUES","BEHALF_SELF","BEHALF_CLIENT","PARTY_SELF","PARTY_GROUP","RELATIONSHIP_FIELD_MIN_WIDTH","COPYRIGHT_OWNER_MAX_LENGTH","PARAMETERS","type","_defineProperty","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","getCategoryUrl","category","sendContentReport","_x","_x2","_sendContentReport","apply","arguments","_callee","params","_context","fetch","concat","args","COUNTRIES","Array","from","Set","countryData","country","status","map","sort","a","b","PAGE_TYPE","PAGE_CATEGORY","PAGE_INFRINGEMENT_DETAILS","PAGE_SUBMITTER_DETAILS","PAGE_SUBMITTER_DETAILS_ADDRESS","PAGE_CONFIRM","PAGE_SENT","isDev","process","DEFAULT_INPUT_DATA","timestamp","additionalDetails","email","additional_email","phone_number","street_address","city","state_or_province","zip_code","signature","reporter_name","acting_on_behalf_of","REPORT_API","client_name","specific_law","law_url","clarification","affected_party","copyright_owner_name","relationship_to_copyrighted_content","remove_now","perform","doClaimSearch","doCommentById","withRouter","connect","props","search","location","urlParams","URLSearchParams","claimId","get","commentId","activeChannelClaim","selectActiveChannelClaim","incognito","selectIncognito","claim","selectClaimForClaimId","comment","selectCommentForCommentId","_React$useState2","_slicedToArray","React","_objectSpread","input","setInput","_React$useState4","page","setPage","_React$useState6","timestampInvalid","setTimestampInvalid","_React$useState8","isResolvingClaim","setIsResolvingClaim","_React$useState10","isResolvingComment","setIsResolvingComment","_React$useState12","isReporting","setIsReporting","_React$useState14","setError","goBack","useHistory","onSubmit","pushParam","label","encodeURIComponent","claim_id","txid","nout","toString","contentClaim","canonical_url","canonical","replace","URL","getCommentUrl","includeTimestamp","join","response","json","success","updateInput","field","newInput","isInfringementDetailsValid","isTimestampValid","match","value_type","stream_type","getActionElem","body","className","x","FormField","__","String","checked","disabled","onChange","Button","button","onClick","e","target","blockWrap","maxlength","placeholder","charCount","textAreaMaxLength","FF_MAX_CHARS_REPORT_CONTENT_DETAILS","noEmojis","pattern","FF_MAX_CHARS_REPORT_CONTENT_SHORT","Icon","icon","ICONS","tooltip","size","customTooltipText","ChannelSelector","FF_MAX_CHARS_REPORT_CONTENT_ADDRESS","defaultValue","Spinner","ErrorText","page_size","no_totals","claim_ids","window","player","pause","seconds","currentTime","h","Math","floor","m","s","str","n","toLocaleString","minimumIntegerDigits","useGrouping","Form","Card","title","subtitle","CommentView","isTopLevel","hideActions","hideContextMenu","getCommentPreviews","actions","ClaimPreview","uri","permanent_url","hideMenu","nonClickable","getClaimPreview","Page","noSideNavigation","backout","backoutLabel","authRedirect","pathname","ReportContent"],"sourceRoot":""}