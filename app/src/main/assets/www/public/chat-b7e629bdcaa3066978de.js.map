{"version":3,"file":"chat-b7e629bdcaa3066978de.js","mappings":"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","sources":["webpack://odysee.com/../ui/scss/component/_livestream-comment.scss?5621","webpack://odysee.com/../ui/component/chat/chatComment/view.jsx","webpack://odysee.com/../ui/component/chat/chatComment/index.js","webpack://odysee.com/../ui/component/chat/chatComments/view.jsx","webpack://odysee.com/../ui/component/chat/chatComments/index.js","webpack://odysee.com/../ui/component/chat/livestream-hyperchats.jsx","webpack://odysee.com/../ui/component/chat/view.jsx","webpack://odysee.com/../ui/component/chat/index.js","webpack://odysee.com/../ui/component/livestreamMenu/view.jsx","webpack://odysee.com/../ui/component/livestreamMenu/index.js","webpack://odysee.com/../ui/scss/component/_livestream-comment.scss"],"sourcesContent":["\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_livestream-comment.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./_livestream-comment.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","// @flow\nimport 'scss/component/_livestream-comment.scss';\n\nimport { getStickerUrl } from 'util/comments';\nimport { Menu, MenuButton } from '@reach/menu-button';\nimport { parseURI } from 'util/lbryURI';\nimport * as ICONS from 'constants/icons';\nimport ChannelThumbnail from 'component/channelThumbnail';\nimport classnames from 'classnames';\nimport CommentBadge from 'component/common/comment-badge';\nimport CommentMenuList from 'component/commentMenuList';\nimport CreditAmount from 'component/common/credit-amount';\nimport DateTime from 'component/dateTime';\nimport Empty from 'component/common/empty';\nimport Icon from 'component/common/icon';\nimport MarkdownPreview from 'component/common/markdown-preview';\nimport OptimizedImage from 'component/optimizedImage';\nimport React from 'react';\nimport MembershipBadge from 'component/membershipBadge';\nimport usePersistedState from 'effects/use-persisted-state';\nimport { Lbryio } from 'lbryinc';\n\ntype Props = {\n  comment: Comment,\n  forceUpdate?: any,\n  uri: string,\n  isMobile?: boolean,\n  isCompact?: boolean,\n  restoreScrollPos?: () => void,\n  handleCommentClick: (any) => void,\n  handleDismissPin?: () => void,\n  // --- redux:\n  claim: StreamClaim,\n  stakedLevel: number,\n  claimsByUri: { [string]: any },\n  odyseeMembership: ?string,\n  creatorMembership: ?string,\n  activeChannelClaim?: any,\n  authorTitle: string,\n  channelAge?: any,\n};\n\nexport const ChatCommentContext = React.createContext<any>();\n\nexport default function ChatComment(props: Props) {\n  const {\n    comment,\n    forceUpdate,\n    uri,\n    claim,\n    // myChannelIds,\n    stakedLevel,\n    isMobile,\n    handleDismissPin,\n    restoreScrollPos,\n    handleCommentClick,\n    odyseeMembership,\n    creatorMembership,\n    authorTitle,\n    activeChannelClaim,\n    channelAge,\n    isCompact,\n  } = props;\n\n  const {\n    channel_url: authorUri,\n    comment_id: commentId,\n    comment: message,\n    is_fiat: isFiat,\n    is_global_mod: isGlobalMod,\n    is_moderator: isModerator,\n    is_pinned: isPinned,\n    removed,\n    support_amount: supportAmount,\n    timestamp,\n  } = comment;\n\n  const isSprout = channelAge && Math.round((new Date() - channelAge) / (1000 * 60 * 60 * 24)) < 7;\n\n  const [exchangeRate, setExchangeRate] = React.useState(0);\n  React.useEffect(() => {\n    if (!exchangeRate) Lbryio.getExchangeRates().then(({ LBC_USD }) => setExchangeRate(LBC_USD));\n  }, [exchangeRate]);\n\n  const basedAmount = isFiat && exchangeRate ? supportAmount : supportAmount * 10 * exchangeRate;\n  const [hasUserMention, setUserMention] = React.useState(false);\n\n  const isStreamer = claim && claim.signing_channel && claim.signing_channel.permanent_url === authorUri;\n  const { claimName: authorName } = parseURI(authorUri || '');\n  const claimName = authorTitle || authorName;\n  const stickerUrlFromMessage = getStickerUrl(message);\n  const isSticker = Boolean(stickerUrlFromMessage);\n  const timePosted = timestamp * 1000;\n  const commentIsMine = comment.channel_id && isMyComment(comment.channel_id);\n  const [showTimestamps] = usePersistedState('live-timestamps', false);\n\n  // todo: implement comment_list --mine in SDK so redux can grab with selectCommentIsMine\n  function isMyComment(channelId: string) {\n    // return myChannelIds ? myChannelIds.includes(channelId) : false;\n    return activeChannelClaim && activeChannelClaim.claim_id === channelId;\n  }\n\n  // For every new <LivestreamComment /> component that is rendered on mobile view,\n  // keep the scroll at the bottom (newest)\n  React.useEffect(() => {\n    if (isMobile && restoreScrollPos) {\n      restoreScrollPos();\n    }\n  }, [isMobile, restoreScrollPos]);\n\n  React.useEffect(() => {\n    if (hasUserMention) setUserMention(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- TODO: no idea if valid\n  }, [activeChannelClaim]);\n\n  return (\n    <li\n      className={classnames('livestream__comment', {\n        'livestream__comment--hyperchat': basedAmount,\n        'hyperchat-level1': basedAmount >= 5,\n        'hyperchat-level2': basedAmount >= 10,\n        'hyperchat-level3': basedAmount >= 50,\n        'hyperchat-level4': basedAmount >= 100,\n        'hyperchat-level5': basedAmount >= 500,\n        'livestream__comment--sticker': isSticker,\n        'livestream__comment--mentioned': hasUserMention,\n        'livestream__comment--mobile': isMobile,\n        'livestream__comment--minimal': isCompact,\n      })}\n    >\n      {supportAmount > 0 && (\n        <div className=\"livestream-comment__hyperchat-banner\">\n          <CreditAmount isFiat={isFiat} amount={supportAmount} hyperChat />\n        </div>\n      )}\n\n      <div className=\"livestream-comment__body\">\n        {false && supportAmount > 0 && <ChannelThumbnail uri={authorUri} xsmall />}\n        {!isCompact || isPinned ? (\n          <>\n            <ChannelThumbnail uri={authorUri} xsmall />\n\n            <div className=\"livestream-comment__info\">\n              <div className=\"livestream-comment__meta-information\">\n                <Menu>\n                  <MenuButton\n                    className={classnames('button--uri-indicator comment__author', {\n                      'comment__author--creator': isStreamer,\n                    })}\n                    onClick={(e) => e.stopPropagation()}\n                  >\n                    {claimName}\n                  </MenuButton>\n\n                  <CommentMenuList\n                    uri={uri}\n                    commentId={commentId}\n                    authorUri={authorUri}\n                    commentIsMine={commentIsMine}\n                    isPinned={isPinned}\n                    isTopLevel\n                    disableEdit\n                    disableRemove={comment.removed}\n                    isLiveComment\n                    handleDismissPin={handleDismissPin}\n                    setQuickReply={handleCommentClick}\n                  />\n                </Menu>\n\n                {isGlobalMod && <CommentBadge label={__('Admin')} icon={ICONS.BADGE_ADMIN} size={16} />}\n                {isModerator && <CommentBadge label={__('Moderator')} icon={ICONS.BADGE_MOD} size={16} />}\n                {isStreamer && <CommentBadge label={__('Streamer')} icon={ICONS.BADGE_STREAMER} size={16} />}\n                {!isStreamer && !isModerator && !isGlobalMod && !odyseeMembership && isSprout && (\n                  <CommentBadge label={__('Sprout')} icon={ICONS.BADGE_SPROUT} size={16} />\n                )}\n                {odyseeMembership && <MembershipBadge membershipName={odyseeMembership} linkPage />}\n                {creatorMembership && <MembershipBadge membershipName={creatorMembership} linkPage uri={uri} />}\n\n                {isPinned && (\n                  <span className=\"comment__pin\">\n                    <Icon icon={ICONS.PIN} size={14} />\n                    {__('Pinned')}\n                  </span>\n                )}\n\n                {/* Use key to force timestamp update */}\n                <DateTime date={timePosted} timeAgo key={forceUpdate} genericSeconds />\n              </div>\n\n              {isSticker ? (\n                <div className=\"sticker__comment\">\n                  <OptimizedImage src={stickerUrlFromMessage} waitLoad loading=\"lazy\" />\n                </div>\n              ) : (\n                <div className=\"livestream-comment__text\">\n                  {removed ? (\n                    <Empty text={__('[Removed]')} />\n                  ) : (\n                    <ChatCommentContext.Provider value={{ isLiveComment: true }}>\n                      <MarkdownPreview\n                        content={message}\n                        promptLinks\n                        stakedLevel={stakedLevel}\n                        disableTimestamps\n                        setUserMention={setUserMention}\n                        hasMembership={Boolean(odyseeMembership)}\n                        isComment\n                      />\n                    </ChatCommentContext.Provider>\n                  )}\n                </div>\n              )}\n            </div>\n          </>\n        ) : (\n          <div className=\"livestream-comment--minimal\">\n            {showTimestamps && <DateTime date={timePosted} key={forceUpdate} />}\n            {(isStreamer || isModerator || isGlobalMod || odyseeMembership) && (\n              <ChannelThumbnail uri={authorUri} xxxsmall />\n            )}\n            {isGlobalMod && <CommentBadge label={__('Admin')} icon={ICONS.BADGE_ADMIN} size={16} />}\n            {isModerator && <CommentBadge label={__('Moderator')} icon={ICONS.BADGE_MOD} size={16} />}\n            {isStreamer && <CommentBadge label={__('Streamer')} icon={ICONS.BADGE_STREAMER} size={16} />}\n            {!isStreamer && !isModerator && !isGlobalMod && isSprout && (\n              <CommentBadge label={__('Sprout')} icon={ICONS.BADGE_SPROUT} size={16} />\n            )}\n            {odyseeMembership && <MembershipBadge membershipName={odyseeMembership} linkPage />}\n            {creatorMembership && <MembershipBadge membershipName={creatorMembership} linkPage uri={uri} />}\n            <Menu>\n              <MenuButton\n                className={classnames('button--uri-indicator comment__author', {\n                  'comment__author--creator': isStreamer,\n                })}\n                onClick={(e) => e.stopPropagation()}\n              >\n                {claimName}\n              </MenuButton>\n\n              <CommentMenuList\n                uri={uri}\n                commentId={commentId}\n                authorUri={authorUri}\n                commentIsMine={commentIsMine}\n                isPinned={isPinned}\n                isTopLevel\n                disableEdit\n                disableRemove={comment.removed}\n                isLiveComment\n                handleDismissPin={handleDismissPin}\n                setQuickReply={handleCommentClick}\n              />\n            </Menu>\n            <p className=\"colon\">:</p>\n            {isSticker ? (\n              <div className=\"sticker__comment\">\n                <OptimizedImage src={stickerUrlFromMessage} waitLoad loading=\"lazy\" />\n              </div>\n            ) : (\n              <div className=\"livestream-comment__text\">\n                {removed ? (\n                  <Empty text={__('[Removed]')} />\n                ) : (\n                  <MarkdownPreview\n                    content={message}\n                    promptLinks\n                    stakedLevel={stakedLevel}\n                    disableTimestamps\n                    setUserMention={setUserMention}\n                    hasMembership={Boolean(odyseeMembership)}\n                    isComment\n                    isMinimal={isCompact}\n                  />\n                )}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      <div className=\"livestream-comment__menu\">\n        <Menu>\n          <MenuButton className=\"menu__button\" onClick={(e) => e.stopPropagation()}>\n            <Icon size={18} icon={ICONS.MORE_VERTICAL} />\n          </MenuButton>\n\n          <CommentMenuList\n            uri={uri}\n            commentId={commentId}\n            authorUri={authorUri}\n            commentIsMine={commentIsMine}\n            isPinned={isPinned}\n            isTopLevel\n            disableEdit\n            disableRemove={comment.removed}\n            isLiveComment\n            handleDismissPin={handleDismissPin}\n            setQuickReply={handleCommentClick}\n          />\n        </Menu>\n      </div>\n    </li>\n  );\n}\n","import { connect } from 'react-redux';\nimport {\n  selectStakedLevelForChannelUri,\n  selectClaimForUri,\n  selectClaimsByUri,\n  selectTitleForUri,\n  selectDateForUri,\n} from 'redux/selectors/claims';\nimport { selectActiveChannelClaim } from 'redux/selectors/app';\nimport {\n  selectOdyseeMembershipForChannelId,\n  selectMembershipForCreatorOnlyIdAndChannelId,\n} from 'redux/selectors/memberships';\nimport { getChannelIdFromClaim } from 'util/claim';\n\nimport ChatComment from './view';\n\nconst select = (state, props) => {\n  const { uri, comment } = props;\n  const { channel_url: authorUri, channel_id: channelId } = comment;\n  const authorTitle = selectTitleForUri(state, authorUri);\n  const channelAge = selectDateForUri(state, authorUri);\n\n  const activeChannelClaim = selectActiveChannelClaim(state);\n\n  const claim = selectClaimForUri(state, uri);\n  const creatorId = getChannelIdFromClaim(claim);\n\n  return {\n    claim,\n    stakedLevel: selectStakedLevelForChannelUri(state, authorUri),\n    claimsByUri: selectClaimsByUri(state),\n    odyseeMembership: selectOdyseeMembershipForChannelId(state, channelId),\n    creatorMembership: selectMembershipForCreatorOnlyIdAndChannelId(state, creatorId, channelId),\n    activeChannelClaim,\n    authorTitle,\n    channelAge,\n  };\n};\n\nconst perform = {};\n\nexport default connect(select, perform)(ChatComment);\n","// @flow\nimport React from 'react';\nimport ChatComment from 'component/chat/chatComment';\nimport Spinner from 'component/spinner';\n\n// 30 sec timestamp refresh timer\nconst UPDATE_TIMESTAMP_MS = 30 * 1000;\n\ntype Props = {\n  comments: Array<Comment>,\n  uri: string,\n  isMobile?: boolean,\n  viewMode: string,\n  restoreScrollPos?: () => void,\n  setResolvingSuperChats?: (boolean) => void,\n  setHoverLock: (boolean) => void,\n  handleCommentClick?: (string) => void,\n  isCompact: string,\n  // redux\n  fetchingComments: boolean,\n  resolvingSuperchats: boolean,\n};\n\nexport default function ChatComments(props: Props) {\n  const {\n    comments,\n    uri,\n    isMobile,\n    restoreScrollPos,\n    setResolvingSuperChats,\n    setHoverLock,\n    handleCommentClick,\n    isCompact,\n    fetchingComments,\n    resolvingSuperchats,\n  } = props;\n\n  const [forceUpdate, setForceUpdate] = React.useState(0);\n\n  React.useEffect(() => {\n    if (setResolvingSuperChats) setResolvingSuperChats(resolvingSuperchats);\n  }, [resolvingSuperchats, setResolvingSuperChats]);\n\n  const now = new Date();\n  const shouldRefreshTimestamp =\n    comments &&\n    comments.some((comment) => {\n      const { timestamp } = comment;\n      const timePosted = timestamp * 1000;\n\n      // 1000 * 60 seconds * 60 minutes === less than an hour old\n      return now - timePosted < 1000 * 60 * 60;\n    });\n\n  // Refresh timestamp on timer\n  React.useEffect(() => {\n    if (shouldRefreshTimestamp) {\n      const timer = setTimeout(() => {\n        setForceUpdate(Date.now());\n      }, UPDATE_TIMESTAMP_MS);\n\n      return () => clearTimeout(timer);\n    }\n    // forceUpdate will re-activate the timer or else it will only refresh once\n  }, [shouldRefreshTimestamp, forceUpdate]);\n\n  if (resolvingSuperchats) {\n    return (\n      <div className=\"main--empty\">\n        <Spinner />\n      </div>\n    );\n  }\n\n  /* top to bottom comment display */\n  if (!fetchingComments && comments && comments.length > 0) {\n    const commentProps = { uri, forceUpdate };\n\n    return isMobile ? (\n      <div className=\"livestream__comments--mobile\">\n        {comments\n          .slice(0)\n          .reverse()\n          .map((comment) => (\n            <ChatComment\n              {...commentProps}\n              comment={comment}\n              key={comment.comment_id}\n              isMobile\n              restoreScrollPos={restoreScrollPos}\n              handleCommentClick={handleCommentClick}\n              isCompact={isCompact}\n            />\n          ))}\n      </div>\n    ) : (\n      <div\n        className=\"livestream__comments\"\n        onMouseEnter={() => setHoverLock(true)}\n        onMouseLeave={() => setHoverLock(false)}\n      >\n        {comments.map((comment) => (\n          <ChatComment\n            {...commentProps}\n            comment={comment}\n            key={comment.comment_id}\n            handleCommentClick={handleCommentClick}\n            isCompact={isCompact}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  return <div className=\"main--empty\" style={{ flex: 1 }} />;\n}\n","import { connect } from 'react-redux';\nimport { selectIsFetchingComments } from 'redux/selectors/comments';\nimport { selectIsUriResolving } from 'redux/selectors/claims';\nimport { VIEW_MODES } from 'ui/component/chat/view';\nimport ChatComments from './view';\n\nconst select = (state, props) => {\n  const { comments, viewMode } = props;\n\n  return {\n    fetchingComments: selectIsFetchingComments(state),\n    resolvingSuperchats: Boolean(\n      viewMode === VIEW_MODES.SUPERCHAT &&\n        comments &&\n        comments.some(({ channel_url }) => selectIsUriResolving(state, channel_url))\n    ),\n  };\n};\n\nexport default connect(select)(ChatComments);\n","// @flow\nimport type { ElementRef } from 'react';\n\nimport { parseSticker } from 'util/comments';\nimport * as ICONS from 'constants/icons';\nimport Button from 'component/button';\nimport ChannelThumbnail from 'component/channelThumbnail';\nimport classnames from 'classnames';\nimport CreditAmount from 'component/common/credit-amount';\nimport React from 'react';\nimport Slide from '@mui/material/Slide';\nimport { Lbryio } from 'lbryinc';\n\ntype Props = {\n  superChats: Array<Comment>,\n  hyperchatsHidden?: boolean,\n  selectedHyperchat: ?Comment,\n  channelTitle?: string,\n  isMobile?: boolean,\n  toggleHyperChat: () => void,\n  handleHyperchatClick: (comment: any) => void,\n};\n\nexport default function LivestreamHyperchats(props: Props) {\n  const {\n    superChats: hyperChatsByAmount,\n    hyperchatsHidden,\n    isMobile,\n    toggleHyperChat,\n    handleHyperchatClick,\n    selectedHyperchat,\n  } = props;\n\n  const superChatTopTen = React.useMemo(() => {\n    return hyperChatsByAmount ? hyperChatsByAmount.slice(0, 10) : hyperChatsByAmount;\n  }, [hyperChatsByAmount]);\n\n  const [exchangeRate, setExchangeRate] = React.useState(0);\n  React.useEffect(() => {\n    if (!exchangeRate) Lbryio.getExchangeRates().then(({ LBC_USD }) => setExchangeRate(LBC_USD));\n  }, [exchangeRate]);\n\n  const stickerSuperChats = hyperChatsByAmount && hyperChatsByAmount.filter(({ comment }) => !!parseSticker(comment));\n\n  const showMore = superChatTopTen && hyperChatsByAmount && superChatTopTen.length < hyperChatsByAmount.length;\n  const elRef: ElementRef<any> = React.useRef();\n\n  return !superChatTopTen ? null : (\n    <Slider isMobile={isMobile} hyperchatsHidden={hyperchatsHidden}>\n      <div\n        ref={elRef}\n        className={classnames('livestream-hyperchats__wrapper', {\n          'livestream-hyperchats__wrapper--mobile': isMobile,\n        })}\n      >\n        <div className=\"livestream-hyperchats\">\n          {superChatTopTen.map((hyperChat: Comment) => {\n            const { comment_id, channel_url, support_amount, is_fiat } = hyperChat;\n            const isSticker = stickerSuperChats && stickerSuperChats.includes(hyperChat);\n            const basedAmount = is_fiat && exchangeRate ? support_amount : support_amount * 10 * exchangeRate;\n\n            return (\n              <div\n                key={comment_id}\n                className={classnames('livestream-hyperchat', {\n                  'livestream-hyperchat--mobile': isMobile,\n                  'hyperchat-preview-level1': basedAmount >= 5,\n                  'hyperchat-preview-level2': basedAmount >= 10,\n                  'hyperchat-preview-level3': basedAmount >= 50,\n                  'hyperchat-preview-level4': basedAmount >= 100,\n                  'hyperchat-preview-level5': basedAmount >= 500,\n                  active: selectedHyperchat && selectedHyperchat.comment_id === comment_id,\n                })}\n                onClick={() => handleHyperchatClick(hyperChat)}\n              >\n                <ChannelThumbnail uri={channel_url} xxsmall showMemberBadge />\n\n                <div\n                  className={classnames('livestreamHyperchat__info', {\n                    'livestreamHyperchat__info--notSticker': stickerSuperChats && !isSticker,\n                  })}\n                >\n                  <div className=\"livestreamHyperchat__info--user\">\n                    <CreditAmount\n                      hideTitle\n                      size={10}\n                      className=\"livestreamHyperchat__amount--large\"\n                      amount={support_amount}\n                      isFiat={is_fiat}\n                    />\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n\n          {showMore && (\n            <div className=\"chat__show-hyperchats\">\n              <Button\n                title={__('Show More...')}\n                button=\"inverse\"\n                className=\"close-button\"\n                onClick={() => toggleHyperChat()}\n                iconRight={ICONS.ARROW_RIGHT}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </Slider>\n  );\n}\n\ntype SliderProps = {\n  hyperchatsHidden?: boolean,\n  children: any,\n};\n\nconst Slider = (sliderProps: SliderProps) => {\n  const { hyperchatsHidden, children } = sliderProps;\n\n  return (\n    <Slide direction=\"left\" in={!hyperchatsHidden} mountOnEnter unmountOnExit>\n      {children}\n    </Slide>\n  );\n};\n","// @flow\nimport { useIsMobile } from 'effects/use-screensize';\nimport * as ICONS from 'constants/icons';\nimport Button from 'component/button';\nimport classnames from 'classnames';\nimport CreditAmount from 'component/common/credit-amount';\nimport Icon from 'component/common/icon';\nimport ChatComment from 'component/chat/chatComment';\nimport ChatComments from 'component/chat/chatComments';\nimport LivestreamHyperchats from './livestream-hyperchats';\nimport LivestreamMenu from 'component/livestreamMenu';\nimport React from 'react';\nimport Yrbl from 'component/yrbl';\nimport { getTipValues } from 'util/livestream';\nimport Slide from '@mui/material/Slide';\nimport usePersistedState from 'effects/use-persisted-state';\nimport Tooltip from 'component/common/tooltip';\nimport { lazyImport } from 'util/lazyImport';\nimport './style.lazy.scss';\n\nexport const VIEW_MODES = {\n  CHAT: 'chat',\n  SUPERCHAT: 'sc',\n};\nconst COMMENT_SCROLL_TIMEOUT = 25;\nconst CommentCreate = lazyImport(() => import('component/commentCreate' /* webpackChunkName: \"comments\" */));\n\ntype Props = {\n  customViewMode?: string,\n  embed?: boolean,\n  hideHeader?: boolean,\n  hyperchatsHidden?: boolean,\n  isPopoutWindow?: boolean,\n  setCustomViewMode?: (any) => void,\n  uri: string,\n  // redux\n  channelId: string,\n  channelTitle: string,\n  claimId?: string,\n  comments: Array<Comment>,\n  doCommentList: (\n    uri: string,\n    parentId: ?string,\n    page: number,\n    pageSize: number,\n    sortBy: ?number,\n    isLivestream: boolean\n  ) => void,\n  doFetchChannelMembershipsForChannelIds: (channelId: string, claimIds: ClaimIds) => void,\n  doFetchOdyseeMembershipForChannelIds: (claimIds: ClaimIds) => void,\n  doHyperChatList: (uri: string) => void,\n  doResolveUris: (uris: Array<string>, cache: boolean) => void,\n  pinnedComments: Array<Comment>,\n  setLayoutRendered: (boolean) => void,\n  superChats: Array<Comment>,\n  doUpdateCreatorSettings: (ChannelClaim, PerChannelSettings) => void,\n  myChannelClaims: any,\n  doListAllMyMembershipTiers: any,\n  contentUnlocked: boolean,\n  isLivestreamChatMembersOnly: ?boolean,\n  userHasMembersOnlyChatPerk: boolean,\n  chatUnlocked: boolean,\n};\n\nexport default function ChatLayout(props: Props) {\n  const {\n    channelId,\n    channelTitle,\n    claimId,\n    comments: commentsByChronologicalOrder,\n    customViewMode,\n    doCommentList,\n    doFetchChannelMembershipsForChannelIds,\n    doFetchOdyseeMembershipForChannelIds,\n    doHyperChatList,\n    doResolveUris,\n    embed,\n    hideHeader,\n    hyperchatsHidden,\n    isPopoutWindow,\n    pinnedComments,\n    setCustomViewMode,\n    setLayoutRendered,\n    superChats: hyperChatsByAmount,\n    uri,\n    myChannelClaims,\n    doListAllMyMembershipTiers,\n    contentUnlocked,\n    isLivestreamChatMembersOnly,\n    userHasMembersOnlyChatPerk,\n    chatUnlocked,\n  } = props;\n\n  const isMobile = useIsMobile() && !isPopoutWindow;\n  const isLimitedPopout = useIsMobile() && isPopoutWindow;\n\n  const webElement = document.querySelector('.livestream__comments');\n  const mobileElement = document.querySelector('.livestream__comments--mobile');\n  const discussionElement = isMobile ? mobileElement : webElement;\n  const allCommentsElem = document.querySelectorAll('.livestream__comment');\n  const lastCommentElem = allCommentsElem && allCommentsElem[allCommentsElem.length - 1];\n\n  const [viewMode, setViewMode] = React.useState(VIEW_MODES.CHAT);\n  const [scrollPos, setScrollPos] = React.useState(0);\n  const [showPinned, setShowPinned] = React.useState(true);\n  const [resolvingSuperChats, setResolvingSuperChats] = React.useState(false);\n  const [openedPopoutWindow, setPopoutWindow] = React.useState(undefined);\n  const [chatHidden, setChatHidden] = React.useState(false);\n  const [didInitialScroll, setDidInitialScroll] = React.useState(false);\n  const [minScrollHeight, setMinScrollHeight] = React.useState(0);\n  const [keyboardOpened, setKeyboardOpened] = React.useState(false);\n  const [superchatsAmount, setSuperchatsAmount] = React.useState(false);\n  const [chatElement, setChatElement] = React.useState();\n  const [textInjection, setTextInjection] = React.useState('');\n  const [hideHyperchats, sethideHyperchats] = React.useState(hyperchatsHidden);\n  const [selectedHyperchat, setSelectedHyperchat] = React.useState(null);\n  const [isCompact, setIsCompact] = usePersistedState('isCompact', false);\n\n  let superChatsByChronologicalOrder = [];\n  if (hyperChatsByAmount) hyperChatsByAmount.forEach((chat) => superChatsByChronologicalOrder.push(chat));\n  if (superChatsByChronologicalOrder.length > 0) {\n    superChatsByChronologicalOrder.sort((a, b) => b.timestamp - a.timestamp);\n  }\n\n  // get commenter claim ids for checking premium status\n  const commenterClaimIds =\n    commentsByChronologicalOrder && commentsByChronologicalOrder.map(({ channel_id }) => channel_id);\n\n  React.useEffect(() => {\n    if (commenterClaimIds?.length > 0 && channelId) {\n      doFetchOdyseeMembershipForChannelIds(commenterClaimIds);\n      doFetchChannelMembershipsForChannelIds(channelId, commenterClaimIds);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    channelId,\n    commenterClaimIds.length,\n    doFetchChannelMembershipsForChannelIds,\n    doFetchOdyseeMembershipForChannelIds,\n  ]);\n\n  React.useEffect(() => {\n    if (myChannelClaims !== undefined) {\n      doListAllMyMembershipTiers();\n    }\n  }, [doListAllMyMembershipTiers, myChannelClaims]);\n\n  const commentsToDisplay =\n    viewMode === VIEW_MODES.CHAT ? commentsByChronologicalOrder : superChatsByChronologicalOrder;\n  const commentsLength = commentsToDisplay && commentsToDisplay.length;\n  const pinnedComment = pinnedComments.length > 0 ? pinnedComments[0] : null;\n  const { superChatsChannelUrls, superChatsFiatAmount, superChatsLBCAmount } =\n    getTipValues(superChatsByChronologicalOrder);\n  const scrolledPastRecent = Boolean(\n    (viewMode !== VIEW_MODES.SUPERCHAT || !resolvingSuperChats) &&\n      (!isMobile ? scrollPos < -2 : scrollPos < minScrollHeight)\n  );\n  const setHoverLock = React.useCallback(\n    (e) => {\n      if (!isMobile) {\n        if (e && discussionElement && discussionElement.scrollTop === 0) {\n          discussionElement.scrollTop = -1;\n          discussionElement.style.paddingBottom = discussionElement.scrollTop * -1 + 'px';\n        } else if (!e && discussionElement) {\n          discussionElement.style.paddingBottom = '0px';\n          if (discussionElement.scrollTop > -2) discussionElement.scrollTop = 0;\n        }\n      }\n    },\n    [discussionElement, isMobile]\n  );\n\n  const restoreScrollPos = React.useCallback(() => {\n    if (discussionElement) {\n      discussionElement.scrollTop = !isMobile ? 0 : discussionElement.scrollHeight;\n      if (isMobile) {\n        const pos = lastCommentElem && discussionElement.scrollTop - lastCommentElem.getBoundingClientRect().height;\n\n        if (!minScrollHeight || minScrollHeight !== pos) {\n          setMinScrollHeight(pos);\n        }\n      }\n    }\n  }, [discussionElement, isMobile, lastCommentElem, minScrollHeight]);\n\n  const notAuthedToLiveChat = Boolean(isLivestreamChatMembersOnly && !userHasMembersOnlyChatPerk);\n\n  function toggleClick(toggleMode: string) {\n    if (toggleMode === VIEW_MODES.SUPERCHAT) {\n      toggleHyperChat();\n    } else {\n      setViewMode(VIEW_MODES.CHAT);\n      if (setCustomViewMode) setCustomViewMode(VIEW_MODES.CHAT);\n    }\n\n    if (discussionElement) {\n      discussionElement.scrollTop = 0;\n    }\n  }\n\n  function toggleHyperChat() {\n    const hasNewSuperchats = !superchatsAmount || superChatsChannelUrls.length !== superchatsAmount;\n\n    if (superChatsChannelUrls && hasNewSuperchats) {\n      setSuperchatsAmount(superChatsChannelUrls.length);\n      doResolveUris(superChatsChannelUrls, false);\n    }\n\n    setViewMode(VIEW_MODES.SUPERCHAT);\n    if (setCustomViewMode) setCustomViewMode(VIEW_MODES.SUPERCHAT);\n  }\n\n  React.useEffect(() => {\n    if (setLayoutRendered) setLayoutRendered(true);\n  }, [setLayoutRendered]);\n\n  React.useEffect(() => {\n    if (customViewMode && customViewMode !== viewMode) {\n      setViewMode(customViewMode);\n    }\n  }, [customViewMode, viewMode]);\n\n  React.useEffect(() => {\n    if (claimId && contentUnlocked) {\n      doCommentList(uri, undefined, 1, 75, undefined, true);\n      doHyperChatList(uri);\n    }\n  }, [claimId, contentUnlocked, doCommentList, doHyperChatList, uri]);\n\n  React.useEffect(() => {\n    if (isMobile && !didInitialScroll) {\n      restoreScrollPos();\n      setDidInitialScroll(true);\n    }\n  }, [didInitialScroll, isMobile, restoreScrollPos, viewMode]);\n\n  React.useEffect(() => {\n    if (discussionElement && !openedPopoutWindow) setChatElement(discussionElement);\n  }, [discussionElement, openedPopoutWindow]);\n\n  // Register scroll handler (TODO: Should throttle/debounce)\n  React.useEffect(() => {\n    function handleScroll() {\n      if (chatElement) {\n        const scrollTop = chatElement.scrollTop;\n\n        if (scrollTop !== scrollPos) {\n          setScrollPos(scrollTop);\n        }\n      }\n    }\n\n    if (chatElement) {\n      chatElement.addEventListener('scroll', handleScroll);\n\n      return () => chatElement.removeEventListener('scroll', handleScroll);\n    }\n  }, [chatElement, scrollPos]);\n\n  // Retain scrollPos=0 when receiving new messages.\n  React.useEffect(() => {\n    if (discussionElement && commentsLength > 0) {\n      // Only update comment scroll if the user hasn't scrolled up to view old comments\n      if (scrollPos && (!isMobile || minScrollHeight) && scrollPos >= minScrollHeight) {\n        // +ve scrollPos: not scrolled (Usually, there'll be a few pixels beyond 0).\n        // -ve scrollPos: user scrolled.\n        const timer = setTimeout(() => {\n          // Use a timer here to ensure we reset after the new comment has been rendered.\n          if (!isMobile) {\n            discussionElement.scrollTop = 0;\n          } else {\n            restoreScrollPos();\n          }\n        }, COMMENT_SCROLL_TIMEOUT);\n        return () => clearTimeout(timer);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- Just respond to 'commentsLength' and nothing else\n  }, [commentsLength]);\n\n  // Restore Scroll Pos after mobile input opens keyboard and avoid scroll height conflicts\n  React.useEffect(() => {\n    if (keyboardOpened) {\n      const timer = setTimeout(() => {\n        restoreScrollPos();\n        setKeyboardOpened(false);\n      }, 300);\n\n      return () => clearTimeout(timer);\n    }\n  }, [keyboardOpened, restoreScrollPos]);\n\n  React.useEffect(() => {\n    if (textInjection && textInjection.length) setTextInjection('');\n  }, [textInjection]);\n\n  const membersOnlyMessage = React.useMemo(() => {\n    return (\n      !notAuthedToLiveChat &&\n      isLivestreamChatMembersOnly &&\n      chatUnlocked && (\n        <div className=\"livestream__members-only-message\">\n          <Tooltip\n            title={__('Only \"%channel_name%\" members are able to chat right now. Enjoy!', {\n              channel_name: channelTitle,\n            })}\n          >\n            <div style={{ display: 'inline' }}>\n              <Icon icon={ICONS.MEMBERSHIP} />\n            </div>\n          </Tooltip>\n          {__('Members Only')}\n          <Icon icon={ICONS.UNLOCK} />\n        </div>\n      )\n    );\n  }, [notAuthedToLiveChat, channelTitle, chatUnlocked, isLivestreamChatMembersOnly]);\n\n  if (!claimId) return null;\n\n  if (openedPopoutWindow || chatHidden) {\n    return (\n      <div className=\"card livestream__chat\">\n        <div className=\"card__header--between livestreamDiscussion__header\">\n          <div className=\"card__title-section--small livestreamDiscussion__title\">{__('Livestream Chat')}</div>\n        </div>\n\n        <div className=\"livestream-comments__wrapper\">\n          <div className=\"main--empty\">\n            <Yrbl\n              title={__('Chat Hidden')}\n              actions={\n                <div className=\"section__actions\">\n                  {openedPopoutWindow && (\n                    <Button\n                      button=\"secondary\"\n                      label={__('Close Popout')}\n                      onClick={() => {\n                        openedPopoutWindow.close();\n                        setPopoutWindow(undefined);\n                      }}\n                    />\n                  )}\n\n                  {chatHidden && (\n                    <Button button=\"secondary\" label={__('Show Chat')} onClick={() => setChatHidden(false)} />\n                  )}\n                </div>\n              }\n            />\n          </div>\n\n          <div className=\"livestream__comment-create\">\n            <CommentCreate isLivestream bottom uri={uri} disableInput />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const toggleProps = { viewMode, onClick: (toggleMode) => toggleClick(toggleMode) };\n\n  function handleCommentClick(authorTitle) {\n    setTextInjection(authorTitle);\n  }\n\n  function handleHyperchatClick(hyperchat: Comment) {\n    setSelectedHyperchat(hyperchat);\n  }\n\n  return (\n    <div className={classnames('chat__wrapper', { 'livestream__chat--popout': isPopoutWindow })}>\n      {!hideHeader && (\n        <div className=\"chat__header\">\n          <div className=\"chat__toggle-mode\">\n            {/* the superchats in chronological order button */}\n            <ChatContentToggle\n              {...toggleProps}\n              toggleMode={VIEW_MODES.CHAT}\n              label={!isLimitedPopout ? __('Livestream Chat') : __('Chat')}\n            />\n\n            {/* the button to show superchats listed by most to least support amount */}\n            {hyperChatsByAmount && (\n              <ChatContentToggle\n                {...toggleProps}\n                toggleMode={VIEW_MODES.SUPERCHAT}\n                label={\n                  <>\n                    <CreditAmount amount={superChatsLBCAmount || 0} size={8} /> /&nbsp;\n                    <CreditAmount amount={superChatsFiatAmount || 0} size={8} isFiat /> {__('Tipped')}\n                  </>\n                }\n              />\n            )}\n          </div>\n\n          <LivestreamMenu\n            uri={uri}\n            isPopoutWindow={isPopoutWindow}\n            hideChat={() => setChatHidden(true)}\n            setPopoutWindow={(v) => setPopoutWindow(v)}\n            isMobile={isMobile}\n            toggleHyperchats={() => sethideHyperchats(!hideHyperchats)}\n            toggleIsCompact={() => setIsCompact(!isCompact)}\n            isCompact={isCompact}\n            hyperchatsHidden={hideHyperchats}\n            noHyperchats={!hyperChatsByAmount}\n          />\n        </div>\n      )}\n\n      <div className=\"livestream-comments__wrapper\">\n        <div\n          className={classnames('livestream-comments__top-actions', {\n            'livestream-comments__top-actions--mobile': isMobile,\n          })}\n        >\n          {viewMode === VIEW_MODES.CHAT && hyperChatsByAmount && (\n            <LivestreamHyperchats\n              superChats={hyperChatsByAmount}\n              toggleHyperChat={toggleHyperChat}\n              hyperchatsHidden={hyperchatsHidden || hideHyperchats}\n              isMobile={isMobile}\n              noHyperchats={false}\n              handleHyperchatClick={handleHyperchatClick}\n              selectedHyperchat={selectedHyperchat}\n            />\n          )}\n\n          {pinnedComment &&\n            !selectedHyperchat &&\n            viewMode === VIEW_MODES.CHAT &&\n            (isMobile ? (\n              <Slide direction=\"left\" in={showPinned} mountOnEnter unmountOnExit>\n                <div className=\"livestream-pinned__wrapper--mobile\">\n                  <ChatComment\n                    comment={pinnedComment}\n                    key={pinnedComment.comment_id}\n                    uri={uri}\n                    handleDismissPin={() => setShowPinned(false)}\n                    isMobile\n                    setResolvingSuperChats={setResolvingSuperChats}\n                  />\n                </div>\n              </Slide>\n            ) : (\n              showPinned && (\n                <div className=\"livestream-pinned__wrapper\">\n                  <ChatComment comment={pinnedComment} key={pinnedComment.comment_id} uri={uri} />\n                  <Button\n                    title={__('Dismiss pinned comment')}\n                    button=\"inverse\"\n                    className=\"close-button\"\n                    onClick={() => setShowPinned(false)}\n                    icon={ICONS.REMOVE}\n                  />\n                </div>\n              )\n            ))}\n        </div>\n\n        {/* Hyperchat */}\n        {selectedHyperchat &&\n          viewMode === VIEW_MODES.CHAT &&\n          (isMobile ? (\n            <Slide direction=\"left\" in={showPinned} mountOnEnter unmountOnExit>\n              <div className=\"livestream-pinned__wrapper--mobile\">\n                <ChatComment\n                  comment={selectedHyperchat}\n                  key={selectedHyperchat.comment_id}\n                  uri={uri}\n                  handleDismissPin={() => setSelectedHyperchat(null)}\n                  isMobile\n                  setResolvingSuperChats={setResolvingSuperChats}\n                />\n                <Button\n                  title={__('Dismiss pinned comment')}\n                  button=\"inverse\"\n                  className=\"close-button\"\n                  onClick={() => setSelectedHyperchat(null)}\n                  icon={ICONS.REMOVE}\n                />\n              </div>\n            </Slide>\n          ) : (\n            showPinned && (\n              <div className=\"livestream-pinned__wrapper\">\n                <ChatComment comment={selectedHyperchat} key={selectedHyperchat.comment_id} uri={uri} />\n                <Button\n                  title={__('Dismiss Hyperchat')}\n                  button=\"inverse\"\n                  className=\"close-button\"\n                  onClick={() => setSelectedHyperchat(null)}\n                  icon={ICONS.REMOVE}\n                />\n              </div>\n            )\n          ))}\n\n        <ChatComments\n          uri={uri}\n          viewMode={viewMode}\n          comments={commentsToDisplay}\n          isMobile={isMobile}\n          restoreScrollPos={!scrolledPastRecent && isMobile && restoreScrollPos}\n          handleCommentClick={handleCommentClick}\n          isCompact={isCompact}\n          setHoverLock={setHoverLock}\n        />\n\n        {scrolledPastRecent && (\n          <Button\n            button=\"secondary\"\n            className=\"livestream-comments__scroll-to-recent\"\n            label={viewMode === VIEW_MODES.CHAT ? __('Recent Comments') : __('Recent Tips')}\n            onClick={restoreScrollPos}\n            iconRight={ICONS.DOWN}\n          />\n        )}\n\n        {!isMobile && membersOnlyMessage}\n        <div className=\"chat__comment-create\">\n          {isMobile && membersOnlyMessage}\n\n          <CommentCreate\n            isLivestream\n            bottom\n            embed={embed}\n            uri={uri}\n            onDoneReplying={restoreScrollPos}\n            onSlimInputClose={!scrolledPastRecent && isMobile ? () => setKeyboardOpened(true) : undefined}\n            textInjection={textInjection}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\ntype ToggleProps = {\n  viewMode: string,\n  toggleMode: string,\n  label: string | any,\n  onClick: (string) => void,\n};\n\nconst ChatContentToggle = (props: ToggleProps) => {\n  const { viewMode, toggleMode, label, onClick } = props;\n\n  return (\n    <Button\n      className={classnames('button-toggle', { 'button-toggle--active': viewMode === toggleMode })}\n      label={label}\n      onClick={() => onClick(toggleMode)}\n    />\n  );\n};\n","import { connect } from 'react-redux';\nimport { MAX_LIVESTREAM_COMMENTS } from 'constants/livestream';\nimport { doResolveUris } from 'redux/actions/claims';\nimport { selectClaimForUri, selectMyChannelClaims } from 'redux/selectors/claims';\nimport { doCommentList, doHyperChatList } from 'redux/actions/comments';\nimport {\n  selectTopLevelCommentsForUri,\n  selectHyperChatsForUri,\n  selectPinnedCommentsForUri,\n  selectLivestreamChatMembersOnlyForChannelId,\n} from 'redux/selectors/comments';\nimport {\n  doFetchOdyseeMembershipForChannelIds,\n  doFetchChannelMembershipsForChannelIds,\n  doListAllMyMembershipTiers,\n} from 'redux/actions/memberships';\nimport {\n  selectNoRestrictionOrUserIsMemberForContentClaimId,\n  selectNoRestrictionOrUserCanChatForCreatorId,\n  selectUserIsMemberOfMembersOnlyChatForCreatorId,\n} from 'redux/selectors/memberships';\nimport { getChannelIdFromClaim, getChannelTitleFromClaim } from 'util/claim';\n\nimport ChatLayout from './view';\n\nconst select = (state, props) => {\n  const { uri } = props;\n  const claim = selectClaimForUri(state, uri);\n  const claimId = claim && claim.claim_id;\n  const channelId = getChannelIdFromClaim(claim);\n\n  return {\n    claimId,\n    comments: selectTopLevelCommentsForUri(state, uri, MAX_LIVESTREAM_COMMENTS),\n    pinnedComments: selectPinnedCommentsForUri(state, uri),\n    superChats: selectHyperChatsForUri(state, uri),\n    channelId,\n    channelTitle: getChannelTitleFromClaim(claim),\n    myChannelClaims: selectMyChannelClaims(state),\n    contentUnlocked: claimId && selectNoRestrictionOrUserIsMemberForContentClaimId(state, claimId),\n    isLivestreamChatMembersOnly: selectLivestreamChatMembersOnlyForChannelId(state, channelId),\n    userHasMembersOnlyChatPerk: selectUserIsMemberOfMembersOnlyChatForCreatorId(state, channelId),\n    chatUnlocked: channelId && selectNoRestrictionOrUserCanChatForCreatorId(state, channelId),\n  };\n};\n\nconst perform = {\n  doCommentList,\n  doHyperChatList,\n  doResolveUris,\n  doFetchOdyseeMembershipForChannelIds,\n  doFetchChannelMembershipsForChannelIds,\n  doListAllMyMembershipTiers,\n};\n\nexport default connect(select, perform)(ChatLayout);\n","// @flow\n// $FlowFixMe\nimport { Global } from '@emotion/react';\n\nimport { Menu, MenuButton, MenuList, MenuItem } from '@reach/menu-button';\nimport { useHistory } from 'react-router-dom';\nimport usePersistedState from 'effects/use-persisted-state';\nimport * as ICONS from 'constants/icons';\nimport Icon from 'component/common/icon';\nimport React from 'react';\n\ntype Props = {\n  isPopoutWindow?: boolean,\n  hyperchatsHidden?: boolean,\n  noHyperchats?: boolean,\n  isMobile?: boolean,\n  isCompact?: boolean,\n  hideChat?: () => void,\n  setPopoutWindow?: (any) => void,\n  toggleHyperchats?: () => void,\n  toggleIsCompact?: () => void,\n  // -- redux --\n  claimId: ?string,\n  claimIsMine: boolean,\n  channelHasMembershipTiers: boolean,\n  isLivestreamChatMembersOnly?: boolean,\n  doToggleLiveChatMembersOnlySettingForClaimId: (claimId: ClaimId) => Promise<any>,\n  doToast: ({ message: string }) => void,\n};\n\nconst LivestreamMenu = (props: Props) => {\n  const {\n    hideChat,\n    hyperchatsHidden,\n    isCompact,\n    isMobile,\n    isPopoutWindow,\n    noHyperchats,\n    setPopoutWindow,\n    toggleHyperchats,\n    toggleIsCompact,\n    // -- redux --\n    claimId,\n    claimIsMine,\n    channelHasMembershipTiers,\n    isLivestreamChatMembersOnly,\n    doToggleLiveChatMembersOnlySettingForClaimId,\n    doToast,\n  } = props;\n\n  const {\n    location: { pathname },\n  } = useHistory();\n\n  const initialPopoutUnload = React.useRef(false);\n\n  const [showTimestamps, setShowTimestamps] = usePersistedState('live-timestamps', false);\n\n  function updateLivestreamMembersOnlyChat() {\n    if (claimId) {\n      doToggleLiveChatMembersOnlySettingForClaimId(claimId).then(() =>\n        doToast({\n          message: __(\n            isLivestreamChatMembersOnly ? 'Members-only chat is now disabled.' : 'Members-only chat is now enabled.'\n          ),\n        })\n      );\n    }\n  }\n\n  function handlePopout() {\n    if (setPopoutWindow) {\n      const popoutWindow = window.open('/$/popout' + pathname, 'Popout Chat', 'height=700,width=400');\n\n      // Adds function to popoutWindow when unloaded and verify if it was closed\n      const handleUnload = (e) => {\n        if (!initialPopoutUnload.current) {\n          initialPopoutUnload.current = true;\n        } else {\n          const timer = setInterval((a, b) => {\n            if (popoutWindow.closed) {\n              clearInterval(timer);\n              setPopoutWindow(undefined);\n            }\n          }, 300);\n        }\n      };\n\n      popoutWindow.onunload = handleUnload;\n\n      if (window.focus) popoutWindow.focus();\n      setPopoutWindow(popoutWindow);\n    }\n  }\n\n  return (\n    <>\n      <MenuGlobalStyles showTimestamps={showTimestamps} />\n\n      <Menu>\n        <MenuButton className=\"menu__button\">\n          <Icon size={isMobile ? 16 : 18} icon={ICONS.SETTINGS} />\n        </MenuButton>\n\n        <MenuList className=\"menu__list\">\n          {channelHasMembershipTiers && claimIsMine && (\n            <MenuItem className=\"comment__menu-option\" onSelect={() => updateLivestreamMembersOnlyChat()}>\n              <span className=\"menu__link\">\n                <Icon aria-hidden icon={ICONS.MEMBERSHIP} />\n                {__(isLivestreamChatMembersOnly ? 'Disable Members-Only Chat' : 'Enable Members-Only Chat')}\n              </span>\n            </MenuItem>\n          )}\n          <MenuItem className=\"comment__menu-option\" onSelect={() => setShowTimestamps(!showTimestamps)}>\n            <span className=\"menu__link\">\n              <Icon aria-hidden icon={ICONS.TIME} />\n              {__('Toggle Timestamps')}\n            </span>\n          </MenuItem>\n          <MenuItem className=\"comment__menu-option\" onSelect={toggleIsCompact}>\n            <span className=\"menu__link\">\n              <Icon aria-hidden icon={!isCompact ? ICONS.COMPACT : ICONS.EXPAND} size={18} />\n              {!isCompact ? __('Enable Compact Mode') : __('Disable Compact Mode')}\n            </span>\n          </MenuItem>\n\n          {!isMobile ? (\n            <>\n              {!noHyperchats && (\n                <MenuItem className=\"comment__menu-option\" onSelect={toggleHyperchats}>\n                  <span className=\"menu__link\">\n                    <Icon aria-hidden icon={hyperchatsHidden ? ICONS.EYE : ICONS.DISMISS_ALL} size={18} />\n                    {hyperchatsHidden ? __('Display HyperChats') : __('Dismiss HyperChats')}\n                  </span>\n                </MenuItem>\n              )}\n              {/* No need for Hide Chat on mobile with the expand/collapse drawer */}\n              <MenuItem className=\"comment__menu-option\" onSelect={hideChat}>\n                <span className=\"menu__link\">\n                  <Icon aria-hidden icon={ICONS.EYE} />\n                  {__('Hide Chat')}\n                </span>\n              </MenuItem>\n\n              {!isPopoutWindow && (\n                <MenuItem className=\"comment__menu-option\" onSelect={handlePopout}>\n                  <span className=\"menu__link\">\n                    <Icon aria-hidden icon={ICONS.EXTERNAL} />\n                    {__('Popout Chat')}\n                  </span>\n                </MenuItem>\n              )}\n            </>\n          ) : (\n            !noHyperchats && (\n              <MenuItem className=\"comment__menu-option\" onSelect={toggleHyperchats}>\n                <span className=\"menu__link\">\n                  <Icon aria-hidden icon={hyperchatsHidden ? ICONS.EYE : ICONS.DISMISS_ALL} size={18} />\n                  {hyperchatsHidden ? __('Display HyperChats') : __('Dismiss HyperChats')}\n                </span>\n              </MenuItem>\n            )\n          )}\n        </MenuList>\n      </Menu>\n    </>\n  );\n};\n\nexport default LivestreamMenu;\n\ntype GlobalStylesProps = {\n  showTimestamps?: boolean,\n};\n\nconst MenuGlobalStyles = (globalStylesProps: GlobalStylesProps) => {\n  const { showTimestamps } = globalStylesProps;\n\n  return (\n    <Global\n      styles={{\n        ':root': {\n          '--live-timestamp-opacity': showTimestamps ? '0.5' : '0',\n        },\n      }}\n    />\n  );\n};\n","import { connect } from 'react-redux';\nimport { selectClaimForUri, selectClaimIsMineForUri } from 'redux/selectors/claims';\nimport { doToggleLiveChatMembersOnlySettingForClaimId } from 'redux/actions/comments';\nimport { selectLivestreamChatMembersOnlyForChannelId } from 'redux/selectors/comments';\nimport { selectChannelHasMembershipTiersForId } from 'redux/selectors/memberships';\nimport { doToast } from 'redux/actions/notifications';\nimport { getChannelFromClaim } from 'util/claim';\n\nimport ChatLayout from './view';\n\nconst select = (state, props) => {\n  const { uri } = props;\n\n  const claim = selectClaimForUri(state, uri);\n  const claimId = claim && claim.claim_id;\n  const { claim_id: channelId } = getChannelFromClaim(claim) || {};\n\n  return {\n    claimId,\n    claimIsMine: selectClaimIsMineForUri(state, uri),\n    channelHasMembershipTiers: channelId && selectChannelHasMembershipTiersForId(state, channelId),\n    isLivestreamChatMembersOnly: selectLivestreamChatMembersOnlyForChannelId(state, channelId),\n  };\n};\n\nconst perform = {\n  doToggleLiveChatMembersOnlySettingForClaimId,\n  doToast,\n};\n\nexport default connect(select, perform)(ChatLayout);\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"[dir=ltr] .pulse,[dir=rtl] .pulse{animation:pulse 2s ease-in-out infinite}.hyperChat,.livestream-comment__hyperchat-banner{color:var(--color-primary-contrast);font-size:var(--font-xsmall);font-weight:var(--font-weight-bold)}[dir] .hyperChat,[dir] .livestream-comment__hyperchat-banner{background-color:linear-gradient(to right,var(--color-hyperchat),var(--color-hyperchat-3));padding:4px var(--spacing-xs);padding-bottom:2px!important}[dir=ltr] .hyperChat,[dir=ltr] .livestream-comment__hyperchat-banner{border-radius:var(--border-radius) var(--border-radius) var(--border-radius) 0}[dir=rtl] .hyperChat,[dir=rtl] .livestream-comment__hyperchat-banner{border-radius:var(--border-radius) var(--border-radius) 0 var(--border-radius)}.hyperChat .credit-amount,.livestream-comment__hyperchat-banner .credit-amount{color:var(--color-hyperchat-text)}.livestream__comment,.livestream__comment--mobile{list-style-type:none;position:relative}.livestream__comment .date_time,.livestream__comment--mobile .date_time{color:var(--color-text-subtitle);opacity:var(--live-timestamp-opacity)}[dir] .livestream__comment--mobile:not(.livestream__comment--hyperchat):hover,[dir] .livestream__comment:not(.livestream__comment--hyperchat):hover{background-color:rgba(var(--color-header-button-base),.3)}.livestream__comment--mobile:not(.livestream__comment--hyperchat):hover .date_time,.livestream__comment:not(.livestream__comment--hyperchat):hover .date_time{opacity:.5}.livestream__comment .comment__author:not(.comment__author--creator),.livestream__comment--mobile .comment__author:not(.comment__author--creator){color:rgba(var(--color-text-base),.6);max-width:calc(100% - 110px)}[dir] .livestream__comment .comment__author:not(.comment__author--creator),[dir] .livestream__comment--mobile .comment__author:not(.comment__author--creator){margin-top:var(--spacing-xxs)}.livestream__comment .comment__author:not(.comment__author--creator) .button__content,.livestream__comment--mobile .comment__author:not(.comment__author--creator) .button__content{max-width:unset}.livestream__comment .comment__author:not(.comment__author--creator):hover,.livestream__comment--mobile .comment__author:not(.comment__author--creator):hover{color:var(--color-primary)!important}@media(max-width:900px){.livestream__comment .comment__author:not(.comment__author--creator),.livestream__comment--mobile .comment__author:not(.comment__author--creator){max-width:unset}}.livestream__comment .channel-name,.livestream__comment--mobile .channel-name{color:var(--color-secondary)}.livestream__comment .channel-name:hover,.livestream__comment--mobile .channel-name:hover{color:var(--color-primary)}[dir] .livestream__comment .inline-player__wrapper,[dir] .livestream__comment--mobile .inline-player__wrapper{margin-top:var(--spacing-xxs)}@media(min-width:900px){.livestream__comment--mobile:not(:hover) .menu__button:not(:focus):not([aria-expanded=true]),.livestream__comment:not(:hover) .menu__button:not(:focus):not([aria-expanded=true]){opacity:0}}.livestream__comment .channel-name,.livestream__comment--mobile .channel-name{font-size:var(--font-xsmall)}.livestream__comment--mobile{display:flex;justify-content:space-between}.livestream__comment--mobile.livestream__comment--minimal .livestream-comment__menu{position:absolute}[dir=ltr] .livestream__comment--mobile.livestream__comment--minimal .livestream-comment__menu{right:0}[dir=rtl] .livestream__comment--mobile.livestream__comment--minimal .livestream-comment__menu{left:0}.livestream__comment--mobile .livestream-comment__menu{position:relative;top:4px!important}[dir] .livestream__comment--mobile .livestream-comment__menu{background-color:var(--color-background);border-radius:50%}[dir=ltr] .livestream__comment--mobile .livestream-comment__menu{right:4px!important}[dir=rtl] .livestream__comment--mobile .livestream-comment__menu{left:4px!important}.livestream__comment--mobile .livestream-comment__menu .menu__button{opacity:1}.livestream__comment--mobile .comment__author{color:var(--color-primary)}.livestream__comment--mobile p,.livestream__comment--mobile span{font-size:var(--font-xsmall)!important}[dir] .livestream__comment--mentioned{background-color:rgba(var(--color-header-background-base),.6)}.livestream__comment--hyperchat{display:unset}[dir] .livestream__comment--hyperchat{background-color:rgba(var(--color-text-base),.1);border:1px solid rgba(var(--color-text-base),.4);border-radius:var(--border-radius);margin:0 var(--spacing-xxxs);margin-top:var(--spacing-xs)}[dir=ltr] .livestream__comment--hyperchat{padding-left:0}[dir=rtl] .livestream__comment--hyperchat{padding-right:0}[dir] .livestream__comment--hyperchat+.livestream__comment--hyperchat{margin-bottom:var(--spacing-xxs)}.livestream__comment--hyperchat .livestream-comment__body{align-items:flex-start;display:flex;flex:unset;flex-direction:unset}[dir=ltr] .livestream__comment--hyperchat .livestream-comment__body{margin-left:3px}[dir=rtl] .livestream__comment--hyperchat .livestream-comment__body{margin-right:3px}[dir] .livestream__comment--hyperchat .livestream-comment__body .channel-thumbnail--xsmall,[dir] .livestream__comment--hyperchat .livestream-comment__body .freezeframe-wrapper{margin-top:var(--spacing-xxs)}[dir=ltr] .livestream__comment--hyperchat .livestream-comment__body .channel-thumbnail--xsmall,[dir=ltr] .livestream__comment--hyperchat .livestream-comment__body .freezeframe-wrapper{margin-left:var(--spacing-xs)}[dir=rtl] .livestream__comment--hyperchat .livestream-comment__body .channel-thumbnail--xsmall,[dir=rtl] .livestream__comment--hyperchat .livestream-comment__body .freezeframe-wrapper{margin-right:var(--spacing-xs)}.livestream__comment--hyperchat .button__content{color:var(--color-primary)}.livestream__comment--hyperchat .date_time{opacity:1}.livestream__comment--hyperchat .livestream-comment__menu{position:absolute;top:2px}[dir=ltr] .livestream__comment--hyperchat .livestream-comment__menu{right:6px}[dir=rtl] .livestream__comment--hyperchat .livestream-comment__menu{left:6px}.livestream__comment--hyperchat:before{content:\\\"\\\";display:none;height:100%;max-height:4rem;position:absolute;width:5px}[dir] .livestream__comment--hyperchat:before{background-color:var(--color-hyperchat)}[dir=ltr] .livestream__comment--hyperchat:before{border-bottom-right-radius:2px;border-top-right-radius:2px;left:0}[dir=rtl] .livestream__comment--hyperchat:before{border-bottom-left-radius:2px;border-top-left-radius:2px;right:0}[dir] .hyperchat-level1{background-color:rgba(255,162,54,.08)}[dir=ltr] .hyperchat-level1 .livestream-comment__hyperchat-banner{background-image:linear-gradient(90deg,#ffa236,transparent)}[dir=rtl] .hyperchat-level1 .livestream-comment__hyperchat-banner{background-image:linear-gradient(270deg,#ffa236,transparent)}[dir] .hyperchat-level2{background-color:rgba(247,122,61,.08);border:1px solid #f77a3d}[dir=ltr] .hyperchat-level2 .livestream-comment__hyperchat-banner{background-image:linear-gradient(90deg,#f77a3d,transparent)}[dir=rtl] .hyperchat-level2 .livestream-comment__hyperchat-banner{background-image:linear-gradient(270deg,#f77a3d,transparent)}[dir] .hyperchat-level3{background-color:rgba(239,81,67,.08);border:1px solid #ef5143}[dir=ltr] .hyperchat-level3 .livestream-comment__hyperchat-banner{background-image:linear-gradient(90deg,#ef5143,transparent)}[dir=rtl] .hyperchat-level3 .livestream-comment__hyperchat-banner{background-image:linear-gradient(270deg,#ef5143,transparent)}[dir] .hyperchat-level4{background-color:rgba(230,41,74,.08);border:1px solid #e6294a}[dir=ltr] .hyperchat-level4 .livestream-comment__hyperchat-banner{background-image:linear-gradient(90deg,#e6294a,transparent)}[dir=rtl] .hyperchat-level4 .livestream-comment__hyperchat-banner{background-image:linear-gradient(270deg,#e6294a,transparent)}[dir] .hyperchat-level5{background-color:rgba(222,0,80,.08);border:1px solid #de0050}[dir=ltr] .hyperchat-level5 .livestream-comment__hyperchat-banner{background-image:linear-gradient(90deg,#de0050,transparent)}[dir=rtl] .hyperchat-level5 .livestream-comment__hyperchat-banner{background-image:linear-gradient(270deg,#de0050,transparent)}.livestream-comment__body{align-items:flex-start;display:flex;overflow:hidden}[dir=ltr] .livestream-comment__body{margin-left:var(--spacing-s)}[dir=rtl] .livestream-comment__body{margin-right:var(--spacing-s)}.livestream-comment__body .channel-thumbnail{flex-shrink:0;height:2rem;width:2rem}[dir] .livestream-comment__body .channel-thumbnail{margin-top:var(--spacing-s)}.livestream-comment__body .channel-thumbnail .ff-canvas,.livestream-comment__body .channel-thumbnail .freezeframe-img{height:100%;width:100%}[dir] .livestream-comment__body .channel-thumbnail .ff-canvas,[dir] .livestream-comment__body .channel-thumbnail .freezeframe-img{border-radius:50%}[dir] .livestream-comment__body .livestream-comment--minimal .channel-thumbnail{margin-top:1px}@media(max-width:900px){[dir=ltr] .livestream-comment__body{margin-left:0}[dir=rtl] .livestream-comment__body{margin-right:0}}.livestream-comment__menu{height:20px;position:absolute;top:var(--spacing-xxs);width:20px}[dir=ltr] .livestream-comment__menu{right:var(--spacing-s)}[dir=rtl] .livestream-comment__menu{left:var(--spacing-s)}@media(min-width:900px){.livestream-comment__menu .menu__button{transition:transform .4s}[dir] .livestream-comment__menu .menu__button{background:var(--color-background);border:2px solid transparent;border-radius:50%;padding:2px}.livestream-comment__menu .menu__button .icon{height:16px;width:16px}.livestream-comment__menu [aria-expanded=true].menu__button{opacity:1}[dir] .livestream-comment__menu [aria-expanded=true].menu__button{background-color:rgba(var(--color-header-button-base),.9);border:2px solid var(--color-header-background)}[dir=ltr] .livestream-comment__menu [aria-expanded=true].menu__button{transform:rotate(90deg)}[dir=rtl] .livestream-comment__menu [aria-expanded=true].menu__button{transform:rotate(-90deg)}.livestream-comment__menu [aria-expanded=true].menu__button .icon{stroke:var(--color-primary)}}.livestream-comment__hyperchat-banner{display:inline-block;display:flex;position:relative;width:90%}[dir] .livestream-comment__hyperchat-banner{border-radius:0;padding:1px}[dir=ltr] .livestream-comment__hyperchat-banner{background-image:linear-gradient(to right,rgba(var(--color-text-base),.4),transparent);padding-left:0}[dir=rtl] .livestream-comment__hyperchat-banner{background-image:linear-gradient(to left,rgba(var(--color-text-base),.4),transparent);padding-right:0}[dir] .livestream-comment__hyperchat-banner .hyperChat,[dir] .livestream-comment__hyperchat-banner .livestream-comment__hyperchat-banner{background-color:var(--color-header-background)}.livestream-comment__hyperchat-banner .credit-amount{color:var(--color-text)}.livestream-comment__hyperchat-banner .credit-amount svg{height:var(--font-small)}[dir] .livestream-comment__hyperchat-banner .credit-amount svg{margin-bottom:-2px}[dir] .livestream-comment__text{padding-bottom:var(--spacing-xxs)}[dir=ltr] .livestream-comment__text{padding-right:var(--spacing-s)}[dir=rtl] .livestream-comment__text{padding-left:var(--spacing-s)}.livestream-comment__text .markdown-preview h1,.livestream-comment__text .markdown-preview h2,.livestream-comment__text .markdown-preview h3,.livestream-comment__text .markdown-preview h4,.livestream-comment__text .markdown-preview h5,.livestream-comment__text .markdown-preview h6,.livestream-comment__text .markdown-preview li,.livestream-comment__text .markdown-preview p,.livestream-comment__text .markdown-preview td,.livestream-comment__text .markdown-preview th,.livestream-comment__text .markdown-preview tr{word-break:break-word}[dir=ltr] .livestream-comment__text .markdown-preview .task-list-item{margin-left:var(--spacing-m)}[dir=rtl] .livestream-comment__text .markdown-preview .task-list-item{margin-right:var(--spacing-m)}.livestream-comment__text .markdown-preview .task-list-item input[type=checkbox]{height:26px;width:18px}[dir] .livestream-comment__text .markdown-preview .task-list-item input[type=checkbox]{border:2px solid var(--color-border);margin-bottom:-8px}[dir=ltr] .livestream-comment__text .markdown-preview .task-list-item input[type=checkbox]{margin-right:var(--spacing-xxxs)}[dir=rtl] .livestream-comment__text .markdown-preview .task-list-item input[type=checkbox]{margin-left:var(--spacing-xxxs)}.livestream-comment__text .markdown-preview .channel-name{font-size:var(--font-small)}.livestream-comment__text .markdown-preview .button--link .icon{flex-shrink:0}.livestream-comment__text .markdown-preview .menu__button{color:var(--color-primary);opacity:1!important}.livestream-comment__text .markdown-preview .menu__button:hover{color:var(--color-primary)}.livestream-comment__text .markdown-preview .comment__badge{display:none}.livestream-comment__text .markdown-preview .emote{max-height:1.1rem;max-width:1.1rem}[dir] .livestream__members-only-message{border:2px width;border-radius:var(--border-radius);padding:var(--spacing-xxxs) var(--spacing-xs)}[dir=ltr] .livestream__members-only-message{background-image:linear-gradient(147deg,rgba(var(--color-primary-static),.2),rgba(242,121,55,.6))}[dir=rtl] .livestream__members-only-message{background-image:linear-gradient(-147deg,rgba(var(--color-primary-static),.2),rgba(242,121,55,.6))}.livestream__members-only-message .icon--Membership{height:24px!important;width:24px!important}[dir] .livestream__members-only-message .icon--Membership{border-radius:50%;margin-bottom:-6px;padding:3px}[dir=ltr] .livestream__members-only-message .icon--Membership{background-image:linear-gradient(147deg,rgba(var(--color-primary-static),1),#f27937);margin-right:var(--spacing-xs)}[dir=rtl] .livestream__members-only-message .icon--Membership{background-image:linear-gradient(-147deg,rgba(var(--color-primary-static),1),#f27937);margin-left:var(--spacing-xs)}.livestream__members-only-message .icon--Unlock{color:#91f92d;display:inline;height:24px;overflow:visible;width:24px}[dir] .livestream__members-only-message .icon--Unlock{background:var(--color-header-background);border-radius:50%;padding:4px}[dir=ltr] .livestream__members-only-message .icon--Unlock{float:right}[dir=rtl] .livestream__members-only-message .icon--Unlock{float:left}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../ui/scss/init/_mixins.scss\",\"webpack://./../ui/scss/component/_superchat.scss\",\"webpack://./../ui/scss/component/_livestream-comment.scss\"],\"names\":[],\"mappings\":\"AA8LA,kCACE,uCAAA,CC/LF,iDAOE,mCAAA,CADA,4BAAA,CADA,mCAEA,CAPF,6DAEE,0FAAA,CACA,6BAAA,CACA,4BAGA,CAPF,qEACE,8EAMA,CAPF,qEACE,8EAMA,CAEA,+EACE,iCAAA,CCNJ,kDACE,oBAAA,CACA,iBAAA,CAEA,wEACE,gCAAA,CACA,qCAAA,CAGF,oJACE,yDAAA,CAEA,8JACE,UAAA,CAIJ,kJACE,qCAAA,CAEA,4BAAA,CAHF,8JAEE,6BACA,CAEA,oLACE,eAAA,CAGF,8JACE,oCAAA,CAGF,wBAbF,kJAcI,eAAA,CAAA,CAIJ,8EACE,4BAAA,CACA,0FACE,0BAAA,CAIJ,8GACE,6BAAA,CAGF,wBAEI,kLACE,SAAA,CAAA,CAKN,8EACE,4BAAA,CAIJ,6BAGE,YAAA,CACA,6BAAA,CAIE,oFACE,iBACA,CAFF,8FAEE,OAAA,CAFF,8FAEE,MAAA,CAIJ,uDACE,iBAAA,CACA,iBAGA,CALF,6DAIE,wCAAA,CACA,iBAAA,CALF,iEAGE,mBAEA,CALF,iEAGE,kBAEA,CACA,qEACE,SAAA,CAIJ,8CACE,0BAAA,CAGF,iEAEE,sCAAA,CAIJ,sCACE,6DAAA,CAGF,gCAIE,aAGA,CAPF,sCACE,gDAAA,CAMA,gDAAA,CADA,kCAAA,CAJA,4BAAA,CACA,4BAIA,CAPF,0CAKE,cAEA,CAPF,0CAKE,eAEA,CAEA,sEACE,gCAAA,CAGF,0DAEE,sBAAA,CADA,YAAA,CAGA,UAAA,CADA,oBAEA,CALF,oEAKE,eAAA,CALF,oEAKE,gBAAA,CAEA,gLAGE,6BAAA,CAHF,wLAEE,6BACA,CAHF,wLAEE,8BACA,CAIJ,iDACE,0BAAA,CAGF,2CACE,SAAA,CAEF,0DACE,iBAAA,CACA,OACA,CAHF,oEAGE,SAAA,CAHF,oEAGE,QAAA,CAGF,uCAUE,UAAA,CATA,YAAA,CAGA,WAAA,CACA,eAAA,CAHA,iBAAA,CAMA,SAEA,CAVF,6CASE,uCACA,CAVF,iDAOE,8BAAA,CADA,2BAAA,CAHA,MAOA,CAVF,iDAOE,6BAAA,CADA,0BAAA,CAHA,OAOA,CAIJ,wBACE,qCAAA,CACA,kEACE,2DAAA,CADF,kEACE,4DAAA,CAIJ,wBAEE,qCAAA,CADA,wBACA,CACA,kEACE,2DAAA,CADF,kEACE,4DAAA,CAIJ,wBAEE,oCAAA,CADA,wBACA,CACA,kEACE,2DAAA,CADF,kEACE,4DAAA,CAIJ,wBAEE,oCAAA,CADA,wBACA,CACA,kEACE,2DAAA,CADF,kEACE,4DAAA,CAIJ,wBAEE,mCAAA,CADA,wBACA,CACA,kEACE,2DAAA,CADF,kEACE,4DAAA,CAIJ,0BAEE,sBAAA,CADA,YAAA,CAGA,eAAA,CAJF,oCAGE,4BACA,CAJF,oCAGE,6BACA,CAEA,6CAGE,aAAA,CF6BF,WE/B4B,CFgC5B,UE9BE,CAHF,mDAEE,2BACA,CFgCF,sHAIE,WAAA,CADA,UACA,CAJF,kIAEE,iBAEA,CEhCA,gFACE,cAAA,CAIJ,wBAlBF,oCAmBI,aAAA,CAnBJ,oCAmBI,cAAA,CAAA,CAIJ,0BAKE,WAAA,CAJA,iBAAA,CAEA,sBAAA,CACA,UACA,CALF,oCAEE,sBAGA,CALF,oCAEE,qBAGA,CAEA,wBACE,wCAKE,wBAAA,CALF,8CACE,kCAAA,CAGA,4BAAA,CAFA,iBAAA,CACA,WAEA,CACA,8CAEE,WAAA,CADA,UACA,CAGJ,4DACE,SAGA,CAJF,kEAEE,yDAAA,CACA,+CACA,CAJF,sEAIE,uBAAA,CAJF,sEAIE,wBAAA,CACA,kEACE,2BAAA,CAAA,CAMR,sCAIE,oBAAA,CAMA,YAAA,CALA,iBAAA,CACA,SAIA,CAVF,4CAGE,eAAA,CAKA,WAEA,CAVF,gDAOE,sFAAA,CAEA,cACA,CAVF,gDAOE,qFAAA,CAEA,eACA,CAEA,yIACE,+CAAA,CAGF,qDACE,uBAAA,CACA,yDACE,wBACA,CAFF,+DAEE,kBAAA,CAKN,gCAEE,iCAAA,CAFF,oCACE,8BACA,CAFF,oCACE,6BACA,CAGE,ogBAWE,qBAAA,CAGF,sEACE,4BAAA,CADF,sEACE,6BAAA,CACA,iFACE,WAAA,CACA,UAGA,CALF,uFAKE,oCAAA,CAFA,kBAEA,CALF,2FAIE,gCACA,CALF,2FAIE,+BACA,CAIJ,0DACE,2BAAA,CAIA,gEACE,aAAA,CAIJ,0DAEE,0BAAA,CADA,mBACA,CACA,gEACE,0BAAA,CAIJ,4DACE,YAAA,CAGF,mDAEE,iBAAA,CADA,gBACA,CAKN,wCAKE,gBAAA,CAJA,kCAAA,CACA,6CAGA,CALF,4CAGE,iGAEA,CALF,4CAGE,kGAEA,CAEA,oDAOE,qBAAA,CADA,oBACA,CAPF,0DAIE,iBAAA,CAFA,kBAAA,CAGA,WAEA,CAPF,8DAGE,oFAAA,CAFA,8BAMA,CAPF,8DAGE,qFAAA,CAFA,6BAMA,CAGF,gDAOE,aAAA,CANA,cAAA,CAGA,WAAA,CAKA,gBAAA,CANA,UAMA,CATF,sDAME,yCAAA,CADA,iBAAA,CAGA,WACA,CATF,0DAEE,WAOA,CATF,0DAEE,UAOA\",\"sourcesContent\":[\"@mixin between {\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n@mixin breakpoint-max($breakpoint) {\\n  @media (max-width: #{$breakpoint}px) {\\n    @content;\\n  }\\n}\\n\\n@mixin breakpoint-min($breakpoint) {\\n  @media (min-width: #{$breakpoint}px) {\\n    @content;\\n  }\\n}\\n\\n@mixin center {\\n  align-items: center;\\n  display: inline-flex;\\n  justify-content: center;\\n}\\n\\n@mixin clearfix {\\n  clear: both;\\n  content: '';\\n  display: block;\\n}\\n\\n// (Smart) text truncation\\n// Pass in a width to customize how much text is allowed\\n// Omit value for basic text truncation\\n@mixin constrict($value: null) {\\n  @if ($value) {\\n    max-width: $value;\\n  }\\n\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\\n@mixin create-grid($items-per-row: 4) {\\n  grid-template: repeat(1, 1fr) / repeat($items-per-row, 1fr);\\n}\\n\\n// Smart font include\\n// Simply pass in the font-weight you want to use and the normal/italicized versions will be added\\n// No more weighing down the front-end with references to unused weights\\n@mixin font-face($font-weight, $relative-font-path, $font-name) {\\n  @font-face {\\n    font-family: $font-name;\\n    font-style: normal;\\n    font-weight: $font-weight;\\n    // sass-lint:disable indentation\\n    src: url('#{$relative-font-path}/#{$font-weight}.woff2') format('woff2'),\\n      url('#{$relative-font-path}/#{$font-weight}.woff') format('woff');\\n    // sass-lint:enable indentation\\n  }\\n\\n  @font-face {\\n    font-family: $font-name;\\n    font-style: italic;\\n    font-weight: $font-weight;\\n    // sass-lint:disable indentation\\n    src: url('#{$relative-font-path}/#{$font-weight}i.woff2') format('woff2'),\\n      url('#{$relative-font-path}/#{$font-weight}i.woff') format('woff');\\n    // sass-lint:enable indentation\\n  }\\n}\\n\\n@mixin font-mono {\\n  font-family: 'Fira Code', 'Courier New', monospace;\\n}\\n\\n@mixin font-sans {\\n  font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif,\\n    'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\\n}\\n\\n@mixin font-serif {\\n  font-family: Georgia, serif;\\n}\\n\\n@mixin hide-text {\\n  border: none;\\n  color: transparent;\\n  font: 0 / 0 a;\\n  text-shadow: none;\\n}\\n\\n// Cross-browser line-clamp support\\n@mixin line-clamp($element-height: 2rem, $row-count: 2, $fade-color: var(--lbry-white), $computed-position: relative) {\\n  height: $element-height;\\n  overflow: hidden;\\n  position: $computed-position;\\n\\n  &::after {\\n    width: 50%;\\n    height: calc(#{$element-height} / #{$row-count});\\n    right: 0;\\n    bottom: 0;\\n\\n    background-image: linear-gradient(to right, rgba($lbry-white, 0), #{$fade-color} 80%);\\n    content: '';\\n    position: absolute;\\n  }\\n}\\n\\n@mixin no-user-select {\\n  user-select: none;\\n\\n  -ms-user-select: none;\\n  -moz-user-select: none;\\n  -webkit-user-select: none;\\n}\\n\\n// Use CSS variables without upsetting Sass-Lint\\n// https://github.com/sasstools/sass-lint/issues/1161#issuecomment-390537190\\n@mixin root-prop($prop: null, $value: null) {\\n  @if ($prop and $value) {\\n    #{$prop}: $value;\\n  }\\n}\\n\\n@mixin selection($background-color: var(--lbry-white), $text-color: var(--lbry-black)) {\\n  &::selection {\\n    background-color: $background-color;\\n    color: $text-color;\\n    text-shadow: none;\\n  }\\n\\n  &::-moz-selection {\\n    background-color: $background-color;\\n    color: $text-color;\\n    text-shadow: none;\\n  }\\n}\\n\\n@mixin thumbnail {\\n  &::before,\\n  &::after {\\n    content: '';\\n  }\\n\\n  &::before {\\n    float: left;\\n    padding-top: var(--aspect-ratio-standard);\\n  }\\n\\n  &::after {\\n    clear: both;\\n    display: block;\\n  }\\n}\\n\\n@mixin linkFocus {\\n  background-color: var(--color-link-focus-bg);\\n}\\n\\n@mixin underline($text-color: var(--lbry-black), $whitespace-color: var(--lbry-white)) {\\n  @include selection($text-color, $whitespace-color);\\n\\n  background-image: linear-gradient($whitespace-color, $whitespace-color),\\n    linear-gradient($whitespace-color, $whitespace-color), linear-gradient($text-color, $text-color);\\n  background-position: 0 88%, 100% 88%, 0 88%;\\n  background-repeat: no-repeat, no-repeat, repeat-x;\\n  background-size: 0.05rem 1px, 0.05rem 1px, 1px 1px;\\n  box-decoration-break: clone;\\n  display: inline;\\n  text-decoration: none;\\n  text-shadow: 0.03rem 0 $whitespace-color, -0.03rem 0 $whitespace-color, 0 0.03rem $whitespace-color,\\n    0 -0.03rem $whitespace-color, 0.06rem 0 $whitespace-color, -0.06rem 0 $whitespace-color, 0.09rem 0 $whitespace-color,\\n    -0.09rem 0 $whitespace-color, 0.12rem 0 $whitespace-color, -0.12rem 0 $whitespace-color, 0.15rem 0 $whitespace-color,\\n    -0.15rem 0 $whitespace-color;\\n\\n  @-moz-document url-prefix() {\\n    // sass-lint:disable-line empty-args\\n    background-position: 0 90%, 100% 90%, 0 90%;\\n  }\\n}\\n\\n@mixin placeholder {\\n  // Temporary fix for lags in Chromium based browsers\\n  //animation: pulse 2s infinite ease-in-out;\\n  background-color: var(--color-placeholder-background);\\n  border-radius: var(--card-radius);\\n  border-width: 0;\\n}\\n\\n.pulse {\\n  animation: pulse 2s infinite ease-in-out;\\n}\\n\\n@mixin mediaThumbHoverZoom {\\n  .media__thumb,\\n  img {\\n    transition: all 0.2s ease;\\n  }\\n\\n  &:hover {\\n    .media__thumb,\\n    img {\\n      transform: scale(1.05);\\n    }\\n  }\\n}\\n\\n@mixin list-hover-effect {\\n  &:hover {\\n    background-color: rgba(var(--color-primary-dynamic), 0.1);\\n  }\\n}\\n\\n@mixin handleClaimTileGifThumbnail($width) {\\n  .ff-canvas,\\n  .freezeframe-img {\\n    // height: calc(#{$width} * (9 / 16)) !important;\\n    // width: $width;\\n    border-bottom-left-radius: 0;\\n    border-bottom-right-radius: 0;\\n  }\\n}\\n\\n@mixin handleClaimListGifThumbnail($width) {\\n  .ff-canvas,\\n  .freezeframe-img {\\n    // height: calc(#{$width} * (9 / 16)) !important;\\n    // width: $width;\\n  }\\n}\\n\\n@mixin handleChannelGif($size) {\\n  height: $size;\\n  width: $size;\\n\\n  .ff-canvas,\\n  .freezeframe-img {\\n    border-radius: 50%;\\n    width: 100%;\\n    height: 100%;\\n    // height: $size !important;\\n    // width: $size !important;\\n  }\\n}\\n\\n@mixin tier-restriction-checkbox {\\n  display: inline-block;\\n  margin-top: 0;\\n  margin-right: var(--spacing-s);\\n\\n  label {\\n    padding: var(--spacing-xxxs) var(--spacing-s);\\n    border-radius: var(--border-radius);\\n    &::before,\\n    &::after {\\n      display: none;\\n    }\\n  }\\n\\n  input[type='checkbox'] + label {\\n    opacity: 0.8;\\n    &:hover {\\n      opacity: 1;\\n    }\\n  }\\n  input[type='checkbox']:checked + label {\\n    opacity: 1;\\n  }\\n\\n  &:nth-of-type(1) {\\n    input[type='checkbox'] + label {\\n      border: 2px solid rgba(var(--color-membership-1), 0.6);\\n      background-color: rgba(var(--color-membership-1), 0.2);\\n      &:hover {\\n        background-color: rgba(var(--color-membership-1), 0.4);\\n      }\\n    }\\n    input[type='checkbox']:checked + label {\\n      background-color: rgba(var(--color-membership-1), 1);\\n    }\\n  }\\n  &:nth-of-type(2) {\\n    input[type='checkbox'] + label {\\n      border: 2px solid rgba(var(--color-membership-2), 0.6);\\n      background-color: rgba(var(--color-membership-2), 0.2);\\n      &:hover {\\n        background-color: rgba(var(--color-membership-2), 0.4);\\n      }\\n    }\\n    input[type='checkbox']:checked + label {\\n      background-color: rgba(var(--color-membership-2), 1);\\n    }\\n  }\\n  &:nth-of-type(3) {\\n    input[type='checkbox'] + label {\\n      border: 2px solid rgba(var(--color-membership-3), 0.6);\\n      background-color: rgba(var(--color-membership-3), 0.2);\\n      &:hover {\\n        background-color: rgba(var(--color-membership-3), 0.4);\\n      }\\n    }\\n    input[type='checkbox']:checked + label {\\n      background-color: rgba(var(--color-membership-3), 1);\\n    }\\n  }\\n  &:nth-of-type(4) {\\n    input[type='checkbox'] + label {\\n      border: 2px solid rgba(var(--color-membership-4), 0.6);\\n      background-color: rgba(var(--color-membership-4), 0.2);\\n      &:hover {\\n        background-color: rgba(var(--color-membership-4), 0.4);\\n      }\\n    }\\n    input[type='checkbox']:checked + label {\\n      background-color: rgba(var(--color-membership-4), 1);\\n    }\\n  }\\n  &:nth-of-type(5) {\\n    input[type='checkbox'] + label {\\n      border: 2px solid rgba(var(--color-membership-5), 0.6);\\n      background-color: rgba(var(--color-membership-5), 0.2);\\n      &:hover {\\n        background-color: rgba(var(--color-membership-5), 0.4);\\n      }\\n    }\\n    input[type='checkbox']:checked + label {\\n      background-color: rgba(var(--color-membership-5), 1);\\n    }\\n  }\\n  &:nth-of-type(6) {\\n    input[type='checkbox'] + label {\\n      border: 2px solid rgba(var(--color-membership-6), 0.6);\\n      background-color: rgba(var(--color-membership-6), 0.2);\\n\\n      &:hover {\\n        background-color: rgba(var(--color-membership-6), 0.4);\\n      }\\n    }\\n    input[type='checkbox']:checked + label {\\n      background-color: rgba(var(--color-membership-6), 1);\\n    }\\n  }\\n}\\n\\n@mixin border-std {\\n  border: 1px solid var(--color-border);\\n  border-radius: var(--card-radius);\\n}\\n\",\".hyperChat {\\n  border-radius: var(--border-radius) var(--border-radius) var(--border-radius) 0;\\n  background-color: linear-gradient(to right, var(--color-hyperchat), var(--color-hyperchat-3));\\n  padding: 4px var(--spacing-xs);\\n  padding-bottom: 2px !important;\\n  font-weight: var(--font-weight-bold);\\n  font-size: var(--font-xsmall);\\n  color: var(--color-primary-contrast);\\n\\n  .credit-amount {\\n    color: var(--color-hyperchat-text);\\n  }\\n}\\n\",\"@import '../init/breakpoints';\\n@import '../init/mixins';\\n@import '../component/superchat';\\n\\n.livestream__comment {\\n  list-style-type: none;\\n  position: relative;\\n\\n  .date_time {\\n    color: var(--color-text-subtitle);\\n    opacity: var(--live-timestamp-opacity);\\n  }\\n\\n  &:not(.livestream__comment--hyperchat):hover {\\n    background-color: rgba(var(--color-header-button-base), 0.3);\\n\\n    .date_time {\\n      opacity: 0.5;\\n    }\\n  }\\n\\n  .comment__author:not(.comment__author--creator) {\\n    color: rgba(var(--color-text-base), 0.6);\\n    margin-top: var(--spacing-xxs);\\n    max-width: calc(100% - 110px);\\n\\n    .button__content {\\n      max-width: unset;\\n    }\\n\\n    &:hover {\\n      color: var(--color-primary) !important;\\n    }\\n\\n    @media (max-width: $breakpoint-small) {\\n      max-width: unset;\\n    }\\n  }\\n\\n  .channel-name {\\n    color: var(--color-secondary);\\n    &:hover {\\n      color: var(--color-primary);\\n    }\\n  }\\n\\n  .inline-player__wrapper {\\n    margin-top: var(--spacing-xxs);\\n  }\\n\\n  @media (min-width: $breakpoint-small) {\\n    &:not(:hover) {\\n      .menu__button:not(:focus):not([aria-expanded='true']) {\\n        opacity: 0;\\n      }\\n    }\\n  }\\n\\n  .channel-name {\\n    font-size: var(--font-xsmall);\\n  }\\n}\\n\\n.livestream__comment--mobile {\\n  @extend .livestream__comment;\\n\\n  display: flex;\\n  justify-content: space-between;\\n  // padding: 0;\\n\\n  &.livestream__comment--minimal {\\n    .livestream-comment__menu {\\n      position: absolute;\\n      right: 0;\\n    }\\n  }\\n\\n  .livestream-comment__menu {\\n    position: relative;\\n    top: 4px !important;\\n    right: 4px !important;\\n    background-color: var(--color-background);\\n    border-radius: 50%;\\n    .menu__button {\\n      opacity: 1;\\n    }\\n  }\\n\\n  .comment__author {\\n    color: var(--color-primary);\\n  }\\n\\n  span,\\n  p {\\n    font-size: var(--font-xsmall) !important;\\n  }\\n}\\n\\n.livestream__comment--mentioned {\\n  background-color: rgba(var(--color-header-background-base), 0.6);\\n}\\n\\n.livestream__comment--hyperchat {\\n  background-color: rgba(var(--color-text-base), 0.1);\\n  margin: 0 var(--spacing-xxxs);\\n  margin-top: var(--spacing-xs);\\n  display: unset;\\n  padding-left: 0;\\n  border-radius: var(--border-radius);\\n  border: 1px solid rgba(var(--color-text-base), 0.4);\\n\\n  + .livestream__comment--hyperchat {\\n    margin-bottom: var(--spacing-xxs);\\n  }\\n\\n  .livestream-comment__body {\\n    display: flex;\\n    align-items: flex-start;\\n    flex-direction: unset;\\n    flex: unset;\\n    margin-left: 3px;\\n\\n    .freezeframe-wrapper,\\n    .channel-thumbnail--xsmall {\\n      margin-left: var(--spacing-xs);\\n      margin-top: var(--spacing-xxs);\\n    }\\n  }\\n\\n  .button__content {\\n    color: var(--color-primary);\\n  }\\n\\n  .date_time {\\n    opacity: 1;\\n  }\\n  .livestream-comment__menu {\\n    position: absolute;\\n    top: 2px;\\n    right: 6px;\\n  }\\n\\n  &::before {\\n    display: none;\\n    position: absolute;\\n    left: 0;\\n    height: 100%;\\n    max-height: 4rem;\\n    border-top-right-radius: 2px;\\n    border-bottom-right-radius: 2px;\\n    width: 5px;\\n    background-color: var(--color-hyperchat);\\n    content: '';\\n  }\\n}\\n\\n.hyperchat-level1 {\\n  background-color: rgba(mix(#de0050, #ffa236, 0%), 0.08);\\n  .livestream-comment__hyperchat-banner {\\n    background-image: linear-gradient(to right, mix(#de0050, #ffa236, 0%), transparent);\\n  }\\n}\\n\\n.hyperchat-level2 {\\n  border: 1px solid mix(#de0050, #ffa236, 25%);\\n  background-color: rgba(mix(#de0050, #ffa236, 25%), 0.08);\\n  .livestream-comment__hyperchat-banner {\\n    background-image: linear-gradient(to right, mix(#de0050, #ffa236, 25%), transparent);\\n  }\\n}\\n\\n.hyperchat-level3 {\\n  border: 1px solid mix(#de0050, #ffa236, 50%);\\n  background-color: rgba(mix(#de0050, #ffa236, 50%), 0.08);\\n  .livestream-comment__hyperchat-banner {\\n    background-image: linear-gradient(to right, mix(#de0050, #ffa236, 50%), transparent);\\n  }\\n}\\n\\n.hyperchat-level4 {\\n  border: 1px solid mix(#de0050, #ffa236, 75%);\\n  background-color: rgba(mix(#de0050, #ffa236, 75%), 0.08);\\n  .livestream-comment__hyperchat-banner {\\n    background-image: linear-gradient(to right, mix(#de0050, #ffa236, 75%), transparent);\\n  }\\n}\\n\\n.hyperchat-level5 {\\n  border: 1px solid mix(#de0050, #ffa236, 100%);\\n  background-color: rgba(mix(#de0050, #ffa236, 100%), 0.08);\\n  .livestream-comment__hyperchat-banner {\\n    background-image: linear-gradient(to right, mix(#de0050, #ffa236, 100%), transparent);\\n  }\\n}\\n\\n.livestream-comment__body {\\n  display: flex;\\n  align-items: flex-start;\\n  margin-left: var(--spacing-s);\\n  overflow: hidden;\\n\\n  .channel-thumbnail {\\n    @include handleChannelGif(2rem);\\n    margin-top: var(--spacing-s);\\n    flex-shrink: 0;\\n  }\\n\\n  .livestream-comment--minimal {\\n    .channel-thumbnail {\\n      margin-top: 1px;\\n    }\\n  }\\n\\n  @media (max-width: $breakpoint-small) {\\n    margin-left: 0;\\n  }\\n}\\n\\n.livestream-comment__menu {\\n  position: absolute;\\n  right: var(--spacing-s);\\n  top: var(--spacing-xxs);\\n  width: 20px;\\n  height: 20px;\\n\\n  @media (min-width: $breakpoint-small) {\\n    .menu__button {\\n      background: var(--color-background);\\n      border-radius: 50%;\\n      padding: 2px;\\n      border: 2px solid transparent;\\n      transition: transform 0.4s;\\n      .icon {\\n        width: 16px;\\n        height: 16px;\\n      }\\n    }\\n    [aria-expanded='true'].menu__button {\\n      opacity: 1;\\n      background-color: rgba(var(--color-header-button-base), 0.9);\\n      border: 2px solid var(--color-header-background);\\n      transform: rotate(90deg);\\n      .icon {\\n        stroke: var(--color-primary);\\n      }\\n    }\\n  }\\n}\\n\\n.livestream-comment__hyperchat-banner {\\n  @extend .hyperChat;\\n\\n  border-radius: 0;\\n  display: inline-block;\\n  position: relative;\\n  width: 90%;\\n  background-image: linear-gradient(to right, rgba(var(--color-text-base), 0.4), transparent);\\n  padding: 1px;\\n  padding-left: 0;\\n  display: flex;\\n\\n  .hyperChat {\\n    background-color: var(--color-header-background);\\n  }\\n\\n  .credit-amount {\\n    color: var(--color-text);\\n    svg {\\n      height: var(--font-small);\\n      margin-bottom: -2px;\\n    }\\n  }\\n}\\n\\n.livestream-comment__text {\\n  padding-right: var(--spacing-s);\\n  padding-bottom: var(--spacing-xxs);\\n\\n  .markdown-preview {\\n    p,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    tr,\\n    th,\\n    td,\\n    li {\\n      word-break: break-word;\\n    }\\n\\n    .task-list-item {\\n      margin-left: var(--spacing-m);\\n      input[type='checkbox'] {\\n        height: 26px;\\n        width: 18px;\\n        margin-bottom: -8px;\\n        margin-right: var(--spacing-xxxs);\\n        border: 2px solid var(--color-border);\\n      }\\n    }\\n\\n    .channel-name {\\n      font-size: var(--font-small);\\n    }\\n\\n    .button--link {\\n      .icon {\\n        flex-shrink: 0;\\n      }\\n    }\\n\\n    .menu__button {\\n      opacity: 1 !important;\\n      color: var(--color-primary);\\n      &:hover {\\n        color: var(--color-primary);\\n      }\\n    }\\n\\n    .comment__badge {\\n      display: none;\\n    }\\n\\n    .emote {\\n      max-width: 1.1rem;\\n      max-height: 1.1rem;\\n    }\\n  }\\n}\\n\\n.livestream__members-only-message {\\n  border-radius: var(--border-radius);\\n  padding: var(--spacing-xxxs) var(--spacing-xs);\\n  background-image: linear-gradient(147deg, rgba(var(--color-primary-static), 0.2), rgba(242, 121, 55, 0.6));\\n  border: 2px solid var(--color-primary);\\n  border: width 2px;\\n\\n  .icon--Membership {\\n    margin-right: var(--spacing-xs);\\n    margin-bottom: -6px;\\n    background-image: linear-gradient(147deg, rgba(var(--color-primary-static), 1), rgba(242, 121, 55, 1));\\n    border-radius: 50%;\\n    padding: 3px;\\n    width: 24px !important;\\n    height: 24px !important;\\n  }\\n\\n  .icon--Unlock {\\n    display: inline;\\n    float: right;\\n    width: 24px;\\n    height: 24px;\\n    border-radius: 50%;\\n    background: var(--color-header-background);\\n    color: #91f92d;\\n    padding: 4px;\\n    overflow: visible;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","ChatCommentContext","React","connect","state","props","uri","comment","authorUri","channel_url","channelId","channel_id","authorTitle","selectTitleForUri","channelAge","selectDateForUri","activeChannelClaim","selectActiveChannelClaim","claim","selectClaimForUri","creatorId","getChannelIdFromClaim","stakedLevel","selectStakedLevelForChannelUri","claimsByUri","selectClaimsByUri","odyseeMembership","selectOdyseeMembershipForChannelId","creatorMembership","selectMembershipForCreatorOnlyIdAndChannelId","forceUpdate","isMobile","handleDismissPin","restoreScrollPos","handleCommentClick","isCompact","commentId","comment_id","message","isFiat","is_fiat","isGlobalMod","is_global_mod","isModerator","is_moderator","isPinned","is_pinned","removed","supportAmount","support_amount","timestamp","isSprout","Math","round","Date","_React$useState2","_slicedToArray","exchangeRate","setExchangeRate","Lbryio","then","_ref","LBC_USD","basedAmount","_React$useState4","hasUserMention","setUserMention","isStreamer","signing_channel","permanent_url","authorName","parseURI","claimName","stickerUrlFromMessage","getStickerUrl","isSticker","Boolean","timePosted","commentIsMine","claim_id","showTimestamps","usePersistedState","className","classnames","CreditAmount","amount","hyperChat","ChannelThumbnail","xsmall","Menu","MenuButton","onClick","e","stopPropagation","CommentMenuList","isTopLevel","disableEdit","disableRemove","isLiveComment","setQuickReply","CommentBadge","label","__","icon","ICONS","size","MembershipBadge","membershipName","linkPage","Icon","DateTime","date","timeAgo","key","genericSeconds","OptimizedImage","src","waitLoad","loading","Empty","text","Provider","value","MarkdownPreview","content","promptLinks","disableTimestamps","hasMembership","isComment","xxxsmall","isMinimal","UPDATE_TIMESTAMP_MS","comments","viewMode","fetchingComments","selectIsFetchingComments","resolvingSuperchats","VIEW_MODES","SUPERCHAT","some","selectIsUriResolving","setResolvingSuperChats","setHoverLock","setForceUpdate","now","shouldRefreshTimestamp","timer","setTimeout","clearTimeout","Spinner","length","commentProps","slice","reverse","map","ChatComment","_extends","onMouseEnter","onMouseLeave","style","flex","LivestreamHyperchats","hyperChatsByAmount","superChats","hyperchatsHidden","toggleHyperChat","handleHyperchatClick","selectedHyperchat","superChatTopTen","stickerSuperChats","filter","_ref2","parseSticker","showMore","elRef","Slider","ref","includes","active","xxsmall","showMemberBadge","hideTitle","Button","title","button","iconRight","sliderProps","children","Slide","direction","in","mountOnEnter","unmountOnExit","CHAT","COMMENT_SCROLL_TIMEOUT","CommentCreate","lazyImport","ChatContentToggle","toggleMode","_onClick","perform","doCommentList","doHyperChatList","doResolveUris","doFetchOdyseeMembershipForChannelIds","doFetchChannelMembershipsForChannelIds","doListAllMyMembershipTiers","claimId","selectTopLevelCommentsForUri","MAX_LIVESTREAM_COMMENTS","pinnedComments","selectPinnedCommentsForUri","selectHyperChatsForUri","channelTitle","getChannelTitleFromClaim","myChannelClaims","selectMyChannelClaims","contentUnlocked","selectNoRestrictionOrUserIsMemberForContentClaimId","isLivestreamChatMembersOnly","selectLivestreamChatMembersOnlyForChannelId","userHasMembersOnlyChatPerk","selectUserIsMemberOfMembersOnlyChatForCreatorId","chatUnlocked","selectNoRestrictionOrUserCanChatForCreatorId","commentsByChronologicalOrder","customViewMode","embed","hideHeader","isPopoutWindow","setCustomViewMode","setLayoutRendered","useIsMobile","isLimitedPopout","webElement","document","querySelector","mobileElement","discussionElement","allCommentsElem","querySelectorAll","lastCommentElem","setViewMode","scrollPos","setScrollPos","_React$useState6","showPinned","setShowPinned","_React$useState8","resolvingSuperChats","_React$useState10","undefined","openedPopoutWindow","_setPopoutWindow","_React$useState12","chatHidden","setChatHidden","_React$useState14","didInitialScroll","setDidInitialScroll","_React$useState16","minScrollHeight","setMinScrollHeight","_React$useState18","keyboardOpened","setKeyboardOpened","_React$useState20","superchatsAmount","setSuperchatsAmount","_React$useState22","chatElement","setChatElement","_React$useState24","textInjection","setTextInjection","_React$useState26","hideHyperchats","sethideHyperchats","_React$useState28","setSelectedHyperchat","_usePersistedState2","setIsCompact","superChatsByChronologicalOrder","forEach","chat","push","sort","a","b","commenterClaimIds","commentsToDisplay","commentsLength","pinnedComment","_getTipValues","getTipValues","superChatsChannelUrls","superChatsFiatAmount","superChatsLBCAmount","scrolledPastRecent","scrollTop","paddingBottom","scrollHeight","pos","getBoundingClientRect","height","notAuthedToLiveChat","hasNewSuperchats","handleScroll","addEventListener","removeEventListener","membersOnlyMessage","Tooltip","channel_name","display","Yrbl","actions","close","isLivestream","bottom","disableInput","toggleProps","toggleClick","LivestreamMenu","hideChat","setPopoutWindow","v","toggleHyperchats","toggleIsCompact","noHyperchats","hyperchat","ChatComments","onDoneReplying","onSlimInputClose","claimIsMine","channelHasMembershipTiers","doToggleLiveChatMembersOnlySettingForClaimId","doToast","pathname","useHistory","location","initialPopoutUnload","setShowTimestamps","MenuGlobalStyles","MenuList","MenuItem","onSelect","popoutWindow","window","open","onunload","current","setInterval","closed","clearInterval","focus","globalStylesProps","Global","styles","getChannelFromClaim","selectClaimIsMineForUri","selectChannelHasMembershipTiersForId","ChatLayout","___CSS_LOADER_EXPORT___","module","id"],"sourceRoot":""}