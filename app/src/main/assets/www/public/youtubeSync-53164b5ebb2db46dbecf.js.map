{"version":3,"file":"youtubeSync-53164b5ebb2db46dbecf.js","mappings":"svCA+KA,IAAMA,EAAmB,SAACC,GACxB,IAAQC,EAAyBD,EAAzBC,WAAYC,EAAaF,EAAbE,SAEpB,OAAOD,EAAaC,EAAWC,EAAAA,cAAA,OAAKC,UAAU,oBAAoBF,EACpE,EAUMG,EAAe,SAACL,GACpB,IAAQM,EAAoDN,EAApDM,YAAaC,EAAuCP,EAAvCO,WAAYL,EAA2BF,EAA3BE,SAAUM,EAAiBR,EAAjBQ,aAerCC,EAAkB,SAACC,GACvB,OACEP,EAAAA,cAACQ,EAAAA,EAAO,CAACC,MAAOC,EAAG,mCACjBV,EAAAA,cAAA,OACEC,UAAWU,IAAW,2BAA4B,CAChDC,OAAuB,WAAfL,EAAIM,OACZC,SAAyB,aAAfP,EAAIM,OACdE,UAA0B,cAAfR,EAAIM,UAGjBb,EAAAA,cAACgB,EAAAA,QAAI,CAACC,KAAqB,WAAfV,EAAIM,OAAsBK,EAAAA,KAAaA,EAAAA,UAI3D,EAqBA,OAAOf,EACLH,EAAAA,cAAA,MAAIC,UAAU,eACXI,GAAgBL,EAAAA,cAACM,EAAe,CAACO,OAAQR,IAC1CL,EAAAA,cAAA,QAAMmB,wBAAyB,CAAEC,OAZrC,SAAqBrB,GACnB,IAAK,IAAIsB,KAAStB,SAAe,QAAPuB,EAARvB,EAAUF,aAAK,IAAAyB,OAAP,EAARA,EAAiBvB,SAAU,KAAAuB,EAAAC,EACeC,EAA1D,GAAgD,iBAArCzB,SAAe,QAAPwB,EAARxB,EAAUF,aAAK,IAAA0B,OAAP,EAARA,EAAiBxB,SAASsB,IACnC,OAAOtB,SAAe,QAAPyB,EAARzB,EAAUF,aAAK,IAAA2B,OAAP,EAARA,EAAiBzB,SAASsB,EAErC,CACA,OAAOtB,CACT,CAK6C0B,CAAY1B,OAGvDC,EAAAA,cAAA,MAAIC,UAAWU,IAAW,cAAe,CAAE,qBAAsBP,KAAgBL,EAErF,EAEA,QArNA,SAAcF,GACZ,IACEY,EAwBEZ,EAxBFY,MACAiB,EAuBE7B,EAvBF6B,SACAC,EAsBE9B,EAtBF8B,aACAC,EAqBE/B,EArBF+B,GACAC,EAoBEhC,EApBFgC,KACAC,EAmBEjC,EAnBFiC,QACAb,EAkBEpB,EAlBFoB,KACAhB,EAiBEJ,EAjBFI,UAAS8B,EAiBPlC,EAhBFM,YAAAA,OAAW,IAAA4B,GAAQA,EAAAC,EAgBjBnC,EAfFoC,WAAAA,OAAU,IAAAD,GAAQA,EAAAE,EAehBrC,EAbFO,WAAAA,OAAU,IAAA8B,GAAQA,EAClBC,EAYEtC,EAZFsC,cACAC,EAWEvC,EAXFuC,IACAC,EAUExC,EAVFyC,QACAvC,EASEF,EATFE,SACAwC,EAQE1C,EARF0C,WACAC,EAOE3C,EAPF2C,WACAC,EAME5C,EANF4C,WACAC,EAKE7C,EALF6C,gBACA5C,EAIED,EAJFC,WACA6C,EAGE9C,EAHF8C,cACAtC,EAEER,EAFFQ,aACAuC,EACE/C,EADF+C,WAGqDC,EAAAC,GAAvBC,EAAAA,EAAAA,UAASZ,GAAc,GAAhDa,EAAQH,EAAA,GAAEI,EAAWJ,EAAA,GACtBK,OAA+BC,IAAlBhB,EAEnB,OACEnC,EAAAA,cAAA,WACEoD,KAAMf,EAAU,cAAWc,EAC3BlD,UAAWU,IAAWV,EAAW,OAAQ,CACvC,mBAAoBoD,QAAQd,GAC5B,mBAAoBE,IAEtBb,GAAIA,EACJU,QAAS,SAACgB,GACJjB,IACFA,IACAiB,EAAEC,kBAEN,GAECb,GACC1C,EAAAA,cAAA,OACEC,UAAU,aACVuD,MAAO,CACLd,gBACE,uEAAyEA,EAAkB,OAInG1C,EAAAA,cAACJ,EAAgB,CAACE,WAAYA,IAC1BW,GAASiB,IACT1B,EAAAA,cAAA,OACEC,UAAWU,IAAW,wBAAyB,CAC7C,qBAAsB6B,EACtB,qBAAsBI,KAGxB5C,EAAAA,cAAA,OAAKC,UAAWU,IAAW,sBAAuB,CAAE,iCAAkCsB,KACnFhB,GAAQjB,EAAAA,cAACgB,EAAAA,QAAI,CAACyC,aAAW,EAACxC,KAAMA,IAEjCjB,EAAAA,cAAA,OAAKC,UAAU,oBACbD,EAAAA,cAACE,EAAY,CAACC,YAAaA,EAAaC,WAAYA,EAAYC,aAAcA,GAC3EI,GAGFiB,GACC1B,EAAAA,cAAA,OAAKC,UAAWU,IAAW,iBAAkB,CAAE,wBAAyBP,KACrEsB,MAMPC,GAAgBuB,IAChBlD,EAAAA,cAAA,OAAKC,UAAU,iCACZ0B,GACC3B,EAAAA,cAAA,OACEC,UAAWU,IAAW,sBAAuB,CAC3C,6BAA8BP,KAG/BuB,GAGJuB,GACClD,EAAAA,cAAA,OAAKC,UAAU,uBACbD,EAAAA,cAAC0D,EAAAA,QAAM,CACLC,OAAO,MACP,gBAAeX,EACf,aAAuBtC,EAAXsC,EAAc,OAAa,QACvC/B,KAAM+B,EAAW9B,EAAAA,SAAiBA,EAAAA,IAClCoB,QAAS,kBAAMW,GAAaD,EAAS,MAO9CL,KAIFO,GAAeA,GAAcF,IAC9BhD,EAAAA,cAAAA,EAAAA,SAAA,KACG6B,GACC7B,EAAAA,cAAA,OACEC,UAAWU,IAAW,aAAc,CAClC,wBAAyBF,IAAUiB,EACnC,mBAAoBO,KAGrBJ,GAGJC,GAAW9B,EAAAA,cAAA,OAAKC,UAAU,sBAAsB6B,GAChD/B,GAAYC,EAAAA,cAAA,OAAKC,UAAU,sBAAsBF,IAIrDqC,GAGFG,GAAcvC,EAAAA,cAAA,OAAKC,UAAU,qBAAqBsC,GAGzD,C,8yCCtJA,IAAMqB,GAAwBC,EAAAA,EAAAA,IAAW,kBACvC,+BAAyF,IAGrFC,EAAqB,eACrBC,EAAsB,gBACtBC,EAAoB,cCf1B,SAAeC,EAAAA,EAAAA,KAJA,SAAAC,GAAK,MAAK,CACvBC,iBAAiBC,EAAAA,EAAAA,IAAsBF,GACxC,GAE8B,CAC7BG,YAAAA,EAAAA,IADF,EDwBe,SAAqBxE,GAClC,IAAQsE,EAAwFtE,EAAxFsE,gBAAiBE,EAAuExE,EAAvEwE,YAAWC,EAA4DzE,EAA1D0E,aAAAA,OAAY,IAAAD,GAAQA,EAAEE,EAAoC3E,EAApC2E,gCAC5DC,GAIIC,EAAAA,EAAAA,MAAYC,EAAAF,EAHdG,SAAYC,EAAMF,EAANE,OAAQC,EAAQH,EAARG,SACpBC,EAAIN,EAAJM,KACAC,EAAOP,EAAPO,QAEIC,EAAY,IAAIC,gBAAgBL,GAChCM,EAAcF,EAAUG,IAAItB,GAC5BuB,EAAeJ,EAAUG,IAAIrB,GAC7BuB,EAAkBL,EAAUG,IAAIpB,GACUuB,EAAAzC,EAAlB9C,EAAAA,SAAe,IAAG,GAAzCwF,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC0CG,EAAA5C,EAApC9C,EAAAA,UAAe2F,EAAAA,EAAAA,OAAqB,GAA7DC,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC+BI,EAAAhD,EAAzB9C,EAAAA,cAAemD,GAAU,GAApD4C,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACyCG,EAAAnD,EAArB9C,EAAAA,UAAe,GAAM,GAAhEkG,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GACiCG,EAAAtD,EAA/B9C,EAAAA,SAAesF,GAAgB,GAAxEe,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GACtCG,EAAqBpC,GAAmBA,EAAgBqC,OAAS,EAEvExG,EAAAA,WAAgB,WACd,IAAMyG,EAAoB,IAAIvB,gBAAgBL,GACzC4B,EAAkBrB,IAAI,iBACzBqB,EAAkBC,OAAO,eAAgB,WAG3C1B,EAAQ,IAAD2B,OAAKF,EAAkBG,YAEhC,GAAG,CAAC9B,EAAUD,IAEd7E,EAAAA,WAAgB,WACVmF,IAAgBoB,GAClBlC,GAEJ,GAAG,CAACc,EAAaoB,EAAoBlC,IAErCrE,EAAAA,WAAgB,WACTsF,GACHgB,GAAoB,EAExB,GAAG,CAAChB,IAmCJ,IAAMuB,EAAU,SAAChH,GACf,OAAO0E,EACLvE,EAAAA,cAAAA,EAAAA,SAAA,KAAGH,EAAME,UAETC,EAAAA,cAAC8G,EAAAA,EAAI,CAACC,kBAAgB,EAACC,UAAQ,GAC5BnH,EAAME,SAGb,EAEA,OACEC,EAAAA,cAAC6G,EAAO,KACN7G,EAAAA,cAAA,OAAKC,UAAU,0BACZsG,IAAuBF,EACtBrG,EAAAA,cAACA,EAAAA,SAAc,CAACiH,SAAU,MACxBjH,EAAAA,cAAC4D,EAAqB,CAACsD,YAAU,EAACC,cArB5C,WACElC,EAAUyB,OAAO,cAAe,QAChC3B,EAAK,GAAD4B,OAAI7B,EAAQ,KAAA6B,OAAI1B,EAAU2B,aAC9BN,GAAoB,EACtB,KAoBQtG,EAAAA,cAACoH,EAAAA,EAAI,CACH3G,MAAOC,EAAG,2CAA4C,CAAE2G,UAAoBC,EAAAA,YAC5E5F,SAAUhB,EAAG,gEAAiE,CAC5E2G,UAAoBC,EAAAA,YAEtBxF,QACE9B,EAAAA,cAACuH,EAAAA,GAAI,CAACC,SAzDlB,WACEC,EAAAA,OAAAA,KAAY,KAAM,MAAO,CACvBC,KAAM,OACNC,gBAAgB,EAChBC,iBAAkBhC,EAClBiC,0BAA2B,IAAFlB,OAAMnB,GAC/BsC,WAAY,WAAFnB,OAAaoB,EAAAA,OAAM,OAAApB,OAAMpC,EAAeyD,EAAAA,KAAaA,EAAAA,gBAC9DC,MAAK,SAACC,GACHC,OAAOC,QACTD,OAAOE,OAAOC,UAAUC,YAAYL,GAGpCC,OAAOvD,SAAS4D,KAAON,CAE3B,GACF,GA2CclI,EAAAA,cAAA,kBAAgByI,MAAM,2DACpBzI,EAAAA,cAAA,wBACEA,EAAAA,cAAA,SAAO0I,QAAQ,sBACZ3C,EACC/F,EAAAA,cAAA,QAAMC,UAAU,eAAe8F,GAE/BrF,EAAG,wCAAyC,CAAE2G,UAAoBC,EAAAA,aAGtEtH,EAAAA,cAAA,OAAKC,UAAU,sBAAqB,MAGtCD,EAAAA,cAAC2I,EAAAA,GAAS,CACRC,WAAS,EACTC,YAAanI,EAAG,WAChBgH,KAAK,OACLoB,KAAK,kBACL7I,UAAU,oBACV8I,MAAOvD,EACPwD,SA5DlB,SAA6B1F,GAC3B,IAAQyF,EAAUzF,EAAE2F,OAAZF,MACRtD,EAAWsD,IACNG,EAAAA,EAAAA,aAAYH,GAGf/C,IAFAA,EAAamD,EAAAA,GAIjB,KAuDcnJ,EAAAA,cAAC2I,EAAAA,GAAS,CACRG,KAAK,kBACLpB,KAAK,SACL0B,MAAO1I,EAAG,oBACVsI,SAAU,SAACK,GAAK,OAAKxD,EAAYwD,EAAMJ,OAAOF,MAAM,EACpDA,MAAOnD,IAEN0D,EAAAA,EAAAA,IAAgBC,EAAAA,GAAqBC,KAAI,SAAAC,GAAA,IAAAC,EAAA5G,EAAA2G,EAAA,GAAEE,EAAOD,EAAA,GAAEE,EAAQF,EAAA,UAC3D1J,EAAAA,cAAA,UAAQ6J,IAAKF,EAASZ,MAAOY,GAC1BC,EACM,KAGb5J,EAAAA,cAAC2I,EAAAA,GAAS,CACRjB,KAAK,WACLoB,KAAK,gBACLgB,QAAS5D,EACT8C,SAAU,kBAAM7C,GAAsBD,EAAkB,EACxDkD,MACEpJ,EAAAA,cAAC+J,EAAAA,EAAW,CACVC,OAAQ,CACNC,MACEjK,EAAAA,cAAC0D,EAAAA,QAAM,CAACC,OAAO,OAAOyF,MAAO1I,EAAG,eAAgB8H,KAAK,oCAEvD0B,IACElK,EAAAA,cAAC0D,EAAAA,QAAM,CACLC,OAAO,OACPyF,MAAO1I,EAAG,yBACV8H,KAAK,iDAGTnB,UAAWC,EAAAA,YAEd,gIAOLtH,EAAAA,cAAA,OAAKC,UAAU,oBACbD,EAAAA,cAAC0D,EAAAA,QAAM,CACLC,OAAO,UACP+D,KAAK,SACLyC,SAAUpE,IAAcP,IAAYU,EACpCkD,MAAO1I,EAAG,eAGX6D,IAAiBc,GAChBrF,EAAAA,cAAC0D,EAAAA,QAAM,CAACC,OAAO,OAAOyF,MAAO1I,EAAG,QAAS4B,QAAS,kBAAMkC,GAAiC,IAG1Fa,GAAgBrF,EAAAA,cAAC0D,EAAAA,QAAM,CAACC,OAAO,OAAOyF,MAAO1I,EAAG,QAAS0J,SAAQ,MAAAzD,OAAQqB,EAAAA,YAE5EhI,EAAAA,cAAA,OAAKC,UAAU,sBACbD,EAAAA,cAAC+J,EAAAA,EAAW,CACVC,OAAQ,CACNK,MAAO,IACPC,WACEtK,EAAAA,cAAC0D,EAAAA,QAAM,CACLC,OAAO,OACPyF,MAAO1I,EAAG,cACV8H,KAAK,mDAIZ,yLAOPpG,IAAKiD,GAAgBrF,EAAAA,cAACuK,EAAAA,EAAG,CAACC,QAASnF,EAAcqC,KAAK,QAAQ+C,UAAQ,OAMlF,G","sources":["webpack://odysee.com/../ui/component/common/card.jsx","webpack://odysee.com/../ui/page/youtubeSync/view.jsx","webpack://odysee.com/../ui/page/youtubeSync/index.js"],"sourcesContent":["// @flow\nimport type { Node } from 'react';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Icon from 'component/common/icon';\nimport Button from 'component/button';\nimport * as ICONS from 'constants/icons';\n// import twemoji from 'twemoji';\nimport Tooltip from 'component/common/tooltip';\n\ntype Props = {\n  title?: string | Node,\n  subtitle?: string | Node,\n  titleActions?: string | Node,\n  id?: string,\n  body?: string | Node,\n  actions?: string | Node,\n  icon?: string,\n  className?: string,\n  isPageTitle?: boolean,\n  noTitleWrap?: boolean,\n  isBodyList?: boolean,\n  defaultExpand?: boolean,\n  nag?: Node,\n  smallTitle?: boolean,\n  onClick?: () => void,\n  children?: Node,\n  secondPane?: Node,\n  slimHeader?: boolean,\n  background?: boolean,\n  backgroundImage?: string,\n  singlePane?: boolean,\n  headerActions?: Node,\n  gridHeader?: boolean,\n  accessStatus?: string,\n};\n\nfunction Card(props: Props) {\n  const {\n    title,\n    subtitle,\n    titleActions,\n    id,\n    body,\n    actions,\n    icon,\n    className,\n    isPageTitle = false,\n    isBodyList = false,\n    // noTitleWrap = false,\n    smallTitle = false,\n    defaultExpand,\n    nag,\n    onClick,\n    children,\n    secondPane,\n    slimHeader,\n    background,\n    backgroundImage,\n    singlePane,\n    headerActions,\n    accessStatus,\n    gridHeader,\n  } = props;\n\n  const [expanded, setExpanded] = useState(defaultExpand);\n  const expandable = defaultExpand !== undefined;\n\n  return (\n    <section\n      role={onClick ? 'button' : undefined}\n      className={classnames(className, 'card', {\n        'card__multi-pane': Boolean(secondPane),\n        'card--background': background,\n      })}\n      id={id}\n      onClick={(e) => {\n        if (onClick) {\n          onClick();\n          e.stopPropagation();\n        }\n      }}\n    >\n      {backgroundImage && (\n        <div\n          className=\"background\"\n          style={{\n            backgroundImage:\n              'url(https://thumbnails.odycdn.com/optimize/s:390:0/quality:85/plain/' + backgroundImage + ')',\n          }}\n        />\n      )}\n      <FirstPaneWrapper singlePane={singlePane}>\n        {(title || subtitle) && (\n          <div\n            className={classnames('card__header--between', {\n              'card__header--slim': slimHeader,\n              'card__header--grid': gridHeader,\n            })}\n          >\n            <div className={classnames('card__title-section', { 'card__title-section--body-list': isBodyList })}>\n              {icon && <Icon sectionIcon icon={icon} />}\n\n              <div className=\"card__title-text\">\n                <TitleWrapper isPageTitle={isPageTitle} smallTitle={smallTitle} accessStatus={accessStatus}>\n                  {title}\n                </TitleWrapper>\n\n                {subtitle && (\n                  <div className={classnames('card__subtitle', { 'card__subtitle--small': smallTitle })}>\n                    {subtitle}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {(titleActions || expandable) && (\n              <div className=\"card__title-actions-container\">\n                {titleActions && (\n                  <div\n                    className={classnames('card__title-actions', {\n                      'card__title-actions--small': smallTitle,\n                    })}\n                  >\n                    {titleActions}\n                  </div>\n                )}\n                {expandable && (\n                  <div className=\"card__title-actions\">\n                    <Button\n                      button=\"alt\"\n                      aria-expanded={expanded}\n                      aria-label={expanded ? __('Less') : __('More')}\n                      icon={expanded ? ICONS.SUBTRACT : ICONS.ADD}\n                      onClick={() => setExpanded(!expanded)}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n\n            {headerActions}\n          </div>\n        )}\n\n        {(!expandable || (expandable && expanded)) && (\n          <>\n            {body && (\n              <div\n                className={classnames('card__body', {\n                  'card__body--no-title': !title && !subtitle,\n                  'card__body--list': isBodyList,\n                })}\n              >\n                {body}\n              </div>\n            )}\n            {actions && <div className=\"card__main-actions\">{actions}</div>}\n            {children && <div className=\"card__main-actions\">{children}</div>}\n          </>\n        )}\n\n        {nag}\n      </FirstPaneWrapper>\n\n      {secondPane && <div className=\"card__second-pane\">{secondPane}</div>}\n    </section>\n  );\n}\n\ntype FirstPaneProps = {\n  singlePane?: boolean,\n  children: any,\n};\n\nconst FirstPaneWrapper = (props: FirstPaneProps) => {\n  const { singlePane, children } = props;\n\n  return singlePane ? children : <div className=\"card__first-pane\">{children}</div>;\n};\n\ntype TitleProps = {\n  isPageTitle?: boolean,\n  smallTitle?: boolean,\n  children?: any,\n  emoji?: any,\n  accessStatus?: string,\n};\n\nconst TitleWrapper = (props: TitleProps) => {\n  const { isPageTitle, smallTitle, children, accessStatus } = props;\n\n  /*\n  const Twemoji = ({ emoji }) => (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: twemoji.parse(emoji, {\n          folder: 'svg',\n          ext: '.svg',\n        }),\n      }}\n    />\n  );\n  */\n\n  const AccessIndicator = (par: any) => {\n    return (\n      <Tooltip title={__('This is a members-only content')}>\n        <div\n          className={classnames('content-access-indicator', {\n            locked: par.status === 'locked',\n            unlocked: par.status === 'unlocked',\n            purchased: par.status === 'purchased',\n          })}\n        >\n          <Icon icon={par.status === 'locked' ? ICONS.LOCK : ICONS.UNLOCK} />\n        </div>\n      </Tooltip>\n    );\n  };\n\n  /*\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return <Twemoji emoji={children?.props?.children[child]} />;\n      }\n    }\n    return children;\n  }\n  */\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return children?.props?.children[child];\n      }\n    }\n    return children;\n  }\n\n  return isPageTitle ? (\n    <h1 className=\"card__title\">\n      {accessStatus && <AccessIndicator status={accessStatus} />}\n      <font dangerouslySetInnerHTML={{ __html: transformer(children) }} />\n    </h1>\n  ) : (\n    <h2 className={classnames('card__title', { 'card__title--small': smallTitle })}>{children}</h2>\n  );\n};\n\nexport default Card;\n","// @flow\nimport { SITE_NAME, DOMAIN } from 'config';\nimport * as PAGES from 'constants/pages';\nimport SUPPORTED_LANGUAGES from 'constants/supported_languages';\nimport React from 'react';\nimport Page from 'component/page';\nimport Button from 'component/button';\nimport Card from 'component/common/card';\nimport I18nMessage from 'component/i18nMessage';\nimport { Form, FormField } from 'component/common/form';\nimport { INVALID_NAME_ERROR } from 'constants/claim';\nimport { isNameValid } from 'util/lbryURI';\nimport { Lbryio } from 'lbryinc';\nimport { useHistory } from 'react-router';\nimport Nag from 'component/nag';\nimport { lazyImport } from 'util/lazyImport';\nimport { getDefaultLanguage, sortLanguageMap } from 'util/default-languages';\n\nconst YoutubeTransferStatus = lazyImport(() =>\n  import('component/youtubeTransferStatus' /* webpackChunkName: \"youtubeTransferStatus\" */)\n);\n\nconst STATUS_TOKEN_PARAM = 'status_token';\nconst ERROR_MESSAGE_PARAM = 'error_message';\nconst NEW_CHANNEL_PARAM = 'new_channel';\n\ntype Props = {\n  youtubeChannels: ?Array<{ transfer_state: string, sync_status: string }>,\n  doUserFetch: () => void,\n  inSignUpFlow?: boolean,\n  doToggleInterestedInYoutubeSync: () => void,\n};\n\nexport default function YoutubeSync(props: Props) {\n  const { youtubeChannels, doUserFetch, inSignUpFlow = false, doToggleInterestedInYoutubeSync } = props;\n  const {\n    location: { search, pathname },\n    push,\n    replace,\n  } = useHistory();\n  const urlParams = new URLSearchParams(search);\n  const statusToken = urlParams.get(STATUS_TOKEN_PARAM);\n  const errorMessage = urlParams.get(ERROR_MESSAGE_PARAM);\n  const newChannelParam = urlParams.get(NEW_CHANNEL_PARAM);\n  const [channel, setChannel] = React.useState('');\n  const [language, setLanguage] = React.useState(getDefaultLanguage());\n  const [nameError, setNameError] = React.useState(undefined);\n  const [acknowledgedTerms, setAcknowledgedTerms] = React.useState(false);\n  const [addingNewChannel, setAddingNewChannel] = React.useState(newChannelParam);\n  const hasYoutubeChannels = youtubeChannels && youtubeChannels.length > 0;\n\n  React.useEffect(() => {\n    const urlParamsInEffect = new URLSearchParams(search);\n    if (!urlParamsInEffect.get('reset_scroll')) {\n      urlParamsInEffect.append('reset_scroll', 'youtube');\n    }\n\n    replace(`?${urlParamsInEffect.toString()}`);\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- @see TODO_NEED_VERIFICATION\n  }, [pathname, search]);\n\n  React.useEffect(() => {\n    if (statusToken && !hasYoutubeChannels) {\n      doUserFetch();\n    }\n  }, [statusToken, hasYoutubeChannels, doUserFetch]);\n\n  React.useEffect(() => {\n    if (!newChannelParam) {\n      setAddingNewChannel(false);\n    }\n  }, [newChannelParam]);\n\n  function handleCreateChannel() {\n    Lbryio.call('yt', 'new', {\n      type: 'sync',\n      immediate_sync: true,\n      channel_language: language,\n      desired_lbry_channel_name: `@${channel}`,\n      return_url: `https://${DOMAIN}/$/${inSignUpFlow ? PAGES.AUTH : PAGES.YOUTUBE_SYNC}`,\n    }).then((ytAuthUrl) => {\n      if (window.cordova) {\n        window.odysee.functions.initBrowser(ytAuthUrl);\n      } else {\n        // react-router isn't needed since it's a different domain\n        window.location.href = ytAuthUrl;\n      }\n    });\n  }\n\n  function handleChannelChange(e) {\n    const { value } = e.target;\n    setChannel(value);\n    if (!isNameValid(value)) {\n      setNameError(INVALID_NAME_ERROR);\n    } else {\n      setNameError();\n    }\n  }\n\n  function handleNewChannel() {\n    urlParams.append('new_channel', 'true');\n    push(`${pathname}?${urlParams.toString()}`);\n    setAddingNewChannel(true);\n  }\n\n  const Wrapper = (props: { children: any }) => {\n    return inSignUpFlow ? (\n      <>{props.children}</>\n    ) : (\n      <Page noSideNavigation authPage>\n        {props.children}\n      </Page>\n    );\n  };\n\n  return (\n    <Wrapper>\n      <div className=\"main__channel-creation\">\n        {hasYoutubeChannels && !addingNewChannel ? (\n          <React.Suspense fallback={null}>\n            <YoutubeTransferStatus alwaysShow addNewChannel={handleNewChannel} />\n          </React.Suspense>\n        ) : (\n          <Card\n            title={__('Sync your YouTube channel to %site_name%', { site_name: IS_WEB ? SITE_NAME : 'LBRY' })}\n            subtitle={__('Get your YouTube videos in front of the %site_name% audience.', {\n              site_name: IS_WEB ? SITE_NAME : 'LBRY',\n            })}\n            actions={\n              <Form onSubmit={handleCreateChannel}>\n                <fieldset-group class=\"fieldset-group--smushed fieldset-group--disabled-prefix\">\n                  <fieldset-section>\n                    <label htmlFor=\"auth_first_channel\">\n                      {nameError ? (\n                        <span className=\"error__text\">{nameError}</span>\n                      ) : (\n                        __('Your desired %site_name% channel name', { site_name: IS_WEB ? SITE_NAME : 'LBRY' })\n                      )}\n                    </label>\n                    <div className=\"form-field__prefix\">@</div>\n                  </fieldset-section>\n\n                  <FormField\n                    autoFocus\n                    placeholder={__('channel')}\n                    type=\"text\"\n                    name=\"yt_sync_channel\"\n                    className=\"form-field--short\"\n                    value={channel}\n                    onChange={handleChannelChange}\n                  />\n                </fieldset-group>\n                <FormField\n                  name=\"language_select\"\n                  type=\"select\"\n                  label={__('Channel language')}\n                  onChange={(event) => setLanguage(event.target.value)}\n                  value={language}\n                >\n                  {sortLanguageMap(SUPPORTED_LANGUAGES).map(([langKey, langName]) => (\n                    <option key={langKey} value={langKey}>\n                      {langName}\n                    </option>\n                  ))}\n                </FormField>\n                <FormField\n                  type=\"checkbox\"\n                  name=\"yt_sync_terms\"\n                  checked={acknowledgedTerms}\n                  onChange={() => setAcknowledgedTerms(!acknowledgedTerms)}\n                  label={\n                    <I18nMessage\n                      tokens={{\n                        terms: (\n                          <Button button=\"link\" label={__('these terms')} href=\"https://odysee.com/$/youtubetos\" />\n                        ),\n                        faq: (\n                          <Button\n                            button=\"link\"\n                            label={__('how the program works')}\n                            href=\"https://help.odysee.tv/category-syncprogram/\"\n                          />\n                        ),\n                        site_name: SITE_NAME,\n                      }}\n                    >\n                      I want to sync my content to %site_name% and the LBRY network and agree to %terms%. I have also\n                      read and understand %faq%.\n                    </I18nMessage>\n                  }\n                />\n\n                <div className=\"section__actions\">\n                  <Button\n                    button=\"primary\"\n                    type=\"submit\"\n                    disabled={nameError || !channel || !acknowledgedTerms}\n                    label={__('Claim Now')}\n                  />\n\n                  {inSignUpFlow && !errorMessage && (\n                    <Button button=\"link\" label={__('Skip')} onClick={() => doToggleInterestedInYoutubeSync()} />\n                  )}\n\n                  {errorMessage && <Button button=\"link\" label={__('Skip')} navigate={`/$/${PAGES.REWARDS}`} />}\n                </div>\n                <div className=\"help--card-actions\">\n                  <I18nMessage\n                    tokens={{\n                      count: 100,\n                      learn_more: (\n                        <Button\n                          button=\"link\"\n                          label={__('Learn more')}\n                          href=\"https://help.odysee.tv/category-syncprogram/\"\n                        />\n                      ),\n                    }}\n                  >\n                    This will verify you are an active YouTuber with over %count% subscribers and original content.\n                    Channel names cannot be changed once chosen, please be extra careful. %learn_more%.\n                  </I18nMessage>\n                </div>\n              </Form>\n            }\n            nag={errorMessage && <Nag message={errorMessage} type=\"error\" relative />}\n          />\n        )}\n      </div>\n    </Wrapper>\n  );\n}\n","import { connect } from 'react-redux';\nimport { selectYoutubeChannels } from 'redux/selectors/user';\nimport { doUserFetch } from 'redux/actions/user';\nimport CreatorDashboardPage from './view';\n\nconst select = state => ({\n  youtubeChannels: selectYoutubeChannels(state),\n});\n\nexport default connect(select, {\n  doUserFetch,\n})(CreatorDashboardPage);\n"],"names":["FirstPaneWrapper","props","singlePane","children","React","className","TitleWrapper","isPageTitle","smallTitle","accessStatus","AccessIndicator","par","Tooltip","title","__","classnames","locked","status","unlocked","purchased","Icon","icon","ICONS","dangerouslySetInnerHTML","__html","child","_children$props","_children$props2","_children$props3","transformer","subtitle","titleActions","id","body","actions","_props$isPageTitle","_props$isBodyList","isBodyList","_props$smallTitle","defaultExpand","nag","_onClick","onClick","secondPane","slimHeader","background","backgroundImage","headerActions","gridHeader","_useState2","_slicedToArray","useState","expanded","setExpanded","expandable","undefined","role","Boolean","e","stopPropagation","style","sectionIcon","Button","button","YoutubeTransferStatus","lazyImport","STATUS_TOKEN_PARAM","ERROR_MESSAGE_PARAM","NEW_CHANNEL_PARAM","connect","state","youtubeChannels","selectYoutubeChannels","doUserFetch","_props$inSignUpFlow","inSignUpFlow","doToggleInterestedInYoutubeSync","_useHistory","useHistory","_useHistory$location","location","search","pathname","push","replace","urlParams","URLSearchParams","statusToken","get","errorMessage","newChannelParam","_React$useState2","channel","setChannel","_React$useState4","getDefaultLanguage","language","setLanguage","_React$useState6","nameError","setNameError","_React$useState8","acknowledgedTerms","setAcknowledgedTerms","_React$useState10","addingNewChannel","setAddingNewChannel","hasYoutubeChannels","length","urlParamsInEffect","append","concat","toString","Wrapper","Page","noSideNavigation","authPage","fallback","alwaysShow","addNewChannel","Card","site_name","SITE_NAME","Form","onSubmit","Lbryio","type","immediate_sync","channel_language","desired_lbry_channel_name","return_url","DOMAIN","PAGES","then","ytAuthUrl","window","cordova","odysee","functions","initBrowser","href","class","htmlFor","FormField","autoFocus","placeholder","name","value","onChange","target","isNameValid","INVALID_NAME_ERROR","label","event","sortLanguageMap","SUPPORTED_LANGUAGES","map","_ref","_ref2","langKey","langName","key","checked","I18nMessage","tokens","terms","faq","disabled","navigate","count","learn_more","Nag","message","relative"],"sourceRoot":""}