{"version":3,"file":"modalConfirm-22cc8b9e97f3575196f4.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/common/busy-indicator.jsx","webpack://odysee.com/../ui/component/common/card.jsx","webpack://odysee.com/../ui/modal/modalConfirm/index.js","webpack://odysee.com/../ui/modal/modalConfirm/view.jsx"],"sourcesContent":["// @flow\nimport React from 'react';\n\ntype Props = {\n  message: ?string,\n};\n\nclass BusyIndicator extends React.PureComponent<Props> {\n  static defaultProps = {\n    message: '',\n  };\n\n  render() {\n    const { message } = this.props;\n\n    return (\n      <span className=\"busy-indicator\">\n        {message} <span className=\"busy-indicator__loader\" />\n      </span>\n    );\n  }\n}\n\nexport default BusyIndicator;\n","// @flow\nimport type { Node } from 'react';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Icon from 'component/common/icon';\nimport Button from 'component/button';\nimport * as ICONS from 'constants/icons';\n// import twemoji from 'twemoji';\nimport Tooltip from 'component/common/tooltip';\n\ntype Props = {\n  title?: string | Node,\n  subtitle?: string | Node,\n  titleActions?: string | Node,\n  id?: string,\n  body?: string | Node,\n  actions?: string | Node,\n  icon?: string,\n  className?: string,\n  isPageTitle?: boolean,\n  noTitleWrap?: boolean,\n  isBodyList?: boolean,\n  defaultExpand?: boolean,\n  nag?: Node,\n  smallTitle?: boolean,\n  onClick?: () => void,\n  children?: Node,\n  secondPane?: Node,\n  slimHeader?: boolean,\n  background?: boolean,\n  backgroundImage?: string,\n  singlePane?: boolean,\n  headerActions?: Node,\n  gridHeader?: boolean,\n  accessStatus?: string,\n};\n\nfunction Card(props: Props) {\n  const {\n    title,\n    subtitle,\n    titleActions,\n    id,\n    body,\n    actions,\n    icon,\n    className,\n    isPageTitle = false,\n    isBodyList = false,\n    // noTitleWrap = false,\n    smallTitle = false,\n    defaultExpand,\n    nag,\n    onClick,\n    children,\n    secondPane,\n    slimHeader,\n    background,\n    backgroundImage,\n    singlePane,\n    headerActions,\n    accessStatus,\n    gridHeader,\n  } = props;\n\n  const [expanded, setExpanded] = useState(defaultExpand);\n  const expandable = defaultExpand !== undefined;\n\n  return (\n    <section\n      role={onClick ? 'button' : undefined}\n      className={classnames(className, 'card', {\n        'card__multi-pane': Boolean(secondPane),\n        'card--background': background,\n      })}\n      id={id}\n      onClick={(e) => {\n        if (onClick) {\n          onClick();\n          e.stopPropagation();\n        }\n      }}\n    >\n      {backgroundImage && (\n        <div\n          className=\"background\"\n          style={{\n            backgroundImage:\n              'url(https://thumbnails.odycdn.com/optimize/s:390:0/quality:85/plain/' + backgroundImage + ')',\n          }}\n        />\n      )}\n      <FirstPaneWrapper singlePane={singlePane}>\n        {(title || subtitle) && (\n          <div\n            className={classnames('card__header--between', {\n              'card__header--slim': slimHeader,\n              'card__header--grid': gridHeader,\n            })}\n          >\n            <div className={classnames('card__title-section', { 'card__title-section--body-list': isBodyList })}>\n              {icon && <Icon sectionIcon icon={icon} />}\n\n              <div className=\"card__title-text\">\n                <TitleWrapper isPageTitle={isPageTitle} smallTitle={smallTitle} accessStatus={accessStatus}>\n                  {title}\n                </TitleWrapper>\n\n                {subtitle && (\n                  <div className={classnames('card__subtitle', { 'card__subtitle--small': smallTitle })}>\n                    {subtitle}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {(titleActions || expandable) && (\n              <div className=\"card__title-actions-container\">\n                {titleActions && (\n                  <div\n                    className={classnames('card__title-actions', {\n                      'card__title-actions--small': smallTitle,\n                    })}\n                  >\n                    {titleActions}\n                  </div>\n                )}\n                {expandable && (\n                  <div className=\"card__title-actions\">\n                    <Button\n                      button=\"alt\"\n                      aria-expanded={expanded}\n                      aria-label={expanded ? __('Less') : __('More')}\n                      icon={expanded ? ICONS.SUBTRACT : ICONS.ADD}\n                      onClick={() => setExpanded(!expanded)}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n\n            {headerActions}\n          </div>\n        )}\n\n        {(!expandable || (expandable && expanded)) && (\n          <>\n            {body && (\n              <div\n                className={classnames('card__body', {\n                  'card__body--no-title': !title && !subtitle,\n                  'card__body--list': isBodyList,\n                })}\n              >\n                {body}\n              </div>\n            )}\n            {actions && <div className=\"card__main-actions\">{actions}</div>}\n            {children && <div className=\"card__main-actions\">{children}</div>}\n          </>\n        )}\n\n        {nag}\n      </FirstPaneWrapper>\n\n      {secondPane && <div className=\"card__second-pane\">{secondPane}</div>}\n    </section>\n  );\n}\n\ntype FirstPaneProps = {\n  singlePane?: boolean,\n  children: any,\n};\n\nconst FirstPaneWrapper = (props: FirstPaneProps) => {\n  const { singlePane, children } = props;\n\n  return singlePane ? children : <div className=\"card__first-pane\">{children}</div>;\n};\n\ntype TitleProps = {\n  isPageTitle?: boolean,\n  smallTitle?: boolean,\n  children?: any,\n  emoji?: any,\n  accessStatus?: string,\n};\n\nconst TitleWrapper = (props: TitleProps) => {\n  const { isPageTitle, smallTitle, children, accessStatus } = props;\n\n  /*\n  const Twemoji = ({ emoji }) => (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: twemoji.parse(emoji, {\n          folder: 'svg',\n          ext: '.svg',\n        }),\n      }}\n    />\n  );\n  */\n\n  const AccessIndicator = (par: any) => {\n    return (\n      <Tooltip title={__('This is a members-only content')}>\n        <div\n          className={classnames('content-access-indicator', {\n            locked: par.status === 'locked',\n            unlocked: par.status === 'unlocked',\n            purchased: par.status === 'purchased',\n          })}\n        >\n          <Icon icon={par.status === 'locked' ? ICONS.LOCK : ICONS.UNLOCK} />\n        </div>\n      </Tooltip>\n    );\n  };\n\n  /*\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return <Twemoji emoji={children?.props?.children[child]} />;\n      }\n    }\n    return children;\n  }\n  */\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return children?.props?.children[child];\n      }\n    }\n    return children;\n  }\n\n  return isPageTitle ? (\n    <h1 className=\"card__title\">\n      {accessStatus && <AccessIndicator status={accessStatus} />}\n      <font dangerouslySetInnerHTML={{ __html: transformer(children) }} />\n    </h1>\n  ) : (\n    <h2 className={classnames('card__title', { 'card__title--small': smallTitle })}>{children}</h2>\n  );\n};\n\nexport default Card;\n","import { connect } from 'react-redux';\nimport { doHideModal } from 'redux/actions/app';\nimport ModalConfirm from './view';\n\nconst perform = {\n  doHideModal,\n};\n\nexport default connect(null, perform)(ModalConfirm);\n","// @flow\nimport React from 'react';\nimport type { Node } from 'react';\nimport Button from 'component/button';\nimport Card from 'component/common/card';\nimport Spinner from 'component/spinner';\nimport { Modal } from 'modal/modal';\nimport BusyIndicator from 'component/common/busy-indicator';\n\ntype Props = {\n  title: string,\n  subtitle?: string | Node,\n  body?: string | Node,\n  labelOk?: string,\n  labelCancel?: string,\n  hideCancel?: boolean,\n  busyMsg?: string,\n  onConfirm: (closeModal: () => void, setIsBusy: (boolean) => void) => void,\n  // --- perform ---\n  doHideModal: () => void,\n};\n\nexport default function ModalConfirm(props: Props) {\n  const { title, subtitle, body, labelOk, labelCancel, hideCancel, busyMsg, onConfirm, doHideModal } = props;\n\n  const [isBusy, setIsBusy] = React.useState(false);\n\n  function handleOnClick() {\n    if (onConfirm) {\n      onConfirm(doHideModal, setIsBusy);\n    }\n  }\n\n  return (\n    <Modal isOpen type=\"custom\" width=\"wide\">\n      <Card\n        title={title}\n        subtitle={subtitle}\n        body={body}\n        className=\"confirm__wrapper\"\n        actions={\n          <div className=\"section__actions\">\n            {isBusy && busyMsg ? (\n              <BusyIndicator message={busyMsg} />\n            ) : (\n              <Button\n                button=\"primary\"\n                label={isBusy ? <Spinner type=\"small\" /> : labelOk || __('OK')}\n                disabled={isBusy}\n                onClick={handleOnClick}\n              />\n            )}\n\n            {!hideCancel && !(isBusy && busyMsg) && (\n              <Button button=\"link\" label={labelCancel || __('Cancel')} disabled={isBusy} onClick={doHideModal} />\n            )}\n          </div>\n        }\n      />\n    </Modal>\n  );\n}\n"],"names":["BusyIndicator","_React$PureComponent","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","key","value","message","this","props","React","className","FirstPaneWrapper","singlePane","children","TitleWrapper","isPageTitle","smallTitle","accessStatus","AccessIndicator","par","Tooltip","title","__","classnames","locked","status","unlocked","purchased","Icon","icon","ICONS","dangerouslySetInnerHTML","__html","child","_children$props","_children$props2","_children$props3","transformer","subtitle","titleActions","id","body","actions","_props$isPageTitle","_props$isBodyList","isBodyList","_props$smallTitle","defaultExpand","nag","_onClick","onClick","secondPane","slimHeader","background","backgroundImage","headerActions","gridHeader","_useState2","_slicedToArray","useState","expanded","setExpanded","expandable","undefined","role","Boolean","e","stopPropagation","style","sectionIcon","Button","button","perform","doHideModal","connect","labelOk","labelCancel","hideCancel","busyMsg","onConfirm","_React$useState2","isBusy","setIsBusy","Modal","isOpen","type","width","Card","label","Spinner","disabled"],"sourceRoot":""}