{"version":3,"file":"portals-fd90a78c1fb3d5342c12.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/portals/index.js","webpack://odysee.com/../ui/component/portals/view.jsx"],"sourcesContent":["import { connect } from 'react-redux';\nimport * as SETTINGS from 'constants/settings';\nimport { selectClientSetting } from 'redux/selectors/settings';\nimport { doSetClientSetting } from 'redux/actions/settings';\nimport Portals from './view';\n\nconst select = (state) => ({\n  homepageOrder: selectClientSetting(state, SETTINGS.HOMEPAGE_ORDER),\n});\n\nconst perform = {\n  doSetClientSetting,\n};\n\nexport default connect(select, perform)(Portals);\n","// @flow\nimport React from 'react';\nimport { useOnResize } from 'effects/use-on-resize';\nimport Icon from 'component/common/icon';\nimport * as ICONS from 'constants/icons';\nimport * as SETTINGS from 'constants/settings';\nimport classnames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport './style.lazy.scss';\n\ntype HomepageOrder = { active: ?Array<string>, hidden: ?Array<string> };\n\ntype Props = {\n  homepageData: any,\n  homepageOrder: HomepageOrder,\n  authenticated: boolean,\n  activePortal: number,\n  // --- perform ---\n  doSetClientSetting: (key: string, value: any, push: boolean) => void,\n};\n\nexport default function Portals(props: Props) {\n  const { homepageData, homepageOrder, doSetClientSetting, authenticated, activePortal } = props;\n  const { portals, categories } = homepageData;\n\n  const [width, setWidth] = React.useState(0);\n  const [tileWidth, setTileWidth] = React.useState(0);\n  const [tileNum, setTileNum] = React.useState(0);\n  const [marginLeft, setMarginLeft] = React.useState(0);\n  const [index, setIndex] = React.useState(1);\n  const [pause, setPause] = React.useState(false);\n  const [hover, setHover] = React.useState(undefined);\n  const rotate = portals.mainPortal.portals.length > tileNum;\n\n  const [kill, setKill] = React.useState(false);\n  const wrapper = React.useRef(null);\n\n  const imageWidth = width >= 1600 ? 1700 : width >= 1150 ? 1150 : width >= 900 ? 900 : width >= 600 ? 600 : 400;\n\n  React.useEffect(() => {\n    if (rotate && portals && width) {\n      const interval = setInterval(() => {\n        if (!pause) {\n          setIndex(index + 1 <= portals.mainPortal.portals.length - (tileNum - 1) ? index + 1 : 1);\n        }\n      }, 5000 + 1000);\n      return () => clearInterval(interval);\n    }\n  }, [rotate, portals, tileNum, marginLeft, width, pause, index]);\n\n  React.useEffect(() => {\n    if (portals && width) {\n      setMarginLeft((index - 1) * (tileWidth * -1));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- @see TODO_NEED_VERIFICATION\n  }, [portals, index, width]);\n\n  useOnResize(() => {\n    if (wrapper.current) {\n      let wrapperWidth = wrapper.current.offsetWidth + 12;\n      let tileNum = wrapperWidth > 954 ? 6 : wrapperWidth > 870 ? 5 : wrapperWidth > 470 ? 3 : 2;\n      if (tileNum === 6 && portals.mainPortal.portals.length < 9) {\n        tileNum = portals.mainPortal.portals.length;\n      }\n      setWidth(wrapperWidth);\n      setTileNum(tileNum);\n      setTileWidth(wrapperWidth / tileNum);\n    }\n  });\n\n  const NON_CATEGORY = Object.freeze({\n    BANNER: { label: 'Banner' },\n    FOLLOWING: { label: 'Following' },\n    PORTALS: { label: 'Portals' },\n    FYP: { label: 'Recommended' },\n  });\n\n  function getInitialList(listId, savedOrder, homepageSections) {\n    const savedActiveOrder = savedOrder.active || [];\n    const savedHiddenOrder = savedOrder.hidden || [];\n    const sectionKeys = Object.keys(homepageSections);\n\n    let activeOrder: Array<string> = savedActiveOrder.filter((x) => sectionKeys.includes(x));\n    let hiddenOrder: Array<string> = savedHiddenOrder.filter((x) => sectionKeys.includes(x));\n\n    sectionKeys.forEach((key: string) => {\n      if (!activeOrder.includes(key) && !hiddenOrder.includes(key)) {\n        if (homepageSections[key].hideByDefault) {\n          hiddenOrder.push(key);\n        } else {\n          if (key === 'BANNER') {\n            activeOrder.unshift(key);\n          } else if (key === 'PORTALS') {\n            // Skip\n          } else {\n            activeOrder.push(key);\n          }\n        }\n      }\n    });\n    activeOrder = activeOrder.filter((x) => !hiddenOrder.includes(x));\n    return listId === 'ACTIVE' ? activeOrder : hiddenOrder;\n  }\n\n  function removePortals() {\n    let orderToSave = homepageOrder;\n    if (orderToSave.active && orderToSave.active.includes('PORTALS')) {\n      orderToSave.active.splice(orderToSave.active.indexOf('PORTALS'), 1);\n      if (orderToSave.hidden) {\n        orderToSave.hidden.push('PORTALS');\n      } else {\n        orderToSave.hidden = ['PORTALS'];\n      }\n    } else if (!orderToSave.hidden) {\n      const SECTIONS = { ...NON_CATEGORY, ...categories };\n      orderToSave = { active: [], hidden: [] };\n      orderToSave.active = getInitialList('ACTIVE', homepageOrder, SECTIONS);\n      orderToSave.hidden = getInitialList('HIDDEN', homepageOrder, SECTIONS);\n      orderToSave.hidden.push('PORTALS');\n    } else if (orderToSave.hidden && !orderToSave.hidden.includes('PORTALS')) {\n      orderToSave.hidden.push('PORTALS');\n    }\n    doSetClientSetting(SETTINGS.HOMEPAGE_ORDER, orderToSave, true);\n    setKill(true);\n  }\n\n  return portals && portals.mainPortal ? (\n    <div\n      id=\"portals\"\n      className={classnames('portals-wrapper', { kill: kill })}\n      style={{\n        backgroundImage:\n          'url(https://thumbnails.odycdn.com/optimize/s:' +\n          imageWidth +\n          ':0/quality:95/plain/' +\n          portals.mainPortal.background +\n          ')',\n      }}\n      onMouseEnter={() => setPause(true)}\n      onMouseLeave={() => setPause(false)}\n    >\n      <h1>{portals.mainPortal.description}</h1>\n      <div className=\"portal-rotator\" style={{ marginLeft: marginLeft }} ref={wrapper}>\n        {portals.mainPortal.portals.map((portal, i) => {\n          return (\n            <div\n              className={classnames('portal-wrapper', { disabled: portal.name === activePortal })}\n              style={{ width: tileWidth - 12, minWidth: tileWidth - 12 }}\n              key={i}\n              onMouseEnter={() => setHover(portal.name)}\n              onMouseLeave={() => setHover(undefined)}\n            >\n              <NavLink aria-hidden tabIndex={-1} to={{ pathname: '/$/portal/' + portal.name, state: portal }}>\n                <div\n                  className=\"portal-thumbnail\"\n                  style={{\n                    background: `rgba(` + portal.css.rgb + `,` + (hover === portal.name ? 1 : 0.8) + `)`,\n                    border: `2px solid rgba(` + portal.css.rgb + `,1)`,\n                  }}\n                >\n                  <img\n                    style={{ width: tileWidth - 12, height: tileWidth - 12 }}\n                    src={'https://thumbnails.odycdn.com/optimize/s:237:0/quality:95/plain/' + portal.image}\n                  />\n                </div>\n                <div className=\"portal-title\" style={{ border: `2px solid rgba(` + portal.css.rgb + `,1)` }}>\n                  <label>{portal.label}</label>\n                </div>\n              </NavLink>\n            </div>\n          );\n        })}\n      </div>\n      {portals.mainPortal.portals.length > tileNum && (\n        <>\n          <div\n            className=\"portal-browse left\"\n            onClick={() => setIndex(index > 1 ? index - 1 : portals.mainPortal.portals.length - (tileNum - 1))}\n          >\n            ‹\n          </div>\n          <div\n            className=\"portal-browse right\"\n            onClick={() => setIndex(index + (tileNum - 1) < portals.mainPortal.portals.length ? index + 1 : 1)}\n          >\n            ›\n          </div>\n          <div className=\"portal-active-indicator\">\n            {portals &&\n              portals.mainPortal.portals.map((item, i) => {\n                return (\n                  i < portals.mainPortal.portals.length - (tileNum - 1) && (\n                    <div\n                      key={i}\n                      className={i + 1 === index ? 'portal-active-indicator-active' : ''}\n                      onClick={() => setIndex(i + 1)}\n                    />\n                  )\n                );\n              })}\n          </div>\n        </>\n      )}\n      {authenticated && (\n        <div className=\"portals-remove\" onClick={() => removePortals()}>\n          <Icon icon={ICONS.REMOVE} />\n        </div>\n      )}\n    </div>\n  ) : (\n    <div className=\"portals-wrapper\">\n      <div className=\"portal-wrapper\">\n        <div className=\"portal-thumbnail\" />\n      </div>\n    </div>\n  );\n}\n"],"names":["perform","doSetClientSetting","connect","state","homepageOrder","selectClientSetting","SETTINGS","props","homepageData","authenticated","activePortal","portals","categories","_React$useState2","_slicedToArray","React","width","setWidth","_React$useState4","tileWidth","setTileWidth","_React$useState6","tileNum","setTileNum","_React$useState8","marginLeft","setMarginLeft","_React$useState10","index","setIndex","_React$useState12","pause","setPause","_React$useState14","undefined","hover","setHover","rotate","mainPortal","length","_React$useState16","kill","setKill","wrapper","imageWidth","interval","setInterval","clearInterval","useOnResize","current","wrapperWidth","offsetWidth","_tileNum","NON_CATEGORY","Object","freeze","BANNER","label","FOLLOWING","PORTALS","FYP","getInitialList","listId","savedOrder","homepageSections","savedActiveOrder","active","savedHiddenOrder","hidden","sectionKeys","keys","activeOrder","filter","x","includes","hiddenOrder","forEach","key","hideByDefault","push","unshift","id","className","classnames","style","backgroundImage","background","onMouseEnter","onMouseLeave","description","ref","map","portal","i","disabled","name","minWidth","NavLink","tabIndex","to","pathname","css","rgb","border","height","src","image","onClick","item","orderToSave","splice","indexOf","SECTIONS","_objectSpread","removePortals","Icon","icon","ICONS"],"sourceRoot":""}