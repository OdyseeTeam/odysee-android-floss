{"version":3,"file":"markdownPost-495a8f64dff45b6233de.js","mappings":"oQAMMA,GAAeC,EAAAA,EAAAA,IAAW,kBAAM,kEAAmE,IACnGC,GAAaD,EAAAA,EAAAA,IAAW,kBAAM,8BAAmE,IA4DvG,IAAME,EAAc,SAAHC,GAAA,IAAMC,EAAQD,EAARC,SAAQ,OAC7BC,EAAAA,cAAA,OAAKC,UAAU,oCAAoCF,EAAe,ECvCpE,SAAeG,EAAAA,EAAAA,KAlBA,SAACC,EAAOC,GACrB,IAAQC,EAAQD,EAARC,IACAC,EAAWC,SAAXD,OAEFE,EAAY,IAAIC,gBAAgBH,GAChCI,GAAQC,EAAAA,EAAAA,IAAkBR,EAAOE,GAEjCO,EAAUF,EAAMG,SAEtB,MAAO,CACLC,UAAUC,EAAAA,EAAAA,IAAwBZ,EAAOE,GACzCW,gBAAiBR,EAAUS,IAAIC,EAAAA,IAC/BC,gBAAiBX,EAAUS,IAAIG,EAAAA,IAC/BC,gBAAiBT,IAAWU,EAAAA,EAAAA,IAAmDnB,EAAOS,GACtFW,wBAAwBC,EAAAA,EAAAA,IAA0CrB,GAAOsB,EAAAA,EAAAA,IAAsBf,IAEnG,GAEA,EDTe,SAA0BN,GACvC,IACEC,EAQED,EARFC,IACAqB,EAOEtB,EAPFsB,aAEAZ,EAKEV,EALFU,SACAE,EAIEZ,EAJFY,gBACAG,EAGEf,EAHFe,gBACAI,EAEEnB,EAFFmB,uBACAF,EACEjB,EADFiB,gBAGF,OAAIP,EAEAd,EAAAA,cAACH,EAAW,KACVG,EAAAA,cAAC2B,EAAAA,EAAgB,CAACtB,IAAKA,EAAKqB,aAAcA,EAAcE,eAAa,KAMzE5B,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACH,EAAW,KACVG,EAAAA,cAACA,EAAAA,SAAc,CAAC6B,SAAU,MACxB7B,EAAAA,cAACJ,EAAU,CAACS,IAAKA,MAIrBL,EAAAA,cAAA,OAAKC,UAAU,4BACZsB,EACCvB,EAAAA,cAAC8B,EAAAA,EAAK,CAACC,KAAMC,EAAG,wDACdX,EACFrB,EAAAA,cAACA,EAAAA,SAAc,CAAC6B,SAAU,MACxB7B,EAAAA,cAACN,EAAY,CACXW,IAAKA,EACLW,gBAAiBA,EACjBG,gBAAiBA,EACjBc,qBAAmB,EACnBC,aAAW,KAGb,MAIZ,G","sources":["webpack://odysee.com/../ui/page/claim/internal/claimPageComponent/internal/streamClaimPage/internal/markdownPost/view.jsx","webpack://odysee.com/../ui/page/claim/internal/claimPageComponent/internal/streamClaimPage/internal/markdownPost/index.js"],"sourcesContent":["// @flow\nimport * as React from 'react';\nimport Empty from 'component/common/empty';\nimport FileTitleSection from 'component/fileTitleSection';\nimport { lazyImport } from 'util/lazyImport';\n\nconst CommentsList = lazyImport(() => import('component/commentsList' /* webpackChunkName: \"comments\" */));\nconst PostViewer = lazyImport(() => import('component/postViewer' /* webpackChunkName: \"postViewer\" */));\n\ntype Props = {\n  uri: string,\n  accessStatus: ?string,\n  // -- redux --\n  isMature: boolean,\n  linkedCommentId?: string,\n  threadCommentId?: string,\n  commentSettingDisabled: ?boolean,\n  contentUnlocked: boolean,\n};\n\nexport default function MarkdownPostPage(props: Props) {\n  const {\n    uri,\n    accessStatus,\n    // -- redux --\n    isMature,\n    linkedCommentId,\n    threadCommentId,\n    commentSettingDisabled,\n    contentUnlocked,\n  } = props;\n\n  if (isMature) {\n    return (\n      <PostWrapper>\n        <FileTitleSection uri={uri} accessStatus={accessStatus} isNsfwBlocked />\n      </PostWrapper>\n    );\n  }\n\n  return (\n    <>\n      <PostWrapper>\n        <React.Suspense fallback={null}>\n          <PostViewer uri={uri} />\n        </React.Suspense>\n      </PostWrapper>\n\n      <div className=\"file-page__post-comments\">\n        {commentSettingDisabled ? (\n          <Empty text={__('The creator of this content has disabled comments.')} />\n        ) : contentUnlocked ? (\n          <React.Suspense fallback={null}>\n            <CommentsList\n              uri={uri}\n              linkedCommentId={linkedCommentId}\n              threadCommentId={threadCommentId}\n              commentsAreExpanded\n              notInDrawer\n            />\n          </React.Suspense>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nconst PostWrapper = ({ children }: { children: any }) => (\n  <div className=\"section card-stack file-page__md\">{children}</div>\n);\n","import { connect } from 'react-redux';\n\nimport { LINKED_COMMENT_QUERY_PARAM, THREAD_COMMENT_QUERY_PARAM } from 'constants/comment';\n\nimport { selectCommentsDisabledSettingForChannelId } from 'redux/selectors/comments';\nimport { selectClaimIsNsfwForUri, selectClaimForUri } from 'redux/selectors/claims';\nimport { selectNoRestrictionOrUserIsMemberForContentClaimId } from 'redux/selectors/memberships';\nimport { getChannelIdFromClaim } from 'util/claim';\n\nimport MarkdownPostPage from './view';\n\nconst select = (state, props) => {\n  const { uri } = props;\n  const { search } = location;\n\n  const urlParams = new URLSearchParams(search);\n  const claim = selectClaimForUri(state, uri);\n\n  const claimId = claim.claim_id;\n\n  return {\n    isMature: selectClaimIsNsfwForUri(state, uri),\n    linkedCommentId: urlParams.get(LINKED_COMMENT_QUERY_PARAM),\n    threadCommentId: urlParams.get(THREAD_COMMENT_QUERY_PARAM),\n    contentUnlocked: claimId && selectNoRestrictionOrUserIsMemberForContentClaimId(state, claimId),\n    commentSettingDisabled: selectCommentsDisabledSettingForChannelId(state, getChannelIdFromClaim(claim)),\n  };\n};\n\nexport default connect(select)(MarkdownPostPage);\n"],"names":["CommentsList","lazyImport","PostViewer","PostWrapper","_ref","children","React","className","connect","state","props","uri","search","location","urlParams","URLSearchParams","claim","selectClaimForUri","claimId","claim_id","isMature","selectClaimIsNsfwForUri","linkedCommentId","get","LINKED_COMMENT_QUERY_PARAM","threadCommentId","THREAD_COMMENT_QUERY_PARAM","contentUnlocked","selectNoRestrictionOrUserIsMemberForContentClaimId","commentSettingDisabled","selectCommentsDisabledSettingForChannelId","getChannelIdFromClaim","accessStatus","FileTitleSection","isNsfwBlocked","fallback","Empty","text","__","commentsAreExpanded","notInDrawer"],"sourceRoot":""}