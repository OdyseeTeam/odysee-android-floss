{"version":3,"file":"postViewer-7d7ea868e60ce92fd44f.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/fileTitle/view.jsx","webpack://odysee.com/../ui/component/fileTitle/index.js","webpack://odysee.com/../ui/component/postViewer/view.jsx","webpack://odysee.com/../ui/component/postViewer/index.js"],"sourcesContent":["// @flow\nimport type { Node } from 'react';\nimport * as React from 'react';\nimport classnames from 'classnames';\n\ntype Props = {\n  title: string,\n  className?: string,\n  children?: Node,\n};\n\nfunction FileTitle(props: Props) {\n  const { title, children, className } = props;\n\n  return (\n    <h1 className={classnames(className)}>\n      <span>{title}</span>\n      {children}\n    </h1>\n  );\n}\n\nexport default FileTitle;\n","import { connect } from 'react-redux';\nimport { selectTitleForUri } from 'redux/selectors/claims';\nimport FileTitleSection from './view';\n\nconst select = (state, props) => ({\n  title: selectTitleForUri(state, props.uri),\n});\n\nexport default connect(select)(FileTitleSection);\n","// @flow\nimport * as React from 'react';\nimport * as ICONS from 'constants/icons';\nimport * as MODALS from 'constants/modal_types';\nimport { formatCredits } from 'util/format-credits';\nimport FileDetails from 'component/fileDetails';\nimport GeoRestictionInfo from 'component/geoRestictionInfo';\nimport ClaimAuthor from 'component/claimAuthor';\nimport FileTitle from 'component/fileTitle';\nimport FileActions from 'component/fileActions';\nimport StreamClaimRenderInline from 'component/streamClaimRenderInline';\nimport FileValues from 'component/fileValues';\nimport FileViewCount from 'component/fileViewCount';\nimport ClaimTags from 'component/claimTags';\nimport DateTime from 'component/dateTime';\nimport Button from 'component/button';\nimport LbcSymbol from 'component/common/lbc-symbol';\nimport classnames from 'classnames';\nimport './style.lazy.scss';\n\nconst EXPAND = {\n  NONE: 'none',\n  CREDIT_DETAILS: 'credit_details',\n  FILE_DETAILS: 'file_details',\n};\n\ntype Props = {\n  uri: string,\n  claim: ?StreamClaim,\n  claimIsMine: boolean,\n  contentUnlocked: boolean,\n  doOpenModal: (id: string, {}) => void,\n};\n\nfunction PostViewer(props: Props) {\n  const { uri, claim, claimIsMine, contentUnlocked, doOpenModal } = props;\n  const [expand, setExpand] = React.useState(EXPAND.NONE);\n\n  if (!claim) {\n    return null;\n  }\n\n  const amount = parseFloat(claim.amount) + parseFloat(claim.meta.support_amount);\n  const formattedAmount = formatCredits(amount, 2, true);\n  const hasSupport = claim && claim.meta && claim.meta.support_amount && Number(claim.meta.support_amount) > 0;\n\n  function handleExpand(newExpand) {\n    if (expand === newExpand) {\n      setExpand(EXPAND.NONE);\n    } else {\n      setExpand(newExpand);\n    }\n  }\n\n  return (\n    <div className=\"post\">\n      <FileTitle uri={uri} className=\"post__title\" />\n      <GeoRestictionInfo uri={uri} />\n      <div\n        className={classnames('post__info', {\n          'post__info--expanded': expand !== EXPAND.NONE,\n        })}\n      >\n        <span className=\"post__date\">\n          <DateTime uri={uri} type=\"date\" />\n          {contentUnlocked && <FileViewCount uri={uri} />}\n        </span>\n        <div className=\"post__info--grouped\">\n          <Button\n            button=\"link\"\n            className=\"dim\"\n            icon={ICONS.INFO}\n            aria-label={__('View claim details')}\n            onClick={() => handleExpand(EXPAND.FILE_DETAILS)}\n          />\n          <Button button=\"link\" className=\"dim\" onClick={() => handleExpand(EXPAND.CREDIT_DETAILS)}>\n            <LbcSymbol postfix={expand === EXPAND.CREDIT_DETAILS ? __('Hide') : formattedAmount} />\n          </Button>\n          {claimIsMine && hasSupport && (\n            <Button\n              button=\"link\"\n              className=\"expandable__button\"\n              icon={ICONS.UNLOCK}\n              aria-label={__('Unlock tips')}\n              onClick={() => {\n                doOpenModal(MODALS.LIQUIDATE_SUPPORTS, { uri });\n              }}\n            />\n          )}\n        </div>\n      </div>\n\n      {expand === EXPAND.CREDIT_DETAILS && (\n        <div className=\"section post__info--credit-details\">\n          <FileValues uri={uri} />\n        </div>\n      )}\n\n      {expand === EXPAND.FILE_DETAILS && (\n        <div className=\"section post__info--credit-details\">\n          <ClaimTags uri={uri} type=\"large\" />\n          <FileDetails uri={uri} />\n        </div>\n      )}\n\n      <ClaimAuthor uri={uri} />\n\n      <div className=\"file-render--post-container\">\n        <StreamClaimRenderInline uri={uri} />\n      </div>\n      <FileActions uri={uri} />\n    </div>\n  );\n}\n\nexport default PostViewer;\n","import { connect } from 'react-redux';\nimport { selectClaimForUri, selectClaimIsMineForUri } from 'redux/selectors/claims';\nimport { selectNoRestrictionOrUserIsMemberForContentClaimId } from 'redux/selectors/memberships';\nimport PostViewer from './view';\nimport { doOpenModal } from 'redux/actions/app';\n\nconst select = (state, props) => {\n  const { uri } = props;\n  const claim = selectClaimForUri(state, uri);\n\n  return {\n    claim,\n    claimIsMine: selectClaimIsMineForUri(state, uri),\n    contentUnlocked: claim && selectNoRestrictionOrUserIsMemberForContentClaimId(state, claim.claim_id),\n  };\n};\n\nexport default connect(select, {\n  doOpenModal,\n})(PostViewer);\n"],"names":["props","title","children","className","React","classnames","connect","state","selectTitleForUri","uri","FileTitleSection","EXPAND","NONE","CREDIT_DETAILS","FILE_DETAILS","claim","claimIsMine","contentUnlocked","doOpenModal","_React$useState2","_slicedToArray","expand","setExpand","amount","parseFloat","meta","support_amount","formattedAmount","formatCredits","hasSupport","Number","handleExpand","newExpand","FileTitle","GeoRestictionInfo","DateTime","type","FileViewCount","Button","button","icon","ICONS","__","onClick","LbcSymbol","postfix","MODALS","FileValues","ClaimTags","FileDetails","ClaimAuthor","StreamClaimRenderInline","FileActions","selectClaimForUri","selectClaimIsMineForUri","selectNoRestrictionOrUserIsMemberForContentClaimId","claim_id","PostViewer"],"sourceRoot":""}