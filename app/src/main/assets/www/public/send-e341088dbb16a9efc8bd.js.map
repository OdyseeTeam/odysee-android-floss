{"version":3,"file":"send-e341088dbb16a9efc8bd.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/common/card.jsx","webpack://odysee.com/../ui/component/walletSpendableBalanceHelp/view.jsx","webpack://odysee.com/../ui/component/walletSpendableBalanceHelp/index.js","webpack://odysee.com/../ui/util/form-validation.js","webpack://odysee.com/../ui/component/walletSend/view.jsx","webpack://odysee.com/../ui/component/walletSend/index.js","webpack://odysee.com/../ui/page/send/index.js","webpack://odysee.com/../ui/page/send/view.jsx"],"sourcesContent":["// @flow\nimport type { Node } from 'react';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Icon from 'component/common/icon';\nimport Button from 'component/button';\nimport * as ICONS from 'constants/icons';\n// import twemoji from 'twemoji';\nimport Tooltip from 'component/common/tooltip';\n\ntype Props = {\n  title?: string | Node,\n  subtitle?: string | Node,\n  titleActions?: string | Node,\n  id?: string,\n  body?: string | Node,\n  actions?: string | Node,\n  icon?: string,\n  className?: string,\n  isPageTitle?: boolean,\n  noTitleWrap?: boolean,\n  isBodyList?: boolean,\n  defaultExpand?: boolean,\n  nag?: Node,\n  smallTitle?: boolean,\n  onClick?: () => void,\n  children?: Node,\n  secondPane?: Node,\n  slimHeader?: boolean,\n  background?: boolean,\n  backgroundImage?: string,\n  singlePane?: boolean,\n  headerActions?: Node,\n  gridHeader?: boolean,\n  accessStatus?: string,\n};\n\nfunction Card(props: Props) {\n  const {\n    title,\n    subtitle,\n    titleActions,\n    id,\n    body,\n    actions,\n    icon,\n    className,\n    isPageTitle = false,\n    isBodyList = false,\n    // noTitleWrap = false,\n    smallTitle = false,\n    defaultExpand,\n    nag,\n    onClick,\n    children,\n    secondPane,\n    slimHeader,\n    background,\n    backgroundImage,\n    singlePane,\n    headerActions,\n    accessStatus,\n    gridHeader,\n  } = props;\n\n  const [expanded, setExpanded] = useState(defaultExpand);\n  const expandable = defaultExpand !== undefined;\n\n  return (\n    <section\n      role={onClick ? 'button' : undefined}\n      className={classnames(className, 'card', {\n        'card__multi-pane': Boolean(secondPane),\n        'card--background': background,\n      })}\n      id={id}\n      onClick={(e) => {\n        if (onClick) {\n          onClick();\n          e.stopPropagation();\n        }\n      }}\n    >\n      {backgroundImage && (\n        <div\n          className=\"background\"\n          style={{\n            backgroundImage:\n              'url(https://thumbnails.odycdn.com/optimize/s:390:0/quality:85/plain/' + backgroundImage + ')',\n          }}\n        />\n      )}\n      <FirstPaneWrapper singlePane={singlePane}>\n        {(title || subtitle) && (\n          <div\n            className={classnames('card__header--between', {\n              'card__header--slim': slimHeader,\n              'card__header--grid': gridHeader,\n            })}\n          >\n            <div className={classnames('card__title-section', { 'card__title-section--body-list': isBodyList })}>\n              {icon && <Icon sectionIcon icon={icon} />}\n\n              <div className=\"card__title-text\">\n                <TitleWrapper isPageTitle={isPageTitle} smallTitle={smallTitle} accessStatus={accessStatus}>\n                  {title}\n                </TitleWrapper>\n\n                {subtitle && (\n                  <div className={classnames('card__subtitle', { 'card__subtitle--small': smallTitle })}>\n                    {subtitle}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {(titleActions || expandable) && (\n              <div className=\"card__title-actions-container\">\n                {titleActions && (\n                  <div\n                    className={classnames('card__title-actions', {\n                      'card__title-actions--small': smallTitle,\n                    })}\n                  >\n                    {titleActions}\n                  </div>\n                )}\n                {expandable && (\n                  <div className=\"card__title-actions\">\n                    <Button\n                      button=\"alt\"\n                      aria-expanded={expanded}\n                      aria-label={expanded ? __('Less') : __('More')}\n                      icon={expanded ? ICONS.SUBTRACT : ICONS.ADD}\n                      onClick={() => setExpanded(!expanded)}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n\n            {headerActions}\n          </div>\n        )}\n\n        {(!expandable || (expandable && expanded)) && (\n          <>\n            {body && (\n              <div\n                className={classnames('card__body', {\n                  'card__body--no-title': !title && !subtitle,\n                  'card__body--list': isBodyList,\n                })}\n              >\n                {body}\n              </div>\n            )}\n            {actions && <div className=\"card__main-actions\">{actions}</div>}\n            {children && <div className=\"card__main-actions\">{children}</div>}\n          </>\n        )}\n\n        {nag}\n      </FirstPaneWrapper>\n\n      {secondPane && <div className=\"card__second-pane\">{secondPane}</div>}\n    </section>\n  );\n}\n\ntype FirstPaneProps = {\n  singlePane?: boolean,\n  children: any,\n};\n\nconst FirstPaneWrapper = (props: FirstPaneProps) => {\n  const { singlePane, children } = props;\n\n  return singlePane ? children : <div className=\"card__first-pane\">{children}</div>;\n};\n\ntype TitleProps = {\n  isPageTitle?: boolean,\n  smallTitle?: boolean,\n  children?: any,\n  emoji?: any,\n  accessStatus?: string,\n};\n\nconst TitleWrapper = (props: TitleProps) => {\n  const { isPageTitle, smallTitle, children, accessStatus } = props;\n\n  /*\n  const Twemoji = ({ emoji }) => (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: twemoji.parse(emoji, {\n          folder: 'svg',\n          ext: '.svg',\n        }),\n      }}\n    />\n  );\n  */\n\n  const AccessIndicator = (par: any) => {\n    return (\n      <Tooltip title={__('This is a members-only content')}>\n        <div\n          className={classnames('content-access-indicator', {\n            locked: par.status === 'locked',\n            unlocked: par.status === 'unlocked',\n            purchased: par.status === 'purchased',\n          })}\n        >\n          <Icon icon={par.status === 'locked' ? ICONS.LOCK : ICONS.UNLOCK} />\n        </div>\n      </Tooltip>\n    );\n  };\n\n  /*\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return <Twemoji emoji={children?.props?.children[child]} />;\n      }\n    }\n    return children;\n  }\n  */\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return children?.props?.children[child];\n      }\n    }\n    return children;\n  }\n\n  return isPageTitle ? (\n    <h1 className=\"card__title\">\n      {accessStatus && <AccessIndicator status={accessStatus} />}\n      <font dangerouslySetInnerHTML={{ __html: transformer(children) }} />\n    </h1>\n  ) : (\n    <h2 className={classnames('card__title', { 'card__title--small': smallTitle })}>{children}</h2>\n  );\n};\n\nexport default Card;\n","// @flow\nimport CreditAmount from 'component/common/credit-amount';\nimport I18nMessage from 'component/i18nMessage';\nimport React from 'react';\n\ntype Props = { balance: number, inline?: boolean };\n\nfunction WalletSpendableBalanceHelp(props: Props) {\n  const { balance, inline } = props;\n\n  const getMessage = (text: string) => (\n    <I18nMessage tokens={{ balance: <CreditAmount amount={balance} precision={4} /> }}>{text}</I18nMessage>\n  );\n\n  return !balance ? null : inline ? (\n    <span className=\"help--spendable\">{getMessage('%balance% available.')}</span>\n  ) : (\n    <div className=\"help\">{getMessage('Your immediately spendable balance is %balance%.')}</div>\n  );\n}\n\nexport default WalletSpendableBalanceHelp;\n","import { connect } from 'react-redux';\nimport { selectBalance } from 'redux/selectors/wallet';\nimport WalletSpendableBalanceHelp from './view';\n\nconst select = (state) => ({ balance: selectBalance(state) });\n\nexport default connect(select)(WalletSpendableBalanceHelp);\n","// @flow\nimport { regexAddress } from 'util/lbryURI';\n\nexport default function validateSendTx(address: string) {\n  const errors = {\n    address: '',\n  };\n\n  // All we need to check is if the address is valid\n  // If values are missing, users wont' be able to submit the form\n  if (!process.env.NO_ADDRESS_VALIDATION && !regexAddress.test(address)) {\n    errors.address = __('Not a valid LBRY address');\n  }\n\n  return errors;\n}\n","// @flow\nimport * as MODALS from 'constants/modal_types';\nimport React from 'react';\nimport Button from 'component/button';\nimport { Form, FormField } from 'component/common/form';\nimport { Formik } from 'formik';\nimport validateSendTx from 'util/form-validation';\nimport Card from 'component/common/card';\nimport WalletSpendableBalanceHelp from 'component/walletSpendableBalanceHelp';\nimport classnames from 'classnames';\nimport ChannelSelector from 'component/channelSelector';\nimport ClaimPreview from 'component/claimPreview';\n\ntype Props = {\n  openModal: (id: string, { destination: string, amount: string, isAddress: boolean }) => void,\n  draftTransaction: { address: string, amount: string },\n  setDraftTransaction: ({ address: string, amount: string }) => void,\n  balance: number,\n  isAddress: boolean,\n  setIsAddress: (boolean) => void,\n  contentUri: string,\n  contentError: string,\n  contentClaim?: StreamClaim,\n  setEnteredContentUri: (string) => void,\n  confirmed: boolean,\n  setConfirmed: (boolean) => void,\n  sendLabel: string,\n  setSendLabel: (string) => void,\n  snack: ?{\n    linkTarget: ?string,\n    linkText: ?string,\n    message: string,\n    isError: boolean,\n  },\n};\n\nclass WalletSend extends React.PureComponent<Props> {\n  constructor() {\n    super();\n\n    (this: any).handleSubmit = this.handleSubmit.bind(this);\n    (this: any).handleClear = this.handleClear.bind(this);\n  }\n\n  handleSubmit() {\n    const { draftTransaction, openModal, isAddress, contentUri, setConfirmed } = this.props;\n    const destination = isAddress ? draftTransaction.address : contentUri;\n    const amount = draftTransaction.amount;\n\n    const modalProps = { destination, amount, isAddress, setConfirmed };\n\n    openModal(MODALS.CONFIRM_TRANSACTION, modalProps);\n  }\n\n  handleClear() {\n    const { setDraftTransaction, setConfirmed } = this.props;\n    setDraftTransaction({\n      address: '',\n      amount: '',\n    });\n    setConfirmed(false);\n  }\n\n  render() {\n    const {\n      draftTransaction,\n      setDraftTransaction,\n      balance,\n      isAddress,\n      setIsAddress,\n      contentUri,\n      contentClaim,\n      setEnteredContentUri,\n      contentError,\n      confirmed,\n      sendLabel,\n      setSendLabel,\n      snack,\n    } = this.props;\n    if (confirmed) {\n      this.handleClear();\n      setSendLabel('Sending...');\n    }\n    if (snack) setSendLabel('Send');\n\n    return (\n      <Card\n        title={__('Send Credits')}\n        subtitle={__('Send Credits to your friends or favorite creators.')}\n        actions={\n          <Formik\n            initialValues={{\n              address: '',\n              amount: '',\n            }}\n            onSubmit={this.handleSubmit}\n            render={({ values, errors, touched, handleBlur, handleSubmit }) => (\n              <div>\n                <div className=\"section\">\n                  <Button\n                    key=\"Address\"\n                    label={__('Address')}\n                    button=\"alt\"\n                    onClick={() => setIsAddress(true)}\n                    className={classnames('button-toggle', { 'button-toggle--active': isAddress })}\n                  />\n                  <Button\n                    key=\"Search\"\n                    label={__('Search')}\n                    button=\"alt\"\n                    onClick={() => setIsAddress(false)}\n                    className={classnames('button-toggle', { 'button-toggle--active': !isAddress })}\n                  />\n                </div>\n\n                <div className=\"section\">\n                  {!isAddress && <ChannelSelector />}\n\n                  <Form onSubmit={handleSubmit}>\n                    {!isAddress && (\n                      <FormField\n                        type=\"text\"\n                        name=\"search\"\n                        error={contentError}\n                        placeholder={__('Enter a name, @username or URL')}\n                        className=\"form-field--address\"\n                        label={__('Recipient search')}\n                        onChange={(event) => setEnteredContentUri(event.target.value)}\n                        onBlur={handleBlur}\n                        value={values.search}\n                      />\n                    )}\n\n                    {!isAddress && (\n                      <fieldset-section>\n                        <ClaimPreview\n                          key={contentUri}\n                          uri={contentUri}\n                          actions={''}\n                          type={'small'}\n                          showNullPlaceholder\n                          hideMenu\n                          hideRepostLabel\n                          nonClickable\n                        />\n                      </fieldset-section>\n                    )}\n\n                    <fieldset-group class=\"fieldset-group--smushed\">\n                      <FormField\n                        autoFocus\n                        type=\"number\"\n                        name=\"amount\"\n                        label={__('Amount')}\n                        className=\"form-field--price-amount\"\n                        affixClass=\"form-field--fix-no-height\"\n                        min=\"0\"\n                        step=\"any\"\n                        placeholder=\"12.34\"\n                        onChange={(event) =>\n                          setDraftTransaction({ address: draftTransaction.address, amount: event.target.value })\n                        }\n                        onBlur={handleBlur}\n                        value={draftTransaction.amount}\n                      />\n                      {isAddress && (\n                        <FormField\n                          type=\"text\"\n                          name=\"address\"\n                          placeholder={'bbFxRyXXXXXXXXXXXZD8nE7XTLUxYnddTs'}\n                          className=\"form-field--address\"\n                          label={__('Recipient address')}\n                          onChange={(event) =>\n                            setDraftTransaction({ address: event.target.value, amount: draftTransaction.amount })\n                          }\n                          onBlur={handleBlur}\n                          value={draftTransaction.address}\n                        />\n                      )}\n                    </fieldset-group>\n\n                    <div className=\"card__actions\">\n                      <Button\n                        button=\"primary\"\n                        type=\"submit\"\n                        label={__(sendLabel)}\n                        disabled={\n                          !(parseFloat(draftTransaction.amount) > 0.0) ||\n                          parseFloat(draftTransaction.amount) >= balance ||\n                          sendLabel === 'Sending...' ||\n                          (isAddress\n                            ? !draftTransaction.address || validateSendTx(draftTransaction.address).address !== ''\n                            : !contentClaim)\n                        }\n                      />\n                      {!!Object.keys(errors).length || (\n                        <span className=\"error__text\">\n                          {(!!draftTransaction.address && touched.address && errors.address) ||\n                            (!!draftTransaction.amount && touched.amount && errors.amount) ||\n                            (parseFloat(draftTransaction.amount) === balance &&\n                              __('Decrease amount to account for transaction fee')) ||\n                            (parseFloat(draftTransaction.amount) > balance && __('Not enough Credits'))}\n                        </span>\n                      )}\n                    </div>\n                    <WalletSpendableBalanceHelp />\n                  </Form>\n                </div>\n              </div>\n            )}\n          />\n        }\n      />\n    );\n  }\n}\n\nexport default WalletSend;\n","import { connect } from 'react-redux';\nimport { selectBalance } from 'redux/selectors/wallet';\nimport { makeSelectClaimForUri } from 'redux/selectors/claims';\nimport { doOpenModal } from 'redux/actions/app';\nimport WalletSend from './view';\nimport { withRouter } from 'react-router';\nimport { selectToast } from 'redux/selectors/notifications';\n\nconst perform = (dispatch) => ({\n  openModal: (modal, props) => dispatch(doOpenModal(modal, props)),\n});\n\nconst select = (state, props) => ({\n  balance: selectBalance(state),\n  contentClaim: makeSelectClaimForUri(props.contentUri)(state),\n  snack: selectToast(state),\n});\n\nexport default withRouter(connect(select, perform)(WalletSend));\n","import SendPage from './view';\n\nexport default SendPage;\n","// @flow\nimport React from 'react';\nimport Page from 'component/page';\nimport LbcSymbol from 'component/common/lbc-symbol';\nimport WalletSend from 'component/walletSend';\nimport { URL as SITE_URL, URL_LOCAL, URL_DEV } from 'config';\nimport { parseURI, isNameValid, isURIValid, normalizeURI } from 'util/lbryURI';\n\ntype Props = {};\n\nexport default function SendPage(props: Props) {\n  const [isAddress, setIsAddress] = React.useState(true);\n  const [contentUri, setContentUri] = React.useState('');\n  const [draftTransaction, setDraftTransaction] = React.useState({ address: '', amount: '' });\n  const [enteredContent, setEnteredContentUri] = React.useState(undefined);\n  const contentFirstRender = React.useRef(true);\n  const [contentError, setContentError] = React.useState('');\n  const [confirmed, setConfirmed] = React.useState(false);\n  const [sendLabel, setSendLabel] = React.useState('Send');\n\n  function getSearchUri(value) {\n    const WEB_DEV_PREFIX = `${URL_DEV}/`;\n    const WEB_LOCAL_PREFIX = `${URL_LOCAL}/`;\n    const WEB_PROD_PREFIX = `${SITE_URL}/`;\n    const ODYSEE_PREFIX = `https://odysee.com/`;\n    const includesLbryTvProd = value.includes(WEB_PROD_PREFIX);\n    const includesOdysee = value.includes(ODYSEE_PREFIX);\n    const includesLbryTvLocal = value.includes(WEB_LOCAL_PREFIX);\n    const includesLbryTvDev = value.includes(WEB_DEV_PREFIX);\n    const wasCopiedFromWeb = includesLbryTvDev || includesLbryTvLocal || includesLbryTvProd || includesOdysee;\n    const isLbryUrl = value.startsWith('lbry://') && value !== 'lbry://';\n    const error = '';\n\n    const addLbryIfNot = (term) => {\n      return term.startsWith('lbry://') ? term : `lbry://${term}`;\n    };\n    if (wasCopiedFromWeb) {\n      let prefix = WEB_PROD_PREFIX;\n      if (includesLbryTvLocal) prefix = WEB_LOCAL_PREFIX;\n      if (includesLbryTvDev) prefix = WEB_DEV_PREFIX;\n      if (includesOdysee) prefix = ODYSEE_PREFIX;\n\n      let query = (value && value.slice(prefix.length).replace(/:/g, '#')) || '';\n      try {\n        const lbryUrl = `lbry://${query}`;\n        parseURI(lbryUrl);\n        return [lbryUrl, null];\n      } catch (e) {\n        return [query, 'error'];\n      }\n    }\n\n    if (!isLbryUrl) {\n      if (value.startsWith('@')) {\n        if (isNameValid(value.slice(1))) {\n          return [value, null];\n        } else {\n          return [value, error];\n        }\n      }\n      return [addLbryIfNot(value), null];\n    } else {\n      try {\n        const isValid = isURIValid(value);\n        if (isValid) {\n          let uri;\n          try {\n            uri = normalizeURI(value);\n          } catch (e) {\n            return [value, null];\n          }\n          return [uri, null];\n        } else {\n          return [value, null];\n        }\n      } catch (e) {\n        return [value, 'error'];\n      }\n    }\n  }\n\n  // setContentUri given enteredUri\n  React.useEffect(() => {\n    if (!enteredContent && !contentFirstRender.current) {\n      setContentError(__('A name is required'));\n    }\n    if (enteredContent) {\n      contentFirstRender.current = false;\n      const [searchContent, error] = getSearchUri(enteredContent);\n      if (error) {\n        setContentError(__('Something not quite right..'));\n      } else {\n        setContentError('');\n      }\n      try {\n        const { streamName, channelName, isChannel } = parseURI(searchContent);\n        if (!isChannel && streamName && isNameValid(streamName)) {\n          // contentNameValid = true;\n          setContentUri(searchContent);\n        } else if (isChannel && channelName && isNameValid(channelName)) {\n          // contentNameValid = true;\n          setContentUri(searchContent);\n        }\n      } catch (e) {\n        if (enteredContent !== '@') setContentError('');\n        setContentUri(``);\n      }\n    }\n  }, [enteredContent, setContentUri, setContentError]);\n\n  return (\n    <Page\n      noSideNavigation\n      className=\"main--send\"\n      backout={{\n        backoutLabel: __('Done'),\n        title: (\n          <>\n            <LbcSymbol prefix={__('Send')} size={28} />\n          </>\n        ),\n      }}\n    >\n      <WalletSend\n        isAddress={isAddress}\n        setIsAddress={setIsAddress}\n        contentUri={contentUri}\n        contentError={contentError}\n        setEnteredContentUri={setEnteredContentUri}\n        confirmed={confirmed}\n        setConfirmed={setConfirmed}\n        draftTransaction={draftTransaction}\n        setDraftTransaction={setDraftTransaction}\n        sendLabel={sendLabel}\n        setSendLabel={setSendLabel}\n      />\n    </Page>\n  );\n}\n"],"names":["FirstPaneWrapper","props","singlePane","children","React","className","TitleWrapper","isPageTitle","smallTitle","accessStatus","AccessIndicator","par","Tooltip","title","__","classnames","locked","status","unlocked","purchased","Icon","icon","ICONS","dangerouslySetInnerHTML","__html","child","_children$props","_children$props2","_children$props3","transformer","subtitle","titleActions","id","body","actions","_props$isPageTitle","_props$isBodyList","isBodyList","_props$smallTitle","defaultExpand","nag","_onClick","onClick","secondPane","slimHeader","background","backgroundImage","headerActions","gridHeader","_useState2","_slicedToArray","useState","expanded","setExpanded","expandable","undefined","role","Boolean","e","stopPropagation","style","sectionIcon","Button","button","balance","inline","getMessage","text","I18nMessage","tokens","CreditAmount","amount","precision","connect","state","selectBalance","WalletSpendableBalanceHelp","validateSendTx","address","errors","process","NO_ADDRESS_VALIDATION","regexAddress","_React$PureComponent","_inherits","WalletSend","_super","_createSuper","_this","_classCallCheck","_assertThisInitialized","call","handleSubmit","bind","handleClear","key","value","_this$props","this","draftTransaction","openModal","isAddress","contentUri","setConfirmed","modalProps","destination","MODALS","_this$props2","setDraftTransaction","_this$props3","setIsAddress","contentClaim","setEnteredContentUri","contentError","confirmed","sendLabel","setSendLabel","snack","Card","Formik","initialValues","onSubmit","render","_ref","values","touched","handleBlur","label","ChannelSelector","Form","FormField","type","name","error","placeholder","onChange","event","target","onBlur","search","ClaimPreview","uri","showNullPlaceholder","hideMenu","hideRepostLabel","nonClickable","class","autoFocus","affixClass","min","step","disabled","parseFloat","Object","keys","length","withRouter","makeSelectClaimForUri","selectToast","dispatch","modal","doOpenModal","_React$useState2","_React$useState4","setContentUri","_React$useState6","_React$useState8","enteredContent","contentFirstRender","_React$useState10","setContentError","_React$useState12","_React$useState14","current","_getSearchUri2","term","WEB_DEV_PREFIX","concat","URL_DEV","WEB_LOCAL_PREFIX","URL_LOCAL","WEB_PROD_PREFIX","SITE_URL","ODYSEE_PREFIX","includesLbryTvProd","includes","includesOdysee","includesLbryTvLocal","includesLbryTvDev","wasCopiedFromWeb","isLbryUrl","startsWith","prefix","query","slice","replace","lbryUrl","parseURI","isNameValid","isURIValid","normalizeURI","getSearchUri","searchContent","_parseURI","streamName","channelName","isChannel","Page","noSideNavigation","backout","backoutLabel","LbcSymbol","size"],"sourceRoot":""}