{"version":3,"file":"discover-7660e677c3cada94e656.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/common/hidden-nsfw.jsx","webpack://odysee.com/../ui/page/discover/view.jsx","webpack://odysee.com/../ui/page/discover/index.js","webpack://odysee.com/../ui/page/discover/internal/livestreamSection/view.jsx","webpack://odysee.com/../ui/page/discover/internal/livestreamSection/index.js"],"sourcesContent":["// @flow\nimport * as PAGES from 'constants/pages';\nimport * as ICONS from 'constants/icons';\nimport React from 'react';\nimport Button from 'component/button';\nimport Icon from 'component/common/icon';\nimport I18nMessage from 'component/i18nMessage';\n\ntype Props = {\n  type?: string,\n};\n\nexport default function HiddenNsfw(props: Props) {\n  const { type = 'page' } = props;\n\n  return (\n    <div className=\"section--padded section__subtitle\">\n      <Icon className=\"icon--hidden\" icon={ICONS.EYE_OFF} />\n      <I18nMessage\n        tokens={{\n          type,\n          settings: (\n            <Button button=\"link\" label={__('settings')} navigate={`/$/${PAGES.SETTINGS}`} requiresAuth={IS_WEB} />\n          ),\n        }}\n      >\n        Content may be hidden on this %type% because of your %settings%.\n      </I18nMessage>\n    </div>\n  );\n}\n","// @flow\nimport React from 'react';\nimport classnames from 'classnames';\nimport { DOMAIN, SIMPLE_SITE } from 'config';\nimport * as ICONS from 'constants/icons';\nimport * as PAGES from 'constants/pages';\nimport * as CS from 'constants/claim_search';\nimport Page from 'component/page';\nimport ClaimListDiscover from 'component/claimListDiscover';\nimport Button from 'component/button';\nimport { ClaimSearchFilterContext } from 'contexts/claimSearchFilterContext';\nimport HiddenNsfw from 'component/common/hidden-nsfw';\nimport Icon from 'component/common/icon';\nimport LbcSymbol from 'component/common/lbc-symbol';\nimport I18nMessage from 'component/i18nMessage';\nimport moment from 'moment';\nimport LivestreamSection from './internal/livestreamSection';\nimport { tagSearchCsOptionsHook } from 'util/search';\n\nconst CATEGORY_CONTENT_TYPES_FILTER = CS.CONTENT_TYPES.filter((x) => x !== CS.CLAIM_REPOST);\n\ntype Props = {\n  dynamicRouteProps: RowDataItem,\n  location: { search: string },\n  followedTags: Array<Tag>,\n  repostedUri: string,\n  repostedClaim: ?GenericClaim,\n  doToggleTagFollowDesktop: (string) => void,\n  doResolveUri: (string) => void,\n  tileLayout: boolean,\n  activeLivestreams: ?LivestreamInfo,\n  doFetchActiveLivestreams: (orderBy: ?Array<string>, lang: ?Array<string>) => void,\n};\n\nfunction DiscoverPage(props: Props) {\n  const {\n    location: { search },\n    repostedClaim,\n    repostedUri,\n    doResolveUri,\n    tileLayout,\n    dynamicRouteProps,\n  } = props;\n\n  const isWildWest = dynamicRouteProps && dynamicRouteProps.id === 'WILD_WEST';\n  const isCategory = Boolean(dynamicRouteProps);\n  const hideFilter = dynamicRouteProps?.hideSort || undefined;\n\n  const urlParams = new URLSearchParams(search);\n  const langParam = urlParams.get(CS.LANGUAGE_KEY) || null;\n  const claimType = urlParams.get('claim_type');\n  const tagsQuery = urlParams.get('t') || null;\n  const orderParam = urlParams.get(CS.ORDER_BY_KEY);\n  const tags = tagsQuery ? tagsQuery.split(',') : null;\n  const repostedClaimIsResolved = repostedUri && repostedClaim;\n  const hideRepostRibbon = isCategory && !isWildWest;\n  const hideMembersOnlyContent = isCategory && !isWildWest;\n\n  // Eventually allow more than one tag on this page\n  // Restricting to one to make follow/unfollow simpler\n  const tag = (tags && tags[0]) || null;\n  const routedChannelIds = dynamicRouteProps?.options?.channelIds;\n  const channelIds = routedChannelIds && routedChannelIds.length > 0 ? routedChannelIds : undefined;\n  const excludedChannelIds = dynamicRouteProps?.options?.excludedChannelIds || undefined;\n\n  const claimSearchFilters = {\n    contentTypes: isCategory && !isWildWest ? CATEGORY_CONTENT_TYPES_FILTER : CS.CONTENT_TYPES,\n    liftUpTagSearch: true,\n  };\n\n  // **************************************************************************\n  // **************************************************************************\n\n  function getMeta() {\n    if (!dynamicRouteProps) {\n      return (\n        <a\n          className=\"help\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href=\"https://help.odysee.tv/category-blockchain/category-staking/increase/\"\n          title={__('Learn more about Credits on %DOMAIN%', { DOMAIN })}\n        >\n          <I18nMessage tokens={{ lbc: <LbcSymbol /> }}>Results boosted by %lbc%</I18nMessage>\n        </a>\n      );\n    }\n\n    return null;\n  }\n\n  function getSubSection() {\n    const includeLivestreams = !tagsQuery;\n    if (includeLivestreams && (isWildWest || (channelIds && channelIds.length > 0))) {\n      return (\n        <LivestreamSection\n          tileLayout={repostedUri ? false : tileLayout}\n          channelIds={channelIds}\n          excludedChannelIds={excludedChannelIds}\n          searchLanguages={dynamicRouteProps?.options?.searchLanguages}\n          langParam={langParam}\n          hideMembersOnlyContent={hideMembersOnlyContent}\n        />\n      );\n    }\n    return null;\n  }\n\n  function getPins(routeProps) {\n    if (routeProps && (routeProps.pinnedUrls || routeProps.pinnedClaimIds)) {\n      return {\n        urls: routeProps.pinnedUrls,\n        claimIds: routeProps.pinnedClaimIds,\n        onlyPinForOrder: CS.ORDER_BY_TRENDING,\n      };\n    }\n  }\n\n  function getHeaderLabel() {\n    let headerLabel;\n    if (repostedClaim) {\n      headerLabel = __('Reposts of %uri%', { uri: repostedUri });\n    } else if (tag && !isCategory) {\n      headerLabel = (\n        <h1 className=\"page__title\">\n          <Icon icon={ICONS.TAG} size={10} />\n          <span>\n            #{(tag === CS.TAGS_ALL && __('All Content')) || (tag === CS.TAGS_FOLLOWED && __('Followed Tags')) || tag}\n          </span>\n\n          <span>\n            <Button\n              className=\"claim-search__tags-link\"\n              button=\"link\"\n              label={__('Manage Tags')}\n              navigate={`/$/${PAGES.TAGS_FOLLOWING_MANAGE}`}\n            />\n          </span>\n        </h1>\n      );\n    } else {\n      headerLabel = (\n        <>\n          <h1 className=\"page__title\">\n            <Icon icon={(dynamicRouteProps && dynamicRouteProps.icon) || ICONS.DISCOVER} size={10} />\n            <label>{(dynamicRouteProps && __(`${dynamicRouteProps.title}`)) || __('All Content')}</label>\n          </h1>\n        </>\n      );\n    }\n    return headerLabel;\n  }\n\n  function getDefaultOrderBy() {\n    // We were passing undefined to 'ClaimListDiscover::defaultOrderBy', so we\n    // don't know what the fallback actually is for our remaining logic (i.e.\n    // getReleaseTime()) to work correctly.\n    // Make it explicit here rather than depending on the component's default.\n    return isWildWest || tags ? CS.ORDER_BY_TRENDING : dynamicRouteProps?.options?.orderBy || CS.ORDER_BY_TOP;\n  }\n\n  function getReleaseTime() {\n    const defaultOrder = getDefaultOrderBy();\n    const order = orderParam || defaultOrder;\n    const isOrderTop = order === CS.ORDER_BY_TOP;\n    const categoryReleaseTime = dynamicRouteProps?.options?.releaseTime;\n\n    if (isWildWest) {\n      // The homepage definition currently does not support 'start-of-week', so\n      // continue to hardcode here for now.\n      return `>${Math.floor(moment().subtract(0, 'hour').startOf('week').unix())}`;\n    }\n\n    if (categoryReleaseTime && !isOrderTop) {\n      return categoryReleaseTime;\n    }\n\n    return undefined;\n  }\n\n  // **************************************************************************\n  // **************************************************************************\n\n  React.useEffect(() => {\n    if (repostedUri && !repostedClaimIsResolved) {\n      doResolveUri(repostedUri);\n    }\n  }, [repostedUri, repostedClaimIsResolved, doResolveUri]);\n\n  // **************************************************************************\n  // **************************************************************************\n\n  return (\n    <Page noFooter fullWidthPage={tileLayout} className={classnames({ 'hide-ribbon': hideRepostRibbon })}>\n      <ClaimSearchFilterContext.Provider value={claimSearchFilters}>\n        <ClaimListDiscover\n          pins={getPins(dynamicRouteProps)}\n          hideFilters={isWildWest ? true : hideFilter}\n          header={repostedUri ? <span /> : undefined}\n          subSection={getSubSection()}\n          tileLayout={repostedUri ? false : tileLayout}\n          defaultOrderBy={getDefaultOrderBy()}\n          claimType={claimType ? [claimType] : undefined}\n          defaultStreamType={undefined}\n          // defaultStreamType={isCategory && !isWildWest ? [CS.FILE_VIDEO, CS.FILE_AUDIO, CS.FILE_DOCUMENT] : undefined} remove due to claim search bug with reposts\n          headerLabel={getHeaderLabel()}\n          tags={tags}\n          hiddenNsfwMessage={<HiddenNsfw type=\"page\" />}\n          repostedClaimId={repostedClaim ? repostedClaim.claim_id : null}\n          releaseTime={getReleaseTime()}\n          feeAmount={undefined}\n          channelIds={channelIds}\n          excludedChannelIds={excludedChannelIds}\n          limitClaimsPerChannel={\n            SIMPLE_SITE\n              ? (dynamicRouteProps && dynamicRouteProps.options && dynamicRouteProps.options.limitClaimsPerChannel) || 3\n              : 3\n          }\n          meta={getMeta()}\n          hasSource\n          hideRepostsOverride={dynamicRouteProps ? false : undefined}\n          hideMembersOnlyContent={hideMembersOnlyContent}\n          searchLanguages={dynamicRouteProps?.options?.searchLanguages}\n          duration={dynamicRouteProps?.options?.duration}\n          csOptionsHook={tagSearchCsOptionsHook}\n        />\n      </ClaimSearchFilterContext.Provider>\n    </Page>\n  );\n}\n\nexport default DiscoverPage;\n","import * as CS from 'constants/claim_search';\nimport { connect } from 'react-redux';\nimport { doResolveUri } from 'redux/actions/claims';\nimport { selectClaimForUri } from 'redux/selectors/claims';\nimport * as SETTINGS from 'constants/settings';\nimport { selectClientSetting } from 'redux/selectors/settings';\nimport { selectUserHasOdyseePremiumPlus } from 'redux/selectors/memberships';\nimport DiscoverPage from './view';\n\nconst select = (state, props) => {\n  const urlParams = new URLSearchParams(props.location.search);\n  const repostedUriInUrl = urlParams.get(CS.REPOSTED_URI_KEY);\n  const repostedUri = repostedUriInUrl ? decodeURIComponent(repostedUriInUrl) : undefined;\n\n  return {\n    repostedUri: repostedUri,\n    repostedClaim: repostedUri ? selectClaimForUri(state, repostedUri, false) : null,\n    tileLayout: selectClientSetting(state, SETTINGS.TILE_LAYOUT),\n    hasPremiumPlus: selectUserHasOdyseePremiumPlus(state),\n  };\n};\n\nconst perform = {\n  doResolveUri,\n};\n\nexport default connect(select, perform)(DiscoverPage);\n","// @flow\nimport React from 'react';\nimport Button from 'component/button';\nimport { ENABLE_NO_SOURCE_CLAIMS } from 'config';\nimport * as ICONS from 'constants/icons';\nimport ClaimListDiscover from 'component/claimListDiscover';\nimport { useIsMobile, useIsLargeScreen } from 'effects/use-screensize';\nimport usePersistedState from 'effects/use-persisted-state';\n\nconst DEFAULT_LIVESTREAM_TILE_LIMIT = 8;\nconst SECTION = Object.freeze({ COLLAPSED: 1, EXPANDED: 2 });\n\nfunction getTileLimit(isLargeScreen, originalSize) {\n  return isLargeScreen ? originalSize * (3 / 2) : originalSize;\n}\n\n// ****************************************************************************\n// ****************************************************************************\n\ntype Props = {\n  tileLayout: boolean,\n  hideMembersOnlyContent?: boolean,\n  // -- redux --\n  livestreamSectionQueryStr: string,\n  activeLivestreamUris: ?Array<string>,\n  doFetchAllActiveLivestreamsForQuery: (query?: { orderBy: ?Array<string>, lang: ?Array<string> }) => void,\n};\n\nexport default function LivestreamSection(props: Props) {\n  const {\n    tileLayout,\n    hideMembersOnlyContent,\n    // -- redux --\n    livestreamSectionQueryStr,\n    activeLivestreamUris,\n    doFetchAllActiveLivestreamsForQuery,\n  } = props;\n\n  const [liveSectionStore, setLiveSectionStore] = usePersistedState('discover:lsSection', SECTION.COLLAPSED);\n  const [expandedYPos, setExpandedYPos] = React.useState(null);\n\n  const isMobile = useIsMobile();\n  const isLargeScreen = useIsLargeScreen();\n\n  const initialLiveTileLimit = isMobile ? 6 : getTileLimit(isLargeScreen, DEFAULT_LIVESTREAM_TILE_LIMIT);\n  const [liveSection, setLiveSection] = React.useState(liveSectionStore || SECTION.COLLAPSED);\n  const liveTilesOverLimit = activeLivestreamUris && activeLivestreamUris.length > initialLiveTileLimit;\n\n  function collapseSection() {\n    window.scrollTo(0, 0);\n    setLiveSection(SECTION.COLLAPSED);\n  }\n\n  React.useEffect(() => {\n    // Sync liveSection --> liveSectionStore\n    if (liveSection !== liveSectionStore) {\n      setLiveSectionStore(liveSection);\n    }\n  }, [liveSection, setLiveSectionStore, liveSectionStore]);\n\n  React.useEffect(() => {\n    doFetchAllActiveLivestreamsForQuery(JSON.parse(livestreamSectionQueryStr));\n  }, [doFetchAllActiveLivestreamsForQuery, livestreamSectionQueryStr]);\n\n  React.useEffect(() => {\n    // Maintain y-position when expanding livestreams section:\n    if (liveSection === SECTION.EXPANDED && expandedYPos !== null) {\n      window.scrollTo(0, expandedYPos);\n      setExpandedYPos(null);\n    }\n  }, [liveSection, expandedYPos]);\n\n  if (!activeLivestreamUris || activeLivestreamUris.length === 0) {\n    return null;\n  }\n\n  if (isMobile) {\n    return (\n      <div className=\"livestream-list\">\n        <ClaimListDiscover\n          uris={\n            liveSection === SECTION.COLLAPSED\n              ? activeLivestreamUris.slice(0, initialLiveTileLimit)\n              : activeLivestreamUris\n          }\n          tileLayout={tileLayout}\n          headerLabel={<h1 className=\"page__title\">{__('Livestreams')}</h1>}\n          useSkeletonScreen={false}\n          showHeader={false}\n          hideFilters\n          hideMembersOnlyContent={hideMembersOnlyContent}\n          infiniteScroll={false}\n          loading={false}\n          showNoSourceClaims={ENABLE_NO_SOURCE_CLAIMS}\n        />\n\n        {liveTilesOverLimit && liveSection === SECTION.COLLAPSED && (\n          <div className=\"upcoming-list__view-more\">\n            <Button\n              label={__('Show more livestreams')}\n              button=\"link\"\n              iconRight={ICONS.DOWN}\n              className=\"claim-grid__title--secondary\"\n              onClick={() => {\n                doFetchAllActiveLivestreamsForQuery();\n                setExpandedYPos(window.scrollY);\n                setLiveSection(SECTION.EXPANDED);\n              }}\n            />\n          </div>\n        )}\n\n        {liveTilesOverLimit && liveSection === SECTION.EXPANDED && (\n          <div className=\"upcoming-list__view-more\">\n            <Button\n              label={__('Show fewer livestreams')}\n              button=\"link\"\n              iconRight={ICONS.UP}\n              className=\"claim-grid__title--secondary\"\n              onClick={collapseSection}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"livestream-list\">\n      <ClaimListDiscover\n        uris={\n          liveSection === SECTION.COLLAPSED ? activeLivestreamUris.slice(0, initialLiveTileLimit) : activeLivestreamUris\n        }\n        tileLayout={tileLayout}\n        showHeader={false}\n        hideFilters\n        infiniteScroll={false}\n        loading={false}\n        showNoSourceClaims={ENABLE_NO_SOURCE_CLAIMS}\n        hideMembersOnlyContent={hideMembersOnlyContent}\n      />\n\n      {liveTilesOverLimit && liveSection === SECTION.COLLAPSED && (\n        <div className=\"upcoming-list__view-more\">\n          <Button\n            label={__('Show more livestreams')}\n            button=\"link\"\n            iconRight={ICONS.DOWN}\n            className=\"claim-grid__title--secondary\"\n            onClick={() => {\n              doFetchAllActiveLivestreamsForQuery();\n              setExpandedYPos(window.scrollY);\n              setLiveSection(SECTION.EXPANDED);\n            }}\n          />\n        </div>\n      )}\n\n      {liveTilesOverLimit && liveSection === SECTION.EXPANDED && (\n        <div className=\"upcoming-list__view-more\">\n          <Button\n            label={__('Show fewer livestreams')}\n            button=\"link\"\n            iconRight={ICONS.UP}\n            className=\"claim-grid__title--secondary\"\n            onClick={collapseSection}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n","import { connect } from 'react-redux';\n\nimport * as SETTINGS from 'constants/settings';\n\nimport { resolveLangForClaimSearch } from 'util/default-languages';\n\nimport { selectFilteredActiveLivestreamUris } from 'redux/selectors/livestream';\nimport { selectClientSetting, selectLanguage } from 'redux/selectors/settings';\n\nimport { doFetchAllActiveLivestreamsForQuery } from 'redux/actions/livestream';\n\nimport LivestreamSection from './view';\n\nconst select = (state, props) => {\n  const { searchLanguages, langParam, channelIds, excludedChannelIds } = props;\n\n  const languageSetting = selectLanguage(state);\n  const searchInLanguage = selectClientSetting(state, SETTINGS.SEARCH_IN_LANGUAGE);\n\n  const langCsv = resolveLangForClaimSearch(languageSetting, searchInLanguage, searchLanguages, langParam);\n  const lang = langCsv ? langCsv.split(',') : null;\n  const livestreamSectionQuery = { any_languages: lang };\n  const livestreamSectionQueryStr = JSON.stringify(livestreamSectionQuery);\n\n  return {\n    livestreamSectionQueryStr,\n    activeLivestreamUris: selectFilteredActiveLivestreamUris(\n      state,\n      channelIds,\n      excludedChannelIds,\n      livestreamSectionQueryStr\n    ),\n  };\n};\n\nconst perform = {\n  doFetchAllActiveLivestreamsForQuery,\n};\n\nexport default connect(select, perform)(LivestreamSection);\n"],"names":["HiddenNsfw","props","_props$type","type","React","className","Icon","icon","ICONS","I18nMessage","tokens","settings","Button","button","label","__","navigate","concat","PAGES","requiresAuth","IS_WEB","CATEGORY_CONTENT_TYPES_FILTER","CS","x","_dynamicRouteProps$op","_dynamicRouteProps$op2","_dynamicRouteProps$op6","_dynamicRouteProps$op7","_dynamicRouteProps$op5","defaultOrder","isOrderTop","categoryReleaseTime","_dynamicRouteProps$op3","search","location","repostedClaim","repostedUri","doResolveUri","tileLayout","dynamicRouteProps","isWildWest","id","isCategory","Boolean","hideFilter","hideSort","undefined","urlParams","URLSearchParams","langParam","get","claimType","tagsQuery","orderParam","tags","split","repostedClaimIsResolved","hideRepostRibbon","hideMembersOnlyContent","tag","routedChannelIds","options","channelIds","length","excludedChannelIds","claimSearchFilters","contentTypes","liftUpTagSearch","getDefaultOrderBy","_dynamicRouteProps$op4","orderBy","Page","noFooter","fullWidthPage","classnames","ClaimSearchFilterContext","value","ClaimListDiscover","pins","routeProps","pinnedUrls","pinnedClaimIds","urls","claimIds","onlyPinForOrder","getPins","hideFilters","header","subSection","LivestreamSection","searchLanguages","defaultOrderBy","defaultStreamType","headerLabel","uri","size","title","hiddenNsfwMessage","repostedClaimId","claim_id","releaseTime","Math","floor","moment","subtract","startOf","unix","feeAmount","limitClaimsPerChannel","SIMPLE_SITE","meta","target","rel","href","DOMAIN","lbc","LbcSymbol","hasSource","hideRepostsOverride","duration","csOptionsHook","tagSearchCsOptionsHook","perform","connect","state","repostedUriInUrl","decodeURIComponent","selectClaimForUri","selectClientSetting","SETTINGS","hasPremiumPlus","selectUserHasOdyseePremiumPlus","DiscoverPage","DEFAULT_LIVESTREAM_TILE_LIMIT","SECTION","Object","freeze","COLLAPSED","EXPANDED","doFetchAllActiveLivestreamsForQuery","languageSetting","selectLanguage","searchInLanguage","langCsv","resolveLangForClaimSearch","livestreamSectionQuery","any_languages","livestreamSectionQueryStr","JSON","stringify","activeLivestreamUris","selectFilteredActiveLivestreamUris","_usePersistedState2","_slicedToArray","usePersistedState","liveSectionStore","setLiveSectionStore","_React$useState2","expandedYPos","setExpandedYPos","isMobile","useIsMobile","isLargeScreen","useIsLargeScreen","initialLiveTileLimit","originalSize","getTileLimit","_React$useState4","liveSection","setLiveSection","liveTilesOverLimit","collapseSection","window","scrollTo","parse","uris","slice","useSkeletonScreen","showHeader","infiniteScroll","loading","showNoSourceClaims","ENABLE_NO_SOURCE_CLAIMS","iconRight","onClick","scrollY"],"sourceRoot":""}