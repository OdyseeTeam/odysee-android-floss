{"version":3,"file":"4873-42514529ee01078787fd.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/geoRestictionInfo/style.scss?e6f0","webpack://odysee.com/../ui/component/geoRestictionInfo/index.js","webpack://odysee.com/../ui/component/geoRestictionInfo/view.jsx","webpack://odysee.com/../ui/component/livestreamLink/view.jsx","webpack://odysee.com/../ui/component/livestreamLink/index.js","webpack://odysee.com/../ui/page/claim/internal/claimPageComponent/internal/channelPage/tabs/contentTab/internal/searchResults.jsx","webpack://odysee.com/../ui/page/claim/internal/claimPageComponent/internal/channelPage/tabs/contentTab/view.jsx","webpack://odysee.com/../ui/page/claim/internal/claimPageComponent/internal/channelPage/tabs/contentTab/index.js","webpack://odysee.com/../ui/component/geoRestictionInfo/style.scss"],"sourcesContent":["\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import GeoRestrictionInfo from './view';\nimport { connect } from 'react-redux';\nimport { doOpenModal } from 'redux/actions/app';\nimport { selectGeoRestrictionForUri } from 'redux/selectors/claims';\n\nconst select = (state, props) => ({\n  geoRestriction: selectGeoRestrictionForUri(state, props.uri),\n});\n\nconst perform = {\n  doOpenModal,\n};\n\nexport default connect(select, perform)(GeoRestrictionInfo);\n","// @flow\nimport React from 'react';\nimport './style.scss';\nimport Card from 'component/common/card';\nimport Icon from 'component/common/icon';\nimport Tooltip from 'component/common/tooltip';\nimport * as ICONS from 'constants/icons';\nimport * as MODALS from 'constants/modal_types';\nimport { parseURI } from 'util/lbryURI';\n\ntype Props = {\n  uri: string,\n  geoRestriction: ?GeoRestriction,\n  doOpenModal: (string, {}) => void,\n};\n\nexport default function GeoRestrictionInfo(props: Props) {\n  const { uri, geoRestriction, doOpenModal } = props;\n\n  console.log('props_ ', props);\n  if (!geoRestriction) {\n    return null;\n  }\n\n  const { isChannel } = parseURI(uri);\n  const title = __(isChannel ? 'Channel unavailable' : 'Content unavailable');\n  const msg = <Card title={title} subtitle={__(geoRestriction.message || '')} />;\n\n  function showMsg() {\n    doOpenModal(MODALS.CONFIRM, {\n      title: title,\n      subtitle: __(geoRestriction.message || ''),\n      onConfirm: (closeModal) => closeModal(),\n      hideCancel: true,\n    });\n  }\n\n  return (\n    <Tooltip title={msg} followCursor>\n      <div className=\"geo-restriction-info\" onClick={showMsg}>\n        <div className=\"geo-restriction-info__container\">\n          <Icon icon={ICONS.EYE_OFF} size={24} />\n          <span className=\"geo-restriction-info__title\">{title}</span>\n        </div>\n      </div>\n    </Tooltip>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport { useHistory } from 'react-router';\nimport { formatLbryUrlForWeb } from 'util/url';\nimport * as ICONS from 'constants/icons';\nimport Card from 'component/common/card';\nimport ClaimPreview from 'component/claimPreview';\nimport Icon from 'component/common/icon';\n\ntype Props = {\n  title?: string,\n  claimUri: string,\n  doResolveUri: (uri: string) => void,\n};\n\nconst LivestreamLink = (props: Props) => {\n  const { claimUri, title = null, doResolveUri } = props;\n  const { push } = useHistory();\n\n  React.useEffect(() => {\n    if (claimUri) {\n      doResolveUri(claimUri);\n    }\n  }, [claimUri, doResolveUri]);\n\n  if (!claimUri) return null;\n\n  return (\n    <Card\n      className=\"livestream__channel-link claim-preview__wrapper--live\"\n      title={\n        <h1 className=\"page__title\">\n          <Icon icon={ICONS.LIVESTREAM_MONOCHROME} />\n          <label>{title || __('Live stream in progress')}</label>\n        </h1>\n      }\n      onClick={() => push(formatLbryUrlForWeb(claimUri))}\n    >\n      <ClaimPreview uri={claimUri} type=\"inline\" hideMenu />\n    </Card>\n  );\n};\n\nexport default LivestreamLink;\n","import { connect } from 'react-redux';\n\nimport { doResolveUri } from 'redux/actions/claims';\n\nimport LivestreamLink from './view';\n\nimport withLiveStatus from 'hocs/withLiveStatus';\n\nconst perform = {\n  doResolveUri,\n};\n\nexport default withLiveStatus(connect(null, perform)(LivestreamLink));\n","// @flow\nimport React from 'react';\nimport ClaimList from 'component/claimList';\nimport { DEBOUNCE_WAIT_DURATION_MS } from 'constants/search';\nimport * as CS from 'constants/claim_search';\nimport { lighthouse } from 'redux/actions/search';\n\ntype Props = {\n  searchQuery: string,\n  claimId: ?string,\n  showMature: ?boolean,\n  tileLayout: boolean,\n  orderBy?: ?string,\n  onResults?: (results: ?Array<string>) => void,\n  doResolveUris: (Array<string>, boolean) => void,\n};\n\nexport function SearchResults(props: Props) {\n  const { searchQuery, claimId, showMature, tileLayout, orderBy, onResults, doResolveUris } = props;\n\n  const SEARCH_PAGE_SIZE = 24;\n  const [page, setPage] = React.useState(1);\n  const [searchResults, setSearchResults] = React.useState(undefined);\n  const [isSearchingState, setIsSearchingState] = React.useState(false);\n  const isSearching = React.useRef(false);\n  const noMoreResults = React.useRef(false);\n  const sortBy =\n    !orderBy || orderBy === CS.ORDER_BY_NEW\n      ? `&sort_by=${CS.ORDER_BY_NEW_VALUE[0]}`\n      : orderBy === CS.ORDER_BY_TOP\n      ? `&sort_by=${CS.ORDER_BY_TOP_VALUE[0]}`\n      : ``;\n\n  React.useEffect(() => {\n    noMoreResults.current = false;\n    setSearchResults(null);\n    setPage(1);\n  }, [searchQuery, sortBy]);\n\n  React.useEffect(() => {\n    if (onResults) {\n      onResults(searchResults);\n    }\n  }, [searchResults, onResults]);\n\n  React.useEffect(() => {\n    if (noMoreResults.current) return;\n    isSearching.current = true;\n\n    const timer = setTimeout(() => {\n      if (searchQuery.trim().length < 3 || !claimId) {\n        return setSearchResults(null);\n      }\n\n      setIsSearchingState(true);\n      lighthouse\n        .search(\n          `from=${SEARCH_PAGE_SIZE * (page - 1)}` +\n            `&s=${encodeURIComponent(searchQuery)}` +\n            `&channel_id=${encodeURIComponent(claimId)}` +\n            sortBy +\n            `&nsfw=${showMature ? 'true' : 'false'}` +\n            `&size=${SEARCH_PAGE_SIZE}`\n        )\n        .then(({ body: results }) => {\n          const urls = results.map(({ name, claimId }) => {\n            return `lbry://${name}#${claimId}`;\n          });\n\n          // Batch-resolve the urls before calling 'setSearchResults', as the\n          // latter will immediately cause the tiles to resolve, ending up\n          // calling doResolveUri one by one before the batched one.\n          doResolveUris(urls, true);\n\n          // De-dup (LH will return some duplicates) and concat results\n          setSearchResults((prev) => (page === 1 ? urls : Array.from(new Set((prev || []).concat(urls)))));\n          noMoreResults.current = !urls || urls.length < SEARCH_PAGE_SIZE;\n        })\n        .catch(() => {\n          setPage(1);\n          setSearchResults(null);\n          noMoreResults.current = false;\n        })\n        .finally(() => {\n          isSearching.current = false;\n          setIsSearchingState(false);\n        });\n    }, DEBOUNCE_WAIT_DURATION_MS);\n\n    return () => clearTimeout(timer);\n  }, [searchQuery, claimId, page, showMature, doResolveUris, sortBy]);\n\n  if (!searchResults) {\n    return null;\n  }\n\n  return (\n    <ClaimList\n      uris={searchResults}\n      loading={isSearchingState}\n      onScrollBottom={() => setPage((prev) => (noMoreResults.current ? prev : isSearching.current ? prev : prev + 1))}\n      page={page}\n      pageSize={SEARCH_PAGE_SIZE}\n      tileLayout={tileLayout}\n      useLoadingSpinner={isSearchingState}\n    />\n  );\n}\n","// @flow\nimport { SIMPLE_SITE } from 'config';\nimport { SECTION_TAGS } from 'constants/collections';\nimport * as CS from 'constants/claim_search';\nimport * as ICONS from 'constants/icons';\nimport React, { Fragment } from 'react';\nimport GeoRestrictionInfo from 'component/geoRestictionInfo';\nimport { useHistory } from 'react-router-dom';\nimport Button from 'component/button';\nimport ClaimListDiscover from 'component/claimListDiscover';\nimport Icon from 'component/common/icon';\nimport LivestreamLink from 'component/livestreamLink';\nimport { Form, FormField } from 'component/common/form';\nimport UpcomingClaims from 'component/upcomingClaims';\nimport { ClaimSearchFilterContext } from 'contexts/claimSearchFilterContext';\nimport { SearchResults } from './internal/searchResults';\nimport { useIsLargeScreen } from 'effects/use-screensize';\nimport usePersistedState from 'effects/use-persisted-state';\nimport { tagSearchCsOptionsHook } from 'util/search';\nimport { lazyImport } from 'util/lazyImport';\n\nconst HiddenNsfwClaims = lazyImport(() =>\n  import('component/hiddenNsfwClaims' /* webpackChunkName: \"hiddenNsfwClaims\" */)\n);\n\nconst TYPES_TO_ALLOW_FILTER = ['stream', 'repost'];\n\ntype Props = {\n  uri: string,\n  totalPages: number,\n  fetching: boolean,\n  params: { page: number },\n  pageOfClaimsInChannel: Array<StreamClaim>,\n  channelIsBlocked: boolean,\n  channelIsMine: boolean,\n  filters: any,\n  fetchClaims: (string, number) => void,\n  channelIsBlackListed: boolean,\n  defaultPageSize?: number,\n  defaultInfiniteScroll?: Boolean,\n  claim: Claim,\n  isAuthenticated: boolean,\n  showMature: boolean,\n  tileLayout: boolean,\n  viewHiddenChannels: boolean,\n  doResolveUris: (Array<string>, boolean) => void,\n  claimType: string,\n  empty?: string,\n  activeLivestreamForChannel: ?LivestreamActiveClaim,\n};\n\nfunction ContentTab(props: Props) {\n  const {\n    uri,\n    fetching,\n    channelIsMine,\n    channelIsBlocked,\n    channelIsBlackListed,\n    filters,\n    claim,\n    defaultPageSize = CS.PAGE_SIZE,\n    defaultInfiniteScroll = true,\n    showMature,\n    tileLayout,\n    viewHiddenChannels,\n    doResolveUris,\n    claimType,\n    empty,\n    activeLivestreamForChannel,\n  } = props;\n\n  const claimsInChannel = 9999;\n  const [searchQuery, setSearchQuery] = React.useState('');\n  const [isSearching, setIsSearching] = React.useState(false);\n\n  const {\n    location: { search },\n  } = useHistory();\n  const urlParams = new URLSearchParams(search).get('order');\n  const orderBy = urlParams;\n\n  // In Channel Page, ignore the global settings for these 2:\n  const [hideReposts, setHideReposts] = usePersistedState('hideRepostsChannelPage', false);\n  const [hideMembersOnly, setHideMembersOnly] = usePersistedState('channelPage-hideMembersOnly', false);\n\n  const claimSearchFilterCtx = {\n    contentTypes: CS.CONTENT_TYPES,\n    repost: { hideReposts, setHideReposts },\n    membersOnly: { hideMembersOnly, setHideMembersOnly },\n  };\n\n  const claimId = claim && claim.claim_id;\n  const showFilters =\n    !claimType ||\n    (Array.isArray(claimType)\n      ? claimType.every((ct) => TYPES_TO_ALLOW_FILTER.includes(ct))\n      : TYPES_TO_ALLOW_FILTER.includes(claimType));\n  const isLargeScreen = useIsLargeScreen();\n  const dynamicPageSize = isLargeScreen ? Math.ceil(defaultPageSize * 3) : defaultPageSize;\n\n  const showScheduledLiveStreams = claimType !== 'collection'; // i.e. not on the playlist page.\n  const scheduledChanIds = React.useMemo(() => [claimId], [claimId]);\n\n  function handleInputChange(e) {\n    const { value } = e.target;\n\n    setSearchQuery(value);\n  }\n\n  React.useEffect(() => {\n    setSearchQuery('');\n  }, [claimId]);\n\n  return (\n    <Fragment>\n      <GeoRestrictionInfo uri={uri} />\n\n      {!fetching && Boolean(claimsInChannel) && !channelIsBlocked && !channelIsBlackListed && (\n        <React.Suspense fallback={null}>\n          <HiddenNsfwClaims uri={uri} />\n        </React.Suspense>\n      )}\n\n      <LivestreamLink uri={uri} />\n\n      {!fetching && showScheduledLiveStreams && (\n        <UpcomingClaims\n          name=\"contentTab\"\n          channelIds={scheduledChanIds}\n          tileLayout={false}\n          liveUris={\n            activeLivestreamForChannel && activeLivestreamForChannel.uri ? [activeLivestreamForChannel.uri] : []\n          }\n          showHideSetting={false}\n          isChannelPage\n        />\n      )}\n\n      {!fetching && channelIsBlackListed && (\n        <section className=\"card card--section\">\n          <p>\n            {__(\n              'In response to a complaint we received under the US Digital Millennium Copyright Act, we have blocked access to this channel from our applications. Content may also be blocked due to DMCA Red Flag rules which are obvious copyright violations we come across, are discussed in public channels, or reported to us.'\n            )}\n          </p>\n          <div className=\"section__actions\">\n            <Button button=\"link\" href=\"https://help.odysee.tv/copyright/\" label={__('Read More')} />\n          </div>\n        </section>\n      )}\n\n      {!fetching && channelIsBlocked && (\n        <div className=\"card--section\">\n          <h2 className=\"help\">{__('You have blocked this channel content.')}</h2>\n        </div>\n      )}\n\n      {!channelIsMine && claimsInChannel > 0 && (\n        <React.Suspense fallback={null}>\n          <HiddenNsfwClaims uri={uri} />\n        </React.Suspense>\n      )}\n      {!fetching && (\n        <ClaimSearchFilterContext.Provider value={claimSearchFilterCtx}>\n          <ClaimListDiscover\n            ignoreSearchInLanguage\n            hasSource\n            defaultFreshness={CS.FRESH_ALL}\n            showHiddenByUser={viewHiddenChannels}\n            hideRepostsOverride={hideReposts}\n            hideMembersOnly={hideMembersOnly}\n            fetchViewCount\n            hideFilters={!showFilters}\n            hideAdvancedFilter={!showFilters}\n            tileLayout={tileLayout}\n            uris={searchQuery.length > 2 || isSearching ? [] : null}\n            streamType={SIMPLE_SITE ? CS.CONTENT_ALL : undefined}\n            channelIds={searchQuery.length < 3 && [claimId]}\n            claimType={claimType}\n            feeAmount={undefined}\n            defaultOrderBy={filters ? filters.order_by : CS.ORDER_BY_NEW}\n            pageSize={dynamicPageSize}\n            infiniteScroll={defaultInfiniteScroll}\n            meta={\n              showFilters && (\n                <Form onSubmit={() => {}} className=\"wunderbar--inline\">\n                  <Icon icon={ICONS.SEARCH} />\n                  <FormField\n                    name=\"channel_search\"\n                    className=\"wunderbar__input--inline\"\n                    value={searchQuery}\n                    onChange={handleInputChange}\n                    type=\"text\"\n                    placeholder={__('Search')}\n                  />\n                  {searchQuery && (\n                    <Button\n                      icon={ICONS.REMOVE}\n                      aria-label={__('Clear')}\n                      button=\"alt\"\n                      className=\"wunderbar__clear\"\n                      onClick={() => setSearchQuery('')}\n                    />\n                  )}\n                </Form>\n              )\n            }\n            subSection={\n              <SearchResults\n                searchQuery={searchQuery}\n                claimId={claimId}\n                showMature={showMature}\n                tileLayout={tileLayout}\n                orderBy={orderBy}\n                onResults={(results) => setIsSearching(results !== null)}\n                doResolveUris={doResolveUris}\n              />\n            }\n            isChannel\n            channelIsMine={channelIsMine}\n            empty={isSearching || searchQuery.length > 2 ? ' ' : empty}\n            notTags={claimType === 'collection' ? [SECTION_TAGS.FEATURED_CHANNELS] : undefined}\n            csOptionsHook={tagSearchCsOptionsHook}\n            contentType={filters && filters.file_type}\n          />\n        </ClaimSearchFilterContext.Provider>\n      )}\n    </Fragment>\n  );\n}\n\nexport default ContentTab;\n","import { connect } from 'react-redux';\nimport { PAGE_SIZE } from 'constants/claim';\nimport {\n  makeSelectClaimsInChannelForPage,\n  makeSelectFetchingChannelClaims,\n  selectClaimIsMine,\n  makeSelectTotalPagesInChannelSearch,\n  selectClaimForUri,\n} from 'redux/selectors/claims';\nimport { doResolveUris } from 'redux/actions/claims';\nimport * as SETTINGS from 'constants/settings';\nimport { makeSelectChannelIsMuted } from 'redux/selectors/blocked';\nimport { withRouter } from 'react-router';\nimport { selectClientSetting, selectShowMatureContent } from 'redux/selectors/settings';\nimport { selectAdBlockerFound } from 'redux/selectors/app';\nimport { selectActiveLivestreamForChannel } from 'redux/selectors/livestream';\nimport { getChannelIdFromClaim } from 'util/claim';\nimport ContentTab from './view';\n\nconst select = (state, props) => {\n  const { search } = props.location;\n  const urlParams = new URLSearchParams(search);\n  const page = urlParams.get('page') || 0;\n  const claim = props.uri && selectClaimForUri(state, props.uri);\n  const channelClaimId = getChannelIdFromClaim(claim);\n\n  return {\n    pageOfClaimsInChannel: makeSelectClaimsInChannelForPage(props.uri, page)(state),\n    fetching: makeSelectFetchingChannelClaims(props.uri)(state),\n    totalPages: makeSelectTotalPagesInChannelSearch(props.uri, PAGE_SIZE)(state),\n    channelIsMine: selectClaimIsMine(state, claim),\n    channelIsBlocked: makeSelectChannelIsMuted(props.uri)(state),\n    claim,\n    showMature: selectShowMatureContent(state),\n    tileLayout: selectClientSetting(state, SETTINGS.TILE_LAYOUT),\n    activeLivestreamForChannel: selectActiveLivestreamForChannel(state, channelClaimId),\n    adBlockerFound: selectAdBlockerFound(state),\n  };\n};\n\nconst perform = {\n  doResolveUris,\n};\n\nexport default withRouter(connect(select, perform)(ContentTab));\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".geo-restriction-info{align-items:center;color:#e2495e;display:flex;flex-direction:column}[dir] .geo-restriction-info{background:var(--color-card-background);border-radius:var(--border-radius);margin:var(--spacing-m) 0}.geo-restriction-info__container{align-items:center;display:flex}[dir] .geo-restriction-info__container{margin-bottom:var(--spacing-l);margin-top:var(--spacing-l)}.geo-restriction-info__title{font-size:var(--font-large);font-style:italic}[dir=ltr] .geo-restriction-info__title{margin-left:var(--spacing-s)}[dir=rtl] .geo-restriction-info__title{margin-right:var(--spacing-s)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../ui/component/geoRestictionInfo/style.scss\"],\"names\":[],\"mappings\":\"AAIA,sBAGE,kBAAA,CAIA,aATW,CAGX,YAAA,CAGA,qBANW,CAEb,4BAKE,uCAAA,CACA,kCAAA,CAJA,yBAJW,CAYb,iCAEE,kBAAA,CADA,YAGA,CAJF,uCAIE,8BAAA,CADA,2BACA,CAGF,6BACE,2BAAA,CACA,iBACA,CAHF,uCAGE,4BAAA,CAHF,uCAGE,6BAAA\",\"sourcesContent\":[\"// \\\"--color-text-error\\\" is too bright, while \\\"--color-error\\\" isn't adjusted for\\n// light theme. Using the value of RED_COLOR from icon.jsx.\\n$text-color: #e2495e;\\n\\n.geo-restriction-info {\\n  display: flex;\\n  margin: var(--spacing-m) 0;\\n  align-items: center;\\n  flex-direction: column;\\n  background: var(--color-card-background);\\n  border-radius: var(--border-radius);\\n  color: $text-color;\\n}\\n\\n.geo-restriction-info__container {\\n  display: flex;\\n  align-items: center;\\n  margin-top: var(--spacing-l);\\n  margin-bottom: var(--spacing-l);\\n}\\n\\n.geo-restriction-info__title {\\n  font-size: var(--font-large);\\n  font-style: italic;\\n  margin-left: var(--spacing-s);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","perform","doOpenModal","connect","state","props","geoRestriction","selectGeoRestrictionForUri","uri","console","log","isChannel","parseURI","title","__","msg","React","Card","subtitle","message","Tooltip","followCursor","className","onClick","MODALS","onConfirm","closeModal","hideCancel","Icon","icon","ICONS","size","claimUri","_props$title","doResolveUri","push","useHistory","formatLbryUrlForWeb","ClaimPreview","type","hideMenu","withLiveStatus","LivestreamLink","SearchResults","searchQuery","claimId","showMature","tileLayout","orderBy","onResults","doResolveUris","_React$useState2","_slicedToArray","page","setPage","_React$useState4","undefined","searchResults","setSearchResults","_React$useState6","isSearchingState","setIsSearchingState","isSearching","noMoreResults","sortBy","CS","concat","current","timer","setTimeout","trim","length","lighthouse","encodeURIComponent","then","_ref","urls","body","map","_ref2","name","prev","Array","from","Set","DEBOUNCE_WAIT_DURATION_MS","clearTimeout","ClaimList","uris","loading","onScrollBottom","pageSize","useLoadingSpinner","HiddenNsfwClaims","lazyImport","TYPES_TO_ALLOW_FILTER","fetching","channelIsMine","channelIsBlocked","channelIsBlackListed","filters","claim","_props$defaultPageSiz","defaultPageSize","_props$defaultInfinit","defaultInfiniteScroll","viewHiddenChannels","claimType","empty","activeLivestreamForChannel","setSearchQuery","setIsSearching","search","location","URLSearchParams","get","_usePersistedState2","usePersistedState","hideReposts","setHideReposts","_usePersistedState4","hideMembersOnly","setHideMembersOnly","claimSearchFilterCtx","contentTypes","repost","membersOnly","claim_id","showFilters","isArray","every","ct","includes","dynamicPageSize","useIsLargeScreen","Math","ceil","showScheduledLiveStreams","scheduledChanIds","Fragment","GeoRestrictionInfo","Boolean","fallback","UpcomingClaims","channelIds","liveUris","showHideSetting","isChannelPage","Button","button","href","label","ClaimSearchFilterContext","value","ClaimListDiscover","ignoreSearchInLanguage","hasSource","defaultFreshness","showHiddenByUser","hideRepostsOverride","fetchViewCount","hideFilters","hideAdvancedFilter","streamType","SIMPLE_SITE","feeAmount","defaultOrderBy","order_by","infiniteScroll","meta","Form","onSubmit","FormField","onChange","e","target","placeholder","subSection","results","notTags","SECTION_TAGS","csOptionsHook","tagSearchCsOptionsHook","contentType","file_type","withRouter","selectClaimForUri","channelClaimId","getChannelIdFromClaim","pageOfClaimsInChannel","makeSelectClaimsInChannelForPage","makeSelectFetchingChannelClaims","totalPages","makeSelectTotalPagesInChannelSearch","PAGE_SIZE","selectClaimIsMine","makeSelectChannelIsMuted","selectShowMatureContent","selectClientSetting","SETTINGS","selectActiveLivestreamForChannel","adBlockerFound","selectAdBlockerFound","ContentTab","___CSS_LOADER_EXPORT___","module","id"],"sourceRoot":""}