{"version":3,"file":"featuredChannels-ef8ef3d4709b7c428bf4.js","mappings":"yNAkEA,QAlDA,SAA8BA,GAC5B,IACEC,EAMED,EANFC,QACAC,EAKEF,EALFE,UACAC,EAIEH,EAJFG,uBACAC,EAGEJ,EAHFI,wBACAC,EAEEL,EAFFK,iBACAC,EACEN,EADFM,uBAGIC,EAA+BC,EAAAA,SAAc,WACjD,OAAOH,GAAoBA,EAAiBI,MAAK,SAACC,GAAC,OAAKA,EAAEC,KAAOT,CAAS,GAC5E,GAAG,CAACG,EAAkBH,IAWtB,OATAM,EAAAA,WAAgB,YACTL,GAA0BF,GAC7BK,EAAuBL,GAAQ,OAAO,WAAO,GAEjD,GAAG,CAACA,EAASE,EAAwBG,IAKhCC,EAUDH,EAEAI,EAAAA,cAACI,EAAAA,EAAI,KACHJ,EAAAA,cAAA,OAAKK,UAAU,eACbL,EAAAA,cAACM,EAAAA,EAAO,QAOdN,EAAAA,cAACI,EAAAA,EAAI,KACHJ,EAAAA,cAACO,EAAAA,EAAO,CAACC,IAAKT,EAAGI,GAAIA,GAAIJ,EAAGI,GAAIM,MAAOV,EAAGW,MAAMD,MAAOE,KAAMZ,EAAGW,MAAMC,KAAMC,UAAWnB,KApBvFO,EAAAA,cAACI,EAAAA,EAAI,KACHJ,EAAAA,cAAA,OAAKK,UAAU,eACbL,EAAAA,cAACa,EAAAA,EAAI,CAACJ,MAAOK,EAAG,qBAqB1B,E,qCCxCMC,EAAU,CACdjB,uBAAAA,EAAAA,IAGF,SAAekB,EAAAA,EAAAA,KAlBA,SAACC,EAAOzB,GACrB,IAAM0B,EAAY,IAAIC,gBAAgB3B,EAAM4B,SAASC,QAC/C5B,EAAUyB,EAAUI,IAAIC,EAAAA,GAAAA,UAG9B,MAAO,CACL9B,QAAAA,EACAC,UAJgBwB,EAAUI,IAAIC,EAAAA,GAAAA,YAK9B5B,4BAAuE6B,KAA/CC,EAAAA,EAAAA,IAA2BR,EAAOxB,GAC1DG,yBAAyB8B,EAAAA,EAAAA,IAA8BT,GACvDpB,kBAAkB8B,EAAAA,EAAAA,IAAmCV,EAAOxB,GAEhE,GAM+BsB,EAA/B,CAAwCa,E","sources":["webpack://odysee.com/../ui/page/featuredChannels/view.jsx","webpack://odysee.com/../ui/page/featuredChannels/index.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport Section from 'component/channelSections/Section';\nimport Page from 'component/page';\nimport Spinner from 'component/spinner';\nimport Yrbl from 'component/yrbl';\n\ntype Props = {\n  claimId: ?string,\n  sectionId: ?string,\n  creatorSettingsFetched: boolean,\n  fetchingCreatorSettings: boolean,\n  featuredChannels: ?Array<FeaturedChannelsSection>,\n  doFetchCreatorSettings: (channelId: string) => Promise<any>,\n};\n\nfunction FeaturedChannelsPage(props: Props) {\n  const {\n    claimId,\n    sectionId,\n    creatorSettingsFetched,\n    fetchingCreatorSettings,\n    featuredChannels,\n    doFetchCreatorSettings,\n  } = props;\n\n  const fc: ?FeaturedChannelsSection = React.useMemo(() => {\n    return featuredChannels && featuredChannels.find((x) => x.id === sectionId);\n  }, [featuredChannels, sectionId]);\n\n  React.useEffect(() => {\n    if (!creatorSettingsFetched && claimId) {\n      doFetchCreatorSettings(claimId).catch(() => {});\n    }\n  }, [claimId, creatorSettingsFetched, doFetchCreatorSettings]);\n\n  // **************************************************************************\n  // **************************************************************************\n\n  if (!fc) {\n    return (\n      <Page>\n        <div className=\"main--empty\">\n          <Yrbl title={__('List Not Found')} />\n        </div>\n      </Page>\n    );\n  }\n\n  if (fetchingCreatorSettings) {\n    return (\n      <Page>\n        <div className=\"main--empty\">\n          <Spinner />\n        </div>\n      </Page>\n    );\n  }\n\n  return (\n    <Page>\n      <Section key={fc.id} id={fc.id} title={fc.value.title} uris={fc.value.uris} channelId={claimId} />\n    </Page>\n  );\n}\n\nexport default FeaturedChannelsPage;\n","import { connect } from 'react-redux';\nimport FeaturedChannelsPage from './view';\nimport { CHANNEL_SECTIONS_QUERIES as CSQ } from 'constants/urlParams';\nimport { doFetchCreatorSettings } from 'redux/actions/comments';\nimport {\n  selectFeaturedChannelsForChannelId,\n  selectFetchingCreatorSettings,\n  selectSettingsForChannelId,\n} from 'redux/selectors/comments';\n\nconst select = (state, props) => {\n  const urlParams = new URLSearchParams(props.location.search);\n  const claimId = urlParams.get(CSQ.CLAIM_ID);\n  const sectionId = urlParams.get(CSQ.SECTION_ID);\n\n  return {\n    claimId,\n    sectionId,\n    creatorSettingsFetched: selectSettingsForChannelId(state, claimId) !== undefined,\n    fetchingCreatorSettings: selectFetchingCreatorSettings(state),\n    featuredChannels: selectFeaturedChannelsForChannelId(state, claimId),\n  };\n};\n\nconst perform = {\n  doFetchCreatorSettings,\n};\n\nexport default connect(select, perform)(FeaturedChannelsPage);\n"],"names":["props","claimId","sectionId","creatorSettingsFetched","fetchingCreatorSettings","featuredChannels","doFetchCreatorSettings","fc","React","find","x","id","Page","className","Spinner","Section","key","title","value","uris","channelId","Yrbl","__","perform","connect","state","urlParams","URLSearchParams","location","search","get","CSQ","undefined","selectSettingsForChannelId","selectFetchingCreatorSettings","selectFeaturedChannelsForChannelId","FeaturedChannelsPage"],"sourceRoot":""}