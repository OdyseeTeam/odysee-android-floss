{"version":3,"file":"modalFileSelection-09c36e1b8f0d2220a5bf.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/common/card.jsx","webpack://odysee.com/../ui/component/common/file-list.jsx","webpack://odysee.com/../ui/modal/modalFileSelection/view.jsx","webpack://odysee.com/../ui/modal/modalFileSelection/index.js"],"sourcesContent":["// @flow\nimport type { Node } from 'react';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Icon from 'component/common/icon';\nimport Button from 'component/button';\nimport * as ICONS from 'constants/icons';\n// import twemoji from 'twemoji';\nimport Tooltip from 'component/common/tooltip';\n\ntype Props = {\n  title?: string | Node,\n  subtitle?: string | Node,\n  titleActions?: string | Node,\n  id?: string,\n  body?: string | Node,\n  actions?: string | Node,\n  icon?: string,\n  className?: string,\n  isPageTitle?: boolean,\n  noTitleWrap?: boolean,\n  isBodyList?: boolean,\n  defaultExpand?: boolean,\n  nag?: Node,\n  smallTitle?: boolean,\n  onClick?: () => void,\n  children?: Node,\n  secondPane?: Node,\n  slimHeader?: boolean,\n  background?: boolean,\n  backgroundImage?: string,\n  singlePane?: boolean,\n  headerActions?: Node,\n  gridHeader?: boolean,\n  accessStatus?: string,\n};\n\nfunction Card(props: Props) {\n  const {\n    title,\n    subtitle,\n    titleActions,\n    id,\n    body,\n    actions,\n    icon,\n    className,\n    isPageTitle = false,\n    isBodyList = false,\n    // noTitleWrap = false,\n    smallTitle = false,\n    defaultExpand,\n    nag,\n    onClick,\n    children,\n    secondPane,\n    slimHeader,\n    background,\n    backgroundImage,\n    singlePane,\n    headerActions,\n    accessStatus,\n    gridHeader,\n  } = props;\n\n  const [expanded, setExpanded] = useState(defaultExpand);\n  const expandable = defaultExpand !== undefined;\n\n  return (\n    <section\n      role={onClick ? 'button' : undefined}\n      className={classnames(className, 'card', {\n        'card__multi-pane': Boolean(secondPane),\n        'card--background': background,\n      })}\n      id={id}\n      onClick={(e) => {\n        if (onClick) {\n          onClick();\n          e.stopPropagation();\n        }\n      }}\n    >\n      {backgroundImage && (\n        <div\n          className=\"background\"\n          style={{\n            backgroundImage:\n              'url(https://thumbnails.odycdn.com/optimize/s:390:0/quality:85/plain/' + backgroundImage + ')',\n          }}\n        />\n      )}\n      <FirstPaneWrapper singlePane={singlePane}>\n        {(title || subtitle) && (\n          <div\n            className={classnames('card__header--between', {\n              'card__header--slim': slimHeader,\n              'card__header--grid': gridHeader,\n            })}\n          >\n            <div className={classnames('card__title-section', { 'card__title-section--body-list': isBodyList })}>\n              {icon && <Icon sectionIcon icon={icon} />}\n\n              <div className=\"card__title-text\">\n                <TitleWrapper isPageTitle={isPageTitle} smallTitle={smallTitle} accessStatus={accessStatus}>\n                  {title}\n                </TitleWrapper>\n\n                {subtitle && (\n                  <div className={classnames('card__subtitle', { 'card__subtitle--small': smallTitle })}>\n                    {subtitle}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {(titleActions || expandable) && (\n              <div className=\"card__title-actions-container\">\n                {titleActions && (\n                  <div\n                    className={classnames('card__title-actions', {\n                      'card__title-actions--small': smallTitle,\n                    })}\n                  >\n                    {titleActions}\n                  </div>\n                )}\n                {expandable && (\n                  <div className=\"card__title-actions\">\n                    <Button\n                      button=\"alt\"\n                      aria-expanded={expanded}\n                      aria-label={expanded ? __('Less') : __('More')}\n                      icon={expanded ? ICONS.SUBTRACT : ICONS.ADD}\n                      onClick={() => setExpanded(!expanded)}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n\n            {headerActions}\n          </div>\n        )}\n\n        {(!expandable || (expandable && expanded)) && (\n          <>\n            {body && (\n              <div\n                className={classnames('card__body', {\n                  'card__body--no-title': !title && !subtitle,\n                  'card__body--list': isBodyList,\n                })}\n              >\n                {body}\n              </div>\n            )}\n            {actions && <div className=\"card__main-actions\">{actions}</div>}\n            {children && <div className=\"card__main-actions\">{children}</div>}\n          </>\n        )}\n\n        {nag}\n      </FirstPaneWrapper>\n\n      {secondPane && <div className=\"card__second-pane\">{secondPane}</div>}\n    </section>\n  );\n}\n\ntype FirstPaneProps = {\n  singlePane?: boolean,\n  children: any,\n};\n\nconst FirstPaneWrapper = (props: FirstPaneProps) => {\n  const { singlePane, children } = props;\n\n  return singlePane ? children : <div className=\"card__first-pane\">{children}</div>;\n};\n\ntype TitleProps = {\n  isPageTitle?: boolean,\n  smallTitle?: boolean,\n  children?: any,\n  emoji?: any,\n  accessStatus?: string,\n};\n\nconst TitleWrapper = (props: TitleProps) => {\n  const { isPageTitle, smallTitle, children, accessStatus } = props;\n\n  /*\n  const Twemoji = ({ emoji }) => (\n    <span\n      dangerouslySetInnerHTML={{\n        __html: twemoji.parse(emoji, {\n          folder: 'svg',\n          ext: '.svg',\n        }),\n      }}\n    />\n  );\n  */\n\n  const AccessIndicator = (par: any) => {\n    return (\n      <Tooltip title={__('This is a members-only content')}>\n        <div\n          className={classnames('content-access-indicator', {\n            locked: par.status === 'locked',\n            unlocked: par.status === 'unlocked',\n            purchased: par.status === 'purchased',\n          })}\n        >\n          <Icon icon={par.status === 'locked' ? ICONS.LOCK : ICONS.UNLOCK} />\n        </div>\n      </Tooltip>\n    );\n  };\n\n  /*\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return <Twemoji emoji={children?.props?.children[child]} />;\n      }\n    }\n    return children;\n  }\n  */\n  function transformer(children) {\n    for (let child in children?.props?.children) {\n      if (typeof children?.props?.children[child] === 'string') {\n        return children?.props?.children[child];\n      }\n    }\n    return children;\n  }\n\n  return isPageTitle ? (\n    <h1 className=\"card__title\">\n      {accessStatus && <AccessIndicator status={accessStatus} />}\n      <font dangerouslySetInnerHTML={{ __html: transformer(children) }} />\n    </h1>\n  ) : (\n    <h2 className={classnames('card__title', { 'card__title--small': smallTitle })}>{children}</h2>\n  );\n};\n\nexport default Card;\n","// @flow\nimport React from 'react';\nimport { useRadioState, Radio, RadioGroup } from 'reakit/Radio';\n\ntype Props = {\n  files: Array<WebFile>,\n  onChange: (WebFile | void) => void,\n};\n\ntype RadioProps = {\n  id: string,\n  label: string,\n};\n\n// Same as FormField type=\"radio\" but it works with reakit:\nconst ForwardedRadio = React.forwardRef((props: RadioProps, ref) => (\n  <span className=\"radio\">\n    <input {...props} type=\"radio\" ref={ref} />\n    <label htmlFor={props.id}>{props.label}</label>\n  </span>\n));\n\nfunction FileList(props: Props) {\n  const { files, onChange } = props;\n  const radio = useRadioState();\n\n  const getFile = (value?: string) => {\n    if (files && files.length) {\n      return files.find((file: WebFile) => file.name === value);\n    }\n  };\n\n  React.useEffect(() => {\n    if (radio.stops?.length) {\n      if (!radio.currentId) {\n        radio.first();\n      } else {\n        const first = radio.stops[0].ref.current;\n        // First auto-selection\n        if (first && first.id === radio.currentId && !radio.state) {\n          const file = getFile(first.value);\n          // Update state and select new file\n          onChange(file);\n          radio.setState(first.value);\n        }\n\n        if (radio.state) {\n          // Find selected element\n          const stop = radio.stops.find((item) => item.id === radio.currentId);\n          const element = stop && stop.ref.current;\n          // Only update state if new item is selected\n          if (element && element.value !== radio.state) {\n            const file = getFile(element.value);\n            // Sselect new file and update state\n            onChange(file);\n            radio.setState(element.value);\n          }\n        }\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- @see TODO_NEED_VERIFICATION\n  }, [radio, onChange]);\n\n  return (\n    <div className={'file-list'}>\n      <RadioGroup {...radio} aria-label=\"files\">\n        {files.map(({ name }) => {\n          return <Radio key={name} {...radio} value={name} label={name} as={ForwardedRadio} />;\n        })}\n      </RadioGroup>\n    </div>\n  );\n}\n\nexport default FileList;\n","// @flow\nimport * as ICONS from 'constants/icons';\nimport * as PAGES from 'constants/pages';\nimport React from 'react';\nimport { Modal } from 'modal/modal';\nimport { withRouter } from 'react-router';\nimport Card from 'component/common/card';\nimport Button from 'component/button';\nimport FileList from 'component/common/file-list';\n\ntype Props = {\n  files: Array<WebFile>,\n  hideModal: () => void,\n  updatePublishForm: (UpdatePublishState) => void,\n  history: {\n    location: { pathname: string },\n    push: (string) => void,\n  },\n};\n\nconst PUBLISH_URL = `/$/${PAGES.UPLOAD}`;\n\nconst ModalFileSelection = (props: Props) => {\n  const { history, files, hideModal, updatePublishForm } = props;\n  const [selectedFile, setSelectedFile] = React.useState(null);\n\n  const navigateToPublish = React.useCallback(() => {\n    // Navigate only if location is not publish area:\n    // - Prevent spam in history\n    if (history.location.pathname !== PUBLISH_URL) {\n      history.push(PUBLISH_URL);\n    }\n  }, [history]);\n\n  function handleCloseModal() {\n    hideModal();\n    setSelectedFile(null);\n  }\n\n  function handleSubmit() {\n    updatePublishForm({ filePath: selectedFile });\n    handleCloseModal();\n    navigateToPublish();\n  }\n\n  const handleFileChange = (file?: WebFile) => {\n    // $FlowFixMe\n    setSelectedFile(file);\n  };\n\n  return (\n    <Modal isOpen type=\"card\" onAborted={handleCloseModal} onConfirmed={handleCloseModal}>\n      <Card\n        icon={ICONS.PUBLISH}\n        title={__('Choose a file')}\n        subtitle={__('Only one file is allowed, choose wisely:')}\n        actions={\n          <div>\n            <div>\n              <FileList files={files} onChange={handleFileChange} />\n            </div>\n            <div className=\"section__actions\">\n              <Button\n                disabled={!selectedFile || !files || !files.length}\n                button=\"primary\"\n                label={__('Accept')}\n                onClick={handleSubmit}\n              />\n              <Button button=\"link\" label={__('Cancel')} onClick={handleCloseModal} />\n            </div>\n          </div>\n        }\n      />\n    </Modal>\n  );\n};\n\nexport default withRouter(ModalFileSelection);\n","import { connect } from 'react-redux';\nimport { doHideModal } from 'redux/actions/app';\nimport { doUpdatePublishForm } from 'redux/actions/publish';\n\nimport ModaFileSelection from './view';\n\nconst perform = (dispatch) => ({\n  hideModal: (props) => dispatch(doHideModal(props)),\n  updatePublishForm: (value) => dispatch(doUpdatePublishForm(value)),\n});\n\nexport default connect(null, perform)(ModaFileSelection);\n"],"names":["FirstPaneWrapper","props","singlePane","children","React","className","TitleWrapper","isPageTitle","smallTitle","accessStatus","AccessIndicator","par","Tooltip","title","__","classnames","locked","status","unlocked","purchased","Icon","icon","ICONS","dangerouslySetInnerHTML","__html","child","_children$props","_children$props2","_children$props3","transformer","subtitle","titleActions","id","body","actions","_props$isPageTitle","_props$isBodyList","isBodyList","_props$smallTitle","defaultExpand","nag","_onClick","onClick","secondPane","slimHeader","background","backgroundImage","headerActions","gridHeader","_useState2","_slicedToArray","useState","expanded","setExpanded","expandable","undefined","role","Boolean","e","stopPropagation","style","sectionIcon","Button","button","ForwardedRadio","ref","_extends","type","htmlFor","label","files","onChange","radio","useRadioState","getFile","value","length","find","file","name","_radio$stops","stops","currentId","first","current","state","setState","stop","item","element","_file","RadioGroup","map","_ref","Radio","key","as","PUBLISH_URL","concat","PAGES","withRouter","history","hideModal","updatePublishForm","_React$useState2","selectedFile","setSelectedFile","navigateToPublish","location","pathname","push","handleCloseModal","Modal","isOpen","onAborted","onConfirmed","Card","FileList","disabled","filePath","connect","dispatch","doHideModal","doUpdatePublishForm","ModaFileSelection"],"sourceRoot":""}