{"version":3,"file":"modalWalletDecrypt-17d81cc2636e01397719.js","mappings":"q5DA8DA,QA7CwB,SAAAA,I,qRAAAC,CAAAC,EAAAF,GAAA,I,MAAAG,EAAAC,EAAAF,GAAA,SAAAA,IAAA,IAAAG,E,mGAAAC,CAAA,KAAAJ,GAAA,QAAAK,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAGrB,OAHqBP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,I,EAAAM,EAAAX,G,EACd,CACNY,WAAW,I,MAFS,Y,wFAGrBZ,CAAA,CAuCA,O,EAvCAH,G,EAAA,EAAAgB,IAAA,qBAAAC,MAED,WACE,IAAQC,EAAiBC,KAAjBD,MAAiBC,KAAVC,MAELL,YAA6C,IAAhCG,EAAMG,yBAC3BC,EAAAA,EAAAA,mBACAJ,EAAMK,aACNL,EAAMM,qBAEV,GAAC,CAAAR,IAAA,oBAAAC,MAED,WACEE,KAAKM,SAAS,CAAEV,WAAW,IAC3BI,KAAKD,MAAMQ,eACb,GAAC,CAAAV,IAAA,SAAAC,MAED,WAAS,IAAAU,EAAA,KACCJ,EAAeJ,KAAKD,MAApBK,WAER,OACEK,EAAAA,cAACC,EAAAA,GAAK,CACJC,QAAM,EACNC,MAAOC,EAAG,kBACVC,aAAcD,EAAG,kBACjBE,KAAK,UACLC,mBAAoBH,EAAG,kBACvBI,iBAAkBJ,EAAG,UACrBK,YAAa,kBAAMV,EAAKW,mBAAmB,EAC3CC,UAAWhB,GAEXK,EAAAA,cAAA,SACGI,EACC,2GACC,IACHJ,EAAAA,cAACY,EAAAA,QAAM,CAACC,OAAO,OAAOC,MAAOV,EAAG,cAAeW,KAAK,2CAA2C,KAIvG,M,8EAAC3C,CAAA,CA1CqB,CAAS4B,EAAAA,eCDjC,SAAegB,EAAAA,EAAAA,KAVA,SAACxB,GAAK,MAAM,CACzBC,uBAAuBwB,EAAAA,EAAAA,IAA6BzB,GACrD,IAEe,SAAC0B,GAAQ,MAAM,CAC7BvB,WAAY,kBAAMuB,GAASC,EAAAA,EAAAA,MAAc,EACzCrB,cAAe,SAACsB,GAAQ,OAAKF,GAASG,EAAAA,EAAAA,IAAgBD,GAAU,EAChExB,mBAAoB,kBAAMsB,GAASI,EAAAA,EAAAA,MAAiB,EACrD,GAED,CAAwClD,E","sources":["webpack://odysee.com/../ui/modal/modalWalletDecrypt/view.jsx","webpack://odysee.com/../ui/modal/modalWalletDecrypt/index.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { Modal } from 'modal/modal';\nimport Button from 'component/button';\nimport { deleteAuthToken } from 'util/saved-passwords';\n\ntype Props = {\n  closeModal: () => void,\n  decryptWallet: () => void,\n  updateWalletStatus: () => void,\n  walletDecryptSucceded: boolean,\n};\n\ntype State = {\n  submitted: boolean,\n};\n\nclass ModalWalletDecrypt extends React.PureComponent<Props, State> {\n  state = {\n    submitted: false, // Prior actions could be marked complete\n  };\n\n  componentDidUpdate() {\n    const { props, state } = this;\n\n    if (state.submitted && props.walletDecryptSucceded === true) {\n      deleteAuthToken();\n      props.closeModal();\n      props.updateWalletStatus();\n    }\n  }\n\n  submitDecryptForm() {\n    this.setState({ submitted: true });\n    this.props.decryptWallet();\n  }\n\n  render() {\n    const { closeModal } = this.props;\n\n    return (\n      <Modal\n        isOpen\n        title={__('Decrypt wallet')}\n        contentLabel={__('Decrypt wallet')}\n        type=\"confirm\"\n        confirmButtonLabel={__('Decrypt wallet')}\n        abortButtonLabel={__('Cancel')}\n        onConfirmed={() => this.submitDecryptForm()}\n        onAborted={closeModal}\n      >\n        <p>\n          {__(\n            'Your wallet has been encrypted with a local password, performing this action will remove this password.'\n          )}{' '}\n          <Button button=\"link\" label={__('Learn more')} href=\"https://lbry.com/faq/wallet-encryption\" />.\n        </p>\n      </Modal>\n    );\n  }\n}\n\nexport default ModalWalletDecrypt;\n","import { connect } from 'react-redux';\nimport { doWalletStatus, doWalletDecrypt } from 'redux/actions/wallet';\nimport { selectWalletDecryptSucceeded } from 'redux/selectors/wallet';\nimport { doHideModal } from 'redux/actions/app';\nimport ModalWalletDecrypt from './view';\n\nconst select = (state) => ({\n  walletDecryptSucceded: selectWalletDecryptSucceeded(state),\n});\n\nconst perform = (dispatch) => ({\n  closeModal: () => dispatch(doHideModal()),\n  decryptWallet: (password) => dispatch(doWalletDecrypt(password)),\n  updateWalletStatus: () => dispatch(doWalletStatus()),\n});\n\nexport default connect(select, perform)(ModalWalletDecrypt);\n"],"names":["_React$PureComponent","_inherits","ModalWalletDecrypt","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_assertThisInitialized","submitted","key","value","props","this","state","walletDecryptSucceded","deleteAuthToken","closeModal","updateWalletStatus","setState","decryptWallet","_this2","React","Modal","isOpen","title","__","contentLabel","type","confirmButtonLabel","abortButtonLabel","onConfirmed","submitDecryptForm","onAborted","Button","button","label","href","connect","selectWalletDecryptSucceeded","dispatch","doHideModal","password","doWalletDecrypt","doWalletStatus"],"sourceRoot":""}