{"version":3,"file":"5556-c1b85413388176f2f31b.js","mappings":"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","sources":["webpack://odysee.com/../ui/component/cardVerify/view.jsx","webpack://odysee.com/../ui/component/cardVerify/index.js","webpack://odysee.com/../ui/component/userVerify/view.jsx","webpack://odysee.com/../ui/component/userVerify/index.js"],"sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Button from 'component/button';\n\nlet scriptLoading = false;\nlet scriptLoaded = false;\nlet scriptDidError = false;\n\n// Flow does not like the way this stripe plugin works\n// Disabled because it was a huge pain\n// type Props = {\n//   disabled: boolean,\n//   label: ?string,\n//   email: string,\n\n//   // =====================================================\n//   // Required by stripe\n//   // see Stripe docs for more info:\n//   //   https://stripe.com/docs/checkout#integration-custom\n//   // =====================================================\n\n//   // Your publishable key (test or live).\n//   // can't use \"key\" as a prop in react, so have to change the keyname\n//   stripeKey: string,\n\n//   // The callback to invoke when the Checkout process is complete.\n//   //   function(token)\n//   //     token is the token object created.\n//   //     token.id can be used to create a charge or customer.\n//   //     token.email contains the email address entered by the user.\n//   token: string,\n// };\n\nclass CardVerify extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      scriptFailedToLoad: false,\n    };\n  }\n\n  componentDidMount() {\n    if (scriptLoaded) {\n      return;\n    }\n\n    if (scriptLoading) {\n      return;\n    }\n\n    scriptLoading = true;\n\n    const script = document.createElement('script');\n    script.src = 'https://checkout.stripe.com/checkout.js';\n    script.async = true;\n\n    this.loadPromise = (() => {\n      let canceled = false;\n      const promise = new Promise((resolve, reject) => {\n        script.onload = () => {\n          scriptLoaded = true;\n          scriptLoading = false;\n          resolve();\n          this.onScriptLoaded();\n        };\n        script.onerror = event => {\n          scriptDidError = true;\n          scriptLoading = false;\n          reject(event);\n          this.onScriptError(event);\n        };\n      });\n      const wrappedPromise = new Promise((resolve, reject) => {\n        promise.then(() => (canceled ? reject({ isCanceled: true }) : resolve()));\n        promise.catch(error => (canceled ? reject({ isCanceled: true }) : reject(error)));\n      });\n\n      return {\n        promise: wrappedPromise,\n        reject() {\n          canceled = true;\n        },\n      };\n    })();\n\n    this.loadPromise.promise.then(this.onScriptLoaded).catch(this.onScriptError);\n\n    // $FlowFixMe\n    document.body.appendChild(script);\n  }\n\n  componentDidUpdate() {\n    if (!scriptLoading) {\n      this.updateStripeHandler();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.loadPromise) {\n      this.loadPromise.reject();\n    }\n    if (CardVerify.stripeHandler && this.state.open) {\n      CardVerify.stripeHandler.close();\n    }\n  }\n\n  onScriptLoaded = () => {\n    if (!CardVerify.stripeHandler) {\n      CardVerify.stripeHandler = StripeCheckout.configure({\n        key: this.props.stripeKey,\n      });\n\n      if (this.hasPendingClick) {\n        this.showStripeDialog();\n      }\n    }\n  };\n\n  onScriptError = (...args) => {\n    this.setState({ scriptFailedToLoad: true });\n  };\n\n  onClosed = () => {\n    this.setState({ open: false });\n  };\n\n  updateStripeHandler() {\n    if (!CardVerify.stripeHandler) {\n      CardVerify.stripeHandler = StripeCheckout.configure({\n        key: this.props.stripeKey,\n      });\n    }\n  }\n\n  showStripeDialog() {\n    this.setState({ open: true });\n    CardVerify.stripeHandler.open({\n      allowRememberMe: false,\n      closed: this.onClosed,\n      description: __('Confirm Identity'),\n      email: this.props.email,\n      locale: 'auto',\n      panelLabel: 'Verify',\n      token: this.props.token,\n      zipCode: true,\n    });\n  }\n\n  onClick = () => {\n    if (scriptDidError) {\n      try {\n        throw new Error('Tried to call onClick, but StripeCheckout failed to load');\n      } catch (x) {}\n    } else if (CardVerify.stripeHandler) {\n      this.showStripeDialog();\n    } else {\n      this.hasPendingClick = true;\n    }\n  };\n\n  render() {\n    const { scriptFailedToLoad } = this.props;\n\n    return (\n      <div>\n        {scriptFailedToLoad && (\n          <div className=\"error__text\">There was an error connecting to Stripe. Please try again later.</div>\n        )}\n\n        <Button\n          button=\"primary\"\n          label={this.props.label}\n          disabled={this.props.disabled || this.state.open || this.hasPendingClick}\n          onClick={this.onClick.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CardVerify;\n/* eslint-enable no-undef */\n/* eslint-enable react/prop-types */\n","import { connect } from 'react-redux';\nimport { selectUserEmail } from 'redux/selectors/user';\nimport CardVerify from './view';\n\nconst select = state => ({\n  email: selectUserEmail(state),\n});\n\nconst perform = () => ({});\n\nexport default connect(select, perform)(CardVerify);\n","// @flow\nimport { SITE_NAME } from 'config';\nimport * as ICONS from 'constants/icons';\nimport React, { Fragment } from 'react';\nimport Button from 'component/button';\nimport CardVerify from 'component/cardVerify';\nimport { Lbryio } from 'lbryinc';\nimport Card from 'component/common/card';\nimport I18nMessage from 'component/i18nMessage';\nimport LbcSymbol from 'component/common/lbc-symbol';\nimport { Redirect } from 'react-router-dom';\n\ntype Props = {\n  errorMessage: ?string,\n  isPending: boolean,\n  verifyUserIdentity: (string) => void,\n  verifyPhone: () => void,\n  fetchUser: () => void,\n  skipLink?: string,\n  onSkip: () => void,\n  is_reward_approved: boolean,\n};\n\nclass UserVerify extends React.PureComponent<Props> {\n  constructor() {\n    super();\n    (this: any).state = { shouldRedirect: false };\n    (this: any).onToken = this.onToken.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.is_reward_approved) {\n      // $FlowIgnore\n      this.setState({ shouldRedirect: true });\n    }\n  }\n\n  onToken(data: { id: string }) {\n    this.props.verifyUserIdentity(data.id);\n  }\n\n  render() {\n    const { errorMessage, isPending, fetchUser, onSkip } = this.props;\n    const skipButtonProps = {\n      onClick: onSkip,\n    };\n    const state = this.state;\n\n    if (state && state.shouldRedirect) {\n      return <Redirect to=\"/$/rewards\" />;\n    }\n\n    return (\n      <div className=\"main__auth-content\">\n        <section className=\"section__header\">\n          <h1 className=\"section__title--large\">\n            {''}\n            <I18nMessage\n              tokens={{\n                lbc: <LbcSymbol size={48} />,\n              }}\n            >\n              Verify to earn %lbc%\n            </I18nMessage>\n          </h1>\n          <p>\n            <I18nMessage\n              tokens={{\n                rewards_program: (\n                  <Button\n                    button=\"link\"\n                    label={__('other rewards')}\n                    href=\"https://help.odysee.tv/category-monetization/category-rewards/\"\n                  />\n                ),\n                Refresh: <Button onClick={() => fetchUser()} button=\"link\" label={__('Refresh')} />,\n                Skip: <Button {...skipButtonProps} button=\"link\" label={__('Skip')} />,\n                SITE_NAME,\n              }}\n            >\n              Verified accounts are eligible to earn LBRY Credits for views, watching and reposting content, sharing\n              invite links etc. Verifying also helps us keep the %SITE_NAME% community safe too! %Refresh% or %Skip%.\n            </I18nMessage>\n          </p>\n          <p className=\"help\">\n            {__('This step is not mandatory and not required in order for you to use %SITE_NAME%.', { SITE_NAME })}\n          </p>\n        </section>\n\n        <div className=\"section\">\n          <Card\n            icon={ICONS.WALLET}\n            title={__('Verify via credit card')}\n            subtitle={__('Your card information will not be stored or charged, now or in the future.')}\n            actions={\n              <Fragment>\n                {errorMessage && <p className=\"error__text\">{errorMessage}</p>}\n                <CardVerify\n                  label={__('Verify Card')}\n                  disabled={isPending}\n                  token={this.onToken}\n                  stripeKey={Lbryio.getStripeToken()}\n                />\n                <p className=\"help\">\n                  {__('A $1 authorization may temporarily appear with your provider.')}{' '}\n                  <Button\n                    button=\"link\"\n                    href=\"https://help.odysee.tv/category-monetization/category-rewards/\"\n                    label={__('Read more')}\n                  />\n                  .\n                </p>\n              </Fragment>\n            }\n          />\n\n          <div className=\"section__divider\">\n            <hr />\n            <p>{__('OR')}</p>\n          </div>\n\n          <Card\n            icon={ICONS.CHAT}\n            title={__('Verify via chat')}\n            subtitle={\n              <>\n                <p>\n                  {__(\n                    'A moderator can approve you within our discord server. Please review the instructions within #rewards-approval carefully.'\n                  )}\n                </p>\n                <p>{__('You will be asked to provide proof of identity.')}</p>\n              </>\n            }\n            actions={\n              <Button\n                href=\"https://verification.odysee.com\"\n                button=\"primary\"\n                label={__('Join the Odysee Rewards Discord')}\n              />\n            }\n          />\n\n          {/*\n          <div className=\"section__divider\">\n            <hr />\n            <p>{__('OR')}</p>\n          </div>\n\n          <Card\n            icon={ICONS.PHONE}\n            title={__('Verify phone number')}\n            // subtitle={__('You will receive an SMS text message confirming your phone number is valid. May not be available in all regions.')}\n            subtitle={__('Service currently unavailable')}\n            className=\"disabled\"\n            actions={\n              <Fragment>\n                <Button\n                  onClick={() => {\n                    verifyPhone();\n                  }}\n                  button=\"primary\"\n                  label={__('Verify Via Text')}\n                />\n                <p className=\"help\">\n                  {__('Standard messaging rates apply. Having trouble?')}{' '}\n                  <Button\n                    button=\"link\"\n                    href=\"https://help.odysee.tv/category-monetization/category-rewards/\"\n                    label={__('Read more')}\n                  />\n                  .\n                </p>\n              </Fragment>\n            }\n          />\n          */}\n\n          <div className=\"section__divider\">\n            <hr />\n            <p>{__('OR')}</p>\n          </div>\n\n          <Card\n            icon={ICONS.REMOVE}\n            title={__('Skip')}\n            subtitle={__(\n              \"Verifying is optional. If you skip this, it just means you can't earn LBRY Credits from our rewards system.\"\n            )}\n            actions={\n              <Fragment>\n                <Button {...skipButtonProps} button=\"primary\" label={__('Continue Without Verifying')} />\n              </Fragment>\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserVerify;\n","import * as MODALS from 'constants/modal_types';\nimport { connect } from 'react-redux';\nimport { doOpenModal } from 'redux/actions/app';\nimport { doUserIdentityVerify, doUserFetch } from 'redux/actions/user';\nimport { makeSelectRewardByType } from 'redux/selectors/rewards';\nimport rewards from 'rewards';\nimport { selectUser, selectIdentityVerifyIsPending, selectIdentityVerifyErrorMessage } from 'redux/selectors/user';\nimport UserVerify from './view';\n\nconst select = (state) => {\n  const selectReward = makeSelectRewardByType();\n  const user = selectUser(state);\n  const { is_reward_approved } = user;\n\n  return {\n    isPending: selectIdentityVerifyIsPending(state),\n    errorMessage: selectIdentityVerifyErrorMessage(state),\n    reward: selectReward(state, rewards.TYPE_NEW_USER),\n    is_reward_approved,\n  };\n};\n\nconst perform = (dispatch) => ({\n  verifyUserIdentity: (token) => dispatch(doUserIdentityVerify(token)),\n  verifyPhone: () => dispatch(doOpenModal(MODALS.PHONE_COLLECTION)),\n  fetchUser: () => dispatch(doUserFetch()),\n});\n\nexport default connect(select, perform)(UserVerify);\n"],"names":["scriptLoading","scriptLoaded","scriptDidError","_React$Component","_inherits","CardVerify","_super","_createSuper","props","_this","_classCallCheck","_defineProperty","_assertThisInitialized","call","stripeHandler","StripeCheckout","configure","key","stripeKey","hasPendingClick","showStripeDialog","setState","scriptFailedToLoad","open","Error","x","state","value","_this2","canceled","promise","script","document","createElement","src","async","this","loadPromise","Promise","resolve","reject","onload","onScriptLoaded","onerror","event","onScriptError","then","isCanceled","error","body","appendChild","updateStripeHandler","close","allowRememberMe","closed","onClosed","description","__","email","locale","panelLabel","token","zipCode","React","className","Button","button","label","disabled","onClick","bind","connect","selectUserEmail","_React$PureComponent","UserVerify","shouldRedirect","onToken","is_reward_approved","data","verifyUserIdentity","id","_this$props","errorMessage","isPending","fetchUser","skipButtonProps","onSkip","Redirect","to","I18nMessage","tokens","lbc","LbcSymbol","size","rewards_program","href","Refresh","Skip","_extends","SITE_NAME","Card","icon","ICONS","title","subtitle","actions","Fragment","Lbryio","selectReward","makeSelectRewardByType","selectUser","selectIdentityVerifyIsPending","selectIdentityVerifyErrorMessage","reward","rewards","dispatch","doUserIdentityVerify","verifyPhone","doOpenModal","MODALS","doUserFetch"],"sourceRoot":""}