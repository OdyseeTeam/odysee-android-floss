{"version":3,"file":"popoutChat-b4e938baccce12ab7169.js","mappings":"6QAOMA,GAAaC,EAAAA,EAAAA,IAAW,kBAAM,+BAAuD,ICK3F,IAkBMC,EAAU,CACdC,kCAAAA,EAAAA,GACAC,qCAAAA,EAAAA,GACAC,aAAAA,EAAAA,IAGF,SAAeC,EAAAA,EAAAA,KAxBA,SAACC,EAAOC,GACrB,IACQC,EADUD,EAAVE,MACAD,OACAE,EAA4BF,EAA5BE,YAAaC,EAAeH,EAAfG,WAEfC,GAAMC,EAAAA,EAAAA,UAAS,CAAEH,YAAaA,EAAYI,QAAQ,IAAK,KAAMH,WAAYA,EAAWG,QAAQ,IAAK,QAAW,GAE5GC,GAAQC,EAAAA,EAAAA,IAAkBV,EAAOM,GAEvC,MAAO,CACLG,MAAAA,EACAH,IAAAA,EACAK,mBAAoBC,SAAQC,EAAAA,EAAAA,IAAgCb,EAAOM,IACnEQ,gBAAiBL,IAASM,EAAAA,EAAAA,IAAmDf,EAAOS,EAAMO,UAC1FC,0BAA2BR,IAASS,EAAAA,EAAAA,IAA4ClB,EAAOS,EAAMO,UAEjG,GAQ+BrB,EAA/B,EDhBe,SAAwBM,GACrC,IACEQ,EAQER,EARFQ,MACAH,EAOEL,EAPFK,IACAV,EAMEK,EANFL,kCACAC,EAKEI,EALFJ,qCACAC,EAIEG,EAJFH,aACAa,EAGEV,EAHFU,mBACAG,EAEEb,EAFFa,gBACAG,EACEhB,EADFgB,0BAgCF,OA7BAE,EAAAA,WAAgB,WACTV,GAAOX,EAAaQ,GAAK,EAChC,GAAG,CAACG,EAAOX,EAAcQ,IAEzBa,EAAAA,WAAgB,WACd,GAAKV,EAAL,CAEA,IAAkBW,EAA2CX,EAArDO,SAAoCK,EAAiBZ,EAAlCa,gBACrBlB,EAAciB,IAAgBE,EAAAA,EAAAA,IAAsBF,EAAaG,eAEjEC,EAAkBL,EAAQM,MAAM,IAAIC,UAAUC,KAAK,IACnDC,EAAelB,EAAqBc,EAAkBL,EAM5D,OAJIA,GAAWhB,GAAeU,GAC5BlB,EAAkCU,EAAKF,EAAayB,EAAclB,GAG7D,WACDS,GAAWhB,GAAeU,GAAiBjB,EAAqCgC,EAAczB,EACpG,CAdkB,CAepB,GAAG,CACDK,EACAK,EACAlB,EACAC,EACAc,EACAL,IAGEW,EAEAE,EAAAA,cAAA,OAAKW,UAAU,eACbX,EAAAA,cAACY,EAAAA,EAAI,CAACC,KAAK,MAAMC,SAAUC,EAAG,iBAMlCf,EAAAA,cAACgB,EAAAA,EAAI,CAACC,kBAAgB,EAACC,UAAQ,EAACC,UAAQ,EAACC,gBAAc,GACrDpB,EAAAA,cAAC1B,EAAU,CAACa,IAAKA,EAAKiC,gBAAc,IAG1C,G","sources":["webpack://odysee.com/../ui/page/popoutChatWrapper/view.jsx","webpack://odysee.com/../ui/page/popoutChatWrapper/index.js"],"sourcesContent":["// @flow\nimport { formatLbryChannelName } from 'util/url';\nimport { lazyImport } from 'util/lazyImport';\nimport Page from 'component/page';\nimport React from 'react';\nimport Yrbl from 'component/yrbl';\n\nconst ChatLayout = lazyImport(() => import('component/chat' /* webpackChunkName: \"chat\" */));\n\ntype Props = {\n  claim: StreamClaim,\n  uri: string,\n  doCommentSocketConnectAsCommenter: (string, string, string, ?boolean) => void,\n  doCommentSocketDisconnectAsCommenter: (string, string) => void,\n  doResolveUri: (string, boolean) => void,\n  isProtectedContent: boolean,\n  contentUnlocked: boolean,\n  contentRestrictedFromUser: boolean,\n};\n\nexport default function PopoutChatPage(props: Props) {\n  const {\n    claim,\n    uri,\n    doCommentSocketConnectAsCommenter,\n    doCommentSocketDisconnectAsCommenter,\n    doResolveUri,\n    isProtectedContent,\n    contentUnlocked,\n    contentRestrictedFromUser,\n  } = props;\n\n  React.useEffect(() => {\n    if (!claim) doResolveUri(uri, true);\n  }, [claim, doResolveUri, uri]);\n\n  React.useEffect(() => {\n    if (!claim) return;\n\n    const { claim_id: claimId, signing_channel: channelClaim } = claim;\n    const channelName = channelClaim && formatLbryChannelName(channelClaim.canonical_url);\n\n    const reversedClaimId = claimId.split('').reverse().join('');\n    const claimIdToUse = isProtectedContent ? reversedClaimId : claimId;\n\n    if (claimId && channelName && contentUnlocked) {\n      doCommentSocketConnectAsCommenter(uri, channelName, claimIdToUse, isProtectedContent);\n    }\n\n    return () => {\n      if (claimId && channelName && contentUnlocked) doCommentSocketDisconnectAsCommenter(claimIdToUse, channelName);\n    };\n  }, [\n    claim,\n    contentUnlocked,\n    doCommentSocketConnectAsCommenter,\n    doCommentSocketDisconnectAsCommenter,\n    isProtectedContent,\n    uri,\n  ]);\n\n  if (contentRestrictedFromUser) {\n    return (\n      <div className=\"main--empty\">\n        <Yrbl type=\"sad\" subtitle={__('No results')} />\n      </div>\n    );\n  }\n\n  return (\n    <Page noSideNavigation noFooter noHeader isPopoutWindow>\n      <ChatLayout uri={uri} isPopoutWindow />\n    </Page>\n  );\n}\n","import { buildURI } from 'util/lbryURI';\nimport { connect } from 'react-redux';\nimport { doCommentSocketConnectAsCommenter, doCommentSocketDisconnectAsCommenter } from 'redux/actions/websocket';\nimport { doResolveUri } from 'redux/actions/claims';\nimport { selectClaimForUri, selectProtectedContentTagForUri } from 'redux/selectors/claims';\nimport {\n  selectNoRestrictionOrUserIsMemberForContentClaimId,\n  selectIsProtectedContentLockedFromUserForId,\n} from 'redux/selectors/memberships';\n\nimport PopoutChatPage from './view';\n\nconst select = (state, props) => {\n  const { match } = props;\n  const { params } = match;\n  const { channelName, streamName } = params;\n\n  const uri = buildURI({ channelName: channelName.replace(':', '#'), streamName: streamName.replace(':', '#') }) || '';\n\n  const claim = selectClaimForUri(state, uri);\n\n  return {\n    claim,\n    uri,\n    isProtectedContent: Boolean(selectProtectedContentTagForUri(state, uri)),\n    contentUnlocked: claim && selectNoRestrictionOrUserIsMemberForContentClaimId(state, claim.claim_id),\n    contentRestrictedFromUser: claim && selectIsProtectedContentLockedFromUserForId(state, claim.claim_id),\n  };\n};\n\nconst perform = {\n  doCommentSocketConnectAsCommenter,\n  doCommentSocketDisconnectAsCommenter,\n  doResolveUri,\n};\n\nexport default connect(select, perform)(PopoutChatPage);\n"],"names":["ChatLayout","lazyImport","perform","doCommentSocketConnectAsCommenter","doCommentSocketDisconnectAsCommenter","doResolveUri","connect","state","props","params","match","channelName","streamName","uri","buildURI","replace","claim","selectClaimForUri","isProtectedContent","Boolean","selectProtectedContentTagForUri","contentUnlocked","selectNoRestrictionOrUserIsMemberForContentClaimId","claim_id","contentRestrictedFromUser","selectIsProtectedContentLockedFromUserForId","React","claimId","channelClaim","signing_channel","formatLbryChannelName","canonical_url","reversedClaimId","split","reverse","join","claimIdToUse","className","Yrbl","type","subtitle","__","Page","noSideNavigation","noFooter","noHeader","isPopoutWindow"],"sourceRoot":""}